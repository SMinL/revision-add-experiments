Visualize BAR SELECT Date_Claim_Settled , count(*) FROM Claims GROUP BY Date_Claim_Settled ORDER BY Date_Claim_Settled DESC

Visualize LINE SELECT (EMPLOYEE_ID, SALARY, COMMISSION_PCT) , COUNT(EMPLOYEE_ID) , JOB_ID FROM departments , employees , job_history WHERE (EMPLOYEE_ID IN (SELECT EMPLOYEE_ID FROM employees WHERE SALARY BETWEEN 8000 AND 12000 AND (COMMISSION_PCT IS NULL OR (DEPARTMENT_ID = 40)) AND (HIRING_DATE BETWEEN '2
Visualize BAR SELECT date_address_from, count(*) FROM Student_Addresses GROUP BY date_address_from ORDER BY date_address_from
Visualize BAR SELECT Company , COUNT(Company) FROM entrepreneur WHERE Investor <> ' ' GROUP BY Company
Visualize BAR SELECT EMPLOYEE_ID , AVG(SALARY) FROM employees GROUP BY HIRE_DATE ORDER BY HIRE_DATE ASC
Visualize BAR SELECT Carrier , sum(Memory_in_G) FROM phone  ORDER BY sum(Memory_in_G) DESC
Visualize BAR SELECT hire_date , salary FROM employees ORDER BY SALARY
SELECT date_address_from , COUNT(date_address_from) FROM Student_Addresses  GROUP BY date_address_from BIN date_address_from BY weekday ORDER BY date_address_from DESC
Visualize BAR SELECT Code, MIN(Price), MAX(Price) FROM Products GROUP BY Manufacturer
Visualize LINE SELECT EMAIL ,SALARY ,SALARY - ABS(Salary - (SUM(SALARY) / (SELECT COUNT(*) FROM employees))) FROM employees WHERE MANAGER_ID IS NULL AND FIRST_NAME NOT LIKE 'M%' AND MANAGER_ID IS NULL AND FIRST_NAME LIKE 'M%' ORDER BY HIRE_DATE ASC
Visualize TREND SELECT EMPLOYEE_ID, SALARY FROM employees WHERE SALARY BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NULL AND DEPARTMENT_ID != 40 GROUP BY EMPLOYEE_ID HAVING EMPLOYEE_ID IN (SELECT EMPLOYEE_ID FROM departments WHERE EMAIL IN ('samuel@cloudpassage.com') OR EMAIL IN ('rick@mashape.com')) HAVING EMPLOYEE_
Visualize BAR SELECT JOB_ID , avg(salary) FROM employees WHERE HIRE_DATE < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID ASC
Visualize LINE SELECT LAST_NAME , commision_pct FROM EMPLOYEES WHERE FIRST_NAME like 'D%' OR FIRST_NAME like 'S%' GROUP BY LAST_NAME ORDER BY HIRE_DATE ASC
Visualize LINE SELECT FIRST_NAME , SALARY FROM employees GROUP BY FIRST_NAME ORDER BY SALARY
Visualize BAR SELECT customer_address.customer_id , COUNT(*) FROM Customer_Addresses WHERE address_id IN (SELECT address_id FROM Address WHERE State_ID = 3935604) GROUP BY Customer_Addresses.customer_id ORDER BY Customer_Addresses.customer_id DESC
Visualize BAR SELECT CONCAT(first_name, ' ', last_name) , SUM(salary) FROM employees GROUP BY concat(first_name, ' ', last_name)
Visualize PIE SELECT customer_address.address_id , COUNT(customer_address.customer_id) FROM customer_address GROUP BY address_id, customer_address.date_from
1. Visualize BAR SELECT FIRST_NAME , MIN(JOB_ID) FROM employees GROUP BY FIRST_NAME,job_id HAVING FIRST_NAME LIKE '%D%S%'; 2. Visualize BAR SELECT job_id , COUNT(*) FROM employees GROUP BY job_id HAVING JOB_ID IN (SELECT MIN(JOB_ID) FROM (SELECT FIRST_NAME , MIN(JOB_ID) FROM employees GROUP BY FIRST_NAME,job_id HAVING FIRST_NAME LIKE '%
Visualize BAR SELECT Manufacturer , count(*) FROM Products GROUP BY Manufacturer
Visualize BAR SELECT Payment_Method_Code , count(*) FROM Payments GROUP BY Payment_Method_Code ORDER BY count(*) ASC

Visualize LINE SELECT EMAIL, HIRE_DATE, SALARY FROM employees WHERE FIRST_NAME <> 'M' GROUP BY EMPLOYEE_ID ORDER BY SALARY DESC
Visualize LINE SELECT HIRE_DATE ,SALARY FROM employees WHERE HIRE_DATE <= '2002-06-21' BIN HIRE_DATE BY DAY
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employee GROUP BY JOB_ID HAVING HIRE_DATE < '2002-06-21' ORDER BY JOB_ID ASC BIN JOB_ID BY YEAR
Visualize BAR SELECT Participant_ID , Participant_Details FROM Participants_in_Events  ORDER BY Participant_ID ASC
``` Visualize BAR SELECT FIRST_NAME , COUNT( EMPLOYEE_ID ) FROM employees WHERE FIRST_NAME like 'D%' OR FIRST_NAME like 'S%' GROUP BY FIRST_NAME ORDER BY FIRST_NAME ASC ```
Visualize BAR SELECT hire_date , AVG(manager_id) FROM employees WHERE HIRE_DATE > '2002-06-21' ORDER BY AVG(manager_id)
Visualize BAR SELECT JOB_ID , ( JOB_ID , AVG(DEPARTMENT_ID) ) FROM jobs , employees , job_history WHERE JOB_ID = JOB_ID GROUP BY JOB_ID
Visualize BAR SELECT year , COUNT(year) FROM matches GROUP BY year ORDER BY year ASC
Visualize BAR SELECT Code , Price FROM Manufacturers INNER JOIN Products ON Code = Products.Code  GROUP BY Code ORDER BY Price ASC
Visualize BAR SELECT hand , COUNT(*) FROM players GROUP BY hand ORDER BY COUNT(*) DESC, hand
Visualize SCATTER SELECT SALARY , MANAGER_ID FROM employee GROUP BY SALARY , MANAGER_ID
Visualize BAR SELECT HIRE_DATE , count(*) FROM employees GROUP BY HIRE_DATE ORDER BY count(*) DESC
Visualize BAR SELECT JOB_ID, SUM(EMPLOYEE_ID) FROM job_history WHERE (DEPARTMENT_ID != 40 OR (JOB_ID IN (8000, 12000) AND COMMISSION_PCT IS NOT NULL)) GROUP BY JOB_ID

Visualize BAR SELECT Competition , count(*) FROM match GROUP BY Competition ORDER BY count(*) DESC
Visualize BAR SELECT manufacturers.code , manufacturers.name , price , count(*) FROM products GROUP BY manufacturers.code ORDER BY price ASC
Visualize LINE SELECT EMPLOYEE_ID , COUNT(EMPLOYEE_ID) FROM JOB_HISTORY WHERE HIRE_DATE < '2002-06-21' AND DEPARTMENT_ID != 0 GROUP BY EMPLOYEE_ID  ORDER BY EMPLOYEE_ID
Visualize HISTOGRAM SALARY , HIRE_DATE FROM employees GROUP BY SALARY ORDER BY HIRE_DATE DESC
Visualize BAR SELECT Participant_ID , Participant_Details FROM Participants ORDER BY Participant_ID
Visualize BAR SELECT FIRST_NAME , SALARY FROM employees  GROUP BY FIRST_NAME ORDER BY FIRST_NAME DESC
SELECT day_of_week, AVG(amount_payment) as avg_payment FROM Payments GROUP BY day_of_week
Visualize BAR SELECT EMPLOYEE_ID , COUNT(job_id) , SUM(SALARY) FROM employees
Visualize PIE SELECT Average(Salary) , hire_date FROM employees WHERE HIRE_DATE < '2002-06-21' GROUP BY hire_date BIN hire_date by day
Visualize BAR SELECT FIRST_NAME , COUNT(*) FROM employees WHERE FIRST_NAME NOT LIKE '%M%' GROUP BY FIRST_NAME ORDER BY COUNT(*) DESC
Visualize LINE SELECT Employee_ID, HIRE_DATE FROM employees WHERE SALARY BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NOT NULL AND DEPARTMENT_ID = 40
1) Visualize BAR SELECT EMPLOYEE_ID , count(JOB_ID) FROM EMPLOYEES GROUP BY JOB_ID ORDER BY JOB_ID ASC   2) Visualize BAR SELECT EMPLOYEE_ID , SUM(EMPLOYEE_ID) FROM EMPLOYEES GROUP BY JOB_ID ORDER BY JOB_ID ASC   3) Visualize BAR SELECT EMPLOYEE_ID , SUM(EMPLOYEE_ID) FROM EMPLOYEES
Visualize BAR SELECT job_id, SUM(department_id) FROM job_history WHERE hire_date > DATE '2002-06-21' GROUP BY JOB_ID ORDER BY job_id ASC
Visualize MATERIAL SELECT Price , Manufacturer , min(Price) AS low , max(Price) AS high FROM Products GROUP BY Manufacturer
Visualize BAR SELECT JOB_ID , count(*) , avg(manager_id) FROM employees GROUP BY job_id ORDER BY avg(manager_id) ASC
Visualize BAR SELECT EMPLOYEE_ID , EMAIL FROM employees GROUP BY EMPLOYEE_ID ORDER BY EMPLOYEE_ID
HISTOGRAM(SALARY)
Visualize BAR SELECT HIRE_DATE , COUNT(*) OVER (PARTITION BY (hired_before(HIRE_DATE) <= '2002-06-21' ), DAYNAME(HIRE_DATE)) FROM employees
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees  WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' GROUP BY HIRE_DATE ORDER BY HIRE_DATE ASC , SUM(SALARY)
Visualize BAR SELECT Job_ID , SUM(Department_ID) FROM employees WHERE salary >= 8000 AND salary <= 12000 AND Commission_PCT IS NOT NULL AND job_id NOT IN (SELECT DEPARTMENT_ID FROM job_history WHERE DEPARTMENT_ID = 40) GROUP BY Job_ID
Create a pie chart showing total number of amount payment across payment method code
Visualize BAR SELECT product_type_code , MIN(product_price) FROM products GROUP BY product_type_code ORDER BY MIN(product_price) ASC
Visualize BAR SELECT Draft_Pick_Number , COUNT(Draft_Pick_Number) FROM match_season WHERE position = "Defender" GROUP BY Draft_Pick_Number ORDER BY Draft_Pick_Number DESC BIN Draft_Pick_Number BY YEAR
1. Visualize BAR SELECT FIRST_NAME , HIRE_DATE FROM employees ORDER BY HIRE_DATE DESC BIN HIRE_DATE BY Month, Year 2. Visualize LINE SELECT Average(EMPLOYEE_ID) , HIRE_DATE FROM employees GROUP BY HIRE_DATE ORDER BY HIRE_DATE
Visualize LINE SELECT EMPLOYEE_ID , job_history.start_date FROM employees GROUP BY job_history.start_date ORDER BY job_history.start_date ASC,employee_id
Visualize BAR SELECT other_details , student_id , monthly_rental FROM Student_Addresses GROUP BY other_details , student_id , monthly_rental BIN(DATE_ADDRESS_TO , WEEKDAYS.MONDAY)
Visualize BAR SELECT first_name, count(*) FROM teachers GROUP BY first_name, other_details ORDER BY first_name, other_details  BIN date_address_from BY YEAR
Visualize PIE SELECT County_name , Population FROM county GROUP BY County_name
Visualize BAR SELECT HIRE_DATE , COUNT(DEPARTMENT_ID) FROM employees GROUP BY HIRE_DATE ORDER BY HIRE_DATE DESC
Visualize PIE SELECT customer_address, COUNT(*) FROM Customer_addresses GROUP BY customer_address HAVING CONTAINS(customer_address, 'TN') ORDER BY total_num DESC
SELECT Entrepreneur_ID, Money_Requested FROM entrepreneur GROUP BY Entrepreneur_ID ORDER BY Entrepreneur_ID ASC
Visualize BAR SELECT Manufacturer , MIN(Price) FROM Products GROUP BY Manufacturer ORDER BY Manufacturer ASC
Visualize BAR SELECT job_id , COUNT(*) FROM employees GROUP BY job_id ORDER BY COUNT(*) ASC
Visualize BAR SELECT department_id, count(*) FROM employees GROUP BY job_id, department_id ORDER BY job_id, department_id DESC
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE SALARY BETWEEN 8000 and 12000 AND COMMISSION_PCT is null AND department_id != 40 BIN HIRE_DATE BY MONTH ORDER BY AVG(EMPLOYEE_ID) DESC
Visualize BAR SELECT Job_ID , avg(employees.EMPLOYEE_ID) FROM jobs INNER JOIN employees ON jobs.JOB_ID = employees.JOB_ID GROUP BY Job_ID ORDER BY avg(employees.EMPLOYEE_ID) DESC
Visualize SCATTER SELECT Manufacturer , Price FROM Products WHERE Price >= 60 AND Price <= 120 ORDER BY Price ASC
1.Sort by hire_date , 2.Comparison of salary and commission by the time bin, 3. Comparison by the y-axis from high to low .
Visualize BAR SELECT Draft_Pick_Number, Draft_Class FROM match_season WHERE Draft_Class IS NOT NULL , Draft_Pick_Number  , Player , Player , Player , Team GROUP BY Draft_Pick_Number , Draft_Class ORDER BY Draft_Class DESC
Visualize BAR SELECT EMPLOYEE_ID,      avg(hired_date) OVER (BIN hired_date BY WEEKDAY) FROM employees WHERE SALARY BETWEEN 8000 AND 12000 AND MANAGER_ID NOT IN     (SELECT MANAGER_ID FROM job_history WHERE JOB_ID = 'HR') AND DEPARTMENT_ID <> 40 AND COMMISSION_PCT IS NOT NULL
Visualize BAR SELECT FIRST_NAME , COUNT(FIRST_NAME) FROM employees WHERE LAST_NAME != 'm' GROUP BY FIRST_NAME ORDER BY COUNT(FIRST_NAME) DESC
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees GROUP BY HIRE_DATE ORDER BY HIRE_DATE DESC
Visualize SCATTER SELECT EMPLOYEE_ID , DEPARTMENT_ID FROM employees ORDER BY EMPLOYEE_ID
Visualize LINE SELECT date_of_notes , COUNT(date_of_notes) FROM assessment_notes GROUP BY date_of_notes ORDER BY date_of_notes ASC
Visualize SCALE SELECT JOB_ID , SALARY FROM employees WHERE SALARY BETWEEN 8000 AND 12000 AND COMMISSION_PCT NOT NULL AND DEPARTMENT_ID != 40 GROUP BY JOB_ID Visualize SCATTER SELECT Department_ID, commission_pct FROM employees WHERE SALARY BETWEEN 8000 AND 12000 AND COMMISSION_PCT NOT NULL AND DEPARTMENT_ID != 40
Visualize BAR SELECT FIRST_NAME , HIRE_DATE FROM employees WHERE HIRE_DATE < 2002-06-21 GROUP BY HIRE_DATE BIN HIRE_DATE BY 6 MONTH BAR SELECT HIRE_DATE, COUNT(HIRE_DATE) FROM employees WHERE HIRE_DATE < 2002-06-21 GROUP BY HIRE_DATE ORDER BY HIRE_DATE
1. Visualize BAR SELECT EMAIL , FIRST_NAME FROM employees GROUP BY FIRST_NAME;  2. Visualize BAR SELECT MANAGER_ID , COUNT(MANAGER_ID) FROM employees GROUP BY MANAGER_ID ORDER BY COUNT(MANAGER_ID) DESC
Visualize BAR SELECT job_id , AVG(salary) FROM employees WHERE salary > 8000 AND commission_pct IS NOT NULL AND department_id <> 40 GROUP BY job_id ORDER BY x_
Visualize BAR SELECT product_type_code , MIN(product_price) FROM products  GROUP BY product_type_code ORDER BY product_type_code ASC
Visualize BAR SELECT incident_type_code , COUNT(incident_type_code) FROM Behavior_Incident GROUP BY incident_type_code ORDER BY incident_type_code ASC
Visualize PIE SELECT Participant_Type_Code , count(*) FROM Participants GROUP BY Participant_Type_Code

Visualize BAR SELECT SALARY , FIRST_NAME FROM employees
Visualize BAR SELECT Carrier , AVG(Memory_in_G) FROM phone GROUP BY Carrier ORDER BY Carrier DESC
Visualize BAR SELECT EMPLOYEE_ID , SUM(SALARY) FROM employee GROUP BY EMPLOYEE_ID , HIRE_DATE BIN EMPLOYEE_ID
Visualize LINE SELECT employee_id , (IF(hire_date < 2002-06-21 , 'N/A' , commission_pct)) FROM employees WHERE hire_date < 2002-06-21 GROUP BY employee_id ORDER BY hire_date
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees  WHERE FIRST_NAME NOT LIKE 'M' ORDER BY HIRE_DATE ASC
Visualize BAR SELECT product_type_code , avg(product_price) FROM products GROUP BY product_type_code
Visualize BAR SELECT HIRE_DATE , avg(department_id) FROM employees GROUP BY HIRE_DATE ORDER BY HIRE_DATE DESC
Visualize BAR SELECT JOB_ID , AVERAGE(EMPLOYEE_ID) FROM EMPLOYEES WHERE FIRST_NAME LIKE "D%" OR FIRST_NAME LIKE "S%" GROUP BY JOB_ID ORDER BY JOB_ID ASC
Visualize BAR SELECT date_address_from , sum(monthly_rental) FROM Student_Addresses GROUP BY other_details , date_address_from BIN date_address_from BY DAY OF WEEK
Visualize BAR SELECT HIRE_DATE, SALARY , COUNT(EMPLOYEE_ID) FROM employees GROUP BY HIRE_DATE
1) Visualize BAR SELECT job_id , SUM(salary) FROM employees GROUP BY job_id ORDER BY job_id ASC , and 2) Visualize BAR SELECT DISTINCT(First_Name) , count(*) FROM employees GROUP BY First_Name,order by count(*) DESC
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees JOIN job_history ON employee_id = job_history.employee_id GROUP BY JOB_ID ORDER BY SUM(MANAGER_ID)
Visualize BAR SELECT Committee , COUNT(*) FROM election GROUP BY Committee ORDER BY Committee ASC
1. Visualize TABLE SELECT SUM(salary) , job_id FROM employees WHERE salary > 8000 AND salary < 12000 AND commission_pct IS NOT NULL AND department_id <> 40 GROUP BY job_id 2. Visualize TABLE SELECT SUM(salary) , department_id FROM employees WHERE department_id <> 40 GROUP BY department_id 3. Visualize TABLE SELECT SUM(salary) , MIN(job_id) FROM employees GROUP BY MIN(job_id)
Visualize BAR SELECT Employee_ID , JOB_ID, SUM(Job_ID) FROM employees GROUP BY Employee_ID ORDER BY SUM(Job_ID) DESC BIN JOB_ID BY YEAR
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) , MANAGER_ID , DEPARTMENT_ID FROM employees WHERE HIRE_DATE < 2002-06-21 ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY WEEKDAY
Visualize Bar SELECT EMPLOYEE_ID , COUNT(EMPLOYEE_ID) FROM employees  WHERE HIRE_DATE> 2002-06-21 AND MANAGER_ID IS NULL GROUP BY EMPLOYEE_ID ORDER BY COUNT(EMPLOYEE_ID) DESC BIN ( JOB_ID , EMPLOYEE_ID) BY JOB_ID
Visualize BAR SELECT SALARY , sum(salary) FROM employees WHERE FIRST_NAME NOT REGEXP "M" BIN HIRE_DATE BY DAY_OF_WEEK
Visualize BAR SELECT Job_id , Average(Salary) FROM Employees WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' GROUP BY job_id ORDER BY average(salary) ASC
Visualize BAR SELECT hire_date , AVG(hire_date) FROM employees WHERE FIRST_NAME LIKE "D%" OR FIRST_NAME LIKE "S%" GROUP BY hire_date BIN hire_date BY YEAR
Visualize TREND SELECT FIRST_NAME , SALARY FROM employees WHERE EMPLOYEE_ID IN (SELECT MANAGER_ID FROM departments) AND LAST_NAME LIKE 'D%' OR LAST_NAME LIKE 'S%'
Visualize BAR SELECT JOB_ID , count(*) , SUM(manager_id) FROM job_history WHERE FIRST_NAME like 'S%' or FIRST_NAME like 'D%' GROUP BY JOB_ID BIN Start_date BY DAY
Visualize BAR SELECT SUM((job_history.end_date - job_history.start_date).days / 7) AS worker_by_week , job_history.start_date , job_history.end_date , SUM((job_history.end_date - job_history.start_date).days) , SUM( (EMPLOYEE_ID, JOB_ID)) BY HIRE_DATE , SUM((job_history.end_date - job_history.start_date).days) , SUM( (EMPLOYEE_ID,
Visualize SCATTER SELECT ranking_date , COUNT(tours) FROM rankings GROUP BY ranking_date ORDER BY COUNT(tours) ASC
Visualize BAR SELECT job_id, AVG(salary) FROM EMPLOYEES  WHERE HIRE_DATE > 2002-06-21 GROUP BY job_id, HIRE_DATE ASC
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE HIRE_DATE <= '2002-06-21'  BIN HIRE_DATE BY YEAR
Visualize PIE SELECT Venue , sum(Match_ID) FROM match GROUP BY Venue ORDER BY Date ASC
Visualize BAR SELECT Draft_Pick_Number , Draft_Class FROM match_season GROUP BY Draft_Pick_Number , Draft_Class ORDER BY Draft_Pick_Number ASC
Visualize BAR SELECT date_address_to , COUNT(date_address_to) FROM Student_Addresses GROUP BY monthly_rental ORDER BY date_address_to ASC BIN date_address_to BY MONTH
Visualize BAR SELECT code , count(*) FROM products GROUP BY code HAVING price >= 60 AND price <= 120 ORDER BY count(*) ASC
Visualize BAR SELECT Product_Suppliers , product_type_code , Max(product_price) FROM Products , Product_Suppliers GROUP BY Product_Suppliers , product_type_code
Visualize HISTOGRAM SELECT LAST_NAME , MANAGER_ID FROM employees GROUP BY LAST_NAME ORDER BY LAST_NAME DESC
1. Visualize TABLE SELECT EMPLOYEE_ID, MANAGER_ID FROM employees WHERE SALARY BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NOT NULL AND DEPARTMENT_ID NOT IN (40); 2. Visualize TABLE SELECT EMPLOYEE_ID, MANAGER_ID FROM employees WHERE SALARY BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NOT NULL AND DEPARTMENT_ID = 4
Visualize SCATTER SELECT payment_method_code , COUNT(payment_method_code) FROM customers GROUP BY payment_method_code ORDER BY COUNT(payment_method_code) DESC, payment_method_code
Visualize BAR SELECT date_address_to , SUM(monthly_rental) FROM student_addresses GROUP BY date_address_to , other_details ORDER BY SUM(monthly_rental) DESC LIMIT 8
Visualize BAR SELECT products.price, COUNT(Manufacturer.Code) FROM products JOIN Manufacturers GROUP BY Manufacturer.Code ORDER BY products.price ASC
Visualize BAR SELECT Name , COUNT(*) FROM Products GROUP BY Manufacturer ORDER BY Count(*) DESC
Visualize BAR SELECT Products.Code , count(*) FROM Products GROUP BY Products.Code, Order By Products.Code ASC
Visualize BAR SELECT JOB_ID , count(manager_id) FROM jobs GROUP BY JOB_ID ORDER BY count(manager_id) ASC


Visualize BAR SELECT Date_Payment_Made , Amount_Payment FROM Payments WHERE Payment_Method_Code="VISA" GROUP BY Date_Payment_Made ORDER BY Date_Payment_Made DESC
Visualize BAR SELECT Manufacturers.Code , count(*) FROM Products WHERE Price >= 200 AND Manufacturers.Code IN (SELECT Code FROM Manufacturers) GROUP BY Manufacturers.Code ORDER BY Manufacturers.Code ASC
1. Visualize BAR SELECT LAST_NAME FROM employees WHERE LAST_NAME NOT LIKE 'M%' ORDER BY SALARY DESC 2. Visualize BAR SELECT HIRE_DATE FROM employees GROUP BY HIRE_DATE ORDER BY HIRE_DATE DESC
1. Visualize LINESELECT HIRE_DATE , commission_pct FROM employees WHERE commission_pct IS NOT NULL AND (SALARY BETWEEN 8000 and 12000 ) GROUP BY HIRE_DATE 2. Visualize LINESELECT commission_pct , HIRE_DATE FROM employees WHERE (SALARY BETWEEN 8000 and 12000 ) GROUP BY commission_pct 3. Visualize LINESELECT HIRE_DATE , commission_pct FROM employees WHERE (SAL

1st : Visualize BAR SELECT LName , Fname FROM Student BIN Age BY month_range GROUP BY Fname ORDER BY Fname ASC 2nd: Visualize BAR SELECT LName , Fname FROM Student BIN Age GROUP BY Fname ORDER BY Fname ASC
Visualize BAR SELECT Amount_Payment , count(*) FROM Payments GROUP BY Payment_Method_Code
SELECT Phone_ID , count(*) AS total FROM phone  GROUP BY Phone_ID  ORDER BY total ASC
Visualize SELECT  EMPLOYEE_ID, DEPARTMENT_ID, SUM(COMMISSION_PCT) as Commission, JOB_ID, HIRE_DATE , DATEPART(weekday , HIRE_DATE) FROM ( SELECT SUM(COMMISSION_PCT) , EMPLOYEE_ID , DEPARTMENT_ID , HIRE_DATE FROM ( SELECT EMPLOYEE_ID, DEPARTMENT_ID, JOB_ID, HIRE_DATE , COMMISSION_PCT
Visualize BAR SELECT MIN_SALARY , MAX_SALARY FROM jobs WHERE  MIN_SALARY BETWEEN 12000 and 18000 ORDER BY MAX_SALARY ASC
Visualize BAR SELECT Revenue , SUM(revenue) FROM Manufacturers GROUP BY Revenue ORDER BY Revenue DESC
Visualize BAR SELECT Event_Details , COUNT(Event_Details) FROM Events GROUP BY Event_Details ORDER BY Count(Event_Details) DESC
Visualize BAR SELECT hand , count(*) FROM Players GROUP BY hand ORDER BY hand DESC
Visualize SCATTER SELECT EMPLOYEE_ID , (COMMISSION_PCT * 100) AS value , MANAGER_ID, DEPARTMENT_ID FROM employees WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%'
Visualize BAR SELECT Season, Player, count(*) FROM match_season GROUP BY Season, Player
/* Select */  SELECT DEPARTMENT_NAME , COUNT(EMPLOYEE_ID) FROM employees WHERE hire_date <= '2002-06-21'  GROUP BY DEPARTMENT_NAME ORDER BY DEPARTMENT_NAME /* Visualize */  Visualize LINES SELECT DEPARTMENT_NAME , COUNT(EMPLOYEE_ID) FROM employees WHERE hire_date <= '2002-06-21'  GROUP BY DEPARTMENT_NAME ORDER BY DEPARTMENT_NAME ASC
Visualize LINE SELECT DEPARTMENT_ID , COUNT(*) FROM employees WHERE SALARY BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NOT NULL AND department_id != 40 GROUP BY DEPARTMENT_ID , HIRE_DATE ORDER BY HIRE_DATE DESC
Visualize BAR SELECT job_id , COUNT( EMPLOYEE_ID ) FROM employees GROUP BY job_id , HIRE_DATE DESC
Visualize BAR SELECT employee_id , count(JOB_ID), avg(salary) FROM employees WHERE hire_date < 2002-06-21 GROUP BY employee_id, job_id
Visualize BAR SELECT JOB_ID , DEPARTMENT_ID FROM departments GROUP BY JOB_ID ORDER BY JOB_ID ASC  	, SUM(COMMISSION_PCT) AS Commission, JOB_ID FROM employees GROUP BY JOB_ID ORDER BY Commission  	 , SUM(salary) AS Salary, JOB_ID, MANAGER_ID FROM employees GROUP BY JOB_ID, MANAGER_ID ORDER BY Salary 	, SUM(salary) AS Salary , JOB_ID, HIRE
Visualize BAR SELECT LAST_NAME , EMPLOYEE_ID FROM employees ORDER BY LAST_NAME DESC
Visualize BAR SELECT Name , COUNT(*) FROM Products GROUP BY Name
Visualize BAR SELECT hire_date , COUNT(*) FROM employees WHERE HIRE_DATE < "2002-06-21" GROUP BY HIRE_DATE BIN hire_date BY WEEKDAY ORDER BY COUNT(*) DESC, Y
Visualize BAR SELECT EMPLOYEE_ID , count(Salary), count(Commission_Pct), count(Department_ID), count(Job_ID) FROM EMPLOYEES GROUP BY EMPLOYEE_ID ORDER BY count(Salary) ASC , count(Commission_Pct) ASC , count(Department_ID) ASC , count(Job_ID) ASC
Visualize BAR SELECT JOB_ID , AVG(SUM(DEPARTMENT_ID)) FROM employees WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%'  GROUP BY JOB_ID ORDER BY JOB_ID ASC
Visualize BAR SELECT job_id, SUM(manager_id) FROM jobs ,departments WHERE (departments.DEPARTMENT_ID in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,3
Visualize LINE SELECT employee_id, COUNT(*) FROM job_history WHERE hire_date < "2002-06-21 00:00:00.000" GROUP BY employee_id ORDER BY employee_id ASC
Visualize BAR SELECT address_id , COUNT(customer_id) FROM Customer_Addresses WHERE address_id = TN GROUP BY address_id ORDER BY COUNT(customer_id) ASC
Visualize BAR SELECT emp_id ,count(emp_id) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission IS NOT NULL AND department_number != 40 GROUP BY emp_id HAVING COUNT(emp_id) > 1 AND emp_id <> NULL   Visualize BAR SELECT DISTINCT JOB_ID , avg(hire_date) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission IS NOT NULL AND department_number
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees  WHERE HIRE_DATE < '2002-06-21' GROUP BY JOB_ID ORDER BY COUNT(JOB_ID) ASC
Visualize PIE SELECT product_type_code , product_price FROM products GROUP BY product_type_code
Visualize BAR SELECT JOB_ID, COUNT(JOB_ID) FROM employees WHERE hire_date < "2002-06-21" GROUP BY JOB_ID ORDER BY COUNT(JOB_ID) ASC
Visualize BAR SELECT Investor , COUNT(Investor) FROM entrepreneur GROUP BY Investor ORDER BY COUNT(Investor) ASC
Visualize BAR SELECT job_id , COUNT(employee_id) FROM jobs  JOIN employees ON job_id = JOB_ID  JOIN job_history ON employee_id = EMPLOYEE_ID GROUP BY job_id ORDER BY job_id DESC
Visualize BAR SELECT Hire_Date , AVG(EMPLOYEE_ID) FROM employees GROUP BY Hire_Date , ORDER BY Hire_Date ASC, AVG(EMPLOYEE_ID) ASC
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees GROUP BY HIRE_DATE ORDER BY COUNT(HIRE_DATE) ASC
Visualize BAR SELECT job_id , avg(employee_id) FROM jobs WHERE (first_name like "D%") or (first_name like "S%") GROUP BY job_id ORDER BY job_id ASC
Visualize BAR SELECT hire_date, COUNT(*) FROM employee GROUP BY hire_date HAVING MONTH(hire_date) >= 6 AND YEAR(hire_date) >= 2002 ORDER BY COUNT(*) ASC BIN hire_date BY YEAR
Visualize HISTOGRAM SELECT EMPLOYEE_ID ,MANAGER_ID ,DEPARTMENT_ID FROM employees WHERE EMPLOYEE_ID = ? GROUP BY EMPLOYEE_ID ,MANAGER_ID ,DEPARTMENT_ID ORDER BY MANAGER_ID ASC, DEPARTMENT_ID ASC
Visualize BAR SELECT HIRE_DATE , AVERAGE(DEPARTMENT_ID) AS DEPT FROM employees GROUP BY HIRE_DATE , COUNT(HIRE_DATE) HAVING COUNT(HIRE_DATE) > 1 SORT BY AVERAGE(DEPARTMENT_ID)
Visualize BAR SELECT date_address_from , monthly_rental FROM Student_Addresses GROUP BY date_address_from
Visualize scatter SELECT manager_id , commission_pct FROM employees WHERE HIRE_DATE < '2002-06-21' ORDER BY manager_id ASC
Visualize BAR SELECT product_type_code , AVG(total_amount_purchased) FROM Products GROUP BY product_type_code ORDER BY AVG(total_amount_purchased) ASC
Visualize SCATTER SELECT MANAGER_ID, Commission_Pct FROM employees WHERE MANAGER_ID <> 40 AND SALARY BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NOT NULL AND Department_ID <> 40
Visualize BAR SELECT job_id , AVG(employee_id) FROM departments WHERE JOB_ID IN (SELECT JOB_ID FROM employees WHERE SALARY BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NULL AND MANAGER_ID = 9 AND DEPARTMENT_ID != 40) GROUP BY job_id
Visualize BAR SELECT last_name , SUM(salary) FROM employees WHERE first_name LIKE 'M%') GROUP BY last_name ORDER BY sum(salary) desc
Visualize BAR SELECT Competition , COUNT(Competition) FROM match GROUP BY Competition
Visualize BAR SELECT HIRE_DATE , COUNT(*) FROM employees GROUP BY HIRE_DATE BIN HIRE_DATE BY WEEK_END
Visualize BAR SELECT manufacturer , Price FROM Products WHERE Price>60 AND Price<120 GROUP BY manufacturer , Name ORDER BY Name ASC
Visualize BAR SELECT Carrier , COUNT(Phone_ID) FROM phone GROUP BY Carrier ORDER BY Phone_ID ASC
Visualize BAR SELECT HIRE_DATE , SUM(Employee_ID) FROM employees  GROUP BY HIRE_DATE ,  BIN HIRE_DATE BY DAY_OF_WEEK ASC
Visualize LINE SELECT AVG(SALARY) , MAX(SALARY) FROM employees             WHERE 8000 <= SALARY AND SALARY <= 12000             AND COMMISSION_PCT IS NULL             AND DEPARTMENT_ID <> 40             AND HIRE_DATE <= '2018-05-28'             ORDER BY HIRE_DATE ASC
Visualize LINE SELECT HIRE_DATE , COMMISSION_PCT FROM EMPLOYEES GROUP BY HIRE_DATE, COMMISSION_PCT WHERE HIRE_DATE < '2002-06-21'
Visualize PIE SELECT EMPLOYEE_ID , (CASE WHEN (HIRE_DATE>='2017-01-01' AND HIRE_DATE<='2019-01-01' AND (COMMISSION_PCT IS NOT NULL OR DEPARTMENT_ID IS NOT 40)) THEN 1 ELSE 0 END) AS 'Employees' , (CASE WHEN (HIRE_DATE>='2019-01-01' AND HIRE_DATE<='2021-01
Visualize BAR SELECT FIRST_NAME , SUM(MANAGER_ID) FROM EMPLOYEES GROUP BY FIRST_NAME BIN HIRE_DATE BY TIME ORDER BY FIRST_NAME ASC
Visualize BAR SELECT Date_Claim_Made , COUNT(*) FROM Claims GROUP BY Date_Claim_Made ORDER BY Date_Claim_Made ASC
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employee  GROUP BY JOB_ID ORDER BY AVG(SALARY) ASC
Visualize BAR SELECT EMPLOYEE_ID , COUNT(*) FROM employees GROUP BY EMPLOYEE_ID , HIRE_DATE ASC BIN HIRE_DATE BY YEAR
Visualize BAR SELECT Position , COUNT(*) FROM match_season GROUP BY Position ORDER BY COUNT(*) ASC
Visualize BAR SELECT Name , Revenue FROM Manufacturers GROUP BY Headquarter ORDER BY Revenue DESC
Visualize BAR SELECT job_id , sum(manager_id) FROM employees WHERE salary in (8000, 12000) AND job_id NOT IN (SELECT job_id FROM job_history WHERE department_id = 40) AND commission_pct is not null AND manager_id IS NOT NULL GROUP BY job_id
Visualize BAR SELECT FIRST_NAME , AVG(SALARY) FROM employees WHERE FIRST_NAME LIKE 'M%' ORDER BY AVG(SALARY) ASC
Visualize BAR SELECT Manufacturer , AVG(Price) FROM Products GROUP BY Manufacturer ORDER BY AVG(Price) DESC
Visualize BAR SELECT job_history.EMPLOYEE_ID , COUNT(job_history.EMPLOYEE_ID) FROM JOB_HISTORY WHERE job_history.JOB_ID = job.JOB_ID GROUP BY job_history.EMPLOYEE_ID ORDER BY COUNT(job_history.EMPLOYEE_ID) ASC  BAR SELECT EMAIL , COUNT(EMAIL) FROM employees WHERE MANAGER_ID = job_history.EMPLOYEE_ID  GROUP BY EMAIL ORDER BY COUNT(
Visualize BAR SELECT Email , COUNT(Email) FROM employees GROUP BY Email ORDER BY COUNT(Email) ASC
1. Visualize a BAR SELECT Employee_ID , COUNT(Employee_ID) FROM employees GROUP BY Employee_ID ORDER BY Employee_ID ASC 2. Visualize a BAR SELECT Employee_ID , AVERAGE(SALARY) FROM employees GROUP BY Employee_ID ORDER BY Employee_ID ASC 3. Visualize a BAR SELECT EMAIL , COUNT(EMAIL) FROM employees GROUP BY EMAIL ORDER BY COUNT(EMAIL) ASC 4. Visualize a BAR SELECT EMAIL , MAX(EMAIL) FROM employees GROUP BY EMAIL ORDER BY MAX(EMA
- Visualize BAR SELECT DEPARTMENT_ID, avg(hire_date) FROM employees GROUP BY DEPARTMENT_ID order by DEPARTMENT_ID - Visualize BAR SELECT FIRST_NAME, avg(hire_date) FROM employees GROUP BY FIRST_NAME ORDER BY FIRST_NAME ASC
Visualize BAR SELECT DEPARTMENT_ID , COUNT(DISTINCT EMPLOYEE_ID) FROM employees WHERE SALARY BETWEEN 8000 AND 12000 AND COMMISSION IS NOT NULL AND DEPARTMENT_ID <> 40 AND (job_history.JOB_ID IS NOT NULL) AND (job_history.END_DATE IS NULL OR job_history.END_DATE IS NULL) GROUP BY DEPARTMENT_ID BIN hire_date by time
Visualize BAR SELECT EMAIL, SALARY FROM employees GROUP BY EMAIL ORDER BY SALARY ASC
Visualize BAR SELECT HIRE_DATE , SALARY FROM employees GROUP BY HIRE_DATE ORDER BY SALARY DESC
Visualize BAR SELECT Venue , COUNT(Venue) FROM match GROUP BY Venue ORDER BY COUNT(Venue) ASC
Visualize BAR SELECT FIRST_NAME , HIRE_DATE , avg(SALARY) FROM employees GROUP BY FIRST_NAME , HIRE_DATE ORDER BY SALARY ASC , HIRE_DATE ASC
Visualize BAR SELECT SALARY , count(*) FROM employees WHERE salary between 8000 and 12000 AND department number not in (40) AND commission_pct is not null AND HIRE_DATE > '1999-01-01' AND HIRE_DATE < '2016-01-01' GROUP BY hire_date , EMPLOYEE_ID ORDER BY count(*) ASC BIN weekday
Visualize BAR SELECT HIRE_DATE , COUNT(*) FROM employees WHERE FIRST_NAME LIKE ‘D%’ OR FIRST_NAME LIKE ‘S%’ GROUP BY HIRE_DATE , MANAGER_ID ORDER BY MANAGER_ID DESC
Visualize BAR SELECT  (select COUNT(*) FROM employees WHERE FIRST_NAME = 'D' OR FIRST_NAME = 'S') AS FIRST_NAME , department_id FROM jobs WHERE MIN_SALARY > 100000 ORDER BY JOB_ID , AVERAGE(department_id) DESC GROUP BY department_id, job_id, JOB_ID
Select customer_name, customer_id from customers where customer_address like 'TN'
Visualize BAR SELECT commission_pct , hire_date FROM employees GROUP BY commission_pct , hire_date
Visualize BAR SELECT Address.Customer_ID , payment_method_code FROM Customer_Addresses WHERE payment_method_code = '3'  GROUP BY Address.customer_id ORDER BY Address.customer_id ASC
Visualize BAR SELECT EMPLOYEE_ID , SUM(HIRE_DATE) FROM employees GROUP BY EMPLOYEE_ID BIN HIRE_DATE BY WEEKDAY

Visualize BAR SELECT EMPLOYEE_ID , SUM(MANAGER_ID) FROM employees WHERE MANAGER_ID IS NOT NULL AND DEPARTMENT_ID != 40 AND SALARY >= 8000 AND SALARY < 12000 AND COMMISSION_PCT IS NOT NULL GROUP BY EMPLOYEE_ID , HIRE_DATE ORDER BY EMPLOYEE_ID ASC
Visualize HISTOGRAM SELECT MANAGER_ID FROM employees GROUP BY LAST_NAME
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees GROUP BY HIRE_DATE
Visualize BAR SELECT Memory_in_G , Carrier FROM phone ORDER BY Memory_in_G DESC
Visualize Bar SELECT EMPLOYEE_ID , SUM(MANAGER_ID) FROM employees WHERE HIRE_DATE < '2002-06-21' AND EMPLOYEE_ID NOT IN (SELECT EMPLOYEE_ID FROM JOB_HISTORY WHERE HIRE_DATE < '2002-06-21') GROUP BY JOB_ID ORDER BY 1 DESC
SELECT product_id , SUM(total_value_purchased) AS Total_value_purchased FROM products,product_suppliers  WHERE product_id = product_suppliers.product_id GROUP BY product_type_code, product_id ORDER BY Total_value_purchased DESC
visualize LINE SELECT SALARY , COUNT(EMPLOYEE_ID) FROM employees GROUP BY SALARY
Visualize BAR SELECT DEPARTMENT_ID , SUM(HIRE_DATE) FROM employees WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' GROUP BY DEPARTMENT_ID ORDER BY SUM(HIRE_DATE) ASC

Visualize BAR SELECT Participant_Details, count(*) FROM Participants GROUP BY Participant_Details ORDER BY Participant_Details ASC
Visualize BAR SELECT Date_Payment_Made , Count(*) FROM Payments WHERE Payment_Method_Code = 'VISA' GROUP BY YEAR (Date_Payment_Made) ORDER BY Count(*) ASC
Visualize BAR SELECT Manufacturer , Sum(Price) FROM PRODUCTS GROUP BY Manufacturer ORDER BY Sum(Price) ASC
Visualize BAR SELECT Draft_Pick_Number , Draft_Class FROM match_season WHERE Position = 'defender' ORDER BY Draft_Pick_Number ASC
Visualize BAR SELECT EMPLOYEE_ID , MANAGER_ID FROM employees GROUP BY EMPLOYEE_ID ORDER BY EMPLOYEE_ID ASC
1. Visualize BAR SELECT Job_ID , manager_id FROM job_history WHERE  JOB_ID IN    (SELECT * FROM job_history WHERE job_history.job_id = jobs.job_id AND salary BETWEEN 8000 AND 12000 AND commission IS NOT NULL) AND   job_history.department_id = departments.department_id AND job_history.department_id != 40 ORDER BY Job_ID DESC 2. Visualize BAR SELECT Job_ID , SUM(manager_
Visualize BAR SELECT mName , min(pPrice) FROM products WHERE mCode = mCode GROUP BY mCode ORDER BY min(pPrice) DESC
Visualize PIE SELECT Investor, count(*) FROM Entrepreneur GROUP BY Investor
Visualize BAR SELECT Start_date , COUNT(Start_date) FROM job_history WHERE Start_date < "2002-06-21" AND HIRE_DATE >= "2002-06-21" GROUP BY Start_date , JOB_ID ORDER BY Start_date ASC BIN Start_date BY WEEKDAY

SELECT manufacturer , COUNT(Products.Price) FROM Products GROUP BY manufacturer ORDER BY manufacturer

Visualize BAR SELECT MIN_SALARY , MAX_SALARY FROM JOBS  GROUP BY JOB_TITLE , YEAR(JOB_CREATE_DATE) AS YEAR ORDER BY YEAR(JOB_CREATE_DATE) ASC , MAX_SALARY ASC
Visualize LINE SELECT employee_id , count(*) FROM employees WHERE ( salary BETWEEN 8000 AND 12000 ) AND ( commission IS NULL OR department_id != 40 ) GROUP BY employee_id ORDER BY employee_id ASC
Visualize BAR SELECT Venue , COUNT(Venue) FROM match GROUP BY Venue ORDER BY Venue DESC
Visualize HISTOGRAM FIRST_NAME , HIRE_DATE FROM employees WHERE EMPLOYEE_ID IN (SELECT EMPLOYEE_ID FROM job_history WHERE JOB_ID = DEPARTMENT_ID) AND DEPARTMENT_ID IN (SELECT DEPARTMENT_ID FROM departments)
Visualize BAR SELECT job_history.EMPLOYEE_ID , SUM(job_history.EMPLOYEE_ID) FROM jobs GROUP BY job_history.JOB_ID BIN job_history.JOB_ID BY YEAR
Visualize BAR SELECT Service_ID , COUNT(*) FROM Events GROUP BY Event_Details ORDER BY COUNT(*) DESC
Visualize BAR SELECT JOB_ID , avg(manager_id) FROM employees GROUP BY job_id ORDER BY job_id ASC
Visualize BAR SELECT date_address_to , COUNT(*) FROM Student_Addresses WHERE date_address_from <= '2020-12-03' AND date_address_to >= '2020-12-03' GROUP BY weekday
VQL: Visualize BY SCATTER Plot the average of monthly_rental over date_address_to , and group by attribute other_details with a line chart  VQL: Visualize BY BAR SELECT monthly_rental , COUNT(*) FROM student_addresses GROUP BY other_details VQL: Visualize BY BAR SELECT Nationality , COUNT(*) FROM journalist GROUP BY Nationality  VQL: Visualize BY BAR SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_100 ASC VQL: Visualize BY B
1. Visualize SCATTER SELECT * FROM Products WHERE Price BETWEEN 60 AND 120 GROUP BY Code 2. Visualize SCATTER SELECT Price , Manufacturer FROM Products GROUP BY Price
Visualize BAR SELECT Name , Price FROM Products WHERE Price > 60 AND Price < 120 GROUP BY Name ORDER BY Name DESC
Visualize BAR SELECT department_id , AVG(job_id) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission IS NOT NULL AND DEPARTMENT_ID != 40 GROUP BY job_id ORDER BY AVG(job_id) DESC
Visualize BAR SELECT job_id , avg(manager_id) FROM employees  WHERE hire_date <= '2002-06-21' GROUP BY job_id ORDER BY avg(manager_id) DESC
Visualize SCATTER SELECT (SALARY/MANAGER_ID) , COUNT(EMPLOYEE_ID) FROM employees GROUP BY MANAGER_ID ORDER BY COUNT(EMPLOYEE_ID) ASC BIN (SALARY/MANAGER_ID) BY YEAR
SELECT MIN(hire_date) as hire_date_min, SUM(department_id) as department_id_sum, SUM(salary) as salary_sum, SUM(commission_pct) as commission_pct_sum, COUNT(*) AS COUNT(*) FROM emp WHERE SALARY BETWEEN 8000 AND 12000 AND commission_pct IS NOT NULL AND department_id != 40 GROUP BY department_id ORDER BY COUNT(*) DESC
Visualize BAR SELECT HIRE_DATE , COUNT(*) FROM employees GROUP BY HIRE_DATE ORDER BY COUNT(*) ASC BIN HIRE_DATE BY WEEKDAY
Visualize PIE SELECT Participant_Type_Code , COUNT(*) FROM Participants GROUP BY Participant_Type_Code
Visualize BAR SELECT FIRST_NAME, COUNT(MANAGER_ID) FROM employees GROUP BY FIRST_NAME, HIRE_DATE, BIN HIRE_DATE BY YEAR,YEAR(HIRE_DATE)
Visualize BAR SELECT hire_date , SUM(department_id) FROM employees  WHERE FIRST_NAME LIKE "%D" OR FIRST_NAME LIKE "%S" GROUP BY hire_date BIN hire_date BY WEEKDAY
1.Pie Chart 2.Tableau
Visualize BAR SELECT DATE(HIRE_DATE) AS HireDate , SUM(SALARY) FROM EMPLOYEES GROUP BY HireDate ORDER BY HireDate DESC
1. Visualize SCORE SELECT Sex, Age , Count(Sex) FROM Student GROUP BY Sex, Age ORDER BY Count(Sex) DESC,Sex 2. Visualize SCORE SELECT LName, FName, City_Code , COUNT(City_Code) FROM Student GROUP BY LName, FName, City_Code ORDER BY City_Code DESC, LName 3. Visualize SCORE SELECT LName, FName, Major, Advisor , Count(LName) FROM Student GROUP BY LName, FName, Major, Advisor ORDER BY Count(LName)
Visualize SCATTER select avg(salary) FROM employees WHERE commission_pct is not null GROUP BY DEPARTMENT_ID
Visualize BAR SELECT date_of_notes , count(*) FROM Assessment_Notes GROUP BY date_of_notes ORDER BY date_of_notes
Visualize BAR SELECT COUNT(MANAGER_ID), HIRE_DATE FROM employees WHERE HIRE_DATE BETWEEN '2002-06-21' AND '2008-08-01' ORDER BY COUNT(MANAGER_ID) DESC
Visualize BAR SELECT job_id , SUM(department_id) FROM employees GROUP BY job_id ORDER BY job_id ASC,count(*) ASC
Visualize BAR SELECT COUNTRY_NAME , COUNT(*) FROM countries GROUP BY COUNTRY_NAME ORDER BY COUNT(*) DESC

Visualize BAR SELECT other_details , AVG(monthly_rental) FROM Student_Addresses GROUP BY other_details BIN date_address_from BY time
Visualize HISTOGRAM SELECT DEPARTMENT_ID , FIRST_NAME FROM employees GROUP BY DEPARTMENT_ID ORDER BY FIRST_NAME ASC HISTOGRAM SELECT EMPLOYEE_ID , FIRST_NAME FROM job_history GROUP BY EMPLOYEE_ID ORDER BY FIRST_NAME ASC HISTOGRAM SELECT DEPARTMENT_ID , FIRST_NAME FROM employees GROUP BY DEPARTMENT_ID ORDER BY FIRST_NAME ASC HISTOGRAM SELECT EMPLOYEE_ID , FIRST_
1. Visualize LINE SELECT EMPLOYEE_ID FROM DEPARTMENTS WHERE DEPARTMENT_ID NOT IN (40,41) AND SALARY BETWEEN 8000 AND 12000 AND commission_pct IS NOT NULL AND SALARY NOT NULL GROUP BY EMPLOYEE_ID ORDER BY EMPLOYEE_ID ASC 2. Visualize LINE SELECT EMPLOYEE_ID , HIRE_DATE FROM DEPARTMENTS WHERE DEPARTMENT_ID NOT IN (40,41)
Visualize BAR SELECT date_address_to , COUNT(date_address_to) FROM Student_Addresses GROUP BY date_address_to ORDER BY COUNT(date_address_to) ASC
Visualize LINE SELECT HIRE_DATE, COUNT(EMPLOYEE_ID) FROM EMPLOYEES GROUP BY HIRE_DATE HAVING FIRST_NAME LIKE 'D' OR FIRST_NAME LIKE 'S'
1. Visualize PIE SELECT other_details FROM teachers 2. Visualize PIE SELECT other_details FROM Teachers , Teachers.student_addresses , Teachers.assessment_notes , Teachers.behavior_incident, Teachers.detention WHERE other_details <> '.' GROUP BY other_details
Visualize PIE SELECT Name , Price FROM Products WHERE Price >= 180  ORDER BY Price DESC , Name ASC
1. Visualize LINE SELECT JOB_ID , SALARY , MIN(start_date) , MAX(end_date) FROM employees WHERE (SALARY >= 8000 and SALARY < 12000 and COMMISSION_PCT IS NULL or DEPARTMENT_ID != 40) GROUP BY SALARY , JOB_ID , DEPARTMENT_ID ORDER BY MAX(END_DATE) ASC  2. Visualize LINE SELECT JOB_ID , SALARY , MIN(hire_date) , MAX(
Visualize BAR SELECT job_id, sum(salary) FROM employee WHERE hire_date< '2002-06-21' GROUP BY job_id ORDER BY job_id ASC
Visualize CIRCLE SELECT EMPLOYEE_ID , MANAGER_ID FROM employees WHERE FIRST_NAME LIKE "%D%S%"
Visualize BAR SELECT hand , COUNT(*) FROM player GROUP BY hand ORDER BY hand DESC
Visualize BAR SELECT JOB_ID , avg(salary) FROM employees WHERE (JOB_ID IN (SELECT DISTINCT job_id FROM jobs WHERE salary < 12000 AND commission_pct IS NULL)) GROUP BY job_id ORDER BY JOB_ID DESC
Visualize BAR SELECT Code , Count(Name) FROM Manufacturers INNER JOIN Products ON Manufacturers.Code = Products.Code GROUP BY Manufacturer.Code ORDER BY Count(Name) DESC
Visualize BAR SELECT Date_Claim_Made , Date_Claim_Settled FROM Claims GROUP BY Date_Claim_Made ORDER BY Date_Claim_Settled ASC
VQL is not capable of being able to create and group by attributes of attributes .
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) , HIRE_DATE FROM employees WHERE SALARY BETWEEN 8000 AND 12000 AND COMMISSION IS NOT NULL AND DEPARTMENT_ID NOT IN (SELECT DEPARTMENT_ID FROM departments WHERE DEPARTMENT_ID = 40) ORDER BY AVG(DEPARTMENT_ID)
Visualize BAR SELECT hire_date , COUNT(hire_date) FROM EMPLOYEES WHERE HIRE_DATE < '2002-06-21' GROUP BY hire_date BIN hire_date BY WEEKDAY
Visualize BAR SELECT JOB_ID , sum(manager_id) FROM employees WHERE salary between 8000 and 12000 and commission is not null and job_id != 40 group by JOB_ID ORDER BY SUM(manager_id) DESC
Visualize BAR SELECT County_name , Population FROM county GROUP BY County_name ORDER BY Population DESC
Visualize BAR SELECT FIRST_NAME , WEEKDAY(Hire_Date) , SALARY , AVG(SALARY) FROM employees BIN Hire_Date BY WEEKDAY(Hire_Date) ORDER BY AVG(SALARY) ASC

Visualize BAR SELECT Event_Details , COUNT(*) FROM Events GROUP BY Event_Details ORDER BY COUNT(*) ASC
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' GROUP BY JOB_ID ORDER BY SUM(MANAGER_ID) DESC
Visualize SELECT * FROM Manufacturers LEFT JOIN Products USING (Code) GROUP BY Manufacturers.Code
Visualize BAR SELECT DATE(hire_date) , AVG(hire_date) FROM employees WHERE salary IN (8000,12000) AND commission IS NOT NULL AND department_number != 40 GROUP BY hire_date ORDER BY AVG(hire_date) DESC
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21' GROUP BY HIRE_DATE ORDER BY SUM(SALARY) DESC
Visualize SCATTER SELECT Code , Price FROM Products GROUP BY Code
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees ORDER BY SALARY ASC
Visualize BAR SELECT   Hire_date , SUM(Department_ID)  FROM employees  WHERE Salary between 8000 and 12000  AND Manager_ID is not null  AND DEPARTMENT_ID not in (40)  AND  (  SELECT JOB_ID FROM job_history   WHERE EMPLOYEE_ID = employees.EMPLOYEE_ID   AND start_date BETWEEN  hire_date - 1   and hire_date
Visualize BAR SELECT EMPLOYEE_ID , department_id , avg(job_id) FROM employees WHERE first_name LIKE 'D%' OR first_name LIKE 'S%' GROUP BY job_id , EMPLOYEE_ID  ORDER BY AVG(job_id) DESC
Visualize BAR SELECT Fname , COUNT(StuID) FROM Student WHERE Age>18 AND Major!=600 GROUP BY Fname ORDER BY Fname ASC
Visualize BAR SELECT salary , COUNT(salary) FROM employees , job_history WHERE hire_date BETWEEN '2016-01-01' AND '2016-12-31' AND salary BETWEEN 8000 AND 12000 AND commission_pct IS NULL AND DEPARTMENT_ID != 40 GROUP BY salary , hire_date , weekday ORDER BY salary ASC , hire_date ASC , weekday ASC
Visualize BAR SELECT job_id , SUM(salary) FROM employees WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' GROUP BY job_id ORDER BY salary ASC
Visualize BAR SELECT hire_date , SUM(manager_id) FROM employees GROUP BY hire_date
Visualize BAR SELECT date_address_from , sum(monthly_rental) FROM Student_Addresses GROUP BY date_address_from HAVING avg(monthly_rental) > 0 AND monthly_rental != 0 AND date_address_to <= date_address_from GROUP BY date_address_from
Visualize BAR SELECT job_id , JOB_ID , AVG(DEPARTMENT_ID) FROM departments GROUP BY job_id , AVG(DEPARTMENT_ID) ORDER BY AVG(DEPARTMENT_ID)
SELECT incident_type_code, COUNT(incident_type_code) FROM Behavior_Incident GROUP BY incident_type_code BIN incident_type_code BY WEEKDAY
Visualize BAR SELECT SUM(employee_id), HIRE_DATE FROM employees WHERE (HIRE_DATE BETWEEN '2015-1-1' AND '2016-1-1') AND ( SALARY BETWEEN 8000 AND 12000 ) AND ( COMMISSION_PCT IS NOT NULL) AND ( DEPARTMENT_ID != 40) GROUP BY HIRE_DATE
Visualize BAR SELECT Name , COUNT(Name) FROM Products WHERE Price <= 200 GROUP BY Name ORDER BY COUNT(Name) ASC BIN YEAR BY Name
1.Visualize SCATTER SELECT manager_id , AVG(salary) FROM job, employees WHERE FIRST_NAME LIKE 'D' or FIRST_NAME LIKE 'S' GROUP BY job_id 2.Visualize SCATTER SELECT job_id , AVG(salary) FROM job, employees WHERE manager_id = MANAGER_ID GROUP BY job_id 3.Visualize SCATTER SELECT manager_id , AVG(salary) FROM job, employees GROUP BY manager_id
Visualize LINE SELECT employee_id, sum(hire_date), sum(manager_id) FROM employees WHERE salary >= 8000 AND commission_pct is not null AND department_id != 40  GROUP BY employee_id  HAVING sum(hire_date) > 0  BIN hire_date BY YEAR  BIN MANAGER_ID BY MONTH
Answer:  Visualize BAR SELECT First_Name , count(employees.EMPLOYEE_ID) FROM departments  INNER JOIN employees ON departments.MANAGER_ID = employees.EMPLOYEE_ID INNER JOIN job_history ON departments.DEPARTMENT_ID = job_history.DEPARTMENT_ID GROUP BY First_Name ORDER BY count(employees.EMPLOYEE_ID) ASC
Visualize BAR SELECT LAST_NAME , COUNT(LAST_NAME) FROM employees GROUP BY LAST_NAME , (YEAR(HIRE_DATE) BIN YEAR(HIRE_DATE) AS Y, MONTH(HIRE_DATE) BIN MONTH(HIRE_DATE) AS M) ASC
Visualize LINE SELECT EMPLOYEE_ID , MANAGER_ID , HIRE_DATE FROM employees WHERE HIRE_DATE < '2002-06-21'
Visualize BAR SELECT HIRE_DATE , COUNT(*) FROM EMPLOYEE WHERE COMMISSION_PCT is not null AND DEPARTMENT_ID != 40 GROUP BY HIRE_DATE ORDER BY COUNT(*) ASC Visualize BAR SELECT DEPARTMENT_ID , COUNT(*) FROM job_history WHERE START_DATE < 2012/1/1 GROUP BY DEPARTMENT_ID Visualize BAR SELECT DEPARTMENT_ID , COUNT(*) FROM job_history WHERE END_DATE > 2012/1/1 GROUP BY DE

Visualize PIE SELECT address_id , customer_id ,  customer_address FROM Customer_Addresses GROUP BY address_id HAVING 1  AND  customer_address LIKE 'TN'
Visualize LINE SELECT manufacturer.name , count(products.code) FROM Manufacturers LEFT JOIN Products ON manufacturer.code = products.Manufacturer_Code GROUP BY manufacturer.name
//Visualize LINE SELECT Date_Payment_Made , COUNT(*) FROM Payments GROUP BY Date_Payment_Made ORDER BY Date_Payment_Made ASC //Visualize LINE SELECT Date_Payment_Made , COUNT(*) FROM Payments GROUP BY Date_Payment_Made ASC
Visualize BAR SELECT MANAGER_ID , COUNT(EMPLOYEE_ID) FROM employees WHERE HIRE_DATE < '2002-06-21' GROUP BY MANAGER_ID ORDER BY MANAGER_ID ASC  BIN HIRE_DATE BY WEEKDAY
Visualize BAR SELECT FIRST_NAME , department_id , avg(hire_date) FROM employees WHERE FIRST_NAME LIKE “D%” OR FIRST_NAME LIKE “S%” BIN HIRE_DATE BY TIME
Visualize BAR SELECT People_ID , count(*) FROM Entrepreneur GROUP BY People_ID
Visualize HISTOGRAM SELECT SALARY , count(*) FROM employees GROUP BY SALARY ORDER BY SALARY ASC
Visualize SCATTER SELECT order_id, customer_id FROM Customer_Orders GROUP BY order_id, customer_id HAVING order_status_code = 'Cancelled' ORDER BY order_date
Visualize BAR SELECT Address_id , COUNT(*) FROM Customer_Addresses GROUP BY Address_id ORDER BY COUNT(*) DESC
Visualize BAR SELECT LAST_NAME , DEPARTMENT_ID FROM employees GROUP BY LAST_NAME, DEPARTMENT_ID ORDER BY DEPARTMENT_ID ASC
Visualize BAR SELECT hire_date , count(hire_date) FROM employees GROUP BY hire_date, department_id , time(hire_date)
Visualize BAR SELECT Name , Price FROM Products GROUP BY Name ORDER BY Price ASC
Visualize BAR SELECT product_type_code , max(product_price) FROM products GROUP BY product_type_code ORDER BY product_type_code ASC
Visualize BAR SELECT  DEPARTMENT_ID , AVG(HIRE_DATE) FROM EMPLOYEES     GROUP BY DEPARTMENT_ID ORDER BY AVG(HIRE_DATE) DESC BIN HIRE_DATE BY WEEKDAY          Visualize BAR SELECT  MANAGER_ID , AVG(HIRE_DATE) FROM EMPLOYEES     GROUP BY MANAGER_ID ORDER BY AVG(HIRE_DATE) DESC BIN HIRE_DATE BY WEEKDAY
Visualize SCATTER SELECT EMPLOYEE_ID , COUNT(EMPLOYEE_ID) FROM EMPLOYEES GROUP BY EMPLOYEE_ID ORDER BY COUNT(EMPLOYEE_ID) ASC

visualize bar select hire_date , department_id from employees group by hire_date , department_id rank by total_number(hire_date) desc , department_id asc
Visualize PIE SELECT Products.Code , COUNT(Products.Code) FROM Products WHERE Price BETWEEN 60 AND 120 GROUP BY Products.Code ,  COUNT(Products.Code)
Visualize  BAR SELECT MANAGER_ID, SUM(HIRE_DATE) FROM employees  WHERE hire_date >= '2000-1-1' AND hire_date < '2004-1-1' AND HIRE_DATE > '2004-1-1' AND salary BETWEEN 8000 AND 12000 AND ( commission_pct IS NULL OR department_id != 40 ) GROUP BY MANAGER_ID ORDER BY SUM(HIRE_
Visualize PIE SELECT price , count(*) FROM phone GROUP BY carrier ORDER BY count(*) DESC
Visualize LINE SELECT FIRST_NAME , SALARY FROM employees WHERE FIRST_NAME LIKE 'D%|S%' GROUP BY FIRST_NAME HAVING MIN(HIRE_DATE)
Visualize BAR SELECT hire_date , SUM(EMPLOYEE_ID)  FROM employees  WHERE salary  BETWEEN 8000 AND 12000 AND commission_pct IS NOT NULL AND department_id NOT IN (40) GROUP BY hire_date ,WEEKDAY(hire_date) ORDER BY Y
Visualize BAR SELECT FIRST_NAME , HIRE_DATE, AVG(EMPLOYEE_ID) FROM employees GROUP BY FIRST_NAME , HIRE_DATE ORDER BY HIRE_DATE ASC
Visualize BAR SELECT EMPLOYEE_ID , AVG(SALARY) FROM employees WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' GROUP BY EMPLOYEE_ID ORDER BY AVG(SALARY) ASC
Visualize BAR SELECT Investor , COUNT(Investor) FROM entrepreneur GROUP BY Investor ORDER BY COUNT(Investor) DESC
Visualize BAR SELECT Year , SUM(Amount_Payment) FROM Payments GROUP BY Year ORDER BY SUM(Amount_Payment) ASC
Visualize BAR SELECT employee_id, COUNT(*) FROM job_history GROUP BY job_id ORDER BY sum(employee_id) desc
SELECT phone , count(*) FROM phone GROUP BY phone ORDER BY Phone_ID ASC
Visualize BAR SELECT STATE_PROVINCE , COUNT(STATE_PROVINCE) FROM locations GROUP BY STATE_PROVINCE ORDER BY STATE_PROVINCE ASC
Visualize LINE SELECT date_address_to, monthly_rental FROM Student_Addresses WHERE date_address_to >= '08/29/2021' AND date_address_to < '09/05/2021' GROUP BY date_address_to, monthly_rental ORDER BY monthly_rental ASC

Visualize LINE SELECT FIRST_NAME , EMPLOYEE_ID FROM employees WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%'
Visualize BAR SELECT other_details , COUNT(other_details) FROM Teachers GROUP BY other_details
Visualize BAR SELECT SALARY , HIRE_DATE FROM employees WHERE FIRST_NAME IN ('D','S') BIN HIRE_DATE BY WEEKDAY
Visualize BAR SELECT job_id , sum(manager_id) FROM jobs GROUP BY job_id , list total number of manager_id in ascending order please .
Visualize BAR SELECT count(*) , Code FROM Products GROUP BY Code ORDER BY count(*)
Visualize BAR SELECT FIRST_NAME , COUNT(HIRE_DATE) , AVG(SALARY) FROM employees GROUP BY FIRST_NAME
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM jobs WHERE JOB_ID = ANY(job_history.JOB_ID) AND hire_date >= '2002-06-21' GROUP BY JOB_ID , JOB_TITLE , SALARY , COMMISSION_PCT , MANAGER_ID , DEPARTMENT_ID
Visualize BAR SELECT MANAGER_ID , department_id FROM employees WHERE SALARY > 8000 AND SALARY < 12000 AND commission_pct is not null AND department_id != 40 GROUP BY MANAGER_ID, department_id, AVG(hire_date) ORDER BY MANAGER_ID ASC, AVG(hire_date) ASC
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees  WHERE HIRE_DATE < '2002-06-21' GROUP BY JOB_ID , DEPARTMENT_ID ORDER BY COUNT(JOB_ID) DESC , JOB_ID ASC
1. visualize histogram(Investor, 0,800)
Visualize PIE SELECT JOB_ID , COUNT(*) FROM employees WHERE MIN_SALARY < 12000 AND JOB_ID != 40 AND (salary IN (9999,12000) OR commission_pct IN (null, 0)) GROUP BY JOB_ID HAVING COUNT(*) > 0 AND SUM(salary) > 8000
Visualize BAR SELECT monthly_rental , date_address_from FROM Student_Addresses GROUP BY date_address_from
Visualize BAR SELECT payment_method_code , COUNT(customer_id) FROM Customers GROUP BY payment_method_code ORDER BY COUNT(customer_id) ASC
Visualize BAR SELECT FIRST_NAME , EMAIL FROM employees WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' GROUP BY FIRST_NAME ORDER BY HIRE_DATE DESC
Visualize BAR SELECT DEPARTMENT_ID , AVG(JOB_ID) AS JOB_ID FROM employees GROUP BY job_id ORDER BY JOB_ID DESC
Visualize PIE SELECT JOB_ID , count(*) FROM jobs GROUP BY job_id HAVING FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' GROUP BY JOB_ID
Visualize BAR SELECT employee_id , COUNT(*) FROM employees GROUP BY employee_id ORDER BY employee_id DESC BIN hire_date BY WEEKDAY SORT BY weekday ASC BIN hire_date BY YEAR
Visualize BAR SELECT Manufacturer, Price FROM Products WHERE Price BETWEEN 60 AND 120 GROUP BY Manufacturer ORDER BY Price DESC BIN Price BY YEAR
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees GROUP BY JOB_ID ORDER BY AVG(SALARY) Y FROM HIGH TO LOW


Visualize BAR SELECT date_incident_start , incident_type_code FROM Behavior_Incident
1. Visualize LINE SELECT EMPLOYEE_ID , avg(SALARY) FROM EMPLOYEES WHERE SALARY BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NOT NULL AND DEPARTMENT_NUMBER NOT IN (40) GROUP BY EMPLOYEE_ID ORDER BY AVG(SALARY) DESC 2. Visualize LINE SELECT EMPLOYEE_ID, MANAGER_ID, DEPARTMENT_ID FROM JOB_HISTORY GROUP BY
1. Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM job_history WHERE HIRE_DATE < '2002-06-21' AND EMPLOYEE_ID > 0 GROUP BY JOB_ID 	2. Visualize BAR SELECT job_history.JOB_ID , COUNT(EMPLOYEE_ID) FROM job_history WHERE HIRE_DATE < '2002-06-21' AND EMPLOYEE_ID > 0 GROUP BY
1. Visualize LINE SELECT SALARY ,count(*) FROM employees GROUP BY HIRE_DATE ORDER BY HIRE_DATE ASC 2. Visualize LINE SELECT SALARY ,count(*) FROM employees GROUP BY HIRE_DATE ORDER BY HIRE_DATE DESC 3. Visualize LINE SELECT HIRE_DATE , count(*) FROM employees GROUP BY HIRE_DATE ORDER BY HIRE_DATE ASC 4. Visualize LINE SELECT HIRE_DATE , count(*) FROM employees GROUP BY HIRE_DATE ORDER BY HIRE_DATE DESC
Visualize BAR SELECT payment_method_code , COUNT(*) FROM Customers GROUP BY payment_method_code ORDER BY payment_method_code DESC
Visualize BAR SELECT Name , sum(Revenue) FROM Manufacturer GROUP BY Name
Visualize BAR SELECT FIRST_NAME , count(*) FROM employees WHERE first_name LIKE 'D%' OR first_name LIKE 'S%' GROUP BY first_name , DEPARTMENT_ID ORDER BY 2 , 1
Visualize BAR SELECT Year , SUM(Amount_Payment) FROM Payments GROUP BY Year

Visualize SPHERES SELECT order_id , customer_id, order_date FROM Customer_Orders GROUP BY order_id

Visualize BAR SELECT date_address_from , monthly_rental FROM Student_Addresses GROUP BY date_address_from
Visualize BAR SELECT DEPARTMENT_ID , COUNT(*) FROM departments  WHERE ( JOB_ID IN  (SELECT JOB_ID FROM job_history  WHERE SALARY IN (8000 , 12000 ) AND commission_pct IS NULL AND department_id != 40) OR JOB_ID IN (SELECT JOB_ID FROM job_history  WHERE SALARY IN (8000 , 12000 ) AND commission_pct IS NULL) ) GROUP BY job_id ORDER BY COUNT(*) DESC  /* Question
Visualize BAR SELECT JOB_ID , SUM(employee_id) FROM job_history WHERE salary >=8000 AND salary <=12000 AND commission_pct is not null AND job_id <> 40 GROUP BY JOB_ID ORDER BY JOB_ID ASC , Visualize BAR SELECT JOB_ID , SUM(employee_id) FROM job_history WHERE salary >=8000 AND salary <=12000 AND commission_pct is not null AND job_id <> 40 GROUP BY JOB_ID ORDER BY
Visualize BAR SELECT JOB_ID, SUM(MANAGER_ID) FROM employee GROUP BY JOB_ID ORDER BY SUM(MANAGER_ID) ASC
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE HIRE_DATE < 2002-06-21 BIN HIRE_DATE BY WEEKDAY

Visualize BAR SELECT EMPLOYEE_ID , count(*) FROM employees  WHERE HIRE_DATE < '2002-06-21' GROUP BY JOB_ID , EMPLOYEE_ID
1. Visualize a bar to compare the average monthly_rental over date_address_from. group by other_details 2. Visualize a pie to show how many country from different country group by country 3. Visualize SCATTER SELECT Other_Details , SUM(Monthly_Rental) FROM Student_Addresses group by Other_Details ORDER BY SUM(Monthly_Rental) ASC
Visualize PIE SELECT * FROM Products GROUP BY Product_type_code, Product_name ORDER BY Product_type_code, Product_name
Visualize BAR SELECT Name,Code FROM Manufacturers WHERE Price > 60 AND Price < 120 ORDER BY Code ASC
Visualize BAR SELECT department.name , MANAGER_ID FROM employees WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' AND MANAGER_ID IS NOT NULL
Visualize BAR SELECT Manufacturer , count(*) FROM Products GROUP BY Manufacturer
BAR SELECT Hire_Date , SALARY FROM EMPLOYEES GROUP BY Hire_Date ORDER BY SALARY ASC
Visualize BAR SELECT Manufacturer , sum(Revenue) FROM Manufacturers GROUP BY Manufacturer ORDER BY sum(Revenue)
Visualize BAR SELECT EMPLOYEE_ID , DATE(HIRE_DATE) , SUM(DEPARTMENT_ID) FROM employees GROUP BY EMPLOYEE_ID , DATE(HIRE_DATE) HAVING hire_date < '2002-06-21'
HISTOGRAM SELECT Date_Payment_Made , Amount_Payment FROM Payments GROUP BY Date_Payment_Made ORDER BY Date_Payment_Made ASC
Visualize LINE SELECT Salary , EMPLOYEE_ID FROM employees WHERE LAST_NAME NOT REGEXP '^[Mm]$' ORDER BY SALARY ASC

Visualize LINE SELECT EMPLOYEE_ID , HIRE_DATE , MANAGER_ID FROM employees WHERE MANAGER_ID IS NOT NULL AND DEPARTMENT_ID IS NOT 40 AND SALARY BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NOT NULL AND JOB_ID NOT IN (1,2) ORDER BY EMPLOYEE_ID
Visualize LINESELECT FIRST_NAME FROM employees WHERE LAST_NAME LIKE 'D%';SELECT EMPLOYEE_ID, HIRE_DATE, HIRE_DATE FROM employees WHERE FIRST_NAME LIKE 'D%';SELECT EMPLOYEE_ID, SALARY, SALARY FROM employees WHERE FIRST_NAME LIKE 'D%';
Visualize BAR SELECT employees.HIRE_DATE ,sum(salary) FROM employees WHERE salary>8000 AND salary<12000 AND commission IS NOT NULL AND department_id !=40 GROUP BY HIRE_DATE BIN HIRE_DATE ,count(*) FROM employees WHERE salary>8000 AND salary<12000 AND commission IS NOT NULL AND department_id !=40 ORDER BY sum(salary) DESC
Visualize BAR SELECT Draft_Pick_Number , Position FROM match_season GROUP BY Draft_Pick_Number ORDER BY Draft_Pick_Number
Visualize BAR SELECT product_type_code , AVG(product_price) FROM products GROUP BY product_type_code ORDER BY product_type_code DESC
Visualize BAR SELECT Carrier , SUM(Memory_in_G) FROM phone GROUP BY Carrier ORDER BY SUM(Memory_in_G) ASC
1) Visualize PIE Select job_id from jobs WHERE HIRE_DATE > "2002-06-21" GROUP BY JOB_ID; 2) Visualize BAR SELECT sum(department_id) FROM employees WHERE HIRE_DATE > "2002-06-21" GROUP BY JOB_ID
Visualize BAR SELECT EMPLOYEE_ID , COUNT(EMPLOYEE_ID) FROM EMPLOYEES WHERE LAST_NAME <> 'G' GROUP BY LAST_NAME ORDER BY LAST_NAME DESC
Visualize LINE SELECT Commission_Pct , CAST(hire_date as STRING) FROM employees JOIN job_history ON employees.EMPLOYEE_ID = job_history.EMPLOYEE_ID WHERE salary <= 12000 and commission_pct is not null and department_id != 40 order by Commission_Pct asc, hire_date desc
Visualize BAR SELECT EMPLOYEE_ID , SALARY , (avg(EMPLOYEE_ID , SALARY) OVER (PARTITION BY EMPLOYEE_ID, SALARY BIN hire_date)) AS average FROM employees  WHERE SALARY BETWEEN 8000 AND 12000 AND ( commission_pct IS NULL OR department_id = 40)  GROUP BY EMPLOYEE_ID , SALARY
Visualize BAR SELECT Salary , COUNT(*) FROM employees GROUP BY SALARY
Visualize PIE SELECT Entrepreneur_ID , COUNT(Entrepreneur_ID) FROM entrepreneur GROUP BY Investor
Visualize BAR SELECT HIRE_DATE , count(*) FROM employees WHERE HIRE_DATE < '2002-06-21' GROUP BY HIRE_DATE ORDER BY HIRE_DATE DESC BIN HIRE_DATE BY MONTH
Visualize BAR SELECT Name , COUNT(Name) FROM Products GROUP BY Name ORDER BY COUNT(Name) DESC
Visualize BAR SELECT hire_date , COUNT(DEPARTMENT_ID) FROM employees WHERE HIRE_DATE < '2002-06-21' GROUP BY hire_date ORDER BY hire_date ASC
Visualize BAR SELECT FIRST_NAME , count(*) FROM employees WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' GROUP BY FIRST_NAME HAVING FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%'  , HAVING SALARY > 100000 GROUP BY FIRST_NAME HAVING FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%'  , HAVING SALARY > 100000 BIN BY
Visualize BAR SELECT JOB_ID , (MAX(MIN_SALARY) + (MIN(MAX_SALARY)) / 2) AS avg FROM jobs     JOIN employees     ON jobs.JOB_ID = employees.JOB_ID     JOIN job_history     ON employees.JOB_ID = job_history.JOB_ID     WHERE HIRE_DATE >= '2002-06-21' AND DEPARTMENT_ID IN (SELECT DEPARTMENT_ID FROM job_history WHERE HIRE_DATE >=
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employee WHERE job_salary >= 8000 AND job_salary <= 12000 AND job_salary NOT NULL AND job_commission_pct IS NOT NULL GROUP BY job_id , job_salary , job_commission_pct HAVING SUM(department_id) >= 10 , SUM(department_id) <= 20 , SUM(department_id) >= 50 , SUM(department_id) <= 9
Visualize BAR SELECT hire_date, COUNT(DISTINCT EMPLOYEE_ID) FROM EMPLOYEES WHERE hire_date < '2002-06-21' GROUP BY hire_date ORDER BY hire_date ASC BIN hire_date BY WEEKDAY
Visualize BAR SELECT hire_date , SUM(SALARY) FROM employees GROUP BY hire_date  BIN hire_date BY WEEKDAY  WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%'
Visualize Pie SELECT Phone_ID, COUNT(Phone_ID) FROM phone GROUP BY Phone_ID
SELECT JOB_ID, COUNT(JOB_ID) FROM employees WHERE SALARY BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NOT NULL AND JOB_ID NOT IN (SELECT JOB_ID FROM job_history WHERE JOB_ID NOT IN (SELECT JOB_ID FROM departments WHERE DEPARTMENT_ID = 40) AND EMPLOYEE_ID != 5423) GROUP BY JOB_ID  Select JOB_ID, COUNT(JOB_ID) FROM

Visualize PIE SELECT Competition , count(Competition) FROM match GROUP BY Competition
Visualize BAR SELECT Payment_Method_Code, AVG(Amount_Payment) FROM Payments GROUP BY Payment_Method_Code
Visualize BAR SELECT JOB_ID , sum(Employee_ID) FROM jobs , job_history , employees WHERE HIRE_DATE < '2002-06-21' GROUP BY JOB_ID  ORDER BY sum(Employee_ID) DESC
Visualize BAR SELECT Participant_ID , count(*) FROM Participants_in_Events GROUP BY Participant_ID
Visualize BAR SELECT first_name, sum(salary) from employees GROUP BY first_name, order by SUM(salary)
1)Visualize HISTOGRAM SELECT EMPLOYEE_ID , count(*) FROM EMPLOYEES GROUP BY EMPLOYEE_ID WITH FACET BY hire_date HIERARCHICAL 2)Visualize PIE SELECT manager_id , count(*) FROM employees GROUP BY manager_id
1) Summarize over student_id, teacher_id, detention_type_code, incident_type_code, address_id, student_id, address_id, incident_summary, recommendations, detention_summary    for (row in BAR SELECT Behavior_Incident.incident_summary , incident_summary , COUNT(*) FROM Detention    INNER JOIN Behavior_Incident ON Detention.detention_id = Behavior_Incident.detention_id     INNER JOIN Student_Addresses ON Detention.student_id = Student
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE HIRE_DATE < '2002-06-21' GROUP BY HIRE_DATE
Visualize BAR SELECT weekday , sum(hire_date) FROM employees WHERE HIRE_DATE < "2002-06-21" GROUP BY weekday ORDER BY sum(hire_date)
Visualize BAR SELECT Name , Price FROM Products WHERE price BETWEEN 60 AND 120 GROUP BY Price , Name
Visualize LINE SELECT MANAGER_ID , COUNT(*) FROM employees WHERE salary between 8000 and 12000 and commission is not null and department number != 40 GROUP BY MANAGER_ID  HAVING COUNT(*) > 0   Visualize LINE SELECT EMPLOYEE_ID , COUNT(*) FROM job_history WHERE department number != 40 GROUP BY EMPLOYEE_ID HAVING COUNT(*) > 0  Visualize BAR SELECT EMPLOYEE_ID , commission_p
Visualize BAR SELECT Position , COUNT(*) FROM match_season GROUP BY Position ORDER BY COUNT(*) ASC
Visualize BAR SELECT EMAIL , COUNT(EMAIL) FROM EMPLOYEES GROUP BY EMAIL AND HIRE_DATE BIN HIRE_DATE BY YEAR , Order By Count(EMAIL) ASC
/* Visualize BAR SELECT DEPARTMENT_ID, JOB_ID FROM jobs GROUP BY JOB_ID , DEPARTMENT_ID ORDER BY DEPARTMENT_ID ASC, JOB_ID ASC */
// Visualize BAR SELECT Manufacturer , Sum(Revenue) FROM Products GROUP BY Manufacturer
Visualize BAR SELECT hand , count(*) FROM players GROUP BY hand ORDER BY count(*) DESC
Visualize PIE SELECT job_id , sum(department_id) FROM job_history GROUP BY job_id Visualize BAR SELECT job_id , count(*) FROM job_history GROUP BY job_id Visualize BAR SELECT job_id , sum(commission_pct) FROM job_history GROUP BY job_id Visualize BAR SELECT job_id , sum(salary) FROM job_history GROUP BY job_id Visualize BAR SELECT job_id , sum(department_id) FROM job_history GROUP BY job_id ORDER BY JOB
Visualize BAR SELECT HIRE_DATE , COUNT(EMPLOYEE_ID) FROM employees WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' GROUP BY HIRE_DATE  ORDER BY COUNT(EMPLOYEE_ID) ASC BIN HIRE_DATE BY WEEKDAY
Visualize BAR SELECT EMPLOYEE_ID, HIRE_DATE , COUNT(*) FROM employees GROUP BY HIRE_DATE BIN HIRE_DATE BY WEEKDAY ORDER BY COUNT(*) ASC
Visualize LINE SELECT manager_id, hire_date FROM employees  WHERE hire_date > '2002-06-21'
Visualize BAR SELECT first_name, LAST_NAME , HIRE_DATE FROM employees  WHERE FIRST_NAME LIKE 'D%s' OR FIRST_NAME LIKE 'S%s'  GROUP BY first_name, LAST_NAME , HIRE_DATE ORDER BY HIRE_DATE DESC
Visualize BAR SELECT product_type_code, AVG(product_price) FROM Products GROUP BY product_type_code ORDER BY product_type_code ASC
Visualize BAR SELECT Manager_ID , count(*) FROM employees GROUP BY Manager_ID, last_name
Visualize BAR SELECT Code , COUNT(Code) FROM Products GROUP BY Code ORDER BY Code DESC
Visualize BAR SELECT monthly_rental , COUNT(monthly_rental) FROM Student_Addresses GROUP BY student_id , other_details , BIN date_address_from BY WEEKDAY
1. Visualize LINE SELECT SALARY , COUNT(SALARY) FROM employees GROUP BY SALARY ORDER BY SALARY ASC, HIRE_DATE ASC 2. Visualize LINE SELECT SALARY , COUNT(SALARY) FROM employees GROUP BY SALARY ORDER BY SALARY DESC, HIRE_DATE DESC
Visualize BAR SELECT Products.Name, Manufacturers.Name, Manufacturers.Revenue FROM Products,Manufacturers WHERE Products.Manufacturer = Manufacturers.Code
Visualize LINE SELECT SALARY , HIRE_DATE FROM employees WHERE HIRE_DATE < '2002-06-21'
Visualize BAR SELECT FIRST_NAME , COUNT(FIRST_NAME) FROM employees GROUP BY FIRST_NAME HAVING FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' BIN by day , HIRE_DATE FROM employees WHERE EMPLOYEE_ID =1 GROUP BY HIRE_DATE ORDER BY COUNT(FIRST_NAME) ASC , Total sum (salary + commission_pct)
Visualize BAR SELECT hire_date ,sum(employee_id) FROM employees WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' GROUP BY hire_date ORDER BY sum(employee_id) DESC
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees, job_history WHERE salary BETWEEN 8000 AND 12000 GROUP BY JOB_ID ORDER BY JOB_ID ASC
Visualize PIE SELECT MAX_SALARY , JOB_TITLE FROM jobs WHERE MAX_SALARY BETWEEN 12000 AND 18000 GROUP BY JOB_TITLE
Visualize LINE SELECT date_of_notes FROM Assessment_Notes GROUP BY date_of_notes HAVING date_of_notes>0 ORDER BY date_of_notes
Visualize BAR SELECT FIRST_NAME , HIRE_DATE , COUNT(DEPARTMENT_ID) FROM employees GROUP BY FIRST_NAME , HIRE_DATE , WEEKDAY
Visualize LINE SELECT HIRE_DATE, department_id FROM employees WHERE hire_date < '2002-06-21' GROUP BY department_id
Visualize BAR SELECT product_type_code , product_price FROM products GROUP BY product_type_code order by product_type_code ASC
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE SALARY >= 8000 AND SALARY < 12000 AND COMMISSION_PCT IS NULL AND DEPARTMENT_ID NOT IN(40) GROUP BY HIRE_DATE ORDER BY HIRE_DATE ASC
Visualize BAR SELECT FIRST_NAME , COUNT(job_id), AVG(job_id) FROM employees GROUP BY FIRST_NAME,JOB_ID,SALARY, EMAIL, PHONE_NUMBER, HIRE_DATE, MANAGER_ID, DEPARTMENT_ID ORDER BY FIRST_NAME ASC
Visualize WEEKDOWN SELECT date_address_from , count(*) FROM Student_Addresses GROUP BY weekday(date_address_from)
Visualize BAR SELECT Carrier , count(*) FROM phone GROUP BY Carrier ORDER BY Count(*) ASC

Visualize BAR SELECT EMPLOYEE_ID , COUNT(EMPLOYEE_ID) FROM employees WHERE SALARY BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NOT NULL AND DEPARTMENT_ID != 40 GROUP BY EMPLOYEE_ID ORDER BY y DESC BIN hire_date BY weekday
Visualize COLUMN SELECT Competition , count(*) FROM Match GROUP BY Competition ORDER BY count(*) DESC
Visualize LINE SELECT EMPLOYEE_ID , HIRE_DATE FROM EMPLOYEES WHERE JOB_ID IN (57,58) GROUP BY EMPLOYEE_ID ORDER BY HIRE_DATE
1.Visualize LINE SELECT * FROM employees WHERE SALARY between 8000 and 12000 and commission is not null and department_id not equal to 40 order by (start_date asc,employee_id desc) 2.Visualize LINE SELECT * FROM job_history WHERE JOB_ID between 1 and 18  order by (start_date asc,employee_id desc)
Visualize BAR SELECT FIRST_NAME , COUNT(EMPLOYEE_ID) FROM employees GROUP BY FIRST_NAME  ORDER BY COUNT(EMPLOYEE_ID) DESC
Visualize BAR SELECT manufacturer , sum(Revenue) FROM Products WHERE manufacturer = Manufacturer GROUP BY manufacturer ORDER BY sum(Revenue) DESC

Visualize BAR SELECT HIRE_DATE , COUNT(*) FROM employees WHERE HIRE_DATE < '2002-06-21' GROUP BY HIRE_DATE ORDER BY HIRE_DATE ASC
Visualize RANK SELECT (EMPLOYEE_ID , COMMISSION_PCT) FROM employees WHERE SALARY > 8000 AND MANAGER_ID IS NOT NULL AND DEPARTMENT_ID <> 40 GROUP BY EMPLOYEE_ID ORDER BY RANK()
1) Visualize BAR SELECT EMPLOYEE_ID , SUM(COMMISSION_PCT) FROM employees GROUP BY EMPLOYEE_ID, BIN HIRE_DATE BY HIRE_DATE 2) Visualize LINE SELECT DATE_OF_HIRE , EMPLOYEE_ID , DEPARTMENT_ID FROM employees GROUP BY DATE_OF_HIRE , EMPLOYEE_ID, DEPARTMENT_ID ORDER BY DATE_OF_HIRE , EMPLOYEE_ID, DEPARTMENT_ID  /* Question
Visualize PIE SELECT Date_Address_From , MONTH(Date_Address_From) , SUM(Monthly_Rental) FROM student_address GROUP BY Date_Address_From HAVING MONTH(Date_Address_From) <= 8 AND Monthly_Rental > 0 ORDER BY MONTH(Date_Address_From) ASC
visualize BAR SELECT job_history.JOB_ID, job_history.JOB_ID.DEPARTMENT_ID.DEPARTMENT_ID.DEPARTMENT_ID.COUNT(*) FROM job_history GROUP BY job_history.JOB_ID.DEPARTMENT_ID.DEPARTMENT_ID.DEPARTMENT_ID ORDER BY job_history.JOB_ID.DEPARTMENT_ID.DEPARTMENT_ID.DEPARTMENT_ID.DEPARTMENT_ID DESC
Visualize BAR SELECT Price , Count(Price) FROM products WHERE Price between 60 and 120 GROUP BY Price ORDER BY Price ASC
Visualize PIE SELECT other_details , count(*) FROM teachers GROUP BY other_details HAVING count(*)>2 , pi(other_details) as Slice, count(*) as total , sum(monthly_rental)/sum(count(*) as percentage
Visualize BAR SELECT Memory_in_G , AVG(Memory_in_G) FROM phone GROUP BY Memory_in_G ORDER BY AVG(Memory_in_G) DESC

Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees GROUP BY HIRE_DATE BIN HIRE_DATE BY WEEKDAY
Visualize BAR SELECT product_type_code , COUNT(product_type_code) FROM products GROUP BY product_type_code
Visualize BAR SELECT Competition , COUNT(Competition) FROM match GROUP BY Competition ORDER BY COUNT(Competition) DESC
Visualize BAR SELECT HIRE_DATE , SUM(department_id) FROM employees WHERE (salary BETWEEN 8000 AND 12000 AND commission IS NOT NULL AND department_id!=40) AND (job_history.department_id=job_history.job_id) GROUP BY hire_date BIN hire_date BY WEEKDAY
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE JOB_ID IN (SELECT JOB_ID FROM job_history WHERE HIRE_DATE BETWEEN '2020-01-01' AND '2020-05-01') AND ( SALARY BETWEEN 8000 AND 12000) AND (Commission_PCT IS NOT NULL) GROUP BY HIRE_DATE HAVING MANAGER_ID = 2 AND DEPARTMENT_ID
Visualize BAR SELECT MANAGER_ID , avg(HIRE_DATE) FROM EMPLOYEES WHERE HIRE_DATE < "2002-06-21" GROUP BY MANAGER_ID ORDER BY avg(HIRE_DATE) ASC
Visualize BAR SELECT hire_date , COUNT(*) FROM employees GROUP BY hire_date ORDER BY hire_date ASC

Visualize BAR SELECT FIRST_NAME , ( HIRE_DATE , COUNT(*) ) AS Wk , AVG(EMPLOYEE_ID) AS Avg_EMPL FROM employees GROUP BY FIRST_NAME HAVING FIRST_NAME LIKE "D%" OR FIRST_NAME LIKE "S%";
Visualize BAR SELECT Position , COUNT(Position) FROM match_season GROUP BY Position ORDER BY COUNT(Position) DESC
Visualize BAR SELECT date_address_from , sum(monthly_rental) FROM student_addresses GROUP BY DATE_ADDRESS_FROM ORDER BY DATE_ADDRESS_FROM

Visualize CARD FILTER BY department_id IS NOT NULL and salary BETWEEN 8000 AND 12000 AND commission IS NULL AND MANAGER_ID IS NOT NULL AND job_id = 40
1. Visualize BAR SELECT First_name , HIRE_DATE FROM employees WHERE First_name like "%S%" OR First_name like "%D%" OR First_name like "%D%S%" GROUP BY First_name ORDER BY HIRE_DATE ASC  2. Visualize BAR SELECT First_name , HIRE_DATE FROM employees WHERE First_name like "%S%" OR First_name like "%D%" OR First_name like "%D%S%" GROUP BY First_name ORDER BY HIRE_DATE DESC  3. Visualize BAR SELECT First_name
Visualize BAR SELECT year , sum(round) FROM matches GROUP BY year  ORDER BY year
Visualize BAR SELECT EMPLOYEE_ID , COUNT(*) , AVG(HIRE_DATE) FROM EMPLOYEES GROUP BY hire_date AND EMPLOYEE_ID ORDER BY AVG(HIRE_DATE) ASC LIMIT 1 BIN hire_date BY WEEK
Visualize BAR SELECT Job_History.EMPLOYEE_ID, COUNT(*)  FROM Job_History, Employees, Departments, jobs GROUP BY Job_History.EMPLOYEE_ID, DEPARTMENT_ID  ORDER BY Job_History.EMPLOYEE_ID ASC Visualize BAR SELECT Job_History.EMPLOYEE_ID, AVERAGE(Job_History.EMPLOYEE_ID) FROM Job_History, Employees GROUP BY Job_History.EMPLOYEE_ID, JOB_ID
Visualize BAR SELECT job_id, AVG(salary) FROM employees GROUP BY job_id WHERE salary >= 8000 AND salary <= 12000 AND commission IS NOT NULL AND department_id != 40 ORDER BY job_id DESC
Visualize BAR SELECT Price , MIN(price) FROM Products GROUP BY Price , Name ORDER BY Price DESC
Visualize BAR SELECT TN FROM Customers GROUP BY TN ORDER BY customer_id ASC
Visualize BAR SELECT hire_date , SUM(salary) FROM departments INNER JOIN employees ON departments.DEPARTMENT_ID = employees.DEPARTMENT_ID INNER JOIN job_history ON departments.DEPARTMENT_ID = job_history.DEPARTMENT_ID WHERE employees.SALARY BETWEEN 8000 AND 12000 AND employees.COMMISSION_PCT IS NOT NULL AND employees.DEPARTMENT_ID NOT IN (40) GROUP BY hire_date, weekday ORDER BY SUM(salary) DESC
Visualize BAR SELECT EMPLOYEE_ID , SALARY FROM employees GROUP BY LAST_NAME ORDER BY SALARY
1.  Visualize SCATTER SELECT JOB_ID , AVG(SALARY) FROM employees WHERE job_id > 40 and job_id<12000 GROUP BY JOB_ID ORDER BY AVG(SALARY) DESC 2. Visualize SCATTER SELECT EMPLOYEE_ID , AVG(salary) FROM employees WHERE job_id > 40 and job_id<12000 AND Commission_pct != null GROUP BY EMPLOYEE_ID ORDER BY AVG(SALARY) ASC
Visualize PIE SELECT product_price , AVERAGE(total_amount_purchased) FROM Products WHERE product_type_code IN (0 , 1) GROUP BY product_type_code , AVERAGE(total_amount_purchased)
Visualize BAR SELECT job_history.DEPARTMENT_ID , COUNT(*) FROM job_history GROUP BY job_history.DEPARTMENT_ID ORDER BY COUNT(*) ASC  Visualize BAR SELECT job_history.EMPLOYEE_ID , job_history.DEPARTMENT_ID , count(*) FROM job_history GROUP BY job_history.DEPARTMENT_ID , job_history.EMPLOYEE_ID , COUNT(*)  ORDER BY COUNT(*) DESC  Visualize BAR SELECT job_history.EMPLOYEE_ID , COUNT(*) FROM
Visualize BAR SELECT Year , count(*) FROM matches GROUP BY Year ORDER BY Year DESC
Visualize PIE SELECT product_type_code , product_price FROM Products GROUP BY product_type_code ORDER BY product_price
Visualize LINE SELECT COMMISSION_PCT , SALARY FROM employees WHERE HIRE_DATE < '2002-06-21' GROUP BY COMMISSION_PCT ORDER BY SALARY ASC BIN SALARY BY FIRST_NAME
Visualize BAR SELECT hire_date , SUM(salary) FROM employees  WHERE salary in (8000, 12000) and (department_number!=40) GROUP BY hire_date, BIN hire_date BY WEEKDAY
SELECT tourney_date , SUM(matches.match_num) AS frequency FROM matches GROUP BY tourney_date , match_num
Visualize BAR SELECT Manufacturer , AVG(Price) FROM Products GROUP BY Manufacturer ORDER BY AVG(Price) ASC
Visualize BAR SELECT incident_type_code , COUNT(incident_id) FROM Behavior_Incident GROUP BY incident_type_code , WEEKDAY OF date_incident_start
Visualize LINE SELECT employee , MANAGER_ID , hire_date FROM employees WHERE hire_date >= '2001-01-01' AND hire_date <= '2015-01-01' AND MANAGER_ID IS NOT NULL AND (MANAGER_ID > 1)
Visualize BAR SELECT hire_date , AVG(hire_date) FROM employees WHERE SALARY BETWEEN 8000 AND 12000 AND (COMMISSION_PCT IS NULL OR DEPARTMENT_ID <> 40) GROUP BY hire_date , AVG(hire_date) ORDER BY AVG(hire_date) ASC BIN hire_date BY WEEKDAY
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees GROUP BY HIRE_DATE BIN HIRE_DATE BY YEAR
Visualize BAR SELECT FIRST_NAME , COUNT(HIRE_DATE) FROM employees BIN HIRE_DATE BY WEEKDAY , SALARY , COUNT(HIRE_DATE)
Visualize HISTOGRAM SELECT hire_date FROM employees WHERE SALARY BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NOT NULL AND DEPARTMENT_ID NOT IN [40] GROUP BY hire_date BIN hire_date , COUNT(*) / AVG(*) ASC
Visualize BAR SELECT DEPARTMENT_ID , count(EMPLOYEE_ID) FROM employees GROUP BY DEPARTMENT_ID ORDER BY count(EMPLOYEE_ID) ASC
Visualize BAR SELECT Code , Revenue FROM Manufacturers GROUP BY Revenue ORDER BY Revenue ASC
Visualize BAR SELECT other_details , DATE(date_address_from) , avg(monthly_rental)  FROM Student_Addresses GROUP BY DATE(date_address_from) , other_details
Visualize BAR SELECT manager_id , count(*) FROM employees WHERE HIRE_DATE <= '2002-06-21'  GROUP BY manager_id ,  count(*) ORDER BY count(*) DESC
Visualize BAR SELECT Date_Claim_Made , COUNT(Date_Claim_Made) FROM Claims GROUP BY Date_Claim_Made

Visualize BAR SELECT SUM(DEPARTMENT_ID) , HIRE_DATE FROM employees WHERE HIRE_DATE <= '2002-06-21' GROUP BY HIRE_DATE ORDER BY HIRE_DATE ASC
Visualize BAR SELECT County_name , COUNT(*) FROM county GROUP BY County_name ORDER BY COUNT(*) ASC
Visualize BAR SELECT manager_id , sum(hire_date) FROM employees WHERE HIRE_DATE<='2002-06-21' GROUP BY manager_id ORDER BY manager_id DESC
Visualize JOIN SELECT product_type_code , AVG(product_price) FROM products GROUP BY product_type_code ORDER BY AVG(product_price) DESC
Visualize BAR SELECT EMPLOYEE_ID , AVG(hire_date) FROM employees GROUP BY weekday(hire_date) ORDER BY hire_date DESC
Visualize BAR SELECT Last_Name, first_name , avg(salary) FROM employee WHERE first_name LIKE 'D%' |  OR first_name LIKE 'S%' GROUP BY JOB_ID ORDER BY JOB_ID ASC
Visualize BAR SELECT HIRE_DATE, COUNT(*) FROM employees WHERE HIRE_DATE < '2002-06-21' GROUP BY HIRE_DATE ORDER BY COUNT(*) ASC BIN HIRE_DATE BY MONTH
Visualize BAR SELECT HIRE_DATE , HIRE_DATE FROM employees  WHERE EMPLOYEE_ID >= 152533 ORDER BY HIRE_DATE DESC BIN HIRE_DATE BY WEEKDAY
Visualize BAR SELECT employee_id , salary FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct IS NULL AND department_id = 40 GROUP BY employee_id
Visualize SCATTER SELECT First_name , DEPARTMENT_ID FROM employees
Visualize BAR SELECT Country_Name, COUNT(Country_Name) FROM countries GROUP BY Country_Name ORDER BY COUNT(Country_Name) DESC
Visualize BAR SELECT Manufacturer, SUM(Price) FROM products GROUP BY Manufacturer ORDER BY Manufacturer DESC
Visualize SCATTER SELECT Manager_ID , Department_ID FROM employee GROUP BY Manager_ID, Department_ID
Visualize BAR SELECT FIRST_NAME , AVG(EMPLOYEE_ID) FROM employees WHERE LAST_NAME LIKE "%S%" OR LAST_NAME LIKE "%D%" GROUP BY FIRST_NAME , AVG(EMPLOYEE_ID) , HIRE_DATE  ORDER BY AVG(EMPLOYEE_ID) ASC , HIRE_DATE ASC
Visualize HISTOGRAM SELECT customer_address.customer_id , COUNT(*) FROM customer_address WHERE customer_address.address_id IN ( SELECT address_id FROM customer_addresses WHERE address_id LIKE "TN%") GROUP BY customer_address.customer_id, Customer_Addresses.address_id
Visualize BAR SELECT investor , count(investor) FROM entrepreneur GROUP BY investor ORDER BY investor ASC
Visualize BAR SELECT EMPLOYEE_ID , SALARY , commision_pct FROM employees WHERE salary between 8000 AND 12000 AND job_id is not null AND department_id is not 40 AND MANAGER_ID is not null ORDER BY HIRE_DATE asc
SELECT SUM(amount) AS sum_amount, Payment_Day FROM Payments WHERE payment_method_code = 'VISA' GROUP BY Payment_Day ORDER BY Payment_Day ASC
Visualize BAR SELECT job_id , SUM(manager_id) FROM employees WHERE HIRE_DATE < 2002-06-21 GROUP BY job_id
Visualize BAR SELECT product_type_code , AVG(product_price) FROM products GROUP BY product_type_code ORDER BY AVG(product_price) ASC
Visualize BAR SELECT EMPLOYEE_ID , COUNT(manager_id) FROM employees WHERE HIRE_DATE < '2002-06-21' GROUP BY EMPLOYEE_ID ORDER BY COUNT(manager_id)
Visualize BAR SELECT EMAIL , hire_date , sum(EMPLOYEE_ID) AS count , MANAGER_ID FROM employees GROUP BY hire_date , EMAIL , MANAGER_ID ORDER BY count ASC
Visualize BAR SELECT Payment_Method_Code , COUNT(*) FROM Payments GROUP BY Date_Payment_Made , Payment_Method_Code , DATE(Date_Payment_Made) ORDER BY Date_Payment_Made
Visualize BAR SELECT Position , COUNT(*) FROM match_season GROUP BY Position ORDER BY count(*) DESC
Visualize BAR SELECT MANAGER_ID , SALARY FROM employees WHERE FIRST_NAME LIKE 'M%' ORDER BY SALARY DESC
```
SELECT Carrier , Phone_ID FROM phone GROUP BY Carrier
Visualize BAR SELECT SALARY , MANAGER_ID FROM employees WHERE salary between 8000 and 12000  AND job_history.JOB_ID = job_history.JOB_ID AND job_history.DEPARTMENT_ID NOT IN (40) GROUP BY SALARY, MANAGER_ID
Visualize LINE SELECT Payment_Method_Code , SUM(Payment_Amount) FROM Payments GROUP BY Payment_Method_Code ,DAYOFWEEK
Visualize BAR SELECT EMPLOYEE_ID , HIRE_DATE - SPLIT(HIRE_DATE, 6) AS HIRE_DATE_BIN, ROUND(SUM(EMPLOYEE_ID IS NOT NULL) OVER (PARTITION BY EMPLOYEE_ID BIN BETWEEN 0 AND 1), 2) AS CNT FROM employees  WHERE SALARY BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NOT NULL AND DEPARTMENT_ID
Visualize BAR SELECT Date_Payment_Made , Amount_Payment FROM Payments GROUP BY Date_Payment_Made ORDER BY Date_Payment_Made ASC
Visualize BAR SELECT TOP (1) * , JOB_ID FROM jobs WHERE (MIN_SALARY < 50000) OR (MIN_SALARY >= 50000)  AND (FIRST_NAME LIKE 'D%') OR (FIRST_NAME LIKE 'S%')
Visualize BAR SELECT Manufacturers , Products.Code FROM Products LEFT JOIN Manufacturers ON Products.Manufacturer = Manufacturers.Code GROUP BY Manufacturers.Code
Visualize BAR SELECT Job_ID , SUM(EMPLOYEE_ID) FROM jobs WHERE HIRE_DATE < '2002-06-21' GROUP BY Job_ID ORDER BY SUM(EMPLOYEE_ID) ASC, JOB_TITLE
Visualize LINE SELECT HIRE_DATE , SUM(SALARY) FROM employees  GROUP BY HIRE_DATE ORDER BY HIRE_DATE ASC
Visualize BAR SELECT JOB_ID , COUNT(EMPLOYEE_ID) FROM employees WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' GROUP BY JOB_ID ORDER BY JOB_ID
Visualize BAR SELECT COUNTRY_NAME , COUNT(COUNTRY_ID) FROM countries GROUP BY COUNTRY_NAME ORDER BY COUNTRY_NAME ASC
Visualize BAR SELECT Competition , COUNT(Competition) FROM match GROUP BY Competition ORDER BY COUNT(Competition) DESC
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' GROUP BY JOB_ID ORDER BY AVG(EMPLOYEE_ID) DESC
Visualize BAR SELECT YEAR(date_payment_made) , amount_payment FROM Payments GROUP BY year(date_payment_made)
Visualize BAR SELECT SALARY, COMMISSION_PCT FROM employees WHERE HIRE_DATE < "2002-06-21" GROUP BY SALARY , COMMISSION_PCT
Visualize BAR SELECT productName, Price FROM Products WHERE Price BETWEEN 60 AND 120 GROUP BY productName, Price ORDER BY productName ASC, Price ASC
Visualize PIE SELECT Product_type_code , COUNT(product_id) / COUNT(*) FROM Products
Visualize Scatter SELECT DEPARTMENT_ID , AVG(Salary) FROM departments GROUP BY DEPARTMENT_ID  Visualize Scatter SELECT EMPLOYEE_ID, AVG(Commission_PCT) FROM departments WHERE department_ID = 40 AND SALARY BETWEEN 8000 AND 12000
1.Visualize BAR SELECT Department_ID , COUNT(employee_id) FROM employees WHERE SALARY > 8000 AND salary < 12000 AND commission_pct <> NULL AND department_id <> 40 GROUP BY Department_ID , HIRE_DATE , WEEKDAY ORDER BY HIRE_DATE DESC , WEEKDAY 2.Visualize BAR SELECT JOB_ID , SUM(manager_id) FROM job_history WHERE EMPLOYEE_ID IN (SELECT EMPLOYEE_ID FROM job_history
Visualize BAR SELECT EMPLOYEE_ID , COUNT(*) FROM employees  WHERE SALARY BETWEEN 8000 AND 12000 AND Commission_PCT IS NOT NULL  AND DEPARTMENT_ID != 40  GROUP BY EMPLOYEE_ID HAVING SUM (COUNT(*) ) BETWEEN 0 AND 100 ORDER BY COUNT(*) ASC LIMIT 0 , 10
Visualize DISTINCT EMPLOYEE_ID , COMMISSION_PCT , MANAGER_ID , JOB_ID , DEPARTMENT_ID FROM employees  WHERE  SALARY  IN  (8000, 12000)  AND  commission_pct IS NOT NULL  AND job_id  NOT IN (40)  AND department_id  NOT IN (40)  GROUP BY EMPLOYEE_ID  ORDER BY COUNT(*) ASC
Visualize BAR SELECT JOB_ID , count(*) FROM employees where EMPLOYEE_ID in (SELECT EMPLOYEE_ID FROM job_history where START_DATE < '2002-06-21') GROUP BY JOB_ID
Visualize BAR SELECT HIRE_DATE , count(*) FROM employees WHERE SALARY BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NOT NULL AND DEPARTMENT_ID != 40  GROUP BY HIRE_DATE BIN HIRE_DATE BY WEEKDAY
Visualize BAR SELECT DEPARTMENT_ID , AVG(HIRE_DATE) FROM employees WHERE HIRE_DATE<2002-06-21 GROUP BY DEPARTMENT_ID ORDER BY AVG(HIRE_DATE) DESC
1. Visualize SELECT JOB_ID , average(department_id) FROM jobs WHERE hire_date < 2002-06-21 GROUP BY JOB_ID 2. Visualize bar SELECT JOB_ID , COUNT(*) FROM job_history WHERE department_id != 0 AND JOB_ID > 0 AND employee_id != 0 GROUP BY JOB_ID


Visualize BAR SELECT product_type_code, MIN(product_price) FROM Products GROUP BY product_type_code
Visualize SCATTER SELECT SALARY , COMMISSION_PCT FROM EMPLOYEES GROUP BY SALARY , COMMISSION_PCT
Visualize BAR SELECT year , COUNT(*) FROM matches GROUP BY year ORDER BY year ASC
Create Chart Color ColorPaletteColor( "#5E4994", "#294529", "#263727", "#642035", "#172531", "#1D2630", "#381F28" , "#491C29" , "#3D1F27" , "#5A1631" , "#172432", "#172133" ) Create Chart Marker MarkerPaletteColor( "#5E4994",

Visualize BAR SELECT Payment_Method_Code , AVG(Amount_Payment) FROM Payments GROUP BY Payment_Method_Code ORDER BY Amount_Payment ASC
Visualize BAR SELECT EMPLOYEE_ID , SUM(job_history.DEPARTMENT_ID) , SUM(job_history.DEPARTMENT_ID) FROM departments INNER JOIN job_history ON jobs.JOB_ID = job_history.JOB_ID AND jobs.EMPLOYEE_ID = job_history.EMPLOYEE_ID AND jobs.JOB_ID = job_history.JOB_ID AND jobs.EMPLOYEE_ID = job_history.EMPLOYEE_ID AND jobs.JOB_
Visualize BAR SELECT LAST_NAME , HIRE_DATE , AVG(SALARY) FROM employees WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' GROUP BY HIRE_DATE , LAST_NAME ORDER BY AVG(SALARY) DESC
Visualize PIE SELECT Carrier , COUNT(*) FROM phone GROUP BY Carrier ORDER BY Carrier ASC
1.Visualize BAR SELECT department_id , sum(job_id) FROM jobs WHERE HIRE_DATE <= '2002-06-21' GROUP BY job_id ORDER BY job_id ASC 2.Visualize BAR SELECT department_id , max(job_id) FROM jobs WHERE HIRE_DATE <= '2002-06-21' GROUP BY department_id ORDER BY department_id ASC
Visualize BAR SELECT Event_Details , COUNT(*) FROM Events GROUP BY Event_Details ORDER BY Event_Details
Visualize BAR SELECT student_id , avg(monthly_rental) FROM Student_Addresses GROUP BY student_id ORDER BY avg(monthly_rental) ASC  BIN student_id BY Date_Address_To
Visualize BAR SELECT Carrier , count(*) FROM phone GROUP BY Carrier
Visualize BAR SELECT LAST_NAME, Average(SALARY) FROM employees  WHERE FIRST_NAME  LIKE 'm%' ORDER BY Average(SALARY) DESC BIN LAST_NAME BY WEEKDAY
Visualize BAR SELECT STATE_PROVINCE , COUNT(*) FROM locations GROUP BY STATE_PROVINCE ORDER BY COUNT(*) ASC
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM jobs GROUP BY JOB_ID ORDER BY COUNT(JOB_ID) ASC
Visualize SCATTER SELECT Name , Price FROM Products WHERE Price BETWEEN 60 AND 120 GROUP BY Name,Code
Visualize BAR SELECT Price , COUNT(*) FROM Products WHERE Price BETWEEN 60 AND 120 GROUP BY Manufacturer
Visualize LINE SELECT 0+1 AS Job_ID , count(*) FROM employees WHERE HIRE_DATE BETWEEN '2002-06-21' AND '2003-06-21' GROUP BY Job_ID ORDER BY Job_ID ASC
Visualize BAR SELECT Payment_Method_Code , COUNT(Payment_Method_Code) FROM Payments GROUP BY Payment_Method_Code ORDER BY COUNT(Payment_Method_Code) ASC
Visualize BAR SELECT FIRST_NAME , (AVG(HIRE_DATE) / 3) AS hire_date , COUNT(HIRE_DATE) AS count FROM employees WHERE FIRST_NAME = "D" OR FIRST_NAME = "S" GROUP BY hire_date , FIRST_NAME , COUNT(HIRE_DATE) BIN BY weekday ORDER BY (AVG(HIRE_DATE) / 3)
Visualize BAR SELECT employee_id , COUNT(*) FROM EMPLOYEES WHERE EMPLOYEE_ID BETWEEN 1 AND 100 GROUP BY employee_id ORDER BY job_id DESC
Visualize BAR SELECT payment_method_code , COUNT(payment_method_code) FROM Payments GROUP BY payment_method_code ORDER BY COUNT(payment_method_code) ASC
Visualize  SELECT DEPARTMENT_ID , COUNT(EMPLOYEE_ID) FROM departments WHERE department_id in (40) GROUP BY department_id HAVING COUNT(EMPLOYEE_ID) > 25 ORDER BY COUNT(EMPLOYEE_ID) DESC BAR SELECT EMPLOYEE_ID , HIRE_DATE FROM EMPLOYEES WHERE hire_date >= to_date(to_char(SYSDATE, 'YYYY-MM-DD'), 'YYYY-MM-DD') GROUP BY hire
Visualize BAR SELECT FIRST_NAME , SUM(SALARY) FROM employees WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' GROUP BY FIRST_NAME, HIRE_DATE BIN HIRE_DATE BY DAY_OF_WEEK
Visualize BAR SELECT EMPLOYEE_ID , AVG(SALARY) FROM employees WHERE JOB_ID = ? GROUP BY EMPLOYEE_ID , DEPARTMENT_ID ORDER BY AVG(SALARY) ASC, DEPARTMENT_ID DESC
Visualize BAR SELECT SALARY , COUNT(SALARY) FROM employees WHERE FIRST_NAME LIKE '%m%'
Visualize BAR SELECT HIRE_DATE , SUM(manager_id) FROM employees GROUP BY HIRE_DATE ORDER BY HIRE_DATE ASC
Visualize BAR SELECT FIRST_NAME , AVG(HIRE_DATE) FROM employees GROUP BY FIRST_NAME ORDER BY HIRE_DATE ASC
Visualize BAR SELECT hand , COUNT(hand) FROM players GROUP BY hand ORDER BY hand DESC

Visualize BAR SELECT EMPLOYEE_ID , AVG(MANAGER_ID) FROM jobs GROUP BY EMPLOYEE_ID ORDER BY MANAGER_ID DESC
Visualize BAR SELECT Position , count(*) FROM match_season GROUP BY Position ORDER BY count(*) ASC

Visualize BAR SELECT FIRST_NAME , HIRE_DATE , MIN(EMPLOYEE_ID) , MAX(EMPLOYEE_ID) FROM employees WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' GROUP BY FIRST_NAME , HIRE_DATE , MIN(EMPLOYEE_ID) , MAX(EMPLOYEE_ID) ORDER BY MIN(EMPLOYEE_ID) ASC
Visualize LINE SELECT date_address_from , date_address_to FROM student_addresses GROUP BY date_address_to
FUNC   VQL  SELECT  address_id FROM  Addresses  GROUP BY  address_id  ORDER BY  address_id DESC   FUNC   VQL  SELECT  address_id FROM  Addresses  GROUP BY  address_id  ORDER BY  address_id ASC   FUNC   VQL  SELECT  address_id FROM  Addresses  GROUP BY  address_id  ORDER BY  address_id
1. Visualize BAR SELECT Position , COUNT(Position) FROM player GROUP BY Position ORDER BY Count(*) DESC  2. Visualize BAR SELECT Position , Player , RANK(Player) FROM player GROUP BY Position ORDER BY Count(*) DESC
Visualize PIE SELECT Investor , COUNT(*) FROM entrepreneur GROUP BY Investor
Visualize PIE SELECT Memory_in_G, COUNT(Memory_in_G) FROM phone GROUP BY Memory_in_G ORDER BY Memory_in_G ASC
Visualize BAR SELECT DEPARTMENT_ID , COUNT(*) FROM employees GROUP BY DEPARTMENT_ID ORDER BY DEPARTMENT_ID DESC BIN HIRE_DATE BY YEAR
Visualize BAR SELECT job_id , sum(manager_id) FROM employees WHERE hire_date < '2002-06-21' GROUP BY job_id ORDER BY job_id ASC
Visualize BAR SELECT CAST(EXTRACT(DAY FROM hire_date) AS int) , SUM(EMPLOYEE_ID) FROM employees GROUP BY CAST(EXTRACT(DAY FROM hire_date) AS int) BETWEEN 0 AND 6 ORDER BY CAST(EXTRACT(DAY FROM hire_date) AS int) ASC
Visualize PIE SELECT Code , SUM(Price) FROM Products WHERE Price between 60 and 120 GROUP BY Code
Visualize BAR SELECT First_Name , SALARY FROM employees GROUP BY First_Name ORDER BY Salary ASC
Visualize BAR SELECT product_type_code , COUNT(*) FROM products GROUP BY product_type_code ORDER BY COUNT(*) DESC
Visualize BAR SELECT HIRE_DATE , COUNT(*) FROM employees GROUP BY HIRE_DATE ORDER BY HIRE_DATE ASC BIN HIRE_DATE BY WEEKDAY
Visualize BAR SELECT DEPARTMENT_ID , COUNT(LAST_NAME) FROM employee GROUP BY DEPARTMENT_ID ORDER BY LAST_NAME ASC
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM jobs, employees , job_history WHERE JOB_TITLE LIKE 'D%' or JOB_TITLE LIKE 'S%' GROUP BY JOB_ID ORDER BY JOB_ID
Visualize BAR SELECT incident_type_code , count(*) FROM behavior_incident GROUP BY incident_type_code BIN date_incident_start BY WEEKDAY DESC , count(*)
SELECT Products.Name, Products.Price, Products.Manufacturer FROM Products JOIN Manufacturers ON Manufacturers.Code = Products.Manufacturer GROUP BY Products.Price HISTOGRAM
Visualize BAR SELECT Carrier , COUNT(*) FROM phone GROUP BY Carrier ORDER BY Carrier ASC
1. Select the people who have "D" or "S" in their first name and show their average manager_id using Visualize BAR SELECT job_id , avg(manager_id) FROM employees WHERE FIRST_NAME LIKE ‘D’ OR FIRST_NAME LIKE ‘S’ GROUP BY job_id ORDER BY job_id ASC 2. Compare the total enrollment for each type using a bar chart , display by the x axis in asc please . 3. You are to compare the average enrollment of different universities by its type . Database schema: Table Institution
Visualize LINE SELECT job_history.MANAGER_ID , COUNT(job_history.EMPLOYEE_ID) FROM job_history WHERE salary BETWEEN 8000 AND 12000 AND commission IS NOT NULL AND DEPARTMENT_ID != 40 GROUP BY MANAGER_ID ORDER BY job_history.MANAGER_ID

Visualize BAR SELECT DISTINCT(FIRST_NAME) ,  SUM(EMPLOYEE_ID) FROM employees GROUP BY DISTINCT(FIRST_NAME) BIN hire_date BY day(hire_date)
Visualize  SCATTER SELECT SALARY, COMMISSION_PCT FROM EMPLOYEES GROUP BY SALARY, COMMISSION_PCT ORDER BY SALARY DESC, COMMISSION_PCT DESC
Visualize BAR SELECT EMPLOYEE_ID, AVERAGE(JOB_ID) FROM employees GROUP BY JOB_ID
Visualize BAR SELECT employee_id , COUNT(hire_date) FROM employees GROUP BY employee_id, MANAGER_ID , DEPARTMENT_ID HAVING salary between 8000 AND 12000 HAVING commission is not null AND department_id not = 40 GROUP BY employee_id , MANAGER_ID , DEPARTMENT_ID ORDER BY COUNT(hire_date) ASC
Visualize BAR SELECT Hire_Date ,      Sum(Manager_ID) FROM employees      WHERE Hire_Date >= 2002-06-21 GROUP BY Hire_Date     ORDER BY Hire_Date ASC
SELECT JOB_ID , AVG(MANAGER_ID) FROM jobs WHERE HIRE_DATE < "2002-06-21" GROUP BY JOB_ID ORDER BY AVG(MANAGER_ID)
Visualize BAR SELECT monthly_rental , AVG(monthly_rental) FROM student_addresses GROUP BY monthly_rental BIN BETWEEN date_address_from , date_address_to , GROUP BY time ORDER BY AVG(monthly_rental) ASC
Visualize BAR SELECT other_details , AVG(monthly_rental) FROM Student_Addresses GROUP BY other_details
Visualize BAR SELECT YearPlayed , Count(YearPlayed) FROM player GROUP BY YearPlayed ORDER BY YearPlayed DESC
Visualize BAR SELECT EMPLOYEE_ID , SALARY FROM employee  WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' GROUP BY EMPLOYEE_ID
Visualize BAR SELECT Year , COUNT(*) FROM matches GROUP BY Year ORDER BY COUNT(*)
Visualize LINE SELECT Job_ID , AVG(Commission_PCT) FROM employees GROUP BY hire_date ORDER BY hire_date DESC
Visualize BAR SELECT Last_Name , COUNT(*) FROM employees WHERE LAST_NAME IS NOT NULL GROUP BY LAST_NAME ORDER BY COUNT(*) ASC
Visualize Line SELECT HIRE_DATE , MAX(MANAGER_ID) FROM employees  WHERE FIRST_NAME REGEXP "^D|S" GROUP BY HIRE_DATE ORDER BY HIRE_DATE ASC
SELECT Name , mean(Memory_in_G) FROM phone GROUP BY Name ORDER BY mean(Memory_in_G) DESC
Visualize BAR SELECT Manufacturer , SUM(Revenue) FROM Products GROUP BY Manufacturer ORDER BY Revenue ASC
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) , AVG(MANAGER_ID) FROM employees WHERE COMMISSION_PCT IS NOT NULL AND (DEPARTMENT_ID <> 40) AND salary BETWEEN 8000 AND 12000 GROUP BY JOB_ID

Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE HIRE_DATE < '2002-06-21' GROUP BY JOB_ID  ORDER BY AVG(SALARY) ASC
Visualize BAR SELECT Code , SUM(Price) FROM Products GROUP BY Manufacturer ORDER BY SUM(Price) DESC
Visualize BAR SELECT EMPLOYEE_ID , SUM(salary) , count(*) FROM employees GROUP BY EMPLOYEE_ID HAVING (HIRE_DATE BETWEEN 1990-01-01 AND 1990-12-31) AND (salary BETWEEN 8000 AND 12000) AND (COMMISSION_PCT IS NOT NULL) AND (DEPARTMENT_ID != 40) GROUP BY EMPLOYEE_ID ORDER BY count(*) DESC
SELECT EMPLOYEE_ID , COUNT(EMPLOYEE_ID) AS COUNT FROM employees GROUP BY EMPLOYEE_ID  HAVING COUNT(EMPLOYEE_ID) > 0  AND (COMMISSION_PCT IS NULL OR COMMISSION_PCT <= 0.0)
Visualize BAR SELECT Price , COUNT(Price) FROM Products BIN Price BY (count(Price) , Manufacturer, Name)
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employee GROUP BY HIRE_DATE ORDER BY HIRE_DATE ASC
Visualize BAR SELECT payment_method_code , count(*) FROM customers GROUP BY payment_method_code ORDER BY count(*) DESC
Visualize BAR SELECT date_address_from , COUNT(date_address_from) FROM Student_Addresses GROUP BY date_address_from ORDER BY date_address_from ASC
Visualize BAR SELECT LAST_NAME , COUNT(EMPLOYEE_ID) FROM employees GROUP BY LAST_NAME
Visualize BAR SELECT hire_date , AVG(manager_id) FROM employees  WHERE HIRE_DATE < '2002-06-21'  ORDER BY AVG(manager_id) ASC BIN hire_date BY WEEKDAY
Visualize BAR SELECT hire_date , count(*) FROM employees WHERE hire_date > "2002-06-21" GROUP BY hire_date BIN hire_date BY WEEK(hire_date) ORDER BY WEEK(hire_date) DESC
Visualize LINE SELECT JOB_ID , SUM(salary) FROM employees  GROUP BY JOB_ID  HAVING ( 8000 <= salary AND salary <= 12000  AND commission_pct IS NULL  AND (department_id <> 40 OR department_id IS NULL) )  ORDER BY JOB_ID ASC
Visualize BAR SELECT Event_Details , COUNT(Event_Details) FROM Events GROUP BY Event_Details ORDER BY COUNT(Event_Details) ASC
Visualize BAR SELECT job_id , COUNT(job_id) , SUM(manager_id) FROM jobs GROUP BY job_id
Visualize BAR SELECT product_price , AVG(product_price) FROM Products GROUP BY product_type_code
Visualize SCATTER SELECT Name, Price FROM Products GROUP BY Manufacturer ORDER BY Price DESC
Visualize PIE SELECT FIRST_NAME , COMMISSION_PCT FROM employees WHERE EMPLOYEE_ID IN (SELECT EMPLOYEE_ID FROM job_history WHERE MANAGER_ID IN (SELECT MANAGER_ID FROM departments WHERE DEPARTMENT_ID=2) AND DEPARTMENT_ID=2) AND FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' ORDER BY JOB_ID ASC, COMMISSION_PCT ASC
Visualize SCALE SELECT  EMPLOYEE_ID , SALARY FROM employees  WHERE hire_date <= '2002-06-21'  AND JOB_ID = '30000'  AND MANAGER_ID = '1'  AND department_id IN (1,2,3,4,5,6,7,8,9,10,11,12,13) GROUP BY EMPLOYEE_ID , DEPARTMENT_ID  SORT BY SALARY  /* Question
SELECT employee_id , manager_id FROM employees  WHERE salary between 8000 AND 12000 AND commission IS NULL OR department_id != 40  GROUP BY employee_id , manager_id  HAVING manager_id = employee_id
1. Visualize BAR SELECT count(*) , date_address_from FROM Student_Addresses GROUP BY other_details , bin date_address_from by time 2. Visualize BAR SELECT count(*) , date_address_from FROM Student_Addresses GROUP BY other_details
Visualize BAR SELECT JOB_ID , MANAGER_ID , AVG(SALARY) FROM employees WHERE FIRST_NAME LIKE 'D%') GROUP BY JOB_ID
Visualize BAR SELECT DEPARTMENT_ID, count(*) FROM employees GROUP BY first_name order by count(*)
Visualize BAR SELECT  SUM(salary) , count(*) FROM employees where job_id IS NULL and salary between 8000 and 12000 and commission_pct is not null and department_number <> 40 GROUP BY hire_date BIN hire_date BY WEEKDAY
Visualize LINE SELECT EMAIL , SALARY FROM employees WHERE FIRST_NAME <> 'M' AND JOB_ID = 11 GROUP BY EMAIL
Visualize BAR SELECT department_id , avg(hire_date) FROM employees GROUP BY department_id ORDER BY avg(hire_date) DESC , weekday
Visualize LINE SELECT address_id , Count(address_id) FROM Students, Addresses  GROUP BY address_id, other_details IN Students IN Detention , Students_in_Detention Visualize LINE SELECT student_id , Count(student_id) FROM Students , Addresses  GROUP BY student_id, other_details IN Students IN Detention , Students_in_Detention Visualize LINE SELECT teacher_id , Count(teacher_id) FROM Teachers , Addresses  GROUP BY teacher_id, other_details IN Students
Visualize BAR SELECT other_details , count(*) FROM teachers GROUP BY other_details, bin date_address_to BY weekday
Visualize BAR SELECT FIRST_NAME , COUNT(EMPLOYEE_ID) , hire_date  FROM employees WHERE FIRST_NAME LIKE 'D%' or FIRST_NAME LIKE 'S%' GROUP BY FIRST_NAME , hire_date  BIN hire_date  BY Day() ORDER BY  Day() ASC
Visualize BAR SELECT hire_date , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission IS NOT NULL AND department_id != 40 AND manager_id IS NOT NULL AND job_history.job_id IS NULL GROUP BY hire_date BIN hire_date BY YEAR

Visualize BAR SELECT monthly_rental , AVG(monthly_rental) FROM Student_Addresses GROUP BY monthly_rental
Visualize SCATTER SELECT EMPLOYEE_ID , MANAGER_ID FROM employees         WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%'         AND MANAGER_ID IN (             SELECT MANAGER_ID FROM departments WHERE DEPARTMENT_NAME = 'Accounting')         AND DEPARTMENT_ID IN (             SELECT DEPARTMENT_ID FROM departments WHERE DEPARTMENT_NAME = 'Sales')         AND DATE_OF_BIRTH BETWEEN 195
Visualize BAR SELECT Job_ID, COUNT(Job_ID) , SUM(Department_ID) FROM employees GROUP BY JOB_ID ORDER BY COUNT(Job_ID) ASC , SUM(Department_ID) ASC
1.Visualize BAR SELECT Month, count(*) FROM student_addresses GROUP BY Month 2.Visualize BAR SELECT Weekday , count(*) FROM students_addresses GROUP BY Weekday

Visualize BAR SELECT Behavior_Incident , DATE_ADDRESS_FROM , DATE_ADDRESS_TO FROM STUDENT_ADDRESSES GROUP BY Other_Details  BIN DATE_ADDRESS_FROM BY WEEKDAY
Visualize BAR SELECT job_id , AVERAGE(department_id) FROM employees WHERE HIRE_DATE < '2002-06-21' GROUP BY job_id ORDER BY AVERAGE(department_id) ASC
Visualize LINE SELECT monthly_rental , count(*) FROM Student_Addresses GROUP BY date_address_to
Visualize PIE SELECT Price , COUNT(Price) FROM Products WHERE Price >= 60 AND Price <= 120 GROUP BY Price ,  Code ORDER BY COUNT(Price) DESC
Visualize FULL JOIN employees , departments , job_history ON employees.department_id = departments.department_id AND departments.manager_id = employees.manager_id AND job_history.employee_id = employees.employee_id AND job_history.job_id = employees.job_id AND job_history.department_id = departments.department_id GROUP BY employees.employee_id, departments.department_name, job_history.department_id, weekday(hire_date) HAVING employees.department_id
Visualize BAR SELECT employee_id , count(*) FROM job_history WHERE job_id in (select job_id from jobs where (min_salary < 8000 and max_salary > 12000) AND department_id != 40 group by employee_id) group by attribute job_id ORDER BY count(*) ASC
Visualize BAR SELECT Code , Revenue FROM Manufacturers ORDER BY Revenue ASC, Headquarter ASC
Visualize BAR SELECT JOB_ID , count(*) FROM employees GROUP BY JOB_ID ,JOB_ID
Visualize Pie SELECT 0.6*Price FROM Products  , 0.2*Name , 0.2*Code

Visualize BAR SELECT manufacturer , Price FROM Products GROUP BY manufacturer
Visualize BAR SELECT JOB_HISTORY.END_DATE , AVERAGE(EMPLOYEE_ID) FROM JOB_HISTORY,EMPLOYEES WHERE ( ( SALARY BETWEEN 8000 AND 12000) AND ( COMMISSION_PCT IS NULL) AND (DEPARTMENT_ID != 40) ) GROUP BY JOB_HISTORY.END_DATE , AVG(EMPLOYEE_ID) HAVING (EMPLOYEE_ID NOT BET
Visualize BAR SELECT first_name , SUM(salary) FROM employees WHERE first_name LIKE 'D%' OR first_name LIKE 'S%' BIN hire_date by week ORDER BY SUM(salary) DESC
Visualize BAR SELECT hand , COUNT(*) FROM players GROUP BY hand ORDER BY COUNT(*) DESC
Visualize BAR SELECT Manufacturer, sum(Price) FROM Products GROUP BY Manufacturer
Visualize BAR SELECT HIRE_DATE , SUM(TIME) FROM employees WHERE HIRE_DATE<'2002-06-21' GROUP BY HIRE_DATE ORDER BY SUM(TIME) DESC
Visualize BAR SELECT Years_Played , COUNT(Years_Played) FROM player GROUP BY Years_Played ORDER BY Years_Played ASC
Visualize BAR SELECT Job_ID , JOB_ID,  Sum(CASE WHEN MANAGER_ID IS NULL AND DEPARTMENT_ID = 40 THEN SALARY END) FROM employees GROUP BY Job_ID ASC ORDER BY COUNT(DISTINCT Job_ID) DESC
Visualize BAR SELECT STATE_PROVINCE , COUNT(STATE_PROVINCE) FROM locations GROUP BY STATE_PROVINCE ORDER BY COUNT(STATE_PROVINCE) DESC
Visualize BAR SELECT (FIRST_NAME LIKE 'D' OR FIRST_NAME LIKE 'S') AND JOB_ID , SUM(SALARY) FROM employees GROUP BY job_id ORDER BY total DESC

Visualize BAR SELECT Manufacturer , count(*) FROM Products GROUP BY Manufacturer ORDER BY count(*) DESC

Visualize BAR SELECT Carrier, COUNT(Phone_ID) FROM phone GROUP BY Carrier
Visualize BAR SELECT FIRST_NAME ,AVG(hire_date) FROM employees GROUP BY FIRST_NAME
Visualize BAR SELECT HIRE_DATE , COUNT(*) FROM employees WHERE FIRST_NAME NOT LIKE 'M%' GROUP BY HIRE_DATE ORDER BY COUNT(*) ASC
Visualize SCATTER SELECT Price , Manufacturer FROM Products WHERE Price BETWEEN 60 AND 120 GROUP BY Price
1.Visualize BAR SELECT A, SUM(A) FROM (SELECT A, COUNT(*) FROM (employees, job_history) WHERE [START_DATE < A] AND [END_DATE > A] AND [HIRE_DATE < A]) GROUP BY DEPARTMENT_ID, (A), WEEKDAY, TO_DAYS(A) ORDER BY SUM(A) DESC;  2. Visualize BAR SELECT A, SUM(A) FROM (SELECT A, COUNT(*) FROM (employees, job_history) WHERE [START_DATE > A] AND [
Visualize BAR SELECT Founder , sum(Revenue) FROM Manufacturers GROUP BY Founder
Visualize BAR SELECT DATE_TRUNC('week', hire_date) , hire_date FROM employees WHERE HIRE_DATE < '2002-06-21' GROUP BY DATE_TRUNC('week', hire_date) ORDER BY DATE_TRUNC('week', hire_date)
Visualize BAR SELECT JOB_ID , SUM(department_id) FROM jobs GROUP BY JOB_ID ORDER BY JOB_ID ASC
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE HIRE_DATE < '2002-06-21' GROUP BY HIRE_DATE BIN HIRE_DATE BY WEEKDAY ORDER BY AVG(MANAGER_ID)
Visualize BAR SELECT Payment_Method_Code , COUNT(Payment_Method_Code) FROM Payments GROUP BY Payment_Method_Code ORDER BY COUNT(Payment_Method_Code) ASC

Visualize BAR SELECT job_id , HIRE_DATE , AVG(Department_ID) FROM employees GROUP BY job_id , HIRE_DATE , AVG(Department_ID) BIN HIRE_DATE BY WEEKDAY ORDER BY AVG(Department_ID) ASC
Visualize BAR SELECT Hire_date , Count(Hire_date) FROM employees JOIN job_history ON employees.EMPLOYEE_ID = job_history.EMPLOYEE_ID WHERE HIRE_DATE >= '2017-11-10' AND HIRE_DATE <= '2018-03-22' AND SALARY BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NOT NULL AND MANAGER_ID = 33 GROUP BY H
Visualize BAR SELECT EMPLOYEE_ID , AVG(SALARY) FROM employees WHERE HIRE_DATE < '2002-06-21' GROUP BY JOB_ID
Visualize BAR SELECT product_type_code , min(product_price) FROM Products GROUP BY product_type_code
Visualize HISTOGRAM SELECT Investor , COUNT(Investor) FROM entrepreneur GROUP BY Investor ORDER BY COUNT(Investor) ASC
Visualize BAR SELECT EMPLOYEE_ID , count(EMPLOYEE_ID) FROM employees, job_history WHERE HIRE_DATE >= '01-01-2009' AND HIRE_DATE < '01-01-2010' AND commission_pct IS NOT NULL AND department_id <> 40 GROUP BY EMPLOYEE_ID BIN HIRE_DATE BY WEEK
Visualize BAR SELECT Manufacturers.Revenue, COUNT(Manufacturers.Code) FROM Products INNER JOIN Manufacturers ON Manufacturers.Code=Products.Manufacturer GROUP BY Manufacturers.Code , Manufacturers.Revenue ORDER BY Manufacturers.Revenue DESC

Visualize PIE SELECT position , count(*) FROM match_season GROUP BY Position
Visualize BAR SELECT HIRE_DATE , count(*) FROM employees GROUP BY HIRE_DATE
Visualize bar SELECT HIRE_DATE, SUM(salary) FROM employees WHERE FIRST_NAME LIKE ('D','S') GROUP BY HIRE_DATE, HIRE_DATE BY weekday order by sum(salary) DESC
Visualize BAR SELECT name , revenue FROM Manufacturers GROUP BY name ORDER BY revenue DESC
Visualize BAR SELECT count(*) hire_date from employees where salary between 8000 and 12000 and commission is null and department_id != 40 , 1 group by hire_date order by 1 BAR SELECT EMPLOYEE_ID hire_date from employees where salary between 8000 and 12000 and commission is null and department_id != 40 , 1 group by employee_id order by 1 BAR SELECT EMPLOYEE_ID
Visualize BAR SELECT MANAGER_ID , sum(job_id) FROM employees , job_history WHERE MANAGER_ID LIKE 'D%' OR MANAGER_ID LIKE 'S%' GROUP BY JOB_ID ORDER BY sum(job_id) DESC
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM EMPLOYEE WHERE EMPLOYEE_ID NOT IN (SELECT EMPLOYEE_ID FROM JOB_HISTORY WHERE START_DATE < '2002-06-21') GROUP BY JOB_ID ORDER BY EMPLOYEE_ID ASCENDING
Visualize BAR SELECT job_id , COUNT(*) FROM job_history WHERE MIN_SALARY BETWEEN 8000 AND 12000 AND job_id NOT IN (SELECT JOB_ID FROM job_history WHERE DEPARTMENT_ID = 40) GROUP BY job_id ORDER BY COUNT(*) DESC BIN job_id BY WEEKDAY
Visualize LINE SELECT MANAGER_ID , COUNT(EMPLOYEE_ID) FROM employees WHERE EMAIL LIKE 'john@xyz' GROUP BY MANAGER_ID BIN HIRE_DATE BY YEAR Visualize LINE SELECT HIRE_DATE, MANAGER_ID FROM employees GROUP BY MANAGER_ID BIN HIRE_DATE BY YEAR Visualize LINE SELECT MANAGER_ID , COUNT(EMPLOYEE_ID) FROM employees WHERE EMAIL LIKE 'john@xyz'
Visualize BAR SELECT DEPARTMENT_ID, MIN(EMPLOYEE_ID) AS employee_id FROM departments JOIN jobs ON departments.DEPARTMENT_ID = jobs.DEPARTMENT_ID AND jobs.MIN_SALARY BETWEEN 8000 AND 12000 AND jobs.JOB_ID IN (SELECT JOB_ID FROM job_history) AND departments.MANAGER_ID != 40 GROUP BY DEPARTMENT_ID ASC
Visualize BAR SELECT Name , MAX(Revenue) FROM Manufacturers GROUP BY Name ORDER BY Revenue ASC
Database schema: Table Employees, columns = [*,EmpID, FirstName, LastName, Email, PhoneNumber, HireDate, JobId, Salary, CommissionPct, ManagerId, DepartmentId] Table Jobs, columns = [*,JobId, JobTitle, MinSalary, MaxSalary] Table JobHistory, columns = [*,EmployeeId, StartDate, EndDate, JobId, DepartmentId] Answer: Visualize BAR SELECT JobId, Salary FROM Jobs GROUP BY JobId
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM departments, jobs, employees WHERE MIN_SALARY > 8000 and MAX_SALARY < 12000 and department_id not in (40) and employees.job_id in (jobs.job_id) and employees.job_history.job_id is not null group by job_id ORDER BY SUM(EMPLOYEE_ID) DESC BIN JOB_ID BY WEEKDAY
Visualize SCATTER SELECT Name , Price FROM products GROUP BY Manufacturer
Visualize BAR SELECT manufacturer , COUNT(*) FROM Products GROUP BY manufacturer ORDER BY COUNT(*)
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees GROUP BY HIRE_DATE  ORDER BY SUM(EMPLOYEE_ID) ASC
Visualize BAR SELECT HIRE_DATE , AVERAGE (department_id) FROM employees GROUP BY HIRE_DATE BIN HIRE_DATE BY WEEKDAY
Visualize BAR SELECT Price , Count(*) FROM Products WHERE Price <= 200 GROUP BY Price
Visualize BAR SELECT Name , Price , Manufacturer FROM products WHERE Price BETWEEN 60 AND 120 GROUP BY Manufacturer ORDER BY Price ASC
Visualize LINE SELECT HIRE_DATE , SALARY FROM EMPLOYEES WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' GROUP BY HIRE_DATE ORDER BY SALARY ASC
Visualize BAR SELECT incident_type_code , COUNT(incident_type_code) FROM Behavior_Incident GROUP BY incident_type_code ORDER BY incident_type_code DESC

Visualize LINE SELECT Last_Name, HIRE_DATE , SALARY FROM employees WHERE Hire_Date BETWEEN '2002-06-21' AND '2019-04-03' GROUP BY Last_Name HAVING COUNT(*) > 0

Visualize PIE SELECT other_details , COUNT(other_details) FROM [Teachers] , [Student_Addresses] , [Assessment_Notes] , [Behavior_Incident] , [Detention] GROUP BY other_details ORDER BY other_details ASC
Visualize BAR SELECT JOB_ID , COUNT(EMPLOYEE_ID) FROM employees GROUP BY JOB_ID ORDER BY JOB_ID DESC  Visualize BAR SELECT job_id , (avg(EMPLOYEE_ID)) FROM jobs JOIN job_history ON jobs.JOB_ID = job_history.JOB_ID GROUP BY job_id ORDER BY job_id DESC
Visualize HISTOGRAM SELECT DEPARTMENT_NAME, count(*) FROM employees GROUP BY DEPARTMENT_NAME, MANAGER_ID  ORDER BY manager_id DESC
Visualize LINE SELECT DEPARTMENT_ID , COUNT(DEPARTMENT_ID) FROM EMPLOYEES GROUP BY DEPARTMENT_ID HAVING SALARY >= 8000 OR commission_pct IS NOT NULL OR department_id != 40  ORDER BY DEPARTMENT_ID ASC BIN DEPARTMENT_ID BY YEAR
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE COMMISSION_PCT IS NULL AND DEPARTMENT_ID = 40  AND SALARY >= 8000 AND SALARY <= 12000 GROUP BY JOB_ID ORDER BY SUM(SALARY) DESC
Visualize SCATTER SELECT tours , ranking_points FROM rankings GROUP BY ranking_date
Visualize BAR SELECT product_type_code , MIN(product_price) FROM products GROUP BY product_type_code ORDER BY MIN(product_price) ASC
Visualize BAR SELECT job_id , SUM(salary) , job_id  FROM jobs , employees , job_history GROUP BY job_id,employee_id BIN job_id BY JOB_ID ORDER BY COUNT(job_id)
Visualize LINE SELECT Counties_Represented , sum(Delegate) FROM election GROUP BY Counties_Represented
Visualize BAR SELECT job_id , SUM(manager_id) FROM employees  WHERE HIRE_DATE < '2002-06-21' GROUP BY job_id ORDER BY SUM(manager_id) DESC
Visualize BAR SELECT Payment_Method_Code , AVG(Amount_Payment) FROM Payments GROUP BY Payment_Method_Code
Visualize LINE CHART Payment_Method_Code, AVG(Amount_Payment) FROM Payments GROUP BY Payment_Method_Code ORDER BY Date_Payment_Made
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE MANAGER_ID IN (989,1008,1021) AND SALARY IN (8000,12000) AND (COMMISSION_PCT IS NOT NULL OR DEPARTMENT_ID != 40) AND SALARY IN (8000,12000) AND COMMISSION_PCT IS NOT NULL AND (DEPARTMENT_ID != 40) GROUP BY HIRE
Visualize BAR SELECT date_of_notes , COUNT(*) FROM Assessment_notes GROUP BY date_of_notes ORDER BY COUNT(*)
Visualize BAR SELECT Draft_Pick_Number , sum(Draft_Class) FROM match_season GROUP BY Draft_Pick_Number ORDER BY Draft_Pick_Number ASC
Visualize TABLE WITH NO COLUMN
Visualize BAR SELECT Investor , COUNT(Entrepreneur_ID) FROM entrepreneur GROUP BY Investor ORDER BY COUNT(Entrepreneur_ID) ASC
Visualize BAR SELECT Phone_ID , COUNT(Phone_ID) FROM phone GROUP BY Carrier ,  Price ORDER BY Price DESC
1) Select COUNT(DISTINCT job_id) FROM jobs WHERE HIRE_DATE < '2002-06-21' 2) SELECT DISTINCT Job_id FROM jobs WHERE HIRE_DATE < '2002-06-21' GROUP BY job_id ORDER BY COUNT(DISTINCT job_id) ASC 3) SELECT SUM(salary) FROM jobs WHERE HIRE_DATE < '2002-06-21' GROUP BY job_id ORDER BY Count(DISTINCT job_id)
Visualize SCATTER SELECT first_name , AVG(employee_id)  FROM employees WHERE first_name like 'd%' OR first_name LIKE 's%' GROUP BY first_name by weekday.
Visualize SCA MANAGER_ID , SALARY FROM employees WHERE HIRE_DATE<20020621 GROUP BY SALARY ASC
Visualize BAR SELECT HIRE_DATE, count(*) FROM employees WHERE HIRE_DATE < '2002-06-21' GROUP BY HIRE_DATE ORDER BY count(*) DESC

Visualize BAR SELECT order_id , count(*) FROM Customer_Orders WHERE order_status_code = 'C' GROUP BY order_id , order_date  ORDER BY order_date DESC
Visualize CIRCLE SELECT Price , COUNT(*) FROM Products WHERE Price BETWEEN 60 AND 120  GROUP BY Price HAVING COUNT(*) > 0
Visualize BAR SELECT Date_Claim_Made , count(*) FROM Claims GROUP BY Date_Claim_Made ORDER BY count(*) ASC
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees BIN HIRE_DATE BY WEEKDAY , Y-MIN : Y-MAX

Visualize BAR SELECT hire_date , DEPARTMENT_ID , MANAGER_ID , COUNT(hire_date) FROM employees WHERE SALARY BETWEEN 8000 AND 12000 AND commission_pct IS NOT NULL AND department_id != 40 GROUP BY hire_date , DEPARTMENT_ID , MANAGER_ID ORDER BY COUNT(hire_date) DESC
/* The output of this query should be a line chart with two series  - Hire_Date series should have dates in x axis  - Commission_Pct series should have the corresponding commission percentage  - The legend should be Grouped (by employee name)  - Each line should be sorted by the Hire_Date  */ Query to show these: /* View FirstChart */ /* 1. Select all employees who have the letters D or S in their first name */ /* 2. Select a date range based on the max_hire_date of the employees who have
Visualize BAR SELECT Carrier , COUNT(Carrier) FROM phone GROUP BY Carrier ORDER BY Carrier DESC

Visualize BAR SELECT EMPLOYEE_ID , EMPLOYEE_ID from employees where hire_date <= '2002-06-21' GROUP BY EMPLOYEE_ID ORDER BY hire_date ASC,SALARY ASC
Visualize BAR SELECT First_name , AVG(SALARY) FROM employees WHERE First_name  LIKE '%m%' GROUP BY First_name ORDER BY AVG(SALARY) ASC
Visualize BAR SELECT other_details , AVG(monthly_rental) FROM Student_Addresses GROUP BY other_details
Visualize BAR SELECT product_type_code , avg(product_price) FROM Products GROUP BY product_type_code ORDER BY product_type_code ASC
Visualize BAR SELECT JOB_ID , SUM(Department_ID) FROM jobs WHERE HIRE_DATE<2002-06-21 GROUP BY JOB_ID ORDER BY JOB_ID DESC
Visualize BAR SELECT student_id , count(*) FROM Student_Addresses GROUP BY student_id, other_details
Visualize SCATTER SELECT Price FROM Products WHERE Price BETWEEN 60 AND 120 GROUP BY Name
Visualize BAR SELECT Carrier , COUNT(Phone_ID) FROM phone GROUP BY Carrier
Visualize BAR SELECT County_name , Population FROM county GROUP BY County_name ORDER BY Population DESC
Visualize BAR SELECT FIRST_NAME, HIRE_DATE, AVG(SALARY) FROM employees GROUP BY FIRST_NAME BIN HIRE_DATE BY WEEKDAY ORDER BY HIRE_DATE ASC
Visualize BAR SELECT Carrier , count(*) FROM phone GROUP BY Carrier
Visualize SCATTER SELECT EMPLOYEE_ID , DEPARTMENT_ID FROM employees WHERE SALARY BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NOT NULL AND DEPARTMENT_ID != 40 AND SALARY NOT NULL GROUP BY EMPLOYEE_ID, DEPARTMENT_ID ORDER BY DEPARTMENT_ID
SELECT EMPLOYEE_ID , HIRE_DATE , COUNT(*) FROM employees GROUP BY EMPLOYEE_ID HAVING HIRE_DATE < '2002-06-21'  AND EMPLOYEE_ID <> 0  AND (HIRE_DATE IS NULL OR HIRE_DATE IS NOT NULL) AND HIRE_DATE != null
Visualize LINE SELECT EMPLOYEE_ID , SUM(SALARY), COMMISSION_PCT , MANAGER_ID , DEPARTMENT_ID , JOB_ID FROM employees WHERE SALARY BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NOT NULL AND DEPARTMENT_ID != 40 GROUP BY DEPARTMENT_ID ORDER BY SALARY ASC
Visualize BAR SELECT FIRST_NAME , commission_pct FROM employee WHERE first_name LIKE "D" OR first_name LIKE "S" GROUP BY FIRST_NAME ORDER BY commission_pct ASC
Visualize BAR SELECT Committee , COUNT(Delegate) FROM election GROUP BY Committee ORDER BY COUNT(Delegate) ASC LIST Committee BY Committee
Visualize BAR SELECT hand , count(*) FROM players GROUP BY hand ORDER BY hand ASC
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees GROUP BY HIRE_DATE ORDER BY HIRE_DATE ASC
Visualize BAR SELECT County_name , count(county_name) FROM county GROUP BY County_name ORDER BY County_name DESC
Visualize BAR SELECT job_id, sum(salary) FROM employees WHERE hire_date < 2002-06-21 GROUP BY job_id ORDER BY job_id ASC
Visualize SCATTER SELECT Length , Height FROM roller_coaster GROUP BY Length , Height
Visualize SCATTER EMPLOYEE_ID , SALARY FROM employees WHERE salary >= 8000 AND salary < 12000 AND (COMMISSION_PCT IS NOT NULL or DEPARTMENT_ID <> 40)
Visualize BAR SELECT hire_date , salary FROM employees  WHERE  ( salary IN (8000,12000) AND commission_pct IS NOT NULL AND department_ID NOT = 40) BIN hire_date BY WEEKDAY ORDER BY SUM(salary) ASC
Visualize BAR SELECT CITY , COUNT(CITY) FROM locations GROUP BY CITY  ORDER BY COUNT(CITY) DESC
Visualize SCATTER SELECT employee_id , count(*) FROM employees  WHERE hire_date < '2002-06-21' GROUP BY employee_id
Visualize BAR SELECT hire_date , SUM(hire_date) FROM employees GROUP BY hire_date HAVING hire_date <= '2002-06-21' ORDER BY SUM(hire_date) DESC
Visualize BAR SELECT Carrier, SUM(Memory_in_G) FROM phone GROUP BY Carrier ORDER BY SUM(Memory_in_G) ASC
Visualize BAR SELECT FIRST_NAME , SUM(EMPLOYEE_ID) FROM employees GROUP BY FIRST_NAME HAVING FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' ORDER BY HIRE_DATE DESC
Visualize BAR SELECT FIRST_NAME , COUNT(*) FROM employees GROUP BY FIRST_NAME HAVING FIRST_NAME LIKE 'D' OR FIRST_NAME LIKE 'S' ORDER BY FIRST_NAME ASC
Visualize BAR SELECT LAST_NAME , SUM(EMPLOYEE_ID) FROM employees  WHERE (FIRST_NAME LIKE 'D' OR FIRST_NAME LIKE 'S') AND HIRE_DATE BETWEEN '01/01/1900' AND '01/01/2018' GROUP BY LAST_NAME BIN HIRE_DATE BY YEAR
Visualize LINE SELECT SALARY , COUNT(SALARY) FROM employees WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' AND HIRE_DATE < '2006-01-01' GROUP BY HIRE_DATE ASC ORDER BY SALARY
Visualize BAR SELECT Price , Count(Manufacturer) FROM products WHERE Price BETWEEN 60 AND 120 AND Manufacturer IN (Select Code from Manufacturers) GROUP BY Manufacturer ORDER BY Count(Manufacturer) ASC
Visualize BAR SELECT HIRE_DATE , COUNT(*) FROM employees GROUP BY HIRE_DATE ORDER BY count(*) DESC
Visualize BAR SELECT Manufacturer , sum(Revenue) FROM Manufacturers GROUP BY Manufacturer
Visualize BAR SELECT Hire_Date , AVG(Job_history.Department_ID) FROM EMPLOYEES WHERE Salary BETWEEN 8000 AND 12000 AND Commission_Pct IS NULL AND Job_history.Job_ID IS NULL AND Job_history.Department_ID != 40 GROUP BY Hire_Date ORDER BY AVG(Job_history.Department_ID) ASC
Visualize LINE SELECT Employee_ID , COUNT(Employee_ID) FROM employees where EMPLOYEE_ID > 1 GROUP BY Employee_ID ORDER BY Employee_ID ASC
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE FIRST_NAME NOT LIKE '%M%'  ORDER BY SALARY
Visualize BAR SELECT FIRST_NAME , SUM(EMPLOYEE_ID) FROM employees WHERE FIRST_NAME LIKE 'D%' or FIRST_NAME LIKE 'S%' GROUP BY JOB_ID , SUM(EMPLOYEE_ID) ORDER BY SUM(EMPLOYEE_ID) ASC , job_id ASC
Visualize BAR SELECT date_address_to , COUNT(*) FROM Student_Addresses GROUP BY date_address_to , other_details ORDER BY date_address_to Visualize BAR SELECT other_details , COUNT(*) FROM Detention GROUP BY other_details Visualize BAR SELECT other_details , COUNT(*) FROM Assessment_Notes GROUP BY other_details Visualize BAR SELECT other_details , COUNT(*) FROM Behavior_Incident GROUP BY other_details
Visualize BAR SELECT DEPARTMENT_ID , AVG(HIRE_DATE) FROM employees WHERE FIRST_NAME LIKE 'D% S%' GROUP BY time BIN HIRE_DATE BY DEPARTMENT_ID ORDER BY COUNT(*) DESC
Visualize BAR SELECT FIRST_NAME , AVG(salary) FROM employees GROUP BY FIRST_NAME ORDER BY AVG(salary)
Visualize BAR SELECT JOB_ID , SUM(salary) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY SUM(salary) DESC
Visualize BAR SELECT JobID , AVG(HIRE_DATE) FROM employees GROUP BY JobID HAVING JobID < 5056851277000 HAVING  HIRE_DATE < 2002-06-21 BIN HIRE_DATE BY HIRE_DATE ASC
Visualize BAR SELECT date_address_from , COUNT(date_address_from) FROM Student_Address GROUP BY date_address_from
Visualize SCATTER SELECT Price , Code , Manufacturer FROM Products GROUP BY Code , Manufacturer
Visualize BAR SELECT other_details , count(*) FROM Student_Addresses GROUP BY other_details BIN BY date_address_to
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM job_history GROUP BY JOB_ID
Visualize BAR SELECT DEPARTMENT_ID , HIRE_DATE, CASE WHEN salary > 8000 OR commission_pct IS NULL OR DEPARTMENT_ID = 40 THEN 1 ELSE 0 END AS x FROM employee WHERE salary > 8000 AND commission_pct IS NOT NULL AND DEPARTMENT_ID = 40 GROUP BY DEPARTMENT_ID ORDER BY HIRE_DATE ASC
Visualize SCATTER SELECT SALARY, COMMISSION_PCT FROM employees WHERE COMMISSION_PCT IS NOT NULL AND department_id <> 40 ORDER BY SALARY ASC
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM job_history GROUP BY JOB_ID Visualize BAR SELECT DEPARTMENT_ID , COUNT(MANAGER_ID) FROM jobs GROUP BY DEPARTMENT_ID
1.Visualize LINE SELECT job_id , AVG(DEPARTMENT_ID) FROM employees WHERE JOB_ID = 2 AND HIRE_DATE < "2002-06-21 00:00:00" GROUP BY job_id 2. Visualize BAR SELECT job_id , COUNT(*) FROM employees WHERE JOB_ID = 2 AND HIRE_DATE < "2002-06-21 00:00:00" GROUP BY job_id
Visualize BAR SELECT job_id , COUNT(*), SUM(salary) FROM jobs JOIN employees ON jobs.JOB_ID= employees.JOB_ID JOIN job_history ON jobs.JOB_ID= job_history.JOB_ID WHERE EMPLOYEE_ID>= 0 AND HIRE_DATE >= '2002-06-21 00:00:00.0' GROUP BY job_id , FIRST_NAME, LAST_NAME , SALARY , COMMISSION_PCT , MANAG
Visualize BAR SELECT DEPARTMENT_ID , SUM(DEPARTMENT_ID) FROM Jobs WHERE MIN_SALARY >= 8000 AND MAX_SALARY <= 12000 AND commission = 'yes' AND JOB_ID IN(SELECT JOB_ID FROM job_history WHERE employee_id IN (SELECT employee_id FROM employees WHERE job_id IN (SELECT job_id FROM job_history WHERE department_id = 40) AND MIN_SALARY >= 8000 AND MAX_SALARY <= 1
Visualize BAR SELECT monthly_rental , DATE_ADDRESS_FROM , COUNT(DATE_ADDRESS_FROM) FROM Student_Addresses BIN DATE_ADDRESS_FROM BY WEEKDAY
Visualize BAR SELECT hire_date , count(*) FROM employees GROUP BY hire_date HAVING HIRE_DATE< '2002-06-21' ORDER BY HIRE_DATE DESC
Visualize BAR SELECT employees.job_id , COUNT(*) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND (COMMISSION_PCT IS NOT NULL OR department_id != 40) GROUP BY employees.job_id ORDER BY employees.job_id ASC BAR SELECT employees.job_id , COUNT(*) FROM employees JOIN job_history ON employees.job_id = job_history.job_id GROUP BY employees.job_id ORDER BY employees.job_id ASC
Visualize SELECT EMPLOYEE_ID , EMAIL FROM employees GROUP BY EMPLOYEE_ID HAVING hire_date > '2002-06-21' ORDER BY SUM(employee_id) DESC
Visualize BAR SELECT Investor, COUNT(Entrepreneur_ID) FROM Entrepreneur GROUP BY Investor ORDER BY COUNT(Entrepreneur_ID) ASC
Visualize BAR SELECT JOB_ID , FIRST_NAME FROM employees GROUP BY JOB_ID, FIRST_NAME ORDER BY FIRST_NAME ASC
1) Visualize BAR SELECT DEPT_ID , SUM(SALARY) FROM jobs WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' GROUP BY DEPT_ID ORDER BY DEPT_ID DESC 2) Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM jobs WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' GROUP BY JOB_ID ORDER BY JOB_ID DESC
Visualize BAR SELECT 'Other_details' , count(*) FROM Teachers GROUP BY 'Other_details' ORDER BY 'Other_details' ASC  Visualize BAR SELECT 'Other_details' , date_address_from, date_address_to, count(*) FROM Student_Addresses GROUP BY 'Other_details' , date_address_from , date_address_to ORDER BY date_address_from ASC Visualize BAR SELECT 'Other_details' , count(*) FROM Teachers GROUP BY 'Other_details' BIN date_address_from BY DAY
1) Visualize BAR SELECT start_date , count(distinct job_id) FROM job_history WHERE end_date >= '2002-06-21' GROUP BY job_id ORDER BY count(distinct job_id) DESC 2) Visualize BAR SELECT job_id , avg(manager_id) FROM employee GROUP BY job_id ORDER BY count(distinct job_id)
Visualize BAR SELECT MANAGER_ID , AVG(SALARY) FROM employees JOIN jobs ON job_history.EMPLOYEE_ID = employees.EMPLOYEE_ID GROUP BY JOB_ID ORDER BY JOB_ID ASC
Visualize BAR SELECT Carrier , COUNT(Memory_in_G) FROM phone GROUP BY Carrier ORDER BY Memory_in_G
Visualize Line SELECT EMPLOYEE_ID, COMMISSION_PCT , HIRE_DATE FROM employees WHERE department_id != 40 AND commission_pct IS NOT NULL AND SALARY > 8000 AND SALARY < 12000 GROUP BY employee_id , HIRE_DATE ORDER BY COMMISSION_PCT DESC
Visualize BAR SELECT product_type_code , count(*) FROM Products GROUP BY product_type_code ORDER BY product_type_code
Visualize BAR SELECT (CASE DEPARTMENT_ID WHEN 40 THEN 'Other' ELSE DEPARTMENT_NAME END) , SALARY FROM employees WHERE (HIRE_DATE BETWEEN TO_DATE('2019-03-01','YYYY-MM-DD') AND TO_DATE('2020-03-01','YYYY-MM-DD')) AND (HIRE_DATE BETWEEN TO_DATE('2019-03-01','YYYY-MM-DD') AND TO_DATE('20
1. Visualize PIE SELECT  						employees.salary as salary , 						employees.commission_pct as commission_pct , 						departments.department_id as department_id , 						departments.department_name as department_name 					FROM employee 					INNER JOIN department 					ON department.department_id = employee.department_id
Visualize BAR SELECT Investor , COUNT(*) FROM entrepreneur GROUP BY Investor ORDER BY COUNT(*) DESC
Visualize BAR SELECT Position , COUNT(*) FROM match_season GROUP BY Position ORDER BY COUNT(*) ASC
Visualize BAR SELECT REGION_ID , COUNT(COUNTRY_NAME) FROM countries GROUP BY REGION_ID ORDER BY COUNT(COUNTRY_NAME) DESC
Visualize BAR SELECT Carrier , COUNT(*) FROM phone GROUP BY Carrier ORDER BY Carrier DESC
Visualize BAR SELECT job_id, SUM(department_id) FROM employees, departments GROUP BY job_id ORDER BY job_id
Visualize BAR SELECT STATE_PROVINCE , count(*) FROM locations GROUP BY STATE_PROVINCE ORDER BY STATE_PROVINCE ASC
Visualize BAR SELECT  SUM(MANAGER_ID) AS MANAGER_ID , hire_date FROM employees  WHERE hire_date < '2002-06-21' GROUP BY hire_date ORDER BY hire_date ASC
Visualize PIE SELECT hand , COUNT(hand) FROM players GROUP BY hand ORDER BY COUNT(hand) ASC
Visualize Bar SELECT SALARY , count(DISTINCT JOB_ID) FROM employees GROUP BY JOB_ID ORDER BY count(DISTINCT JOB_ID) ASC
Visualize BAR SELECT MAX(product_price) , product_type_code FROM Products GROUP BY product_type_code ORDER BY product_price DESC
Visualize BAR SELECT STATE_PROVINCE , COUNT(STATE_PROVINCE) FROM locations GROUP BY STATE_PROVINCE
Visualize BAR SELECT hire_date , AVG(SALARY) FROM employees WHERE HIRE_DATE < '2002-06-21' GROUP BY hire_date BIN hire_date BY WEEKDAY
Visualize BAR SELECT JOB_ID , count(JOB_ID) FROM employees  WHERE MIN_SALARY BETWEEN 8000 AND 12000  AND Commission_PCT IS NOT NULL  AND DEPARTMENT_ID != 40 GROUP BY JOB_ID ORDER BY JOB_ID ASC
Visualize BAR SELECT employee_id , SUM(job_history.job_id) FROM departments LEFT JOIN job_history ON department_id=department_id LEFT JOIN employees ON employee_id=employee_id WHERE salary between 8000 and 12000 AND commission_pct is not null AND department_id <> 40 GROUP BY employee_id ORDER BY employee_id
Visualize BAR SELECT HIRE_DATE , DEPARTMENT_ID FROM employees
1. Visualize a line chart about the correlation between commission_pct and department_id in employees .  2. Visualize a line chart about the correlation between commission_pct and department_id in employees where the letters D or S appear in first_name .
Visualize SCATTER Select Code , avg(Price) FROM Products WHERE Price BETWEEN 60 AND 120 AND Manufacturer IN (SELECT Code FROM Manufacturers) ORDER BY avg(Price) ASC
Visualize BAR SELECT hire_date , bin(hire_date, 15) AS "time", AVG(EMPLOYEE_ID) FROM employees GROUP BY hire_date , time ORDER BY time
Visualize BAR SELECT LAST_NAME, FIRST_NAME , HIRE_DATE FROM employees WHERE LAST_NAME LIKE 'S%' or LAST_NAME LIKE 'D%'
Visualize BAR SELECT JOB_TITLE , MAX_SALARY FROM jobs GROUP BY JOB_TITLE  HAVING MIN_SALARY < 12000 AND MIN_SALARY > 18000 ORDER BY JOB_TITLE ASC
Visualize BAR SELECT LAST_NAME , EMPLOYEE_ID FROM employees
1.Visualize BAR SELECT JOB_ID , (select sum(salary) from job_history WHERE job_history.employee_id = employee.employee_id AND job_history.job_id = employee.job_id) FROM employees WHERE first_name like "D%|S%" GROUP BY JOB_ID  2.Visualize RANK SELECT JOB_ID , rank() FROM ( SELECT JOB_ID , (select sum(salary) from job_history WHERE job_history.employee_id = employee.employee_id AND job_history.job_
Visualize BAR SELECT Carrier , count(*) FROM phone GROUP BY Carrier ORDER BY count(*) DESC
Visualize BAR SELECT EMPLOYEE_ID , count(*) FROM job_history GROUP BY EMPLOYEE_ID ORDER BY EMPLOYEE_ID ASC
Visualize BAR SELECT count(*) , customer_name FROM customers WHERE customer_address LIKE '%TN%' GROUP BY customer_id ORDER BY customer_id DESC
Visualize BAR SELECT product_price , COUNT(*) FROM products GROUP BY product_type_code, product_price ORDER BY product_type_code ASC
Visualize BAR SELECT HIRE_DATE, count(*) FROM employees, departments WHERE salary in (8000,12000) AND commission is null AND department_id != 40 GROUP BY hire_date ORDER BY hire_date DESC
Visualize BAR SELECT DEPARTMENT_ID , COUNT(JOB_ID) FROM employees GROUP BY DEPARTMENT_ID , BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE FIRST_NAME LIKE 'D% or S%' GROUP BY JOB_ID, BAR SELECT JOB_ID , COUNT(*) FROM job_history WHERE FIRST_NAME LIKE 'D% or S%' GROUP BY JOB_ID

Visualize BAR SELECT EMPLOYEE_ID , SUM(SALARY) FROM employees WHERE MIN(SALARY) <= 8000 AND MIN(SALARY) >= 12000 AND COMMISSION_PCT IS NOT NULL AND JOB_ID IS NOT NULL AND DEPARTMENT_ID != 40 GROUP BY JOB_ID
Visualize BAR SELECT first_name , AVG(salary)  FROM employees GROUP BY first_name
Visualize BAR SELECT year, COUNT(year) FROM Payments WHERE Payment_method_code = "VISA" ORDER BY year DESC
1. Visualize LINE SELECT HIRE_DATE , SALARY , COMMISSION_PCT FROM employees WHERE SALARY > 8000 AND COMMISSION_PCT IS NOT NULL AND department_id <> 40 ORDER BY HIRE_DATE 2. Visualize LINE SELECT HIRE_DATE , SALARY , COMMISSION_PCT FROM employees WHERE SALARY > 8000 AND COMMISSION_PCT IS NOT NULL AND department_id <> 40 ORDER BY SALARY
Visualize BAR SELECT manufacturer.Name, COUNT(*) FROM products GROUP BY manufacturer.Name
Visualize BAR SELECT JOB_ID, count(MANAGER_ID), SUM(salary) FROM employees GROUP BY job_id
Visualize SELECT EMPLOYEE_ID FROM JOB_HISTORY WHERE SALARY BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NOT NULL AND DEPARTMENT_ID NOT IN (40, 41, 42, 43) AND HIRE_DATE BETWEEN '1960-01-01' AND '2010-01-01' AND (END_DATE IS NULL OR END_DATE IS NULL) AND SALARY IS NOT NULL
Visualize BAR SELECT job_id , EMPLOYEE_ID FROM jobs WHERE hire_date BETWEEN 20020621 AND 20020621 GROUP BY job_id ORDER BY job_id ASC
Visualize LINE SELECT EMPLOYEE_ID, JOB_ID, DEPARTMENT_ID FROM JOB_HISTORY WHERE SALARY BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NULL AND DEPARTMENT_NUMBER != 40 GROUP BY EMPLOYEE_ID,JOB_ID, DEPARTMENT_ID HAVING COUNT(JOB_ID) > 0 ORDER BY EMPLOYEE_ID
Visualize BAR SELECT job_id , SUM(department_id) FROM jobs , job_history , employees GROUP BY job_id , HIRE_DATE  ORDER BY SUM(department_id) DESC
Visualize BAR SELECT date_address_to , avg(monthly_rental) FROM Student_Addresses WHERE date_address_to BETWEEN 2011-01-01 AND 2011-04-30 GROUP BY date_address_to ORDER BY date_address_to DESC
Visualize BAR SELECT payment_method_code , COUNT(payment_method_code) FROM Customers  ORDER BY COUNT(payment_method_code) DESC
Visualize BAR SELECT Manufacturer , Revenue FROM Manufacturers  BIN Revenue BY Manufacturer ORDER BY Revenue ASC
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees GROUP BY HIRE_DATE
Visualize BAR SELECT Salary , COUNT(Salary) FROM employees GROUP BY Salary ORDER BY COUNT(Salary) ASC
SELECT HIRE_DATE , COMMISSION_PCT , EMPLOYEE_ID , FIRST_NAME , LAST_NAME FROM employees WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' ORDER BY HIRE_DATE ASC
Visualize BAR SELECT Price , COUNT(Price) FROM Products WHERE Price <= 200 GROUP BY Price ORDER BY COUNT(Price) ASC
1. Visualize BAR SELECT Position , COUNT(*) FROM match_season GROUP BY Position ORDER BY Position DESC 2. Visualize BAR SELECT Position , COUNT(*) FROM player GROUP BY Position ORDER BY Position DESC
Visualize BAR SELECT Manufacturer , COUNT(Manufacturer) FROM Products GROUP BY Manufacturer
Visualize BAR SELECT Code, COUNT(*) FROM Products GROUP BY Code ORDER BY COUNT(*) DESC
Visualize BAR SELECT last_name , hire_date , sum(manager_id) FROM employees GROUP BY last_name, hire_date, weekday ORDER BY last_name, hire_date ASC
Visualize TABLE SELECT SUM(EMPLOYEE_ID) , SUM(HIRE_DATE) FROM employees WHERE EMPLOYEE_ID BETWEEN 8000 AND 12000 GROUP BY DEPARTMENT_ID , HIRE_DATE ORDER BY SUM(HIRE_DATE) ASC
Visualize SCATTER SELECT EMPLOYEE_ID , DEPARTMENT_ID FROM employees WHERE HIRE_DATE BETWEEN '2002-06-21' AND '2003-06-21' AND DEPARTMENT_ID IN (SELECT DISTINCT DEPARTMENT_ID FROM departments WHERE MANAGER_ID IN (SELECT DISTINCT MANAGER_ID FROM departments))
Visualize BAR SELECT FIRST_NAME , MANAGER_ID FROM employees ORDER BY MANAGER_ID ASC
1-Visualize BAR SELECT job_id , AVG(SALARY) FROM jobs WHERE HIRE_DATE BETWEEN '2002-06-21' AND '2004-06-21' GROUP BY job_id 2-Visualize BAR SELECT employee_id , job_id , AVG(SALARY) FROM job_history GROUP BY employee_id ORDER BY AVG(SALARY) DESC
Visualize BAR SELECT case when (hire_date <  '2002-06-21') then hire_date + ' ' + 'day' end as hire_date , count(*) FROM employees GROUP BY hire_date BIN '1' WEEKDAY ORDER BY COUNT(*) DESC
Visualize BAR SELECT EMPLOYEE_ID , COUNT(*) FROM job_history GROUP BY job_id AND EMPLOYEE_ID , AND department_id , AND job_id AND job_id , AND department_id AND department_id , AND job_id , AND job_id , AND salary , AND COMMISSION_PCT , AND MANAGER_ID , AND salary , AND COMMISSION_PCT , AND MANAGER_ID , AND department_id , AND salary , AND COMMISSION_PCT , AND M
Visualize BAR SELECT teacher_id , monthly_rental + other_details FROM teachers GROUP BY teacher_id

1. Visualize BAR SELECT Price , AVG(Name) FROM Products GROUP BY Price HAVING Price between 60 and 120 2. Visualize BAR SELECT Price , AVG(Name) FROM Products GROUP BY Price HAVING Price between 60 and 120 3. Visualize BAR SELECT Price , AVG(Name) FROM Products GROUP BY Price HAVING Price between 60 and 120 4. Visualize BAR SELECT Price , AVG(Name) FROM Products GROUP BY Price HAVING Price between
Visualize BAR SELECT monthly_rental , date_address_from , BIN date_address_from BY time , BIN date_address_from BY week  ORDER BY BIN date_address_from BY time
Visualize BAR SELECT job_id , COUNT(job_id) FROM employees WHERE MIN_SALARY <= 8000 AND MAX_SALARY >= 12000 AND COMMISSION_PCT IS NOT NULL AND DEPARTMENT_ID != 40 AND MANAGER_ID IS NULL GROUP BY job_id , SORT Y BY job_id ASC
Visualize BAR SELECT FIRST_NAME IN ('D','S') , HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees GROUP BY FIRST_NAME ,HIRE_DATE BIN HIRE_DATE BY Month;
Visualize BAR SELECT Name , AVG(Price) FROM products, Manufacturers WHERE Price BETWEEN 60 AND 120 GROUP BY Name , Code ORDER BY Price ASC
Visualize BAR SELECT Manufacturer_Code , Revenue FROM Manufacturers  JOIN Products  ON Manufacturer_Code = Products.Manufacturer_Code  GROUP BY Manufacturer_Code ORDER BY Revenue DESC
Visualize BAR SELECT address , count(*) FROM Customers GROUP BY address
1.Calculate the count of Name in Manufacturers Table  2.Calculate the count of Name in Products Table  3.Calculate the count of Manufacturer's ID in Products Table  4.The last step is combining these three tables to generate the query. Visualize BAR SELECT Name , COUNT(Name) FROM Manufacturers GROUP BY Name ORDER BY COUNT(Name) DESC
Visualize BAR SELECT SUM(JOB_ID) , job_id FROM employee GROUP BY job_id DESC
Visualize BAR SELECT department_id , SUM(hire_date) FROM employees WHERE hire_date BETWEEN '01-01-2000' AND '01-01-2000' AND department_id IN (9,19,24,26,44,45) AND salary BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NOT NULL AND MANAGER_ID IS NOT NULL AND department_id NOT IN (40) GROUP BY department
1. Visualize BAR SELECT EMPLOYEE_ID, COUNT(*) FROM employees GROUP BY EMPLOYEE_ID ORDER BY COUNT(*) DESC 2. Visualize CIRCLE SELECT MANAGER_ID, COUNT(*) FROM employees GROUP BY MANAGER_ID ORDER BY COUNT(*) DESC
Visualize SCA EMPLOYEE_ID , COMMISSION_PCT FROM employees  WHERE HIRE_DATE < "2002-06-21"
Select EMPLOYEE_ID , AVG(hire_date) FROM employees WHERE MANAGER_ID = 10 AND HIRE_DATE < '2002-06-21' GROUP BY EMPLOYEE_ID ORDER BY AVG(hire_date)
Query 1 : Select JOB_ID from job_history where START_DATE between  '2017-01-01' and '2017-01-15' GROUP BY JOB_ID , ORDER BY COUNT(*) Query 2 : Select FIRST_NAME from employees where FIRST_NAME like '%D' or FIRST_NAME like '%S' GROUP BY JOB_ID , ORDER BY FIRST_NAME Query 3 : Select FIRST_NAME , SUM(SALARY)/1000 as A
SELECT hire_date , AVG(hire_date) FROM employee WHERE manager_id is not null      AND department_id is not null AND manager_id=12     AND SALARY>8000     GROUP BY hire_date     ORDER BY hire_date ASC          PIE SELECT department_id , hire_date FROM department WHERE department_id>40          SELECT department_id , count(start_date) AS start , count(end_date) AS end FROM job_history      WHERE manager
Visualize BAR SELECT EMPLOYEE_ID , AVG(SALARY) FROM EMPLOYEES WHERE FIRST_NAME LIKE "D%" OR FIRST_NAME LIKE "S%" GROUP BY JOB_ID ORDER BY AVG(SALARY) DESC
BAR SELECT HIRE_DATE , SUM(JOB_ID) FROM employees WHERE SALARY BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NOT NULL AND DEPARTMENT_NUMBER != 40 GROUP BY MANAGER_ID , HIRE_DATE BIN HIRE_DATE BY WEEKDAY ORDER BY SUM(JOB_ID) DESC
Visualize LINE SELECT hire_date, salary FROM employees WHERE commission_pct != 'null' AND job_id IS NOT NULL AND department_id != 40 GROUP BY hire_date, salary ORDER BY salary
Visualize BAR SELECT year , COUNT(*) FROM matches GROUP BY year ORDER BY count(*) DESC
Visualize LINE SELECT Dept_ID , Dept_Name, Hire_Date FROM employee WHERE Salary > 8000 AND Hire_Date != '' GROUP BY Dept_ID,Hire_Date ORDER BY Hire_Date ASC      /* Visualize LINE SELECT Dept_ID , Dept_Name, Hire_Date FROM employee WHERE Commission_PCT >= 0.3 GROUP BY Dept_ID,Hire_Date ORDER BY Hire_Date ASC     SELECT Dept_ID , Dept_Name, Hire_Date
Visualize SPARKLINE SELECT Code , Price FROM Products WHERE Price between 60 and 120 GROUP BY Name
Visualize BAR SELECT Manufacturer , count(DISTINCT Name) FROM Products WHERE Price BETWEEN 60 and 120 GROUP BY Manufacturer
Visualize SCATTER SELECT MIN(Salary) ,Department_ID FROM Employee GROUP BY Department_ID
Visualize BAR SELECT payment_method_code , avg(amount_payment) FROM payment GROUP BY payment_method_code ORDER BY avg(amount_payment) ASC
Visualize BAR SELECT Carrier , count(*) FROM phone GROUP BY Carrier ORDER BY Carrier ASC
Visualize Histogram SELECT Last_Name , Manager_ID , COUNT(Manager_ID) FROM employees GROUP BY Manager_ID , Last_Name
Visualize PIE SELECT other_details , monthly_rental FROM Student_addresses GROUP BY other_details , monthly_rental
Visualize PIE SELECT Investor , count(*) FROM entrepreneur GROUP BY Investor
1. Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE HIRE_DATE < '2002-06-21' GROUP BY JOB_ID 2. Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees JOIN job_history ON employees.JOB_ID = job_history.JOB_ID GROUP BY JOB_ID
Visualize BAR SELECT DATEPART(ww,HIRE_DATE) AS WEEKDAY, HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE HIRE_DATE BETWEEN 1900-01-01 AND 2002-06-20 GROUP BY WEEKDAY ORDER BY COUNT(HIRE_DATE) DESC
Visualize BAR SELECT monthly_rental , date_address_to , other_details FROM Student_Addresses GROUP BY other_details BIN date_address_to BY WEEKDAY
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM jobs WHERE hire_date > 2002-06-21 GROUP BY JOB_ID ORDER BY JOB_ID ASC
Visualize LINE SELECT date_of_notes , COUNT(date_of_notes) FROM Assessment_Notes GROUP BY date_of_notes ORDER BY COUNT(date_of_notes) DESC BIN date_of_notes BY DAY
1.SELECT DISTINCT manager_id, EMPLOYEE_ID FROM employees GROUP BY manager_id, EMPLOYEE_ID 2.SELECT manager_id, COUNT(*) FROM employees WHERE FIRST_NAME LIKE "D%" OR FIRST_NAME LIKE "S%" GROUP BY manager_id 3.Visualize A FILTER line_chart , SELECT EMPLOYEE_ID , manager_id , (commission_pct * 100) / salary AS percent FROM employees WHERE FIRST_NAME LIKE "D%" OR FIRST
Visualize BAR SELECT JOB_ID , COUNT(*) FROM jobs GROUP BY JOB_ID , SUM(salary) ORDER BY COUNT(*) ASC
Visualize BAR SELECT Position , COUNT(*) FROM match_season GROUP BY Position ORDER BY Position
Visualize BAR SELECT Founder , sum(Revenue) FROM Manufacturers GROUP BY Founder
Visualize LINE SELECT DEPARTMENT_ID , SUM(EMPLOYEE_ID) FROM EMPLOYEES GROUP BY DEPARTMENT_ID ORDER BY SUM(EMPLOYEE_ID) DESC
SELECT HireDate , AVG(ManagerId) FROM  employees WHERE HIRE_DATE < '2002-06-21' GROUP BY HireDate ORDER BY HireDate DESC   Visualize BAR SELECT HireDate , COUNT(ManagerId) FROM employees  WHERE HIRE_DATE < '2002-06-21' GROUP BY HireDate ORDER BY HireDate DESC
Visualize BAR SELECT JOB_ID , SUM(JOB_ID) FROM job_history WHERE HIRE_DATE <= '2002-06-21' GROUP BY JOB_ID

Visualize BAR SELECT hand , count(*) FROM players GROUP BY hand ORDER BY hand ASC
``` Visualize BAR SELECT LAST_NAME , COUNT(*) FROM employees GROUP BY LAST_NAME ORDER BY LAST_NAME ASC ```
Visualize BAR SELECT Product_name , COUNT(Product_name) FROM Products GROUP BY Product_name ORDER BY Product_name
Visualize BAR SELECT payment_method_code , COUNT(*) FROM customers GROUP BY payment_method_code ORDER BY COUNT(*) ASC
Visualize BAR SELECT date_address_from, monthly_rental, other_details FROM Student_Addresses WHERE date_address_from < date_address_to GROUP BY date_address_from , monthly_rental , other_details  HAVING count(*) > 0 ORDER BY date_address_from, monthly_rental , other_details
Visualize LINE SELECT  SALARY , SALARY * ( COMMISSION_PCT / 100 ) AS ACCUMULATED , [HIRE_DATE] FROM EMPLOYEES WHERE SALARY BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NOT NULL AND DEPARTMENT_ID <> 40 AND [HIRE_DATE] > ( SELECT MIN([HIRE_DATE]) FROM EMPLOYEES WHERE SALARY BETWEEN 8000

Visualize BAR SELECT EMPLOYEE_ID , JOB_ID , Average(EMPLOYEE_ID) FROM employees      WHERE FIRST_NAME LIKE 'D%'        OR FIRST_NAME LIKE 'S%'     GROUP BY JOB_ID , EMPLOYEE_ID
Visualize HISTOGRAM SELECT EMPLOYEE_ID , SUM(MANAGER_ID) FROM EMPLOYEES WHERE JOB_ID IN (SELECT JOB_ID FROM JOB_HISTORY) GROUP BY EMPLOYEE_ID , JOB_ID ORDER BY EMPLOYEE_ID ASC
Visualize BAR SELECT hire_date , AVG(DEPARTMENT_ID) FROM employees  WHERE  SALARY BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NOT NULL AND DEPARTMENT_ID NOT IN (40) GROUP BY hire_date BIN hire_date BY WEEKDAY
Visualize BAR SELECT HIRE_DATE , SUM(department_id) FROM employees GROUP BY (FIRST_NAME like "D" OR FIRST_NAME like "S") BIN HIRE_DATE BY TIME RANK BY Y from low to high
Visualize BAR SELECT hire_date , AVERAGE(DEPARTMENT_ID) FROM employees GROUP BY hire_date BIN hire_date BY TIME
Visualize LINE SELECT DEPARTMENT_ID, HIRE_DATE FROM employees WHERE HIRE_DATE < 2002-06-21
Visualize BAR SELECT employees.first_name, jobs.job_id , SUM(job_history.department_id) FROM employees LEFT JOIN jobs ON employees.job_id = jobs.JOB_ID GROUP BY employees.first_name, jobs.job_id ORDER BY SUM(job_history.department_id) DESC
1. Visualize BAR SELECT Name FROM Manufacturers GROUP BY Name 2. Visualize BAR SELECT Name FROM Manufacturers ORDER BY Revenue DESC 3. Visualize BAR SELECT Name FROM Manufacturers ORDER BY Revenue ASC
Visualize LINE SELECT employee_id, department_id FROM employees WHERE first_name like 'D%'  UNION ALL SELECT employee_id, department_id FROM employees WHERE first_name like 'S%'
Visualize BAR SELECT HIRE_DATE , AVERAGE(SALARY) FROM employees  GROUP BY Hire_Date BIN HIRE_DATE BY WEEKDAY
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees GROUP BY HIRE_DATE ORDER BY HIRE_DATE

Visualize BAR SELECT date_address_from , count(*) FROM Student_Addresses GROUP BY other_details , bin date_address_from by time
Visualize LINE SELECT FIRST_NAME, SALARY FROM employees WHERE FIRST_NAME <> 'M' GROUP BY FIRST_NAME ORDER BY FIRST_NAME ASC
Visualize BAR SELECT Hire_date , SUM(Employee_ID) FROM employees WHERE COMMISSION_PCT IS NOT NULL AND DEPARTMENT_NUMBER <> 40 AND HIRE_DATE BETWEEN Start_from AND End_from GROUP BY Start_from ORDER BY SUM(Employee_ID) DESC BIN Start_from BY WEEKDAY
Visualize BAR SELECT CAST(hubdate::date AS date), SUM(manager_id) , Department_ID  FROM employees JOIN departments ON employees.department_id = departments.department_id WHERE SALARY BETWEEN 8000 AND 12000 AND commission_pct IS NULL AND department_id != 40 AND HIRE_DATE >= DATE(DATE_TRUNC(CAST(YEAR(NOW()) AS date))) GROUP BY WEEKDAY(hubdate) ORDER BY W
Visualize BAR SELECT MANAGER_ID , sum(EMPLOYEE_ID) FROM employees WHERE HIRE_DATE before 2002-06-21 GROUP BY manager_id ORDER BY sum(EMPLOYEE_ID) ASC BIN HIRE_DATE BY WEEKDAY
Visualize BAR SELECT EMPLOYEE_ID , COUNT(MANAGER_ID) FROM employees WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' BIN hire_date by time ORDER BY COUNT(MANAGER_ID) DESC
Visualize BAR SELECT Job_ID , avg(Manager_ID) FROM EMPLOYEES GROUP BY Job_ID ORDER BY Job_ID ASC
Visualize BAR SELECT EMPLOYEE_ID , COUNT(Commission_PCT) FROM employees WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' GROUP BY EMPLOYEE_ID ORDER BY COUNT(Commission_PCT) ASC
Visualize LINE SELECT FIRST_NAME, HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE FIRST_NAME LIKE '%D%' OR FIRST_NAME LIKE '%S%' BIN HIRE_DATE BY TIME ASC
SELECT FIRST_NAME, COUNT(*) FROM employees WHERE FIRST_NAME LIKE '%%m%%' GROUP BY FIRST_NAME ORDER BY FIRST_NAME DESC
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' GROUP BY HIRE_DATE BIN HIRE_DATE BY YEAR
Visualize BAR SELECT SALARY , AVG(HIRE_DATE) FROM employees GROUP BY SALARY ORDER BY AVG(HIRE_DATE) ASC
Visualize BAR SELECT phone_id , COUNT(phone_id) FROM phone GROUP BY Phone_ID ORDER BY COUNT(phone_id) ASC

Visualize BAR SELECT Headquarter , Revenue FROM Manufacturers GROUP BY Headquarter ORDER BY Revenue DESC
Visualize BAR SELECT product_price , product_type_code FROM Products GROUP BY product_type_code, product_price ORDER BY product_type_code
Visualize BAR SELECT job_id , AVG(employee_id) FROM jobs WHERE (first_name LIKE 'D%' OR first_name LIKE 'S%') GROUP BY JOB_ID BIN job_id BY JOB_TITLE , MIN_SALARY , MAX_SALARY ORDER BY JOB_TITLE DESC , MIN_SALARY ASC
Visualize BAR SELECT Manufacturer_ID, COUNT(Name) FROM Products WHERE Price <= 200 GROUP BY Manufacturer_ID ORDER BY COUNT(Name) DESC
Visualize BAR SELECT Investor , COUNT(Investor) FROM entrepreneur GROUP BY Investor ORDER BY Investor ASC

BAR SELECT Founder , SUM(Revenue) FROM Manufacturers GROUP BY Founder
Visualize BAR SELECT LAST_NAME , SUM(SALARY) FROM employees WHERE FIRST_NAME LIKE "M%", group by LAST_NAME ORDER BY SUM(SALARY) DESC
Visualize BAR SELECT JOB_ID , COUNT(*) FROM employees WHERE (COMMISSION_PCT IS NULL OR COMMISSION_PCT = 0) AND (JOB_ID <> 40) GROUP BY JOB_ID ASC
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees GROUP BY HIRE_DATE BIN(HIRE_DATE, 'M')
Visualize BAR SELECT Payment_Method_Code , count(*) FROM Payments GROUP BY Payment_Method_Code ORDER BY Payment_Method_Code DESC
1. Visualize BAR SELECT JOB_ID , count(JOB_ID) FROM jobs WHERE MAX_SALARY <= 12000 AND MIN_SALARY >= 8000 AND JOB_ID != 40 AND MANAGER_ID IS NULL AND department_id != 40 GROUP BY job_id DESC ,2. Visualize BAR SELECT job_history.JOB_ID, job_history.START_DATE, job_history.END_DATE, job_history.DEPARTMENT_ID, job_history.EMP
1. Visualize BAR SELECT EMPLOYEE_ID, START_DATE, END_DATE, count(*) FROM job_history WHERE job_id = 106 GROUP BY EMPLOYEE_ID  2. Visualize BAR SELECT count(*) FROM job_history WHERE job_id = 106 GROUP BY job_id  3. Visualize BAR SELECT MIN_SALARY , count(*) FROM job_history WHERE job_id = 106 GROUP BY job_id  4. Visualize BAR SELECT MAX_SALARY ,
Visualize BAR SELECT Years_Played , COUNT(Years_Played) FROM player GROUP BY Years_Played ORDER BY COUNT(Years_Played) ASC
Visualize LINE CHART SELECT emp.Department_ID , emp.Department_ID - job_history.Department_ID FROM employees emp JOIN departments d ON d.Department_ID = emp.Department_ID JOIN job_history j ON j.Department_ID = emp.Department_ID WHERE emp.SALARY >= 8000 AND emp.SALARY < 12000 AND emp.Commission_PCT IS NOT NULL AND emp.Commission_PCT < 1.0 AND emp.
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees where HIRE_DATE < 2002-06-21 GROUP BY HIRE_DATE BIN HIRE_DATE BY time
Visualize BAR SELECT FIRST_NAME , DEPARTMENT_ID , AVG(MANAGER_ID)  FROM employees  WHERE FIRST_NAME LIKE 'D%S%' BIN HIRE_DATE  BY DAY_OF_WEEK  ORDER BY MANAGER_ID
Visualize LINE SELECT MANAGER_ID , EMPLOYEE_ID FROM employees GROUP BY EMPLOYEE_ID , MANAGER_ID ORDER BY MANAGER_ID ASC

Visualize BAR SELECT JOB_ID, SUM(SALARY) AS SALARY FROM employees WHERE HIRE_DATE < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID ASC
1st generate a query for department and fill the attribute locatoin_id with the top ten departments in sales and count by the attribute location_id  SQL> SELECT TOP 10 * FROM departments WHERE SALES > 12500 ORDER BY SALES DESC 2    DEPARTMENT_ID DEPARTMENT_NAME MANAGER_ID LOCATION_ID ---------- ------------------- ---------- ----------         16.001  HUMAN RESOURCES 1       40.001         16.0
1) Bar chart for salary v c2) Bar chart for salary v commission c3) Bar chart for salary v department
Visualize SCATTER SELECT DEPARTMENT_ID , SUM(SALARY) FROM employees GROUP BY DEPARTMENT_ID
Visualize BAR SELECT Date_Address_From , SUM(Monthly_Rental) FROM Student_Addresses GROUP BY Date_Address_From , Bin Date_Address_From BY WEEKDAY AND Other_Details
Visualize BAR SELECT EMPLOYEE_ID , SUM(MANAGER_ID) FROM employees GROUP BY MANAGER_ID BIN EMPLOYEE_ID BY WEEKDAY ORDER BY SUM(MANAGER_ID) DESC
Visualize LINE SELECT Code , manufacturer , MIN(Price) FROM Products WHERE Price BETWEEN 60 AND 120 GROUP BY manufacturer
Visualize BAR SELECT Monthly_rental , AVG(Monthly_rental) FROM Student_Addresses GROUP BY Monthly_rental, other_details ORDER BY Monthly_rental
Visualize BAR SELECT EMPLOYEE_ID, AVG(HIRE_DATE) FROM EMPLOYEES WHERE EMPLOYEE_ID IN (SELECT EMPLOYEE_ID FROM JOB_HISTORY WHERE JOB_ID IN (SELECT JOB_ID FROM EMPLOYEE_JOBS WHERE SALARY BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NOT NULL AND DEPARTMENT_ID IS NOT NULL AND DEPARTMENT_ID <> 40) GROUP BY
Visualize BAR SELECT date_address_from , monthly_rental FROM student_addresses GROUP BY date_address_from BIN monthly_rental BY weekday
Visualize BAR SELECT FIRST_NAME , HIRE_DATE FROM employees GROUP BY FIRST_NAME ORDER BY HIRE_DATE ASC BIN hire_date BY WEEKDAY
Visualize HISTOGRAM EMPLOYEE_ID , COUNT(EMPLOYEE_ID) FROM employees GROUP BY EMPLOYEE_ID
Visualize BAR SELECT manufacturer , count(*) FROM Products GROUP BY manufacturer ORDER BY count(*) ASC
Visualize BAR SELECT EMAIL , COUNTA(SALARY) FROM employees GROUP BY ( HIRE_DATE MONTH TO MONTH) ORDER BY SALARY DESC , MONTH DESC
Visualize BAR SELECT HIRE_DATE , count(*) FROM employees WHERE SALARY BETWEEN 8000 AND 12000 AND ( COMMISSION_PCT IS NULL OR DEPARTMENT_ID = 40) AND ( HIRE_DATE BETWEEN '2014-06-01' AND '2015-06-01') AND ( JOB_ID IS NOT NULL ) GROUP BY HIRE_DATE ASCENDING BY WEEKDAY
Visualize SCATTER SELECT count(date_address_to) , avg(other_details) FROM Student_Addresses GROUP BY other_details AND bin date_address_to BY DAYS(date_address_to)  Visualize SCATTER SELECT count(notes_id) , avg(text_of_notes) FROM Assessment_Notes GROUP BY other_details AND bin date_address_to BY DAYS(date_address_to)  Visualize SCATTER SELECT count(incident_id) , avg(other_details) FROM Be
SELECT EMPLOYEE_ID , SALARY FROM employees WHERE SALARY > 8000 AND COMMISSION_PCT IS NOT NULL OR DEPARTMENT_ID <> 40 GROUP BY EMPLOYEE_ID ORDER BY SALARY
Visualize BAR SELECT EMPLOYEE_ID, COUNT(*) FROM EMPLOYEES GROUP BY EMPLOYEE_ID WITHIN GROUP (ORDER BY FIRST_NAME) WHERE SALARY >= 8000 AND SALARY <= 12000 AND COMMISSION_PCT IS NOT NULL AND DEPARTMENT_NUMBER IS NOT 40 AND HIRE_DATE BETWEEN '2000-01-01' AND '2005-01-01' GROUP BY hire_date
Visualize SCATTER SELECT MANAGER_ID , DEPARTMENT_ID FROM employees WHERE SALARY BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NOT NULL AND DEPARTMENT_ID <> 40 AND JOB_ID IS NOT NULL GROUP BY MANAGER_ID, DEPARTMENT_ID ORDER BY MANAGER_ID, DEPARTMENT_ID ASC
Visualize BAR SELECT price , AVG(price) FROM products WHERE Manufacturer NOT IN (SELECT Code FROM Manufacturer) GROUP BY name , Code ORDER BY price ASC BIN price BY WEEKDAY
Visualize BAR SELECT Employee_ID , JOB_ID , SUM(SALARY) / SUM(1) FROM employees GROUP BY JOB_ID ,Employee_ID
Visualize SCATTER SELECT Address_ID , COUNT(Other_Address_Details) FROM Addresses GROUP BY Address_ID ORDER BY COUNT(Other_Address_Details)
Visualize SCATTER SELECT Code , Price FROM Products WHERE Price BETWEEN 60 AND 120 GROUP BY Price
Visualize BAR SELECT Payment_Method_Code , COUNT(Payment_Method_Code) FROM Payments GROUP BY Payment_Method_Code ORDER BY COUNT(Payment_Method_Code) DESC BIN Payment_Method_Code BY ZERO
Visualize BAR SELECT product_type_code , AVG(product_price) FROM Products GROUP BY product_type_code
Visualize BAR SELECT Draft_Class , COUNT(Draft_Class) FROM match_season WHERE position = "Defense" GROUP BY Draft_Class ORDER BY Draft_Class ASC

Visualize BAR SELECT product_price FROM products , product_price  GROUP BY product_type_code  Visualize LINE SELECT total_value_purchased , date_supplied_from FROM Product_Suppliers  GROUP BY product_type_code   Visualize BAR SELECT total_value_purchased , date_supplied_from FROM Product_Suppliers  GROUP BY product_type_code    Visualize BAR SELECT total_value_purchased , date_supplied_from FROM Product_Suppliers  GROUP BY product
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees GROUP BY HIRE_DATE BIN HIRE_DATE BY YEAR , SORT Y BY Y DESC
Visualize BAR SELECT Position , COUNT(*) FROM match_season GROUP BY Position
Visualize BAR SELECT hand , COUNT(*) FROM players GROUP BY hand ORDER BY COUNT(*) DESC
Visualize BAR SELECT Entrepreneur_ID , Count(Entrepreneur_ID) FROM entrepreneur GROUP BY Entrepreneur_ID ORDER BY Entrepreneur_ID
Visualize BAR SELECT location_id , COUNT(*) FROM locations GROUP BY location_id ORDER BY location_id ASC
Visualize BAR SELECT HIRE_DATE , sum(DEPARTMENT_ID) FROM employees WHERE FIRST_NAME IN ("D","S") GROUP BY HIRE_DATE ORDER BY sum(DEPARTMENT_ID) ASC BIN HIRE_DATE BY WEEKDAY
Visualize LINE SELECT MANAGER_ID , count(*) FROM employees GROUP BY DEPARTMENT_ID ORDER BY MANAGER_ID DESC
Visualize BAR SELECT Event_ID , COUNT(Event_Details) FROM Events GROUP BY Event_ID
Visualize LINE SELECT EMPLOYEE_ID , AVG(HIRE_DATE) AS DATE_TIME FROM employees   GROUP BY EMPLOYEE_ID  HAVING EMPLOYEE_ID > 50 ORDER BY EMPLOYEE_ID ASC
Visualize BAR SELECT payment_method_code , COUNT(payment_method_code) FROM Customers GROUP BY payment_method_code ORDER BY COUNT(payment_method_code) ASC
Visualize BAR SELECT Date_of_notes , COUNT(Date_of_notes) FROM Assessment_Notes GROUP BY Date_of_notes ORDER BY COUNT(Date_of_notes) ASC
Visualize LINE SELECT department_id , count(*) FROM employees WHERE SALARY BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NOT NULL AND DEPARTMENT_ID <> 40 GROUP BY department_id ORDER BY department_id ASC

Visualize SCATTER SELECT employee_id , commission_pct FROM employees WHERE HIRE_DATE <= '2002-06-21'  GROUP BY employee_id  ORDER BY commission_pct ASC
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM JOBS INNER JOIN EMPLOYEES ON EMPLOYEE_ID=JOB_ID GROUP BY JOB_ID ORDER BY AVG(EMPLOYEE_ID) DESC
Visualize LINE SELECT department_id, COUNT(department_id) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct IS NOT NULL AND department_id NOT IN (40) GROUP BY department_id ORDER BY COUNT(department_id) ASC
Visualize LINE SELECT HIRE_DATE , Commission_PCT FROM employees GROUP BY HIRE_DATE ORDER BY HIRE_DATE ASC
Visualize BAR SELECT Participant_ID , COUNT(Participant_ID) FROM Participants_in_Events GROUP BY Participant_ID ORDER BY COUNT(Participant_ID) ASC BIN Participant_ID BY WEEKDAY
Visualize BAR SELECT Manufacturer , AVG(Price) FROM Products WHERE Price BETWEEN 60 AND 120 GROUP BY Manufacturer ORDER BY AVG(Price) ASC
Visualize BAR SELECT ABS(SUM(Department_ID)), hire_date FROM employees WHERE SALARY BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NOT NULL AND MANAGER_ID NOT = 40 AND DEPARTMENT_ID NOT = 40 BIN hire_date BY WEEKDAY ORDER BY Count(hire_date) DESC
Visualize BAR SELECT Date_Claim_Settled , COUNT(Date_Claim_Settled) FROM Claims GROUP BY Date_Claim_Settled ORDER BY COUNT(Date_Claim_Settled) DESC
Visualize HISTOGRAM SELECT Phone_ID , MIN(Memory_in_G) FROM phone GROUP BY Phone_ID ORDER BY Phone_ID ASC
Visualize BAR SELECT Manufacturer , SUM(Revenue) FROM Products GROUP BY Manufacturer
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE HIRE_DATE < '2002-06-21' GROUP BY JOB_ID
Visualize BAR SELECT hand , Count(*) FROM players GROUP BY hand BIN hand BY year(birth_date) ORDER BY hand
SELECT Count(DISTINCT other_details) FROM Teachers GROUP BY other_details SELECT Count(DISTINCT other_details) FROM Student_Addresses GROUP BY other_details SELECT Count(DISTINCT other_details) FROM Detention GROUP BY other_details SELECT Count(DISTINCT other_details) FROM Assessment_Notes GROUP BY other_details SELECT Count(DISTINCT other_details) FROM Behavior_Incident GROUP BY other_details  SELECT other_details, AVG(other_details) AS average FROM Teachers GROUP BY
Visualize LINE SELECT date_address_from , date_address_to , monthly_rental FROM Student_Addresses GROUP BY date_address_from ORDER BY date_address_from ASC , date_address_to DESC
Visualize BAR SELECT FIRST_NAME , AVG(SALARY) FROM employees GROUP BY FIRST_NAME BIN (HIRE_DATE, MONTH) ORDER BY AVG(SALARY) ASC
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE ( SALARY IN (8000, 12000) AND COMMISSION_PCT IS NOT NULL) AND (JOB_ID = job_history.JOB_ID AND JOB_ID = jobs.JOB_ID) GROUP BY JOB_ID
Visualize FILTER Settlements BY Claim_ID , TREND FILTER Claims BY Date_Claim_Made
Visualize BAR SELECT Name,Price, Count(*) FROM Products WHERE Price >= 60 AND Price <= 120 GROUP BY price , Name  ORDER BY Name
Visualize  SELECT product_type_code , avg(product_price) FROM Products GROUP BY Product_Type_Code ORDER BY avg(product_price) ASC
Visualize BAR SELECT job_id , EMPLOYEE_ID , SUM(employees.EMPLOYEE_ID) FROM job_history JOIN employees ON job_history.EMPLOYEE_ID = employees.EMPLOYEE_ID GROUP BY job_id ORDER BY job_id
Visualize BAR SELECT Payment_method_code , count(*) , avg(amount_payment) FROM payments GROUP BY payment_method_code , date_payment_made ORDER BY date_payment_made ASC
Visualize BAR SELECT LAST_NAME , SALARY FROM EMPLOYEES GROUP BY LAST_NAME ORDER BY SALARY ASC
Visualize SCATTER SELECT Code , Count(*) FROM Products WHERE price > 60 AND price <= 120 GROUP BY Manufacturer ORDER BY Manufacturer ASC
Visualize SELECT JOB_ID , COALESCE(T.salary,0) FROM job_history JOIN employees  JOIN departments JOIN jobs ON jobs.job_id=jobs.job_id JOIN departments d ON departments.department_id=departments.department_id  GROUP BY JOB_ID HAVING MIN_SALARY BETWEEN 8000 AND 12000 AND commission_pct IS NOT NULL AND department_id NOT IN (40) ORDER BY (CASE WHEN MIN_S
1. Visualize LINE SELECT Code , count(price) FROM Products GROUP BY Code  ORDER BY count(price) DESC  2. Visualize  LINE SELECT Code , price FROM Products GROUP BY Code ORDER BY price  ASC
```sql SELECT  EMPLOYEE_ID , count( EMPLOYEE_ID ) AS count , MIN(hire_date) AS min_time ,AVG(hire_date) AS avg_time  FROM employees WHERE HIRE_DATE < '2002-06-21' GROUP BY EMPLOYEE_ID , MIN(hire_date) , AVG(hire_date) ORDER BY count ASC, min_time ```    ```sql SELECT  EMPLOYEE_ID , count(
Visualize BAR SELECT Name , MIN(Price) FROM Products GROUP BY Name ORDER BY MIN(Price) DESC

``` Visualize BAR SELECT Date_Claim_Made, COUNT(Date_Claim_Made) FROM Claims GROUP BY Date_Claim_Made ORDER BY COUNT(Date_Claim_Made) ASC  Visualize BAR SELECT Date_Claim_Settled, COUNT(Date_Claim_Settled) FROM Claims WHERE Date_Claim_Made = Date_Claim_Settled GROUP BY Date_Claim_Settled ORDER BY COUNT(Date_Claim_Settled) ASC  Visualize BAR
Visualize BAR SELECT job_id , AVG(manager_id) FROM jobs WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' GROUP BY job_id ORDER BY job_id ASC Visualize BAR SELECT job_id , AVG(manager_id) FROM employees WHERE job_id IN (SELECT JOB_ID FROM job_history WHERE EMPLOYEE_ID IN (SELECT EMPLOYEE_ID FROM employees)) GROUP BY job_id ORDER BY job_id ASC
Visualize BAR SELECT Product_type_code , min(product_price) FROM Products , Product_Suppliers GROUP BY Product_type_code, product_price ORDER BY min(product_price) DESC
Visualize BAR SELECT hire_date , SUM(hire_date) FROM employee GROUP BY hire_date ORDER BY SUM(hire_date) DESC BIN hire_date BY WEEKDAY
Visualize BAR SELECT Committee , Counties_Represented FROM election GROUP BY Committee ORDER BY Counties_Represented DESC
Visualize SCATTER SELECT EMPLOYEE_ID, SALARY FROM employees GROUP BY EMPLOYEE_ID HAVING FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%'
Visualize LINE SELECT  JOB_ID , count(EMPLOYEE_ID) FROM employees WHERE EMPLOYEE_ID IN (SELECT EMPLOYEE_ID FROM JOB_HISTORY WHERE FIRST_NAME like "D%" OR FIRST_NAME like "S%") GROUP BY JOB_ID
Visualize BAR SELECT product_type_code , MAX(product_price) FROM Products GROUP BY product_type_code ORDER BY product_type_code ASC
Visualize BAR SELECT REGION_ID , count(employee_ID) FROM countries GROUP BY REGION_ID ORDER BY count(employee_ID) DESC

Visualize LINE SELECT  DEPARTMENT_ID , COUNT(DEPARTMENT_ID) FROM employees GROUP BY DEPARTMENT_ID
Visualize BAR SELECT manufacturer , SUM(Revenue) FROM Manufacturers GROUP BY manufacturer , ORDER BY sum(Revenue) desc
Visualize BAR SELECT hire_date , avg(salary) FROM employees WHERE hire_date<'2002-06-21' GROUP BY hire_date BY WEEKDAY ORDER BY avg(salary) DESC
Visualize BAR SELECT DEPARTMENT_ID , SUM(DEPARTMENT_ID) FROM employees  WHERE salary between 8000 and 12000 and commission is not null and  department_number != 40 GROUP BY hire_date ,  DEPARTMENT_ID BIN hire_date BY Time Order By sum(DEPARTMENT_ID) desc
Visualize BAR SELECT hire_date , avg(salary) FROM employees WHERE hire_date < '2002-06-21' ORDER BY avg(salary) ASC
Visualize BAR SELECT HIRE_DATE , ROUND(AVG(SALARY)) AS SALARY_BIN FROM employees WHERE HIRE_DATE < '2002-06-21' GROUP BY HIRE_DATE ORDER BY SALARY_BIN ASC
Visualize LINE SELECT  DEPARTMENT_ID , COUNT(*) FROM employees GROUP BY MANAGER_ID HAVING SALARY BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NULL AND department_ID != 40 ORDER BY MANAGER_ID ASC , EMPLOYEE_ID ASC
Visualize BAR SELECT Manufacturer, COUNT(Name) FROM Products GROUP BY Manufacturer  ORDER BY Manufacturer DESC
1. Find EMPLOYEE_IDs in [8000,12000], then group by HIRE_DATE and DEPARTMENT_ID, order by HIRE_DATE 2. Find DEPARTMENT_ID in [40], and find the EMPLOYEE_IDs in [8000,12000] and the job ids whose DEPARTMENT_ID is [40], then group by HIRE_DATE 3. Visualize BAR SELECT HIRE_DATE , count(*) FROM (1) GROUP
Visualize BAR SELECT EMPLOYEE_ID, FIRST_NAME, COMPARE(hiring_date, BIN(hiring_date, 0,6)) , COMPARE(hiring_date, BIN(hiring_date, 0,6)) FROM EMPLOYEES WHERE FIRST_NAME IN (['D','S']) GROUP BY EMPLOYEE_ID ORDER BY COMPARE(hiring_date, BIN(hiring_date, 0,6))
Visualize LINE SELECT Date_Claim_Settled , COUNT(*) FROM Settlements GROUP BY Date_Claim_Settled ORDER BY Date_Claim_Settled ASC BIN Date_Claim_Settled BY YEAR
Visualize BAR SELECT Manufacturer , sum(revenue) FROM Manufacturers GROUP BY Manufacturer
Visualize BAR SELECT hire_date , COUNT(hire_date) FROM employee GROUP BY hire_date BIN hire_date BY WEEKDAY ORDER BY COUNT(hire_date) DESC
Visualize BAR SELECT hire_date , AVG(salary) FROM EMPLOYEES WHERE hire_date < '2002-06-21' AND MANAGER_ID IS NOT NULL GROUP BY hire_date , AVG(salary) ORDER BY AVG(salary)
Visualize BAR SELECT Years_Played , COUNT(*) FROM Player GROUP BY Years_Played ORDER BY Years_Played ASC
Visualize HISTOGRAM SELECT Carrier, count(*) FROM phone GROUP BY Carrier ORDER BY count(*) DESC
Visualize BAR SELECT Player , count(*) FROM player GROUP BY Player ORDER BY Player
Visualize BAR SELECT Job_ID , Average(salary) FROM employees WHERE hire_date < '2002-06-21' AND Job_ID IN (1,3,8,9,13,21,23,24,25,26) GROUP BY Job_ID HAVING count(*) = 7 ORDER BY salary DESC
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees GROUP BY HIRE_DATE  ORDER BY HIRE_DATE ASC
Visualize SHOW TREND date_address_to , COUNT(date_address_to) FROM Student_Addresses GROUP BY date_address_to ORDER BY date_address_to ASC
Visualize LINE SELECT EMPLOYEE_ID , MANAGER_ID FROM employees WHERE HIRE_DATE < '2002-06-21' GROUP BY EMPLOYEE_ID, MANAGER_ID ORDER BY MANAGER_ID ASC
Visualize BAR SELECT department_id , SUM(baseSalary) FROM employees WHERE salary between 8000 AND 12000 AND commission_pct IS NOT NULL AND DEPARTMENT_ID <> 40 AND HIRE_DATE BETWEEN '2004-01-01' AND '2004-12-31' AND JOB_HISTORY.END_DATE IS NULL GROUP BY department_id BIN HIRE_DATE BY YEAR , Visualize BAR SELECT department_id , SUM(baseSal
Visualize PIE SELECT customer_name , customer_id FROM Customers WHERE address_line_1 LIKE '%TN%'
Visualize BAR SELECT HIRE_DATE , sum(salary) FROM EMPLOYEES GROUP BY HIRE_DATE BIN HIRE_DATE BY WEEKDAY
Visualize LINE SELECT customer_name , count(customer_id) FROM Customer_Addresses GROUP BY customer_name ORDER BY count(customer_id) ASC
Visualize BAR SELECT HIRE_DATE , ROUND(SUM(SALARY + COMMISSION_PCT)) FROM employees WHERE (FIRST_NAME LIKE 'T%') GROUP BY MONTH(HIRE_DATE) ORDER BY ROUND(SUM(SALARY + COMMISSION_PCT)) ASC
Visualize BAR SELECT Date_Payment_Made , COUNT(Date_Payment_Made) FROM Payments WHERE Payment_Method_Code = 'VISA' GROUP BY Date_Payment_Made ORDER BY Date_Payment_Made ASC
Visualize LINE SELECT job_history.START_DATE , COUNT(job_history.EMPLOYEE_ID) AS INCREASED_FROM job_history WHERE job_history.EMPLOYEE_ID IN (SELECT EMPLOYEE_ID FROM employees WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%')  BIN job_history.START_DATE BY YEAR   HAVING avg(COUNT(job_history.EMPLOYEE_ID)) > 0
Visualize BAR SELECT Committee , Count(Committee) FROM election GROUP BY Committee
Visualize BAR SELECT JOB_ID, MIN(DEPARTMENT_ID), AVG(DEPARTMENT_ID) FROM jobs , job_history JOIN employees ON JOB_ID = JOB_ID WHERE (First_Name LIKE ‘%d%’ OR First_Name LIKE ‘%s%’) AND JOB_ID IS NOT NULL GROUP BY JOB_ID ORDER BY AVG(DEPARTMENT_ID) DESC LIMIT 10
1) Visualize BAR SELECT Employee_ID , COUNT(Job_ID) FROM jobs GROUP BY Employee_ID 2) Visualize BAR SELECT Employee_ID , avg(salary) FROM employees GROUP BY Employee_ID 3) Visualize BAR SELECT Employee_ID , avg(salary) FROM employees GROUP BY Employee_ID 4) Visualize BAR SELECT Employee_ID , avg(salary) FROM employees GROUP BY Employee_ID 5) Visualize BAR SELECT Employee_ID , avg(salary) FROM employees GROUP BY Employee_ID 6) Visual
Visualize BAR SELECT Payment_Method_Code , Amount_Payment FROM Payments WHERE Date_Payment_Made >= '2016-01-01 00:00:00' GROUP BY Payment_Method_Code ORDER BY Amount_Payment DESC
Visualize BAR SELECT job_id , avg(manager_id) FROM employees GROUP BY job_id
Visualize BAR SELECT Price , COUNT(Price) FROM Products GROUP BY Price , Products.Manufacturer ORDER BY Price DESC , Products.Manufacturer ASC
Visualize BAR SELECT student_id , MIN(monthly_rental) FROM Student_Addresses WHERE other_details <> ''  GROUP BY student_id, other_details BIN (date_address_from, 'm')
Visualize BAR SELECT FIRST_NAME , AVG(MANAGER_ID) FROM employees GROUP BY FIRST_NAME ORDER BY AVG(MANAGER_ID) ASC
Visualize BAR SELECT Participant_ID , COUNT(Participant_ID) FROM Participants_in_Events GROUP BY Participant_ID ORDER BY Participant_ID DESC
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE hire_date >= '2002-06-21' GROUP BY HIRE_DATE ORDER BY COUNT(HIRE_DATE) DESC
Visualize BAR SELECT Phone_ID, SUM(Memory_in_G) , SUM(Carrier) , SUM(Price) FROM phone GROUP BY Phone_ID
Visualize BAR SELECT HIRE_DATE , COUNT(*) FROM employees WHERE HIRE_DATE < CURRENT_DATE AND HIRE_DATE >= 2002-06-21 GROUP BY HIRE_DATE ORDER BY COUNT(*) DESC
Visualize BAR SELECT Code, Revenue FROM Manufacturers GROUP BY Code  ORDER BY Revenue DESC , BIN Revenue BY YEAR
Visualize BAR SELECT JOB_ID , SUM(salary) FROM employees WHERE (salary BETWEEN 8000 and 12000 or job_id NOT IN (SELECT * FROM job_history where DEPARTMENT_ID = 40) or job_id IS NULL) GROUP BY JOB_ID ORDER BY AVG(salary) DESC
Visualize LINE SELECT first_name , job_id , salary, hire_date FROM employees WHERE FIRST_NAME like 'D%';
Visualize LINE SELECT HIRE_DATE, SALARY FROM employees GROUP BY HIRE_DATE BIN HIRE_DATE BY YEAR
Visualize BAR SELECT EMPLOYEE_ID , SUM(MANAGER_ID) FROM job_history WHERE HIRE_DATE < '2002-06-21' GROUP BY EMPLOYEE_ID
Visualize SCATTER SELECT EMPLOYEE_ID , JOB_ID FROM employees GROUP BY EMPLOYEE_ID , JOB_ID ORDER BY JOB_ID ASC
Visualize LINE SELECT HIRE_DATE, COUNT(EMPLOYEE_ID) FROM employees WHERE SALARY BETWEEN 8000 AND 12000 AND commission_pct IS NULL AND department_number=40 AND job_history.department_id = employees.department_id GROUP BY hire_date
Visualize BAR SELECT address_id , AVG(monthly_rental) FROM student_addresses WHERE monthly_rental != 0 GROUP BY address_id ORDER BY AVG(monthly_rental)
Visualize LINE SELECT Hire_Date , AVG(Commission_Pct) FROM employees WHERE (FIRST_NAME LIKE "D%") OR (FIRST_NAME LIKE "S%") AND JOB_ID = 1 ORDER BY Hire_Date DESC
Visualize PIE SELECT Fname , count(*) FROM Student WHERE Sex = 'F' AND Major != 600 AND Age >= 18 GROUP BY Fname
Visualize BAR SELECT payment_method_code , COUNT(*) FROM Customers GROUP BY payment_method_code
1.Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees GROUP BY JOB_ID ORDER BY JOB_ID , SUM(EMPLOYEE_ID) DESC 2.Visualize BAR SELECT EMPLOYEE_ID , SUM(SALARY) FROM employees GROUP BY EMPLOYEE_ID ORDER BY SUM(SALARY) DESC
Visualize BAR SELECT Participant_Type_Code , COUNT(*) FROM Participants GROUP BY Participant_Type_Code
Visualize SCATTER SELECT SALARY , COMMISSION_PCT FROM employees HAVING HIRE_DATE < 2002-06-21  ORDER BY SALARY ASC, COMMISSION_PCT ASC
1. To create a correlation chart between two variables, select the variables with the correlation method in the page. Enter the variables as the value in the SELECT dialog box, and set up the correlation method under Chart Type. 2. To draw a scatter chart, select the variables with the scatter method in the page. Enter the variables as the value in the SELECT dialog box, and set up the scatter method under Chart Type. 3. To create a scatter chart between two variables, select the variables with the scatter method in the page. Enter the variables as the value in the SELECT dialog box, and set up the scatter method under
Visualize BAR SELECT EMAIL , SALARY FROM employees
1. Visualize BAR SELECT first_name , COUNT(first_name) FROM employees WHERE first_name LIKE 'D%' or first_name LIKE 'S%' GROUP BY first_name BIN hire_date by WEEKDAY  2. Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name LIKE 'D%' or first_name LIKE 'S%' GROUP BY hire_date BIN hire_date by WEEKDAY
Visualize HISTOGRAM SELECT customer_id , address_id FROM Customer_Addresses GROUP BY customer_id HAVING customer_address LIKE TN
Visualize BAR SELECT job_history .department_id , EMPLOYEE_ID FROM job_history GROUP BY job_history .department_id ORDER BY EMPLOYEE_ID ASC
Visualize LINE SELECT * FROM employees GROUP BY EMPLOYEE_ID AND HIRE_DATE
Visualize BAR SELECT Manufacturer , COUNT(Manufacturer) FROM Products GROUP BY Manufacturer ORDER BY Count(Manufacturer) ASC
Visualize LINE SELECT payment_day , SUM(Amount_Payment) FROM Payments WHERE Payment_Method_Code = 'VISA' GROUP BY payment_day BIN payment_day BY YEAR
MATCH(employee) against(department) WHERE employee.DEPARTMENT_ID = department.DEPARTMENT_ID AND employee.HIRE_DATE < Date_partition('2002-06-21', 'day') AND department.MANAGER_ID IS NOT NULL AND department.MANAGER_ID <> 1001 AND department.MANAGER_ID <> 1002 AND department.MANAGER_ID <> 1003 AND department.MANAGER_ID <> 1004 AND department.MANAGER_ID <>
Visualize BAR SELECT Manufacturers.Name , COUNT(products.Name) FROM products INNER JOIN Manufacturers ON manufacturers.Code = products.Manufacturer GROUP BY Manufacturers.Name ORDER BY Manufacturers.Name ASC
Visualize BAR SELECT MONTH(HIRE_DATE) , COUNT(HIRE_DATE) FROM employees WHERE FIRST_NAME LIKE "D%S%" GROUP BY MONTH(HIRE_DATE) ORDER BY COUNT(HIRE_DATE) ASC

Visualize PIE SELECT Payment_Method_Code , count(*) FROM Payments GROUP BY Payment_Method_Code
Visualize LINE SELECT date_address_to , count(monthly_rental) FROM Student_Addresses GROUP BY date_address_to ORDER BY count(monthly_rental) DESC
Visualize SELECT EMPLOYEE_ID , SUM(department_id) FROM employeess WHERE HIRE_DATE BETWEEN '2010/01/01' AND '2011/12/31' AND MANAGER_ID IS NOT NULL GROUP BY EMPLOYEE_ID ORDER BY SUM(department_id) ASC
Visualize BAR SELECT Founder , SUM(Revenue) FROM Manufacturers GROUP BY Founder
Visualize BAR SELECT HIRE_DATE , AVERAGE(SALARY) FROM employees GROUP BY HIRE_DATE ORDER BY HIRE_DATE ASC , SALARY
Visualize BAR SELECT first_name FROM employees GROUP BY first_name ORDER BY COUNT(first_name) ASC
Visualize BAR SELECT LAST_NAME , DEPARTMENT_ID , count(*) FROM employees GROUP BY LAST_NAME , DEPARTMENT_ID ORDER BY count(*) DESC , DEPARTMENT_ID ASC
Visualize BAR SELECT date_address_to , sum(monthly_rental) FROM Student_Addresses GROUP BY student_id,other_details, date_address_to BIN (date_address_to, DAY)
visualize bar select DEPARTMENT_ID , SUM(SALARY) FROM employees WHERE SALARY BETWEEN 8000 AND 12000 AND COMMISSION IS NOT NULL AND MANAGER_ID IS NULL AND DEPARTMENT_ID != 40 GROUP BY DEPARTMENT_ID ORDER BY SUM(SALARY)
1. Visualize BAR SELECT FIRST_NAME , HIRE_DATE , AVG(MANAGER_ID) , AVG(DEPARTMENT_ID) FROM employees WHERE FIRST_NAME LIKE 'D%S%' GROUP BY HIRE_DATE ORDER BY HIRE_DATE ASC 2. Visualize BAR SELECT FIRST_NAME , HIRE_DATE , AVG(MANAGER_ID) , AVG(DEPARTMENT_ID) FROM employees WHERE FIRST_NAME LIKE 'D%S%' GROUP BY WEEKDAY ORDER BY
Visualize BAR SELECT product_type_code, COUNT(product_type_code) FROM Products GROUP BY product_type_code
SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE FIRST_NAME like 'D' OR FIRST_NAME like 'S' GROUP BY JOB_ID ORDER BY JOB_ID DESC
Visualize BAR SELECT Date_Payment_Made , Count(Payment_ID) FROM Payments GROUP BY Date_Payment_Made ORDER BY Date_Payment_Made DESC
SELECT EMPLOYEE_ID , FIRST_NAME , LAST_NAME FROM employees WHERE FIRST_NAME like 'D%' or FIRST_NAME like 'S%' GROUP BY EMPLOYEE_ID , FIRST_NAME , LAST_NAME HAVING SALARY > 5000 ORDER BY FIRST_NAME,SALARY DESC
Visualize BAR SELECT District , COUNT(*) FROM election GROUP BY District ORDER BY Counties_Represented DESC
Visualize BAR SELECT HIRE_DATE , avg(SALARY) FROM employees GROUP BY HIRE_DATE  BIN HIRE_DATE BY WEEKDAY

Visualize LINE SELECT EMPLOYEE_ID , hire_date FROM employees WHERE FIRST_NAME LIKE "D" OR FIRST_NAME LIKE "S" GROUP BY EMPLOYEE_ID ORDER BY EMPLOYEE_ID ASC
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employee GROUP BY JOB_ID ORDER BY JOB_ID DESC , SELECT JOB_ID , COUNT(JOB_ID) FROM employee JOIN job_history ON employee.JOB_ID = job_history.JOB_ID WHERE employee.HIRE_DATE <= '2002-06-21' AND employee.SALARY < 10000 GROUP BY JOB_ID ORDER BY JOB_ID DESC , Select JOB_ID , AVG(SALARY)
Visualize BAR SELECT hire_date , EMPLOYEE_ID, SUM(manager_id) FROM employees WHERE hire_date <= '2002-06-21' GROUP BY hire_date , EMPLOYEE_ID  ORDER BY SUM(manager_id) DESC
Visualize BAR SELECT payment_method_code , count(*) FROM Customers GROUP BY payment_method_code ORDER BY payment_method_code ASC
Table JOB_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID] select COUNT(job_id), START_DATE, DEPARTMENT_ID from JOB_history where EMPLOYEE_ID in (100155, 100460, 100476, 100300, 100455, 100505, 100623) and
Visualize BAR SELECT HIRE_DATE , SALARY FROM employees WHERE first_name like "D" or first_name like "S" ORDER BY SALARY DESC
Visualize BAR SELECT EMPLOYEE_ID , count(*) FROM employee GROUP BY JOB_ID ORDER BY count(*) DESC
Visualize BAR SELECT date_address_to , SUM(monthly_rental) AS money FROM Student_addresses GROUP BY date_address_to
Visualize BAR SELECT Manufacturer , Revenue FROM Manufacturers GROUP BY Manufacturer ORDER BY Revenue ASC
Visualize PIE SELECT JOB_ID , avg(EMPLOYEE_ID) , COUNT(EMPLOYEE_ID) FROM jobs GROUP BY JOB_ID
/* Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) , MIN_SALARY , MAX_SALARY FROM jobs GROUP BY JOB_ID  Show me the bar chart of JOB_ID , COUNT(JOB_ID) , MIN_SALARY , MAX_SALARY GROUP BY JOB_ID order by y */
Visualize BAR SELECT employee_id , avg(salary) FROM employees GROUP BY employee_id , department_id , hire_date BIN hire_date by weekday , by (bin hire_date by weekday) / by hire_date / by weekday order by department_id asc
Visualize BAR SELECT Draft_Pick_Number , Draft_Class FROM match_season WHERE Player IN (SELECT Player_ID FROM player WHERE Position = 'Defender' GROUP BY Player_ID BIN Player_ID BY YEARS_PLAYED ) ORDER BY Draft_Pick_Number ASC
1. Visualize BAR SELECT Hire_date , COUNT(hire_date) FROM departments                                                                      INNER JOIN employees ON hire_date <= employees.hire_date                                                                      AND department_number!=40 GROUP BY hire_date ORDER BY hire_date 2. Visualize LINE SELECT (DEPARTMENT_ID , AMOUNT(hire_date)) FROM departments                                                                      INNER JOIN employees ON hire_date <= employees.hire_date                                                                      AND department_number!=4
Visualize BAR SELECT Participant_Details , Participant_ID FROM Participants_in_Events GROUP BY Participant_Details ORDER BY Participant_ID
Visualize BAR SELECT hire_date , AVG(department_id) FROM employee GROUP BY hire_date BIN hire_date BY YEAR,MONTH
Visualize BAR SELECT Manufacturer , avg(price) FROM products GROUP BY Manufacturer ORDER BY avg(price) DESC
Visualize BAR SELECT JOB_ID , COUNT(EMPLOYEE_ID) FROM job_history WHERE HIRE_DATE < '2002-06-21 00:00:00' GROUP BY JOB_ID ORDER BY COUNT(EMPLOYEE_ID) ASC
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE HIRE_DATE > 2002-06-21 GROUP BY HIRE_DATE
Visualize BAR SELECT Monthly_Rental , date_address_to FROM Student_Addresses GROUP BY address_id , other_details BIN date_address_to BY time , OTHERS
Visualize BAR SELECT FIRST_NAME , COUNT(DEPARTMENT_ID) FROM employees GROUP BY FIRST_NAME ORDER BY COUNT(DEPARTMENT_ID) DESC
/* Define a new table called employee_commission_dept */ SELECT DEPARTMENT_ID , AVG(commission_pct) FROM employee_commission WHERE commission_pct IS NOT NULL AND MANAGER_ID NOT IN (SELECT MANAGER_ID FROM employee_commission_dept) GROUP BY DEPARTMENT_ID /* Find all employees whose salary is in the range of 8000 and 12000 and commission is not null and department_id not equal to 40 */ SELECT DEPARTMENT_ID , AV
Visualize BAR SELECT EMPLOYEE_ID , COUNT(*) FROM job_history  WHERE HIRE_DATE < '2002-06-21' GROUP BY EMPLOYEE_ID , JOB_ID , SALARY , MIN(HIRE_DATE) , MAX(HIRE_DATE)
Visualize BAR SELECT LOWER(First_name), count(*) FROM employees GROUP BY LOWER(First_name) HAVING First_name IN ('D', 'S') ORDER BY count(*) ASC
BAR SELECT EMPLOYEE_ID , SALARY - 8000 AS SALARY_LOWER , SALARY + 12000 AS SALARY_UPPER FROM employees WHERE MANAGER_ID = 1 AND DEPARTMENT_ID = 40 AND commission_pct IS NOT NULL AND commission_pct <= 1.0 AND JOB_HISTORY.END_DATE >= '2012-02-06'       AND job_history.job_id IS NULL AND JOB_H
Visualize BAR SELECT hire_date , SUM(salary) FROM employees WHERE hire_date BETWEEN "2002-06-21" AND "2005-12-31" AND SALARY > 0 GROUP BY hire_date BIN hire_date BY MONTH(hire_date)
Visualize BAR SELECT other_details , max(other_details) FROM Teachers, Assessment_Notes, Behavior_Incident, Detention, Student_Addresses GROUP BY other_details
Visualize BAR SELECT DEPARTMENT_ID , COUNT(*) FROM employees WHERE HIRE_DATE < '2002-06-21' GROUP BY DEPARTMENT_ID BY HIRE_DATE ASC ,  Visualize BAR SELECT COUNT(*) FROM employees WHERE HIRE_DATE < '2002-06-21' GROUP BY DEPARTMENT_ID , Visualize PIE SELECT COUNT(*) FROM employees WHERE HIRE_DATE < '2002-06-21' GROUP BY DEPARTMENT_ID BY HIRE_
Visualize BAR SELECT job_id , AVG(employee_id) FROM employee GROUP BY job_id ORDER BY employee_id DESC , PIVOT  [AVG(employee_id) as Count , job_id]
Visualize BAR SELECT Carrier , COUNT(Carrier) FROM phone GROUP BY Carrier ORDER BY Count(Carrier) ASC
Visualize LINE SELECT SALARY, COUNT(SALARY) FROM employees WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' GROUP BY SALARY BETWEEN 300000 AND 400000 BETWEEN 600000 AND 1200000 BETWEEN 1500000 AND 2000000 BETWEEN 2000000 AND 3000000 BETWEEN
Visualize BAR SELECT MANAGER_ID , avg(JOB_ID) FROM employees GROUP BY MANAGER_ID , job_id ORDER BY avg(JOB_ID) ASC BIN job_id BY X
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees GROUP BY HIRE_DATE BIN HIRE_DATE BY DAY OF WEEK ORDER BY HIRE_DATE ASC
Visualize BAR SELECT weekday, SUM(salary) FROM employees WHERE hire_date < '2002-06-21' AND hire_date >= '1990-01-01' GROUP BY weekday ORDER BY SUM(salary) DESC
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees GROUP BY HIRE_DATE BIN HIRE_DATE BY YEAR ORDER BY HIRE_DATE ASC
Visualize BAR SELECT FIRST_NAME , count(HIRE_DATE), sum(SALARY) FROM employee GROUP BY HIRE_DATE,FNAME ORDER BY sum(SALARY) DESC
Visualize BAR SELECT FIRST_NAME , AVG(EMPLOYEE_ID) FROM employees GROUP BY FIRST_NAME ORDER BY AVG(EMPLOYEE_ID) ASC
Visualize BAR SELECT First_name, SUM(Salary) FROM employees GROUP BY First_name, Hire_Date ORDER BY SUM(Salary) DESC
Visualize LINE SELECT HIRE_DATE , SUM(commission_pct) FROM employees GROUP BY HIRE_DATE ORDER BY HIRE_DATE ASC
Visualize BAR SELECT Competition , COUNT(*) FROM match GROUP BY Competition ORDER BY Competition ASC
Visualize LINE SELECT SUM(monthly_rental) , date_address_to FROM Student_Addresses GROUP BY date_address_to ORDER BY date_address_to DESC

SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE SALARY <= 12000 AND COMMISSION_PCT IS NULL AND department_id != 40 GROUP BY HIRE_DATE  ORDER BY HIRE_DATE DESC, AVG(DEPARTMENT_ID) ASC
3) Visualize PIE SELECT address_id FROM Student_Addresses GROUP BY address_id 4) Visualize PIE SELECT address_id FROM Students GROUP BY address_id 5) Visualize PIE SELECT address_id FROM Addresses GROUP BY address_id
Visualize SCATTER SELECT EMPLOYEE_ID , DEPARTMENT_ID FROM employees WHERE HIRE_DATE < "2002-06-21"
Visualize BAR SELECT LAST_NAME , SALARY FROM employees GROUP BY Last_name ORDER BY SALARY ASC

1. Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM jobs WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID DESC 2. Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM jobs WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY COUNT(JOB_ID) DESC 3. Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM
Visualize BAR SELECT customer_id , count(*) FROM Customers GROUP BY customer_id ORDER BY count(*) DESC
Select Manufacturer_Code , COUNT(Products_Code) FROM Products GROUP BY Manufacturer_Code WHERE Price > 60 AND Price <= 120 AND Manufacturer_Code <> 'NULL'
Line SELECT EMPLOYEE_ID , JOB_ID FROM EMPLOYEES WHERE HIRE_DATE >= '2002-06-21' GROUP BY EMPLOYEE_ID, JOB_ID ORDER BY HIRE_DATE DESC , JOB_ID ASC
1) Visualize BAR SELECT DEPARTMENT_ID , MANAGER_ID , COUNT(*) FROM employees GROUP BY DEPARTMENT_ID , MANAGER_ID ORDER BY DEPARTMENT_ID , MANAGER_ID 2) Visualize BAR SELECT JOB_ID , DEPARTMENT_ID , COUNT(*) FROM job_history GROUP BY JOB_ID , DEPARTMENT_ID ORDER BY JOB_ID , DEPARTMENT_ID 3) Visualize BAR SELECT EMPLOYEE_ID , SALARY , COUNT(*) FROM employees GROUP BY E
Visualize BAR SELECT JOB_ID , COUNT(EMPLOYEE_ID) FROM employees GROUP BY JOB_ID ORDER BY JOB_ID ASC, COUNT(EMPLOYEE_ID) DESC
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees GROUP BY HIRE_DATE , DEPARTMENT_ID ORDER BY HIRE_DATE

Visualize BAR SELECT DEPARTMENT_ID , SUM(MANAGER_ID) AS MANAGER_ID FROM employees WHERE EMPLOYEE_ID IN (SELECT MANAGER_ID FROM employees GROUP BY DEPARTMENT_ID HAVING HIRE_DATE <= '2002-06-21') GROUP BY DEPARTMENT_ID HAVING HIRE_DATE <= '2002-06-21' ORDER BY HIRE_DATE
Visualize BAR SELECT DEPT_ID , count(*) FROM JOB_HISTORY GROUP BY DEPT_ID
Visualize LINE SELECT EMPLOYEE_ID , ABS(SALARY - COMMISSION_PCT*SALARY) FROM employees WHERE HIRE_DATE <= '2002-06-21' GROUP BY EMPLOYEE_ID ORDER BY EMPLOYEE_ID ASC
Visualize PIE SELECT product_type_code , max(product_price) FROM products GROUP BY product_type_code
Visualize LINE SELECT EMPLOYEE_ID , HIRE_DATE , COUNT(*) FROM employees  GROUP BY EMPLOYEE_ID , HIRE_DATE  ORDER BY HIRE_DATE ASC
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE FIRST_NAME !='M' ORDER BY HIRE_DATE ASC
Visualize BAR SELECT CASE WHEN salary BETWEEN 8000 AND 12000 THEN 'A' ELSE NULL END , HIRE_DATE FROM employees WHERE MANAGER_ID=1234 AND department_id = 40 AND (SELECT hire_date FROM job_history WHERE EMPLOYEE_ID = employee_id AND department_id = department_id AND (select job_id FROM jobs WHERE job_id = job_id AND START_DATE >= hire_date AND END_DATE <= hire_date) )
Visualize BAR SELECT hire_date , SUM(job_history.department_id) FROM employee JOIN departments ON employee.department_id = departments.department_id JOIN employees ON employee.manager_id = employees.manager_id AND employees.hire_date BETWEEN '8000-12-00' AND '12000-00-00' AND commission_pct IS NOT NULL AND department_id NOT IN (40) GROUP BY hire_date, COUNT(job_history.department_id) ,
Visualize BAR SELECT Date_Payment_Made , COUNT(date_payment_made) FROM Payments GROUP BY Date_Payment_Made ORDER BY Count(Date_Payment_Made) ASC
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE (JOB_ID IN (SELECT JOB_ID FROM job_history WHERE (EMPLOYEE_ID IN (SELECT EMPLOYEE_ID FROM employees WHERE (DEPARTMENT_ID IN (SELECT DEPARTMENT_ID FROM departments WHERE (JOB_ID IN (SELECT JOB_ID FROM job_history WHERE (EMPLOYEE_ID IN (SELECT EMPLOYEE_ID FROM employees WHERE (DEPARTMENT_ID IN (SELECT DEPARTMENT_ID

Visualize BAR SELECT job_id , AVG(salary) FROM (select t1.employee_id from jobs t1 join jobs t2 on t1.job_id=t2.job_id where t1.job_id=t2.job_id AND t1.first_name like '%D%' OR t1.first_name like '%S%') join employees t3 on t3.employee_id=t1.employee_id GROUP BY job_id ORDER BY AVG(salary) DESC
Visualize BAR SELECT Investor, COUNT(Investor) FROM entrepreneur GROUP BY Investor ORDER BY COUNT(Investor) DESC
Visualize BAR SELECT HIRE_DATE, SUM(MANAGER_ID) FROM employees WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' GROUP BY HIRE_DATE ORDER BY HIRE_DATE ASC
Visualize BAR SELECT COUNTRY_NAME , COUNT(COUNTRY_NAME) FROM countries GROUP BY COUNTRY_NAME  ORDER BY COUNT(COUNTRY_NAME) ASC BIN COUNTRY_NAME BY REGION_ID
1. Visualize BAR SELECT MIN_SALARY , JOB_ID FROM employees GROUP BY job_id  2. Visualize BAR SELECT MIN_SALARY , JOB_ID FROM job_history WHERE JOB_ID = job_id GROUP BY job_id  3. Visualize BAR SELECT MIN_SALARY , JOB_ID FROM jobs GROUP BY job_id  4. Visualize BAR SELECT MIN_SALARY , JOB_ID FROM job_history ORDER BY MIN_SALARY ASC  5. Visual
Visualize BAR SELECT EMPLOYEE_ID , COUNT(EMPLOYEE_ID) FROM employees GROUP BY EMPLOYEE_ID HAVING HIRE_DATE < '2002-06-21' ORDER BY COUNT(EMPLOYEE_ID) DESC BIN EMPLOYEE_ID BY WEEKDAY
Visualize BAR SELECT Amount_Payment , AVG(Amount_Payment) FROM Payments GROUP BY Payment_Method_Code ORDER BY AVG(Amount_Payment) DESC
Visualize LINE SELECT employee_id , hire_date FROM employees GROUP BY employee_id , hire_date HAVING (hire_date > '2002-06-21')
Visualize LINE SELECT DEPARTMENT_ID, manager_id , count(*) FROM departments GROUP BY manager_id , DEPARTMENT_ID HAVING count(*) >=8000 and count(*) <=12000 and commission is not null and department_id <>40 ORDER BY hire_date ASC, manager_id ASC
Visualize BAR SELECT hire_date , COUNT(*) FROM employees WHERE FIRST_NAME LIKE "D%" OR FIRST_NAME LIKE "S%" ORDER BY COUNT(*) DESC BIN hire_date BY TIME
Visualize BAR SELECT FIRST_NAME , HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE FIRST_NAME LIKE "D" OR FIRST_NAME LIKE "S" GROUP BY FIRST_NAME, HIRE_DATE ORDER BY HIRE_DATE ASC BIN HIRE_DATE BY YEAR
Visualize BAR SELECT MANAGER_ID , COUNT(*) FROM employees GROUP BY MANAGER_ID HAVING (Hire_Date >= '2002-06-21' OR Hire_Date is null) AND Job_ID = 'null' AND Department_ID = 'null' AND JOB_ID in (SELECT JOB_ID FROM jobs ORDER BY JOB_ID DESC) ORDER BY COUNT(*) DESC
Visualize BAR SELECT JOB_ID , SUM(salary) FROM employees GROUP BY JOB_ID , department_id ORDER BY department_id ASC , average (salary) ASC
Visualize BAR SELECT Event_Details , COUNT(Event_Details) FROM Events GROUP BY Event_Details ORDER BY Count(Event_Details) DESC
Visualize BAR SELECT Date_Payment_Made , Amount_Payment FROM Payments GROUP BY Date_Payment_Made ORDER BY Date_Payment_Made ASC
Visualize LINE SELECT HIRE_DATE, COUNT(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission IS NOT NULL AND department_id != 40 GROUP BY HIRE_DATE
Visualize BAR SELECT HIRE_DATE , SUM(salary) FROM EMPLOYEE WHERE salary BETWEEN 8000 AND 12000 AND commission IS NOT NULL GROUP BY HIRE_DATE , weekday(HIRE_DATE) HAVING SUM(salary) > 0  ORDER BY SUM(salary) DESC
Visualize BAR SELECT monthly_rental , DATE_ADDRESS_TO FROM Student_Addresses GROUP BY DATE_ADDRESS_TO , weekday
Visualize BAR SELECT Event_Details , count(*) FROM Events GROUP BY Event_Details ORDER BY count(*) DESC
Select FIRST_NAME, sum(manager_id) over (order by hire_date rows unbounded preceding) from employees where FIRST_NAME in ('D','S') group by first_name
Visualize BAR SELECT Job_ID , AVG(salary) FROM employees WHERE FIRST_NAME LIKE '[D|S]%' GROUP BY Job_ID ORDER BY AVG(salary) ASC
SELECT JOB_ID , COUNT(JOB_ID) , AVG(MANAGER_ID) FROM jobs WHERE FIRST_NAME LIKE "D%" OR FIRST_NAME LIKE "S%" GROUP BY JOB_ID ORDER BY COUNT(JOB_ID) ASC
Visualize BAR SELECT D , AVG(HIRE_DATE) , SUM(HIRE_DATE) FROM employees GROUP BY (D) ORDER BY SUM(HIRE_DATE) DESC
Visualize PIE SELECT hire_date , COUNT(*) FROM employees WHERE hire_date BETWEEN '2002-06-21' AND '2004-06-17' GROUP BY hire_date
Visualize LINE SELECT employee_id , COUNT(*) FROM EMPLOYEES GROUP BY employee_id ORDER BY employee_id ASC
Visualize BAR SELECT Carrier , mean(Memory_in_G) FROM phone GROUP BY Carrier ORDER BY mean(Memory_in_G) ASC
Visualize BAR SELECT JOB_ID , SUM(Employee_ID) FROM job_history GROUP BY JOB_ID
Visualize BAR SELECT Date_Payment_Made , SUM(Amount_Payment) FROM Payments GROUP BY Payment_Method_Code , YEAR(Date_Payment_Made) ORDER BY Date_Payment_Made ASC
Visualize BAR SELECT Employee_ID, count(*) FROM employees GROUP BY Employee_ID, count(*)     ORDER BY count(*) DESC BIN Employee_ID BY YEAR
Visualize BAR SELECT LAST_NAME , COUNT(DEPARTMENT_ID) FROM employees GROUP BY LAST_NAME, DEPARTMENT_ID ORDER BY COUNT(DEPARTMENT_ID) DESC
Visualize LINE SELECT hire_date , manager_id FROM employees WHERE MANAGER_ID NOT IN (SELECT MANAGER_ID FROM departments WHERE DEPARTMENT_NAME = 'Sales')
Visualize LINE SELECT EMPLOYEE_ID , LOCATION_ID , MANAGER_ID , SALARY FROM employees  WHERE commission_pct is not null and department_id != 40 AND SALARY between 8000 and 12000 AND MANAGER_ID != 27 ORDER BY EMPLOYEE_ID
Visualize BAR SELECT Player , COUNT(Player) FROM match_season WHERE Position = 'Defender' GROUP BY Player ORDER BY COUNT(Player) ASC
SELECT Draft_Pick_Number, Draft_Class, SUM(Total_WL) as Total_WL , SUM(Singles_WL) as Singles_WL , SUM(Doubles_WL) as Doubles_WL , SUM(Team) as Team_WL , Year, College, Position, Team, SUM(Wins) as Wins FROM match_season GROUP BY Year , Draft_Class,Position, Team,Team_WL,College
Visualize BAR SELECT job_history.employee_id , avg(job_history.salary) FROM job_history GROUP BY job_history.employee_id , job_history.job_id order by salary asc
Visualize BAR SELECT FIRST_NAME , SALARY FROM employees GROUP BY FIRST_NAME  ORDER BY SALARY DESC
Visualize PIE SELECT Service_ID , count(Service_ID) FROM Events GROUP BY Service_ID HAVING count(Service_ID) >= 2 ORDER BY Service_ID ASC
Visualize BAR SELECT Investor , count(*) FROM entrepreneur GROUP BY Investor ORDER BY count(*) DESC
Visualize Point SELECT COUNT(salary) FROM employees WHERE FIRST_NAME LIKE “D%” OR FIRST_NAME LIKE “S%” GROUP BY employee_id, salary
Visualize BAR SELECT Year , COUNT(*) FROM matches GROUP BY Year ORDER BY COUNT(*) ASC
Visualize BAR SELECT hire_date , COUNT(*) FROM employees GROUP BY hire_date ORDER BY hire_date
Visualize BAR SELECT STATE_PROVINCE , COUNT(STREET_ADDRESS) FROM locations GROUP BY STATE_PROVINCE ORDER BY COUNT(STREET_ADDRESS) DESC
Visualize COLORSCATTER SELECT EMPLOYEE_ID , COUNT(*) FROM employees WHERE DEPARTMENT_ID = 40 AND SALARY BETWEEN 8000 AND 12000 AND MANAGER_ID IS NOT NULL GROUP BY EMPLOYEE_ID AND MANAGER_ID ORDER BY MANAGER_ID
Visualize BAR SELECT Carrier, count(*) FROM phone GROUP BY Carrier ORDER BY Carrier DESC
Visualize BAR SELECT LAST_NAME , job_history.DEPARTMENT_ID FROM departments, employees JOIN job_history WHERE employee_id = job_history.employee_id GROUP BY LAST_NAME ORDER BY LAST_NAME DESC
Visualize BAR SELECT job_id , AVG(JOB_TITLE) FROM employees WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' GROUP BY job_id ORDER BY job_id DESC
Visualize BAR SELECT Date_Payment_Made , SUM(Amount_Payment) FROM Payments GROUP BY Date_Payment_Made ORDER BY Date_Payment_Made ASC

Visualize BAR SELECT job_id , COUNT(job_id) FROM job_history WHERE (HireDate < '2002-06-21')  GROUP BY job_id

Visualize PATIENT SELECT EMPLOYEE_ID , END_DATE, job_id , job_history.job_id FROM employee GROUP BY job_history.EMPLOYEE_ID , END_DATE, job_history.job_id ORDER BY END_DATE, job_history.job_id ASC

Visualize DONUT SELECT payment_method_code , count(*) FROM Customers GROUP BY payment_method_code ORDER BY payment_method_code ASC
Visualize SCATTER SELECT SALARY, MANAGER_ID FROM employee WHERE MANAGER_ID IS NOT NULL GROUP BY MANAGER_ID
Visualize BAR SELECT Headquarter , MAX(Revenue) FROM Manufacturers GROUP BY Headquarter DESC
Visualize SELECT EMPLOYEE_ID , JOB_ID , count(*) FROM EMPLOYEES WHERE HIRE_DATE < '2002-06-21' AND DEPARTMENT_ID = JOB_ID  GROUP BY EMPLOYEE_ID , JOB_ID  ORDER BY JOB_ID ASC
Visualize BAR SELECT Player, Position FROM player WHERE Position = 'PT' ORDER BY Position ASC
Visualize BAR SELECT MANAGER_ID ,count(*) FROM employees GROUP BY MANAGER_ID , hire_date ORDER BY count(*)
Visualize BAR SELECT job_id , AVG(salary) FROM employees WHERE salary BETWEEN 8000 and 12000 AND commission IS NOT NULL and job_id != 40 GROUP BY job_id ORDER BY AVG(salary) ASC
Visualize BAR SELECT date_of_notes , COUNT(date_of_notes) FROM Assessment_Notes GROUP BY date_of_notes ORDER BY COUNT(date_of_notes) DESC
Visualize BAR SELECT job_id , SUM(department_id) FROM employees WHERE salary >=8000 AND salary <=12000 AND commission_pct IS NOT NULL AND job_id IN (SELECT JOB_ID FROM job_history) AND job_id NOT IN (SELECT DEPARTMENT_ID FROM departments WHERE department_id=40) GROUP BY job_id
Visualize BAR SELECT monthly_rental , AVG(monthly_rental) FROM Student_Addresses GROUP BY monthly_rental,Weekday

Visualize SCATTER SELECT EMPLOYEE_ID , SALARY FROM employees GROUP BY EMPLOYEE_ID , SALARY ORDER BY SALARY ASC
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM EMPLOYEES WHERE HIRE_DATE < 2002-06-21 GROUP BY HIRE_DATE , FLOOR(HIRE_DATE,MONTH) BIN HIRE_DATE BY MONTH
Visualize BAR SELECT EMPLOYEE_ID , DEPARTMENT_ID FROM employees GROUP BY EMPLOYEE_ID ORDER BY DEPARTMENT_ID ASC

Visualize BAR SELECT      other_details ,     max(date_address_to) ,     sum(date_address_to) FROM Student_Addresses GROUP BY other_details  BIN date_address_to BY WEEKDAY ORDER BY COUNT(date_address_to) DESC , max(date_address_to) ASC
Visualize BAR SELECT product_type_code , average(product_price) FROM Products GROUP BY product_type_code ORDER BY product_type_code ASC
Visualize PIE SELECT Carrier , count(*) FROM phone GROUP BY Carrier
Visualize BAR SELECT job_history.JOB_ID , SUM(jobs.SALARY) FROM job_history , jobs GROUP BY job_history.JOB_ID HAVING salary > 8000 AND department_id <> 40  ORDER BY job_history.JOB_ID
Visualize BAR SELECT EMPLOYEE_ID , COUNT(*) FROM job_history WHERE HIRE_DATE<'2002-06-21' GROUP BY EMPLOYEE_ID
Visualize BAR SELECT manufacturers , price , COUNT(Manufacturer) FROM manufacturers GROUP BY price , Manufacturer ORDER BY price ASC , Manufacturer ASC
SELECT EMPLOYEE_ID , JOB_ID , SUM(salary) FROM EMPLOYEES LEFT JOIN JOBS ON EMPLOYEE_ID = JOB_ID LEFT JOIN job_history ON employee_id = job_id GROUP BY EMPLOYEE_ID,JOB_ID ORDER BY JOB_ID
Visualize BAR SELECT JOB_ID , JOB_TITLE , MIN_SALARY , MAX_SALARY , AVG(department_id) FROM jobs JOIN employees ON (jobs.JOB_ID = employees.JOB_ID) JOIN departments ON (departments.DEPARTMENT_ID = employees.DEPARTMENT_ID) WHERE salary between 8000 AND 12000 AND commission_pct IS NULL AND (department_id != 40) AND (job_id in (select job_id from
Visualize SCATTER SELECT student_id , monthly_rental FROM Student_Addresses GROUP BY student_id HORIZONTAL
Visualize BAR SELECT Price , COUNT(Price) FROM Manufacturers LEFT JOIN Products USING(Code)  GROUP BY Price , Name ORDER BY Price ASC
Visualize BAR SELECT HIRE_DATE , count(*) FROM employees GROUP BY HIRE_DATE ORDER BY HIRE_DATE
1. Select all the departments that have commission != null . WHERE Departments.Commission != null  2. Draw a line chart about the change of commission_pct over hire_date .  3. Rank from high to low by the x-axis . SELECT * FROM departments WHERE commission != null  4. Select all the employees that meet the condition . WHERE WHERE DEPARTMENTS.COMMISSION != null and  DEPARTMENTS.DEPARTMENT_NUMBER != 40  5. Draw a line chart about the change of commission_pct over h
Visualize SCATTER SELECT Code , Price FROM Products WHERE Price BETWEEN 60 AND 120
Visualize BAR SELECT manufacturer.Name , manufacturer.revenue FROM Manufacturers JOIN products ON manufacturer.Code = products.Manufacturer JOIN city.ID = products.headquarter ON city.ID = manufacturer.Headquarter GROUP BY manufacturer.Name ORDER BY manufacturer.Revenue DESC

Visualize BAR SELECT FIRST_NAME , AVG(EMPLOYEE_ID) FROM employees  WHERE FIRST_NAME LIKE "D%" OR FIRST_NAME LIKE "S%"  BIN HIRE_DATE BY DAY OF WEEK  ORDER BY AVG(EMPLOYEE_ID) DESC
Visualize BAR SELECT JOB_ID, COUNT(JOB_ID) FROM employees GROUP BY JOB_ID ORDER BY COUNT(JOB_ID) ASC
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees GROUP BY HIRE_DATE ORDER BY COUNT(HIRE_DATE) DESC
Visualize BAR SELECT Position, count(*) FROM match_season GROUP BY Position
Visualize BAR SELECT FIRST_NAME , DEPARTMENT_ID FROM employee GROUP BY FIRST_NAME, DEPARTMENT_ID ORDER BY FIRST_NAME ASC, DEPARTMENT_ID DESC
SELECT * FROM match ORDER BY Date DESC
Visualize BAR SELECT job_id , COUNT(EMPLOYEE_ID) FROM employees WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' GROUP BY job_id ORDER BY COUNT(EMPLOYEE_ID) DESC
Visualize BAR SELECT  MONTH(HIRE_DATE) , COUNT(MONTH(HIRE_DATE)) FROM employee GROUP BY MONTH(HIRE_DATE) ORDER BY COUNT(MONTH(HIRE_DATE)) ASC
Visualize LINE SELECT hire_date, salary FROM employees ORDER BY hire_date

Visualize BAR SELECT Settlement_ID , COUNT(Settlement_ID) FROM Payments  WHERE Payment_Method_Code = 'VISA'  GROUP BY Settlement_ID  ORDER BY COUNT(Settlement_ID) ASC
Visualize BAR SELECT DATE(Hire_date) , COUNT(*) FROM employees GROUP BY DATE(Hire_date)
Visualize FUNNEL SELECT Player_ID , Player, Team , Draft_Pick_Number , Draft_Class , Group_by ( Draft_Pick_Number, Player_ID, Draft_Pick_Number, Player_ID , Draft_Class, Player_ID , 1, Draft_Pick_Number, Player_ID, Draft_Class , 1, Player_ID, 1, Draft_Pick_Number, 1, Player_ID, Draft_Pick_Number, Draft_Class, 1, Player
Visualize BAR SELECT job_id , avg(employee_id) FROM jobs WHERE hire_date < '2002-06-21' GROUP BY job_id ORDER BY avg(employee_id) ASC
Visualize BAR SELECT DISTINCT EMPLOYEE_ID , COUNT(*) , SUM(MAX_SALARY) AS job_id FROM EMPLOYEES WHERE FIRST_NAME LIKE %[D|S] AND JOB_ID IN (SELECT JOB_ID FROM JOB_HISTORY GROUP BY JOB_ID) GROUP BY EMPLOYEE_ID, JOB_ID, SORT BY COUNT(*) DESC
Visualize BIN (Date_Claim_Made, 365, Year) , count(Amount_Claimed, Amount_Settled) FROM Claims GROUP BY BIN (Date_Claim_Made, 365, Year)
Visualize BAR SELECT monthly_rental , COUNT(monthly_rental) FROM Student_Addresses GROUP BY monthly_rental BIN date_address_from BY WEEKDAY
Visualize BAR SELECT JOB_ID , count(*) FROM employees JOIN jobs ON employees.job_id = jobs.JOB_ID WHERE salary > 8000 AND salary < 12000 AND COMMISSION_PCT IS NULL AND department_id != 40 GROUP BY JOB_ID ORDER BY count(*) ASC     Visualize LINE SELECT employee_id, mean(salary) FROM employees JOIN departments ON employees.department_id = departments.DEPARTMENT_ID WHERE salary > 8000 AND sal
Visualize BAR SELECT Committee , count(*) FROM election GROUP BY Committee ORDER BY Committee ASC
Visualize BAR SELECT Year(Date_Claim_Made), count(*) FROM Claims GROUP BY Year(Date_Claim_Made) ORDER BY Year(Date_Claim_Made) DESC
(1) Visualize TREND SELECT EMPLOYEE_ID , HIRE_DATE FROM employees WHERE EMPLOYEE_ID > 999999 ORDER BY EMPLOYEE_ID (2) Visualize TREND SELECT EMPLOYEE_ID , HIRE_DATE FROM employees WHERE EMPLOYEE_ID < 999999 ORDER BY EMPLOYEE_ID
Visualize BAR SELECT job_id , SUM(EMPLOYEE_ID) FROM employees WHERE HIRE_DATE < 2002-06-21 GROUP BY job_id , HIRE_DATE ASC
Line SELECT EMPLOYEE_ID , HIRE_DATE FROM employees GROUP BY EMPLOYEE_ID ORDER BY HIRE_DATE DESC
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM EMPLOYEES GROUP BY HIRE_DATE BIN HIRE_DATE BY Month
Visualize BIN SELECT DEPARTMENT_ID , AVG(HIRE_DATE) FROM EMPLOYEE WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' GROUP BY DEPARTMENT_ID BY weekday
1) Visualize Bar SELECT * FROM Assessment_Notes WHERE date_of_notes BETWEEN '2016-01-01' AND '2017-12-31' GROUP BY * , COUNT(*) FROM Assessment_Notes GROUP BY teacher_id ORDER BY teacher_id  2) Visualize Bar SELECT Date_address_to, AVERAGE(monthly_rental) FROM Student_Addresses WHERE date_address_from BETWEEN '2016-01-01' AND '201
Visualize BAR SELECT Code , Name , Price FROM Products GROUP BY Manufacturer
Visualize BAR SELECT JOB_ID , COUNT(*) FROM jobs, employees, job_history GROUP BY JOB_ID, EMPLOYEE_ID , DEPARTMENT_ID ORDER BY JOB_ID DESC
Visualize BAR SELECT hire_date , COUNT(hire_date) FROM employees GROUP BY hire_date ORDER BY COUNT(hire_date) ASC
Visualize HISTOGRAM SELECT * FROM Products   */
Visualize BAR SELECT manufacturer , COUNT(price) FROM Products WHERE price > 60 AND price <= 120 GROUP BY manufacturer ORDER BY COUNT(price) DESC
Visualize BAR SELECT Year , SUM(Amount_Payment) FROM Payments GROUP BY Year ORDER BY Year , SUM(Amount_Payment) DESC
1) Visualize BAR SELECT Job_ID , count(*) FROM jobs GROUP BY Job_ID 2) Visualize LINE SELECT Job_ID , count(*) FROM jobs WHERE Job_ID IN (1,2,3,4,5) GROUP BY Job_ID
Visualize BAR SELECT hire_date , COUNT(hire_date) FROM employees GROUP BY hire_date ORDER BY hire_date ASC

Visualize BAR SELECT job_id , COUNT(*) FROM employees GROUP BY job_id ORDER BY job_id ASC
Visualize BAR SELECT employee_id , avg(hire_date) FROM employees WHERE HIRE_DATE < '2002-06-21' GROUP BY employee_id ORDER BY avg(hire_date) ASC
Visualize BAR SELECT job_id , COUNT(job_id) FROM employees GROUP BY job_id
1. Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' GROUP BY HIRE_DATE BY WEEKDAY ASC  2. Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' GROUP BY HIRE_DATE BY WEEKDAY ASC, COUNT(EMPLOYEE_ID
Visualize HISTOGRAM SELECT employees.EMAIL , COUNT(employees.EMAIL) FROM departments LEFT JOIN employees ON employees.DEPARTMENT_ID = departments.DEPARTMENT_ID GROUP BY employees.EMAIL ORDER BY COUNT(employees.EMAIL) ASC
Visualize BAR SELECT hire_date , COUNT(*) FROM employees WHERE (hire_date < '2002-06-21') GROUP BY hire_date BIN hire_date BY YEAR(hire_date)
Visualize BAR SELECT other_details , AVG(monthly_rental) FROM Student_Addresses GROUP BY other_details BIN date_address_to BY time
Visualize BAR SELECT date_address_to, COUNT(date_address_to) FROM student_addresses GROUP BY date_address_to BIN date_address_to BY WEEKDAY
1. Visualize BAR SELECT MANAGER_ID , count(*) FROM employees GROUP BY JOB_ID ORDER BY MANAGER_ID ASC 2. Visualize BAR SELECT MANAGER_ID , count(*) FROM departments GROUP BY JOB_ID ORDER BY MANAGER_ID ASC 3. Visualize BAR SELECT MANAGER_ID , count(*) FROM departments GROUP BY MANAGER_ID ORDER BY MANAGER_ID ASC 4. Visualize BAR SELECT MANAGER_ID , count(*) FROM employees GROUP BY MAN
Visualize BAR SELECT student_id , other_details FROM student_addresses group by other_details  order by  count(*)  Visualize BAR SELECT behavior_incident_summary , count(*) FROM behavior_incident group by behavior_incident_summary  order by count(*)  Visualize BAR SELECT incident_summary , count(*) FROM detention group by incident_summary  order by count(*)  Visualize BAR SELECT count(*) FROM assessment_notes group by date_address_from  order by count(*)
Visualize BAR SELECT product_type_code , max(product_price) FROM Products GROUP BY product_type_code ORDER BY max(product_price) DESC
Visualize SCATTER SELECT EMPLOYEE_ID , START_DATE FROM JOB_HISTORY  JOIN EMPLOYEES WHERE MANAGER_ID > 1  JOIN DEPARTMENTS WHERE DEPARTMENT_ID > 1 WHERE DEPARTMENT_ID > 1 GROUP BY EMPLOYEE_ID, START_DATE  ORDER BY EMPLOYEE_ID, START_DATE
Visualize BAR SELECT EMPLOYEE_ID , COUNT(*) FROM employee GROUP BY employee_id ORDER BY department_id DESC Visualize PIE SELECT EMPLOYEE_ID , HIRE_DATE , EMPLOYEE_ID * AVG(TO_DAYS(hire_date) * (52 + (add_days(hire_date,'w'))) AS WEEK FROM employee , job_history WHERE (SALARY > 8000 AND SALARY < 12000 AND COMMISSION_PCT IS NULL
Visualize BAR SELECT Name, Price FROM Products WHERE Code IN (SELECT Code FROM Manufacturers) GROUP BY Name, Price ORDER BY Price ASC
Visualize BAR SELECT  other_details , COUNT(other_details) FROM teachers GROUP BY other_details
Visualize BAR SELECT Date_Payment_Made , Payment_Method_Code , Amount_Payment FROM Payments GROUP BY Date_Payment_Made ORDER BY Date_Payment_Made ASC
Visualize PIE SELECT EMPLOYEE_ID , JOB_ID , AVG(SALARY) FROM employee WHERE HIRE_DATE < '2002-06-21' GROUP BY JOB_ID ORDER BY AVG(SALARY) DESC
Visualize SCATTER SELECT DATE_DIFFERENCE(SALARY, Job_History.START_DATE) , DEPARTMENT_ID FROM employees WHERE HIRE_DATE < '2002-06-21' GROUP BY DATE_DIFFERENCE(SALARY, Job_History.START_DATE) , DEPARTMENT_ID
1.Visualize PIE SELECT job_id , COUNT(job_id) FROM job_history GROUP BY job_id 2. Visualize BAR SELECT job_id , COUNT(job_id) FROM job_history GROUP BY job_id 3.Visualize BAR SELECT department_id , COUNT(department_id) FROM employees GROUP BY department_id 4.Visualize BAR SELECT job_id , COUNT(job_id) FROM job_history WHERE hire_date < 2002-06-21 AND MANAGER_ID IS NULL AND
Visualize BAR SELECT EMAIL , COUNT(EMAIL) FROM employees GROUP BY EMAIL ORDER BY COUNT(EMAIL) DESC
1. Visualize BAR SELECT Length , Height FROM roller_coaster 2. Visualize BAR SELECT Length , Height FROM roller_coaster GROUP BY Length , Height 3. Visualize BAR SELECT Length , Height FROM roller_coaster GROUP BY Length
Visualize LINE SELECT FIRST_NAME , HIRE_DATE, AVG(EMPLOYEE_ID) FROM employees GROUP BY FIRST_NAME, HIRE_DATE, BIN HIRE_DATE BY DAY
Visualize BAR SELECT HIRE_DATE , COUNT(*) FROM employees GROUP BY HIRE_DATE , YEAR BIN HIRE_DATE BY YEAR , ORDER BY COUNT(*) DESC , YEAR
Visualize BAR SELECT job_id , AVG(employee_id) FROM jobs WHERE hire_date < '2002-06-21' GROUP BY job_id ORDER BY AVG(employee_id) ASC
Visualize BAR SELECT Manufacturer , Revenue FROM Products GROUP BY Manufacturer ORDER BY Revenue DESC
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE HIRE_DATE > '2002-06-21' AND JOB_ID = job_history.JOB_ID GROUP BY JOB_ID ORDER BY JOB_ID
Visualize LINE SELECT EMAIL, HIRE_DATE, count(*) FROM employees WHERE EMPLOYEE_ID in (1,3,5,7,9,11,13,15,17,19,21,23,25,27,29,31,33,35,37,39,41,43,45,47) AND HIRE_DATE <= 2002-06-21 GROUP BY EMAIL,HIRE_DATE ORDER BY HI
Visualize BAR SELECT payment_method_code , COUNT(*) FROM Payments GROUP BY payment_method_code ORDER BY COUNT(*) DESC

Visualize SCRATCH SELECT Manufacturer , Price FROM Products WHERE Price BETWEEN 60 AND 120 GROUP BY Manufacturer
Visualize BAR SELECT FIRST_NAME , COUNT(*) FROM employees GROUP BY FIRST_NAME ORDER BY COUNT(*) ASC
Visualize BAR SELECT DEPARTMENT_ID , SALARY , HIRE_DATE FROM employees WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' GROUP BY DEPARTMENT_ID ORDER BY SALARY ASC
Visualize BAR SELECT FIRST_NAME, LAST_NAME, COMPARE(SUM(EMPLOYEE_ID), HIRE_DATE) FROM employees GROUP BY FIRST_NAME, LAST_NAME ORDER BY COMPARE(SUM(EMPLOYEE_ID), HIRE_DATE) DESC
Visualize LINE SELECT date_address_to , SUM(monthly_rental) FROM Student_Addresses  GROUP BY date_address_to
Visualize BAR SELECT other_details , count(*) FROM student_addresses GROUP BY other_details ORDER BY other_details ASC
Visualize bar SELECT job_history.EMPLOYEE_ID , max(job_history.start_date)  FROM job_history  JOIN employee ON (job_history.EMPLOYEE_ID = employee.EMPLOYEE_ID) WHERE (job_history.JOB_ID != 999) AND (job_history.DEPARTMENT_ID != 999) GROUP BY job_history.EMPLOYEE_ID , job_history.JOB_ID ORDER BY max(job_history.start_date) DESC
Visualize BAR SELECT EMPLOYEE_ID , DEPARTMENT_ID FROM employees JOIN job_history ON EMPLOYEE_ID = JOB_ID JOIN departments ON DEPARTMENT_ID = DEPARTMENT_ID GROUP BY EMPLOYEE_ID, DEPARTMENT_ID
Visualize BAR SELECT FIRST_NAME , AVG(EMPLOYEE_ID) FROM employees GROUP BY FIRST_NAME AND WEEKDAY_OF_HIRE_DATE BIN BY EMPLOYEE_ID , SORT BY TOTAL ASC
Visualize SELECT EMPLOYEE_ID , SALARY FROM employee      WHERE SALARY BETWEEN 8000 and 12000     AND  COMMISSION_PCT IS NOT NULL      AND  DEPARTMENT_ID != 40      GROUP BY EMPLOYEE_ID      ORDER BY SALARY ASC       Visualize BAR SELECT DEPARTMENT_ID , count(EMPLOYEE_ID) FROM job_history WHERE JOB_ID = 'RE
SELECT EMPLOYEE_ID, BIN(HIRE_DATE, '2002-06-21', '2009-01-25'), COUNT(EMPLOYEE_ID) FROM employees WHERE HIRE_DATE < '2002-06-21' GROUP BY EMPLOYEE_ID, BIN(HIRE_DATE, '2002-06-21', '2009-01-25') ORDER BY BIN(HIRE_DATE, '20
Visualize SCATTER  SELECT job_history.employee_id, job_history.start_date, job_history.end_date, job_history.job_id, salary, manager_id, commission_pct FROM job_history  WHERE salary BETWEEN 8000 AND 12000  AND job_history.department_id = 40  ORDER BY manager_id DESC
Visualize BAR SELECT LAST_NAME , SALARY FROM employees WHERE LAST_NAME LIKE '%m' ORDER BY SALARY DESC
Visualize LINE SELECT EMPLOYEE_ID , COUNT(EMPLOYEE_ID) FROM employees GROUP BY EMPLOYEE_ID HAVING LAST_NAME LIKE 'D' OR LAST_NAME LIKE 'S' ORDER BY HIRE_DATE ASC
Visualize BAR SELECT hand , count(*) FROM players GROUP BY hand ORDER BY count(*) ASC
Visualize LINE SELECT employee.department_id, employee.hire_date FROM employee WHERE hire_date < 2002-06-21 GROUP BY employee.department_id ORDER BY employee.hire_date ASC
Visualize BAR SELECT Date_Claim_Made , COUNT(Date_Claim_Made) FROM Claims GROUP BY Date_Claim_Made ORDER BY COUNT(Date_Claim_Made) ASC
Visualize BAR SELECT Year , COUNT(*) FROM matches GROUP BY Year ORDER BY Year ASC
Visualize BAR SELECT hire_date , avg(Manager_id) FROM employees WHERE HIRE_DATE < '2002-06-21' GROUP BY hire_date
Visualize LINE SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE FIRST_NAME LIKE 'D' OR FIRST_NAME LIKE 'S' OR LAST_NAME LIKE 'D' OR LAST_NAME LIKE 'S' ORDER BY HIRE_DATE DESC
Visualize BAR SELECT Phone_ID , COUNT(*) FROM phone GROUP BY Carrier ORDER BY 2
Visualize LINE SELECT MANAGER_ID , AVG(HIRE_DATE) FROM EMPLOYEES GROUP BY MANAGER_ID BIN DEPARTMENT_ID BY MANAGER_ID BIN MANAGER_ID BY HIRE_DATE
Visualize A LINE SELECT AVERAGE(SALARY) FROM employee WHERE job_history.job_id IS NOT NULL GROUP BY job_history.department_id ORDER BY AVERAGE(SALARY) ASC
select distinct student_id,count(*) from (select distinct student_id,incident_type_code from behavior_incident group by student_id,incident_type_code) group by student_id order by count(*) desc  select distinct student_id,monthly_rental from (select distinct student_id,monthly_rental from students_in_detention group by student_id,monthly_rental) group by student_id order by monthly_rental desc  select distinct monthly_rental from (select distinct monthly_rental from
Visualize PIE SELECT product_type_code , SUM(product_price) FROM products GROUP BY product_type_code
Visualize SCATTER SELECT EMPLOYEE_ID , JOB_ID FROM departments  INNER JOIN employees  ON employees.DEPARTMENT_ID=departments.DEPARTMENT_ID WHERE EMPLOYEE_ID NOT IN (    select EMPLOYEE_ID FROM employees    where SALARY BETWEEN 8000 AND 12000    and DEPARTMENT_ID = 40  )  GROUP BY EMPLOYEE_ID  Visualize SC

Visualize LINE SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE HIRE_DATE < '2002-06-21' GROUP BY HIRE_DATE ORDER BY COMMISSION_PCT DESC
Visualize Line SELECT FIRST_NAME, COMMISSION_PCT, EMAIL, PHONE_NUMBER FROM Employees WHERE FIRST_NAME LIKE '%D%' OR FIRST_NAME LIKE '%S%' GROUP BY FIRST_NAME, COMMISSION_PCT, EMAIL, PHONE_NUMBER ORDER BY COMMISSION_PCT DESC, EMAIL ASC
Visualize SCATTER SELECT commission_pct , department_id FROM employees WHERE hire_date > '2002-06-21' BIN department_id BY WEEKDAY
Visualize BAR SELECT job_history.JOB_ID , SUM(salary) FROM job_history JOIN employees ON job_history.EMPLOYEE_ID = employees.EMPLOYEE_ID JOIN departments ON employees.DEPARTMENT_ID = departments.DEPARTMENT_ID JOIN jobs ON employees.JOB_ID = jobs.JOB_ID GROUP BY job_history.JOB_ID
Visualize SCATTER SELECT hire_date , commission_pct FROM employees WHERE SALARY BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NOT NULL AND DEPARTMENT_ID <> 40
Visualize BAR SELECT HIRE_DATE , sum(MANAGER_ID) FROM employees GROUP BY hire_date, rank by y , asc BIN hire_date BY year
1. Visualize PIE SELECT FIRST_NAME , LAST_NAME FROM employees WHERE HIRE_DATE BETWEEN 2002-06-21 AND 2003-06-21 GROUP BY FIRST_NAME , LAST_NAME 2. Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE HIRE_DATE BETWEEN 2002-06-21 AND 2003-06-21 GROUP BY job_id 3. Visual
Visualize BIN HIRE_DATE , count(EMPLOYEE_ID) FROM employees WHERE HIRE_DATE < '2002-06-21' GROUP BY HIRE_DATE BIN HIRE_DATE BY DAY(HIRE_DATE) ORDER BY count(EMPLOYEE_ID) DESC
Visualize BAR SELECT Payment_Method_Code , count(*) FROM Payments GROUP BY Payment_Method_Code ORDER BY count(*) ASC
Visualize BAR SELECT job_id , COUNT(*) FROM jobs WHERE FIRST_NAME LIKE ('D%' OR 'S%') GROUP BY job_id 	Visualize SCATTER SELECT EMPLOYEE_ID , MIN_SALARY , MAX_SALARY FROM jobs WHERE FIRST_NAME LIKE ('D%' OR 'S%') GROUP BY JOB_ID 	Visualize BAR SELECT job_id , AVG(SALARY) FROM jobs WHERE FIRST_NAME LIKE ('D%' OR 'S%') GROUP BY job_id
Visualize BAR SELECT HIRE_DATE , MANAGER_ID , count(*) FROM EMPLOYEES GROUP BY HIRE_DATE ORDER BY count(*)          Visualize PIE SELECT MANAGER_ID , count(*) FROM EMPLOYEES GROUP BY MANAGER_ID

Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees BIN HIRE_DATE BY WEEKDAY ORDER BY SUM(MANAGER_ID) DESC
Visualize BAR SELECT Monthly_Rental , other_details FROM Student_Addresses GROUP BY Monthly_Rental , other_details HAVING Monthly_Rental > 0
Visualize BAR SELECT Manufacturer , count(*) FROM products GROUP BY Manufacturer ORDER BY count(*) DESC
Visualize BAR SELECT Customer_Addresses.customer_id, Customer_Addresses.address_id,Customer_Addresses.date_from,Customer_Addresses.date_to FROM Customer_Addresses WHERE Customer_Addresses.customer_id= Customer.customer_id AND Customer_Addresses.address_id= Customer.customer_address.TN FROM Customers GROUP BY Customer.customer_address.TN
Visualize BAR SELECT employee_id , sum(employee_id) FROM employees WHERE hire_date < '2002-06-21' GROUP BY employee_id ORDER BY sum(employee_id) DESC
Visualize BAR SELECT department_id , COUNT(department_id) FROM employee GROUP BY JOB_ID , department_id ORDER BY department_id DESC
Visualize Bar SELECT FIRST_NAME , SALARY FROM employees WHERE FIRST_NAME BETWEEN 'D' AND 'S' AND LAST_NAME BETWEEN 'D' AND 'S' AND JOB_ID NOT IN (200, 300) GROUP BY BIN(HIRE_DATE , 15) BY WEEKDAY  ORDER BY SALARY
Visualize BAR SELECT Payment_Method_Code , count(*) FROM payments GROUP BY Payment_Method_Code ORDER BY count(*) ASC
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE hire_date <= '2002-06-21' GROUP BY HIRE_DATE BIN hire_date by weekday ORDER BY AVG(MANAGER_ID) DESC
Visualize BAR SELECT product_name , COUNT(product_name) FROM Products GROUP BY product_name ORDER BY Revenue DESC
Visualize BAR SELECT 28 , sum(department_id) FROM departments WHERE department_id <= 28 GROUP BY department_id , job_id ORDER BY sum(department_id) DESC
Visualize BAR SELECT job_id , AVG(salary) FROM jobs WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' GROUP BY job_id

visualize BAR SELECT EMPLOYEE_ID , SUM(DISTINCT DEPARTMENT_ID) FROM employees WHERE SALARY >= 8000 AND SALARY <= 12000 AND COMMISSION_PCT IS NOT NULL AND DEPARTMENT_ID <> 40 GROUP BY EMPLOYEE_ID BIN hire_date BY WEEKDAY ORDER BY COUNT(DISTINCT DEPARTMENT_ID) ASC
Visualize LINE SELECT date_address_from , monthly_rental FROM student_addresses ORDER BY date_address_from ASC
1. Visualize LINE SELECT employee_id , count(*) FROM employees WHERE SALARY > 8000 and commission is not null and department_id != 40 GROUP BY employee_id , HIRE_DATE HISTOGRAM END_DATE, JOB_ID, DEPARTMENT_ID  2. Visualize BAR SELECT employee_id , count(*) FROM job_history WHERE job_id != 40 GROUP BY employee_id

Visualize BAR SELECT FIRST_NAME, COUNT(FIRST_NAME) FROM employees WHERE FIRST_NAME like 'D' OR FIRST_NAME like 'S' GROUP BY FIRST_NAME ORDER BY COUNT(FIRST_NAME) DESC BIN HIRE_DATE BY YEAR
Visualize HISTOGRAM SELECT Phone_ID , Memory_in_G FROM phone
Visualize BAR SELECT JOB_ID , count(*) FROM jobs GROUP BY JOB_ID ORDER BY JOB_ID ASC
1. Show trends of employee_id with line chart 2. Crosstab between employee_id and hire_date with bar chart 3. Group by hire_date and make a histogram
Visualize BAR SELECT DEPARTMENT_ID , count(*) from departments  group by DEPARTMENT_ID  select Employee_ID , HIRE_DATE , sum(Department_ID) from employees group by Employee_ID  having salary>8000 and salary<12000 and Commission_PCT is null and DEPARTMENT_ID not in (40) group by Employee_ID  order by hire_date  having sum(Department_ID)>10
Visualize BAR SELECT product_price , SUM(total_value_purchased)/SUM(product_type_code) FROM Products GROUP BY product_type_code ORDER BY sum(total_value_purchased)/sum(product_type_code)
Visualize BAR SELECT other_details , COUNT(other_details) FROM Teachers GROUP BY attribute other_details
Visualize LINE SELECT SALARY , EMPLOYEE_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission IS NOT NULL AND DEPARTMENT_ID NOT EQ 40 ORDER BY SALARY ASC
Visualize BAR SELECT FIRST_NAME , COUNT(*) FROM employees WHERE MATCH (FIRST_NAME,LAST_NAME) NOT REGEXP '^(.*?)M$' GROUP BY FIRST_NAME ORDER BY FIRST_NAME ASC
Visualize LINE EMPLOYEE_ID , MANAGER_ID WHERE LAST_NAME LIKE 'D%' OR LAST_NAME LIKE 'S%' SELECT HIRE_DATE , MANAGER_ID FROM employees GROUP BY EMPLOYEE_ID , MANAGER_ID
Visualize BAR SELECT First_Name , count(*) FROM employees GROUP BY First_Name ORDER BY count(*)
Visualize SCRATTER SELECT employee_id , commission_pct FROM employee WHERE salary BETWEEN 8000 AND 12000 AND commission_pct IS NOT NULL AND department_id != 40
Visualize BAR SELECT EMPLOYEE_ID , COUNT(MANAGER_ID) FROM employees GROUP BY EMPLOYEE_ID HAVING HIRE_DATE < "2002-06-21"
1) Visualize SQUARE SELECT Commission_Pct , SALARY FROM employees WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' GROUP BY SALARY, Commission_Pct ORDER BY Commission_Pct ASC  2) Visualize SQUARE SELECT EMAIL , COUNT(EMAIL) FROM employees GROUP BY EMAIL ORDER BY COUNT(EMAIL) ASC  3) Visualize SQUARE SELECT Commission_Pct , SALARY FROM employees WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME
Visualize LINE SELECT SALARY , HIRE_DATE FROM employee GROUP BY HIRE_DATE ORDER BY HIRE_DATE ASC
Visualize BAR SELECT HIRE_DATE , COUNT(*) FROM EMPLOYEES WHERE HIRE_DATE < '2002-06-21' GROUP BY HIRE_DATE ,department_id ORDER BY HIRE_DATE ASC
Visualize LINE SELECT other_details , SUM(monthly_rental) FROM Student_Addresses GROUP BY other_details , SUM(monthly_rental)
Visualize SCATTER SELECT Price , Manufacturer FROM products GROUP BY Price ORDER BY Price ASC, Manufacturer ASC
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct IS NOT NULL GROUP BY JOB_ID , HAVING SUM(DEPARTMENT_ID) > 20
Visualize BAR SELECT  SUM(JOB_ID) , COUNT(*) FROM employees WHERE MIN_SALARY = 8000 AND MAX_SALARY = 12000 AND department_ID <> 40 AND commission_pct IS NOT NULL  GROUP BY JOB_ID ORDER BY SUM(JOB_ID) ASC
SELECT JOB_ID , SUM(SALARY) FROM job_history GROUP BY job_id , EMPLOYEE_ID , DEPARTMENT_ID ORDER BY SUM(SALARY) DESC , rank
Visualize BAR SELECT DEPARTMENT_ID , count(*) FROM employee WHERE salary BETWEEN 8000 AND 12000 AND commision_pct IS NOT NULL AND department_id != 40 GROUP BY department_id ORDER BY count(*) ASC BIN HIRE_DATE BY DAY
Visualize BAR SELECT FIRST_NAME , AVG(SALARY) FROM employee WHERE FIRST_NAME LIKE 'D' OR FIRST_NAME LIKE 'S' GROUP BY FIRST_NAME , AVG(SALARY) BY WEEKDAY ORDER BY total(SALARY) ASC
Visualize BAR SELECT Hire_Date , AVG(Job_ID) FROM employees  WHERE hire_date < '2002-06-21' GROUP BY Hire_Date BIN Hire_Date BY WEEKDAY
Visualize BAR SELECT FIRST_NAME , SUM(JOB_ID) FROM employees GROUP BY job_history.JOB_ID ORDER BY SUM(JOB_ID) ASC
1. Visualize BAR SELECT FIRST_NAME , sum(department_id) FROM employees GROUP BY JOB_ID ORDER BY sum(department_id) ASC 2. Visualize BAR SELECT MIN_SALARY , COUNT(*) FROM employees GROUP BY JOB_ID ORDER BY MIN_SALARY DESC
/* JOB */ SELECT JOB_ID , COUNT(*) FROM employees GROUP BY JOB_ID /* JOB AND DEPT */ SELECT JOB_ID , COUNT(*) FROM employees GROUP BY JOB_ID , DEPARTMENT_ID /* JOB AND EMP */ SELECT JOB_ID , COUNT(*) FROM employees GROUP BY JOB_ID , EMPLOYEE_ID /* JOB AND EMP AND DEPT */ SELECT JOB_ID , COUNT(*) FROM employees GROUP BY JOB_ID , EMPLOYEE_ID , DEPARTMENT_ID
Visualize BAR SELECT MIN_SALARY , AVG(SALARY) , job_ID FROM employees WHERE FIRST_NAME LIKE "D" OR FIRST_NAME LIKE "S" GROUP BY job_ID ORDER BY job_ID ASC
Visualize BAR SELECT JOB_ID, COUNT(*) FROM employees GROUP BY JOB_ID , SHOW JOB_ID
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE HIRE_DATE < '2002-06-21' GROUP BY HIRE_DATE BIN HIRE_DATE BY YEAR, MONTH , DAY, HOUR
Visualize HISTOGRAM SELECT hand , COUNT(hand) FROM players GROUP BY hand ORDER BY hand DESC
Visualize BAR SELECT Years_Played , COUNT(Years_Played) FROM player GROUP BY Years_Played ORDER BY COUNT(Years_Played) ASC
Visualize LINE SELECT Date_Payment_Made, COUNT(Date_Payment_Made) FROM Payments WHERE Payment_Method_Code = "VISA" GROUP BY Day_of_Week ASC
Visualize BAR SELECT Product_type_code , AVG(product_price) FROM products GROUP BY product_type_code ORDER BY AVG(product_price) DESC
Visualize BAR SELECT Manufacturer , sum(Revenue) FROM Manufacturers GROUP BY Manufacturer ORDER BY Revenue ASC
Visualize BAR SELECT job_id , SUM(manager_id) FROM employees WHERE HIRE_DATE < "2002-06-21" GROUP BY job_id ORDER BY job_id DESC

Visualize BAR SELECT JOB_ID , COUNT(*) FROM employees GROUP BY JOB_ID HAVING salary BETWEEN 8000 AND 12000 AND MANAGER_ID NOT IN (SELECT manager_id FROM departments WHERE department_id = 40) AND job_id NOT IN (SELECT job_id FROM job_history WHERE department_id = 40) ORDER BY JOB_ID
Visualize SELECT  employee.first_name , employee.last_name , job_history.job_id , (SELECT AVG(salary) FROM job_history WHERE job_history.employee_id = employee.employee_id and job_history.hire_date <= CAST(employee.hire_date AS date) and job_history.hire_date >= CAST(employee.hire_date AS date)) FROM employees WHERE hire_date <= CAST(2002-06-21 AS date) GROUP BY job_history.job_id Visual
Visualize BAR SELECT Name , Price FROM Products GROUP BY Manufacturer BETWEEN 60 AND 120
Visualize HISTOGRAM SELECT Investor, COUNT(*) FROM entrepreneur GROUP BY Investor ORDER BY COUNT(*) DESC
Visualize LINE SELECT EMPLOYEE_ID, SALARY, commission_pct FROM employees WHERE  DEPARTMENT_NUMBER <> 40 AND SALARY BETWEEN 8000 AND 12000 AND DEPARTMENT_NUMBER NOT IN (SELECT DEPARTMENT_NUMBER FROM departments WHERE DEPARTMENT_NUMBER = 40) AND commission_pct IS NOT NULL GROUP BY EMPLOYEE_ID  ORDER BY SALARY
Visualize LINE SELECT hire_date , commission_pct FROM employees WHERE hire_date BETWEEN '2001-01-01' AND '2002-06-20' GROUP BY hire_date ORDER BY hire_date ASC
Visualize BAR SELECT product_type_code , max(product_price) FROM products WHERE product_price >=50 GROUP BY product_type_code
SELECT Name , COUNT(Name) AS Total FROM Products GROUP BY Name , Revenue ORDER BY Name DESC
```sql VISUALIZE BAR SELECT job_id , SUM(salary) FROM employees WHERE HIRE_DATE <= '2002-06-21' GROUP BY job_id ```
Visualize BAR SELECT job_id , AVG(manager_id) FROM employees WHERE manager_id is not null AND salary is not null AND commission_pct is not null AND job_id not in (select job_id from job_history) AND job_id not equal to 40 GROUP BY job_id ORDER BY AVG(manager_id) DESC
Visualize BAR SELECT Code , COUNT(Products.Code) FROM Products WHERE Price <= 200 GROUP BY Manufacturer_Code ORDER BY COUNT(Products.Code) DESC
Visualize BAR SELECT FIRST_NAME , count(1) FROM employees WHERE first_name like '%D%' or first_name like '%S%' GROUP BY hire_date ASC, BAR SELECT FIRST_NAME , avg(salary) FROM employees WHERE first_name like '%D%' or first_name like '%S%' AND hire_date between '2016-04-01' and '2016-04-07' GROUP BY hire_date ASC
Visualize BAR SELECT EMPLOYEE_ID , COUNT(*) FROM employees GROUP BY EMPLOYEE_ID, JOB_ID
Visualize BAR SELECT  First_Name , AVG(Manager_ID) FROM employees GROUP BY first_name ,  weekday  order by first_name ,  weekday asc
Visualize BAR SELECT date_of_notes, COUNT(notes_id) FROM Assessment_Notes GROUP BY date_of_notes ORDER BY COUNT(notes_id) ASC
Visualize STEP LINE
Visualize PIE SELECT Investor , COUNT(DISTINCT Entrepreneur_ID) FROM entrepreneur
Visualize BAR SELECT Position , COUNT(*) FROM player GROUP BY Position ORDER BY Position ASC
Visualize BAR SELECT hire_date , COUNT(hire_date) FROM employees GROUP BY WEEKDAY(hire_date) BIN hire_date BY YEAR
Visualize PIE SELECT Competition , COUNT(Match_ID) FROM match GROUP BY Competition
Visualize LINE SELECT date_of_notes , COUNT(date_of_notes) FROM Assessment_Notes GROUP BY date_of_notes ORDER BY COUNT(date_of_notes) DESC
1. Visualize LINE SELECT EMPLOYEE_ID , MAX(HIRE_DATE) FROM employees WHERE EMPLOYEE_ID IN (SELECT EMPLOYEE_ID FROM JOB_HISTORY WHERE START_DATE > 2002-06-21) ORDER BY EMPLOYEE_ID ASC BIN EMPLOYEE_ID BY YEAR  2. Visualize BAR SELECT EMPLOYEE_ID , MAX(HIRE_DATE) FROM employees WHERE EMPLOYEE_ID IN (SELECT EMP
1. BAR SELECT EMPLOYEE_ID, COUNT(EMPLOYEE_ID) FROM employees WHERE salary between 8000 and 12000 AND MANAGER_ID != 40 AND COMMISSION_PCT IS NULL AND JOB_ID NOT IN (SELECT JOB_ID FROM job_history) GROUP BY EMPLOYEE_ID; 2. Visualize a histogram about the average salary of each department with a bar chart by the average of salary of each job .
Visualize BAR SELECT job_id , COUNT(job_id) FROM employees GROUP BY job_id ORDER BY job_id ASC
Visualize BAR SELECT  ((WEEKDAY(HIRE_DATE)+0)%7) AS BAR_WEEKDAYS, COUNT(EMPLOYEE_ID) AS BAR_COUNT , HIRE_DATE , SUM(EMPLOYEE_ID) AS BAR_SUM FROM employees WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' GROUP BY BAR_WEEKDAYS, BAR_COUNT ORDER BY BAR_COUNT
Visualize LINE SELECT [HIRE_DATE , COMMISSION_PCT], [MAX(HIRE_DATE), MAX(COMMISSION_PCT)] FROM (select * from employees WHERE SALARY BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NOT NULL AND DEPARTMENT_ID != 40 AND MANAGER_ID IS NULL) GROUP BY EMPLOYEE_ID BIN HIRE_DATE BY WEEKDAY
Visualize BAR SELECT Position , COUNT(Position) FROM match_season  GROUP BY Position ORDER BY Position DESC
Visualize BAR SELECT EMPLOYEE_ID , COUNT(hire_date) FROM employee GROUP BY EMPLOYEE_ID WHERE JOB_ID != NULL AND MANAGER_ID != NULL AND DEPARTMENT_ID != NULL AND HIRE_DATE <= '2002-06-21' GROUP BY EMPLOYEE_ID BIN HIRE_DATE BY WEEKDAY ORDER BY DEPARTMENT_ID
Visualize PIE SELECT MIN_SALARY , COUNT(*) FROM jobs GROUP BY JOB_TITLE , MIN_SALARY , JOB_TITLE , MAX_SALARY HAVING MIN_SALARY <= 12000 AND MAX_SALARY >= 18000 ORDER BY COUNT(*)
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM job_history GROUP BY JOB_ID ORDER BY COUNT(JOB_ID) ASC
Visualize BAR SELECT Name , Price FROM Products GROUP BY Name , Price BIN Price BY Revenue ASC
1. Visualize LINE CHART SELECT MANAGER_ID, (SELECT HIRE_DATE FROM EMPLOYEES WHERE EMPLOYEE_ID = EMPLOYEE_ID AND HIRE_DATE < '07-26-2015' AND JOB_ID = DEPARTMENT_ID ) AS HIRE_DATE FROM EMPLOYEES WHERE SALARY BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NOT NULL AND DEPARTMENT_ID <>
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees  WHERE HIRE_DATE < 2002-06-21 GROUP BY HIRE_DATE
Visualize LINE SELECT hire_date , MANAGER_ID FROM employees WHERE EMPLOYEE_ID <= 12 AND hire_date >= DATE('2002-06-21 00:00:00')
Visualize BAR SELECT job_id , HIRE_DATE , (SUM(EMPLOYEE_ID)) as sum_employee_id FROM employees GROUP BY HIRE_DATE, job_id, weekday
Visualize BAR SELECT job_id , COUNT(*) FROM jobs GROUP BY job_id ORDER BY COUNT(*) ASC Visualize BAR SELECT job_id , AVG(EMPLOYEE_ID) FROM job_history WHERE job_id in (SELECT job_id FROM jobs WHERE MIN_SALARY > 8000 AND MAX_SALARY < 12000 AND department_id != 40) GROUP BY job_id
LINE SELECT EMPLOYEE_ID , ABS(CAST(EMP_DATE AS DATE)-CAST(HIRE_DATE AS DATE)) AS ABS_TIME FROM employees WHERE FIRST_NAME LIKE "D" OR FIRST_NAME LIKE "S" GROUP BY EMPLOYEE_ID  */
Visualize BAR SELECT job_id , SUM(salary) FROM employees WHERE HIRE_DATE < '2002-06-21' GROUP BY job_id
Visualize LINE SELECT SALARY , department_id FROM employees WHERE SALARY BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NOT NULL AND department_id != 40  ORDER BY SALARY DESC
Visualize BAR SELECT Date_Claim_Settled , count(*) FROM Claims GROUP BY Date_Claim_Settled ORDER BY Date_Claim_Settled ASC
Visualize BAR SELECT Price , Name FROM Products WHERE Price BETWEEN 60 AND 120 GROUP BY Name, Price
Visualize LINE Select employees.*, DATE_FORMAT(HIRE_DATE,'%Y-%m-%d') as HIRE_DATE FROM employee WHERE HIRE_DATE >= '2002-06-21'    Select MANAGER_ID , count(*) FROM departments GROUP BY MANAGER_ID
Visualize BAR SELECT job_id , AVG(salary) FROM employees GROUP BY job_id HAVING MIN(hire_date) < '2002-06-21' ORDER BY job_id ASC
Visualize BAR SELECT HIRE_DATE , SUM(HIRE_DATE) FROM employees GROUP BY HIRE_DATE BIN HIRE_DATE BY WEEKDAY
Visualize BAR SELECT County_name , count(*) FROM county GROUP BY County_name ORDER BY County_name DESC
Visualize BAR SELECT HIRE_DATE , avg(SALARY) FROM employee WHERE MANAGER_ID != 40 AND SALARY > 8000 AND COMMISSION_PCT IS NOT NULL AND DEPARTMENT_ID != 40  GROUP BY HIRE_DATE ORDER BY avg(SALARY) DESC

Visualize BAR SELECT Payment_Method_Code , count(*) FROM Payments GROUP BY Payment_Method_Code , Day_of_Week_interval
Visualize BAR SELECT HIRE_DATE , EMPLOYEE_ID FROM employees ORDER BY HIRE_DATE DESC
Visualize BAR SELECT FIRST_NAME , COUNT(FIRST_NAME) FROM employees WHERE FIRST_NAME IN ('D','S') GROUP BY FIRST_NAME , hire_date ORDER BY hire_date
SELECT      EMPLOYEE_ID,     HIRE_DATE,     MANAGER_ID,     SALARY,     DEPARTMENT_ID,     COUNT(HIRE_DATE) AS HIRE_COUNT,     COUNT(MANAGER_ID) AS MANAGER_COUNT,     AVG(SALARY) AS SALARY_AVG,     AVG(MANAGER_ID) AS MANAGER_AVG,     HIRE_DATE,     JOB_
1) Visualize Bar SELECT job_id , avg(salary) FROM employees GROUP BY job_id ORDER BY avg(salary) ASC, 2) Visualize bar SELECT job_id , avg(salary) FROM employees WHERE job_id between 8000 and 12000 AND commission_pct IS NOT NULL AND department_number <> 40 GROUP BY job_id ORDER BY avg(salary) ASC
Visualize SPLINE SELECT DEPARTMENT_ID , commission_pct FROM employees WHERE ( salary BETWEEN 8000 AND 12000 AND commission_pct IS NOT NULL AND dept_id != 40 ) GROUP BY MANAGER_ID , DEPARTMENT_ID ORDER BY SALARY ASC , DEPARTMENT_ID ASC , MANAGER_ID ASC , commission_pct ASC
Visualize BAR SELECT hand , count(*) FROM players GROUP BY hand ORDER BY count(*) ASC
Visualize BAR SELECT job_id , count(*) FROM employees WHERE JOB_ID IN (SELECT DISTINCT JOB_ID FROM job_history GROUP BY job_id HAVING sum(JOB_ID IN (SELECT DISTINCT JOB_ID FROM job_history GROUP BY job_id HAVING sum(job_id IN (SELECT DISTINCT JOB_ID FROM job_history GROUP BY job_id HAVING sum(job_id IN (SELECT DISTINCT JOB_ID FROM job_history GROUP BY job_id HAVING sum(job_id IN
Visualize POINTS SELECT commission_pct , manager_id FROM employees WHERE SALARY BETWEEN 8000 and 12000 AND COMMISSION_PCT IS NOT NULL AND DEPARTMENT_ID != 40 GROUP BY manager_id ORDER BY commission_pct ASC
SELECT FIRST_NAME , HIRE_DATE , COUNT(*) FROM employees WHERE LAST_NAME LIKE "S" OR FIRST_NAME LIKE "D" GROUP BY HIRE_DATE , COUNT(*) ORDER BY COUNT(*) DESC
Visualize BAR SELECT HIRE_DATE , AVERAGE(SALARY) FROM employees  BIN HIRE_DATE BY DAY_OF_WEEK ORDER BY AVERAGE(SALARY) DESC
Visualize LINE SELECT monthly_rental , AVG(monthly_rental) FROM Student_Addresses GROUP BY DATE_ADDRESS_FROM, DATE_ADDRESS_TO
1.Visualize BAR SELECT HIRE_DATE , HIRE_DATE % 7 , sum(salary) FROM employees WHERE FIRST_NAME <> 'M' GROUP BY HIRE_DATE % 7 BIN HIRE_DATE BY YEAR 2.Visualize BAR SELECT HIRE_DATE , HIRE_DATE % 7 , sum(salary) FROM employees WHERE FIRST_NAME <> 'M' GROUP BY HIRE_DATE % 7  BIN HIRE_DATE BY MONTH
Visualize BAR SELECT product_price , COUNT(product_price) FROM products GROUP BY product_type_code ,  product_price ORDER BY product_price DESC
Visualize BAR SELECT DEPARTMENT_ID , HIRE_DATE FROM employees GROUP BY HIRE_DATE ORDER BY DEPARTMENT_ID DESC, HIRE_DATE ASC
Visualize BAR SELECT address_id , COUNT(address_id) FROM Customer_Addresses WHERE address_id = "TN" ORDER BY COUNT(address_id) DESC BIN address_id BY WEEKDAY
Visualize BAR SELECT CONCAT(First_Name, ' ', MID(Last_Name,1,1)) , COUNT(*) FROM employees WHERE FIRST_NAME LIKE '[M]%' GROUP BY CONCAT(First_Name, ' ', MID(Last_Name,1,1)) ORDER BY COUNT(*) DESC
Visualize BAR SELECT EMAIL , AVG(hire_date) FROM employees GROUP BY EMAIL ORDER BY AVG(hire_date)
Visualize LINE SELECT MANAGER_ID , COUNT(*) FROM employees GROUP BY MANAGER_ID , HIRE_DATE HAVING COUNT(*) > 100 ORDER BY COUNT(*) ASC

Visualize BAR SELECT HIRE_DATE , sum(salary) FROM employees GROUP BY HIRE_DATE BIN HIRE_DATE BY DAY_OF_WEEK ORDER BY SALARY ASC
Visualize SCATTER SELECT AVG(Price) , Manufacturer FROM Products GROUP BY Manufacturer ORDER BY AVG(Price)
SELECT Code ,  Revenue , COUNT(Code) FROM Manufacturers GROUP BY Code
Visualize LINE SELECT EMPLOYEE_ID , COUNT(*) FROM employees WHERE FIRST_NAME like "D" or FIRST_NAME like "S" GROUP BY EMPLOYEE_ID HAVING COUNT(*) > 0       ORDER BY COUNT(*) ASC       Visualize LINE SELECT EMPLOYEE_ID , COUNT(*) FROM job_history WHERE EMPLOYEE_ID in(select distinct EMPLOYEE_ID from job_history) GROUP BY EMPLOYEE_ID HAVING COUNT(*) > 0
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees  WHERE HIRE_DATE BETWEEN 2002-06-21 AND 2002-06-30 GROUP BY HIRE_DATE BIN HIRE_DATE BY WEEKDAY
Visualize STUDENT (student_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details) INNER JOIN Addresses (address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country) ON (student_id = address_id) INNER JOIN STUDENTS (student_id, first_name, middle_name, last_name, cell_mobile_number, email
Visualize BAR SELECT Participant_Type_Code , COUNT(Participant_Type_Code) FROM Participants GROUP BY Participant_Type_Code ORDER BY COUNT(Participant_Type_Code) DESC
Visualize LINE SELECT EMAIL, HIRE_DATE , MANAGER_ID FROM employee
Visualize BAR SELECT hire_date, COUNT(hire_date) FROM employees GROUP BY hire_date , bin hire_date BY WEEKDAY  ORDER BY hire_date DESC  BIN hire_date BY WEEKDAY
Select e.FIRST_NAME,e.LAST_NAME,e.SALARY,j.JOB_NAME from department d inner join employees e on d.DEPARTMENT_ID = e.DEPARTMENT_ID inner join job_history j on e.EMPLOYEE_ID = j.EMPLOYEE_ID where (e.SALARY between 8000 and 12000) and (not(j.JOB_ID=40)) Group by e.FIRST_NAME,e
Visualize BAR SELECT LAST_NAME , SALARY FROM employees GROUP BY LAST_NAME ORDER BY SALARY DESC
/* Database schema: Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID] Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID] */ /* Visualize LINE SELECT employee_id , count
Visualize BAR SELECT date_address_from , COUNT(date_address_from) FROM student_addresses GROUP BY date_address_from  ORDER BY COUNT(date_address_from) ASC  BIN date_address_from by weekday
Visualize BAR SELECT First_Name , count(*) FROM employees GROUP BY First_Name HAVING First_Name like 'm%', Order by count(*) DESC
Visualize BAR SELECT date_address_to , other_details, COUNT(other_details) FROM Student_Addresses GROUP BY other_details , BIN date_address_to BY WEEKDAY
Visualize BAR SELECT product_type_code , product_price , sum(total_amount_purchased) FROM Products GROUP BY product_type_code ORDER BY sum(total_amount_purchased) DESC
Visualize BAR SELECT EMPLOYEE_ID , COUNT(EMPLOYEE_ID) FROM employees WHERE FIRST_NAME NOT LIKE 'M%' GROUP BY EMPLOYEE_ID ORDER BY COUNT(EMPLOYEE_ID) DESC
Visualize BAR SELECT MANAGER_ID , SUM(SALARY) FROM employees WHERE HIRE_DATE < 2002-06-21 GROUP BY MANAGER_ID , HIRE_DATE ORDER BY SUM(SALARY) ASC, HIRE_DATE ASC

Visualize BAR SELECT FIRST_NAME , MANAGER_ID FROM employees GROUP BY FIRST_NAME , MANAGER_ID ORDER BY MANAGER_ID ASC
Visualize Scatter SELECT MANAGER_ID , DEPARTMENT_ID FROM departments JOIN employees WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' JOIN job_history ON EMPLOYEE_ID = EMPLOYEE_ID WHERE END_DATE IS NULL AND DEPARTMENT_ID = MANAGER_ID ORDER BY MANAGER_ID ASC
Visualize BAR SELECT LAST_NAME , SALARY FROM employees WHERE FIRST_NAME LIKE 'Ma%'
1. Visualize BAR SELECT department_id , count(*) FROM employees GROUP BY manager_id 2. Visualize BAR SELECT manager_id , count(*) FROM employees GROUP BY department_id 3. Visualize PIE SELECT department_id , count(*) FROM employees GROUP BY department_id

Visualize BAR SELECT HIRE_DATE, MIN(SALARY) AS MinSalary , AVG(SALARY) AS AvgSalary FROM employees WHERE EMPLOYEE_ID NOT IN (SELECT EMPLOYEE_ID FROM employees WHERE EMPLOYEE_ID > 100) AND HIRE_DATE < '2002-06-21' GROUP BY HIRE_DATE, MIN(SALARY) AS MinSalary , AVG(SALARY) AS AvgSalary ORDER BY HIRE
Visualize BAR SELECT manufacturer , count(distinct products.product_price) FROM products GROUP BY manufacturer ORDER BY count(distinct products.product_price) DESC
Visualize BAR SELECT job_id , COUNT(job_id) FROM employees WHERE FIRST_NAME LIKE 'D%S%' GROUP BY job_id, MIN(job_id)
Visualize LINE SELECT Amount_Payment, Date_Payment_Made FROM Payments ORDER BY Date_Payment_Made ASC
Visualize BAR SELECT Competition , SUM(Result) FROM match GROUP BY Competition ORDER BY Competition ASC
Visualize LINE SELECT EMPLOYEE_ID , COUNT(*) FROM employees WHERE SALARY BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NOT NULL OR DEPARTMENT_NUMBER != 40 AND HIRE_DATE >= '2013-01-01' GROUP BY EMPLOYEE_ID ORDER BY COUNT(*) DESC
Visualize JOIN SELECT job_history , COUNT(job_history.job_id) FROM departments JOIN jobs JOIN employees ON jobs.JOB_ID = employees.JOB_ID WHERE salary between 8000 AND 12000 AND employees.commission_pct IS NULL AND jobs.department_id <> 40 GROUP BY employees.job_id HAVING COUNT(job_history.job_id) > 1
Visualize LINE SELECT JOB_ID , SALARY , COMMISSION_PCT , MANAGER_ID FROM employees WHERE MANAGER_ID != 40 AND SALARY BETWEEN 8000 AND 12000 AND COMMISSION_PCT != NULL AND DEPARTMENT_ID != 40  GROUP BY JOB_ID ORDER BY SALARY DESC BIN JOB_ID BY DATE_OF_JOB_START , MANAGER_ID ORDER BY SALARY DESC BIN JOB_ID
Visualize BAR SELECT Products.Manufacturer , MIN(Price) FROM Products WHERE Products.Price IS NOT NULL GROUP BY Products.Manufacturer ,   Visualize BAR SELECT Products.Manufacturer , MIN(Price) FROM Products WHERE Products.Price IS NOT NULL GROUP BY Products.Manufacturer HAVING COUNT(*)>1
Visualize a bar chart BIN(MANAGER_ID) BY (DEPARTMENT_ID) ORDER BY (AVG(EMPLOYEE_SALARY)) DESC
Visualize BAR SELECT Name , SUM(Revenue) FROM Manufacturers GROUP BY Name ORDER BY sum(Revenue) asc
Visualize PIE SELECT Manufacturer , Price FROM products GROUP BY Manufacturer
Visualize BAR SELECT Revenue, Manufacturer FROM Manufacturers GROUP BY Manufacturer ORDER BY Revenue DESC
Visualize BAR SELECT EMPLOYEE_ID , DEPARTMENT_ID FROM employees WHERE MANAGER_ID IS NULL GROUP BY EMPLOYEE_ID,DEPARTMENT_ID ORDER BY EMPLOYEE_ID DESC
Visualize BAR SELECT Major , count(*) FROM Student GROUP BY Major ORDER BY count(*) DESC
Visualize Bar SELECT job_history.JOB_ID, COUNT(job_history.JOB_ID) , SUM(job_history.DEPARTMENT_ID) FROM employees LEFT JOIN jobs  ON job_history.JOB_ID = jobs.JOB_ID WHERE FIRST_NAME LIKE 'D%' or FIRST_NAME LIKE 'S%' AND job_history.JOB_ID = job_history.JOB_ID GROUP BY job_history.JOB_ID
Visualize LINE SELECT EMAIL , SALARY FROM employees GROUP BY EMAIL
SELECT other_details, COUNT(date_address_from) , SUM(monthly_rental)  FROM Student_Addresses GROUP BY other_details, DATE_ADDRESS_FROM
Visualize BAR SELECT JOB_TITLE , MAX(MAX_SALARY) FROM jobs GROUP BY JOB_TITLE ORDER BY MAX(MAX_SALARY) DESC
Visualize BAR SELECT JOB_ID , JOB_TITLE FROM jobs , employees , job_history GROUP BY JOB_ID ORDER BY SUM(SALARY) DESC BIN job_id by JOB_ID

Visualize SCATTER PLOT SELECT EMPLOYEE_ID , AVG(COMMISSION_PCT) OVER (ORDER BY EMPLOYEE_ID) AS AVG_COMMISSION_PCT FROM EMPLOYEES WHERE SALARY BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NOT NULL AND DEPARTMENT_ID <> 40 BIN AVG_COMMISSION_PCT BY HIRE_DATE
Visualize BAR SELECT Event_Details , COUNT(Event_Details) FROM events GROUP BY Event_Details  ORDER BY COUNT(Event_Details) DESC BIN Event_Details BY YEAR
Visualize BAR SELECT HIRE_DATE , COUNT(*) FROM employees WHERE HIRE_DATE < "2002-06-21" GROUP BY HIRE_DATE BY WEEKDAY
Visualize BAR SELECT name , count(*) FROM Products GROUP BY name ORDER BY count(*) ASC
Visualize BAR SELECT Committee , COUNT(*) FROM election GROUP BY Committee ORDER BY Counties_Represented DESC
Visualize BAR SELECT STATE_PROVINCE , COUNT(STATE_PROVINCE) FROM locations GROUP BY STATE_PROVINCE ORDER BY STATE_PROVINCE ASC

Visualize BAR SELECT      HIRE_DATE , COUNT(HIRE_DATE) , SUM(DEPARTMENT_ID) BIN HIRE_DATE  FROM employees GROUP BY HIRE_DATE ORDER BY HIRE_DATE ASC
Visualize Scatter SELECT Length, Height FROM Roller_Coasters
Visualize BAR SELECT Manufacturers.Revenue , Products.Price FROM Manufacturers LEFT JOIN Products ON Manufacturers.Code = Products.Manufacturer GROUP BY Manufacturers.Revenue ORDER BY Products.Price DESC
/* Visualize BAR SELECT FIRST_NAME , COUNT(*) , SUM(DEPARTMENT_ID) FROM employees GROUP BY FIRST_NAME HAVING FIRST_NAME IN ( 'D','S' ) */
Visualize BAR SELECT (FIRST_NAME + LAST_NAME) , count(*) FROM employees GROUP BY ((FIRST_NAME + LAST_NAME) BIN (EMPLOYEE_ID, HIRE_DATE)) ORDER BY count(*) ASC
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE FIRST_NAME != 'Rupert' GROUP BY WEEKDAY(HIRE_DATE),YEAR(HIRE_DATE),WEEK(HIRE_DATE),MONTH(HIRE_DATE),DAY(HIRE_DATE) ORDER BY AVG(DEPARTMENT_ID) DESC,YEAR(HIRE_DATE) ASC
Visualize BAR SELECT HIRE_DATE , count(*) FROM employees WHERE HIRE_DATE < '2002-06-21' GROUP BY HIRE_DATE ORDER BY HIRE_DATE ASC
Visualize BAR SELECT HIRE_DATE , COUNT(*) FROM EMPLOYEES WHERE HIRE_DATE <= '2002-06-21' GROUP BY HIRE_DATE ORDER BY COUNT(*) ASC
Visualize LINE SELECT EMPLOYEE_ID , SALARY , MANAGER_ID FROM employees WHERE HIRE_DATE < '2002-06-21' GROUP BY EMPLOYEE_ID , MANAGER_ID, SALARY ORDER BY SALARY ASC
Visualize LINES SELECT EMPLOYEE_ID , SALARY , MIN(HIRE_DATE) , MAX(HIRE_DATE) FROM employees GROUP BY EMPLOYEE_ID HAVING SALARY >= 8000 AND SALARY <= 12000 AND (COMMISSION_PCT IS NULL OR COMMISSION_PCT = 0) AND DEPARTMENT_ID != 40 AND MIN(HIRE_DATE) IS NOT NULL AND MAX(HIRE_DATE) IS NOT NULL ORDER BY SALARY
Visualize BAR SELECT FIRST_NAME , AVG(HIRE_DATE) FROM employees GROUP BY FIRST_NAME ORDER BY AVG(HIRE_DATE) ASC
Visualize BAR SELECT manufacturer , SUM(price) FROM Products WHERE price BETWEEN 60 AND 120 GROUP BY manufacturer ORDER BY SUM(price) ASC
Visualize BAR SELECT Event_Details , COUNT(Event_Details) FROM Events GROUP BY Event_Details ORDER BY COUNT(Event_Details) ASC
Visualize PIE SELECT Name , Price , COUNT(Price) FROM Products WHERE Price BETWEEN 60 AND 120 GROUP BY Manufacturer ORDER BY Price
Visualize BAR SELECT EMPLOYEE_ID, SALARY, SUM(salary) FROM employees INNER JOIN job_history ON EMPLOYEE_ID = EMPLOYEE_ID INNER JOIN departments ON DEPARTMENT_ID = DEPARTMENT_ID WHERE JOB_ID IS NULL AND DEPARTMENT_ID=40 GROUP BY EMPLOYEE_ID, SALARY, SUM(salary) ORDER BY HIRE_DATE ASC
Visualize BAR SELECT Date_Claim_Made , Date_Claim_Settled , COUNT(Date_Claim_Settled) FROM Claims BIN Date_Claim_Settled BY WEEKDAY , COUNT(Date_Claim_Settled) FROM Settlements BIN Date_Claim_Settled BY WEEKDAY
Visualize BAR SELECT student_id , monthly_rental FROM Student_Addresses WHERE date_address_from BETWEEN '1/1/2000' AND '3/1/2000' GROUP BY student_id
Visualize BAR SELECT Position , COUNT(*) FROM match_season GROUP BY Position ORDER BY Position ASC
Visualize BAR SELECT FIRST_NAME , COUNT(*) FROM employees GROUP BY FIRST_NAME HAVING FIRST_NAME LIKE 'D%S%'  ORDER BY COUNT(*)
Visualize LINE SELECT DEPARTMENT_ID, MIN(SALARY) AS MIN_SALARY, MAX(SALARY) AS MAX_SALARY FROM jobs WHERE HIRE_DATE <= '2002-06-21' GROUP BY JOB_ID, DEPARTMENT_ID ORDER BY MIN_SALARY ASC


Visualize BAR SELECT price , COUNT(*) FROM products WHERE price BETWEEN 60 AND 120 GROUP BY Name, Price ORDER BY COUNT(*) DESC , NAME
Visualize BAR SELECT Population , COUNT(*) FROM county GROUP BY Population ORDER BY Population DESC
SELECT student_id , monthly_rental FROM Students WHERE student_id = '997006'
Visualize BAR SELECT job_id , COUNT(job_id) FROM employees WHERE HIRE_DATE <= 2002-06-21 GROUP BY job_id ORDER BY COUNT(job_id) DESC BAR SELECT job_id , AVG(EMPLOYEE_ID) FROM employees WHERE HIRE_DATE <= 2002-06-21 GROUP BY job_id
Visualize BAR SELECT hire_date , SUM(employee_id) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission IS NOT NULL AND department_id != 40 GROUP BY hire_date ORDER BY hire_date ASC
Visualize BAR SELECT LAST_NAME , DEPARTMENT_ID FROM employee GROUP BY DEPARTMENT_ID ORDER BY LAST_NAME ASC
SELECT JOB_ID , count(*) FROM jobs WHERE hire_date < '2002-06-21' GROUP BY JOB_ID
Answer Question 4 Visualize BAR SELECT other_details , COUNT(other_details) FROM Addresses GROUP BY other_details Visualize BAR SELECT other_details , COUNT(other_details) FROM Students GROUP BY other_details Visualize BAR SELECT other_details , COUNT(other_details) FROM Teachers GROUP BY other_details Visualize BAR SELECT other_details , COUNT(other_details) FROM Assessment_Notes GROUP BY other_details Visualize BAR SELECT other_details , COUNT(other_details) FROM Behavior_Incident
Visualize BAR SELECT FIRST_NAME , hire_date , COUNT(hire_date) FROM employees GROUP BY FIRST_NAME HAVING (first_name LIKE 'D%') OR (first_name LIKE 'S%') ORDER BY hire_date ASC , COUNT(*) DESC
Visualize HISTOGRAM SELECT Participant_Type_Code , COUNT(*) FROM Participants GROUP BY Participant_Type_Code ORDER BY Participant_Type_Code ASC
Visualize BAR SELECT Investor , sum(Money_Requested) FROM Entrepreneur GROUP BY Investor ORDER BY Investor DESC
Visualize BAR SELECT Venue , count(*) FROM match GROUP BY Venue ORDER BY Date DESC
Visualize BAR SELECT LAST_NAME , COUNT(LAST_NAME) FROM employees WHERE FIRST_NAME LIKE "D" OR FIRST_NAME LIKE "S" GROUP BY LAST_NAME ORDER BY COUNT(LAST_NAME) DESC  Visualize BAR SELECT avg(hire_date) , Count(manager_id) FROM employees WHERE FIRST_NAME LIKE "D" OR FIRST_NAME LIKE "S" GROUP BY LAST_NAME ORDER BY Count(manager_id) ASC  Visualize BAR SELECT avg(hire_date)
Visualize BAR SELECT job_id , COUNT(*) FROM jobs WHERE EMPLOYEE_ID BETWEEN 1 AND 225 GROUP BY job_id ORDER BY job_id ASC
Visualize PIE SELECT County_name , COUNT(*) FROM county GROUP BY County_name
Visualize HISTOGRAM SELECT Date_Payment_Made , Count(Amount_Payment) FROM Payments GROUP BY Date_Payment_Made ORDER BY Date_Payment_Made ASC
Visualize LINE SELECT employee_id , manager_id, EMPLOYEE_ID , COUNT(EMPLOYEE_ID) FROM employees GROUP BY department_id, manager_id, employee_id HAVING salary BETWEEN 8000 AND 12000 AND commission IS NOT NULL AND department_id!=40  AND HIRE_DATE NOT IN (SELECT START_DATE FROM job_history WHERE JOB_ID=?) ORDER BY manager_id ASC
Visualize BAR SELECT Carrier , COUNT(Phone_ID) FROM phone GROUP BY Carrier ORDER BY Carrier ASC
Visualize BAR SELECT FIRST_NAME , COUNT(job_id) , AVG(department_id) FROM employees WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' GROUP BY FIRST_NAME , COUNT(job_id) , AVG(department_id) ORDER BY AVG(department_id) DESC
Visualize BAR SELECT EMPLOYEE_ID , MANAGER_ID FROM employees GROUP BY EMPLOYEE_ID ORDER BY MANAGER_ID ASC
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE FIRST_NAME NOT LIKE 'M%' GROUP BY HIRE_DATE ORDER BY HIRE_DATE ASC
Visualize LINE SELECT EMPLOYEE_ID , SALARY FROM employees WHERE HIRE_DATE < '2002-06-21'  ORDER BY SALARY ASC BIN HIRE_DATE BY YEAR
Visualize HISTOGRAM SELECT LOCATION_ID, last_name FROM employees GROUP BY LOCATION_ID, last_name HISTOGRAM YEAR BY YEAR ASC
Visualize PIE SELECT product_type_code , min(product_price) FROM products GROUP BY product_type_code
Visualize BAR SELECT Code , Name FROM Products WHERE Price BETWEEN 60 AND 120 GROUP BY Name
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM EMPLOYEE GROUP BY HIRE_DATE HAVING COUNT(HIRE_DATE) > 1


1. Visualize BAR SELECT job_id , average(salary) FROM employees group by job_id HIRE_DATE BIN BY DAY 2. Visualize BAR SELECT hire_date , count(*) FROM employees group by hire_date HIRE_DATE BIN BY DAY
1) Visualize BAR SELECT FIRST_NAME , AVG(JOB_ID) FROM employees WHERE JOB_ID IN (SELECT JOB_ID FROM job_history WHERE FIRST_NAME IN ('D', 'S')) GROUP BY FIRST_NAME 2) Visualize BAR SELECT FIRST_NAME , AVG(DEPARTMENT_ID) FROM employees WHERE JOB_ID IN (SELECT JOB_ID FROM job_history WHERE FIRST_NAME IN ('D', 'S')) GROUP BY FIRST_NAME
Visualize BAR SELECT DEPARTMENT_ID , AVG(SALARY), MIN(SALARY), MAX(SALARY) FROM EMPLOYEES  GROUP BY DEPARTMENT_ID
Visualize BAR SELECT hand , Count(*) FROM players GROUP BY hand ORDER BY Count(*) ASC
Visualize BAR SELECT Payment_Method_Code , COUNT(*) FROM Payments GROUP BY Payment_Method_Code
Visualize BAR SELECT JOB_ID , avg(salary) FROM employees WHERE JOB_HISTORY.START_DATE<2002-06-21 AND JOB_HISTORY.END_DATE >=2002-06-21 GROUP BY JOB_ID ORDER BY avg(salary) DESC
Visualize BAR SELECT DEPARTMENT_ID , COUNT(*) FROM departments GROUP BY DEPARTMENT_ID
Visualize LINE SELECT EMPLOYEE_ID , DATE_OF_TRANSACTION FROM EMPLOYEE WHERE EMPLOYEE_ID >= 628068991 AND EMPLOYEE_ID <= 628068992 AND DATE_OF_TRANSACTION > 2002-06-21 GROUP BY EMPLOYEE_ID ORDER BY DATE_OF_TRANSACTION ASC
Visualize BAR SELECT incident_type_code , count(*) FROM Behavior_Incident GROUP BY incident_type_code ORDER BY incident_type_code ASC

Visualize BAR SELECT other_details , DATE_ADDRESS_FROM FROM Student_Addresses GROUP BY other_details BIN DATE_ADDRESS_FROM BY WEEKDAY
1. SELECT EMPLOYEE_ID , ABS(JOB_ID - department_id) AS commission_pct FROM employees  WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' GROUP BY EMPLOYEE_ID, JOB_ID, DEPARTMENT_ID 2. SELECT EMPLOYEE_ID ,  ABS(JOB_ID - department_id) AS commission_pct FROM employees  WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' 3. SELECT
Visualize BAR SELECT SUM(salary) , Job_ID FROM employees WHERE salary between 8000 AND 12000 AND job_id NOT IN (40) GROUP BY job_id
Visualize BAR SELECT Code , Name FROM Products GROUP BY Name ORDER BY Code

Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees GROUP BY HIRE_DATE BIN HIRE_DATE BY WEEK Y-AXIS IN asc ORDER BY Count(HIRE_DATE)
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE HIRE_DATE <= 2002-06-21 AND EMAIL IS NOT NULL AND LAST_NAME NOT LIKE 'Test%' GROUP BY HIRE_DATE ORDER BY HIRE_DATE ASC
Visualize BAR SELECT  job_id , avg(employee_id) FROM employee  WHERE HIRE_DATE < '2002-06-21' AND JOB_ID  IN (SELECT JOB_ID FROM jobs GROUP BY JOB_ID HAVING SUM(employee_id) > 0) GROUP BY job_id ORDER BY avg(employee_id) DESC
Visualize BAR SELECT FIRST_NAME , AVG(MANAGER_ID) , count(MANAGER_ID) FROM employees  ORDER BY COUNT(MANAGER_ID) ASC BIN AVG(MANAGER_ID) BY WEEKDAY
SELECT FIRST_NAME , COUNT(EMPLOYEE_ID) , SUM(DEPARTMENT_ID) FROM employees WHERE LAST_NAME LIKE "%D%S" GROUP BY FIRST_NAME ORDER BY COUNT(EMPLOYEE_ID) DESC

Visualize SCATTER SELECT Employee_ID , DEPARTMENT_ID FROM employees WHERE (salary > 8000 AND commission IS NOT NULL ) AND ( DEPARTMENT_ID != 40)
Visualize BAR SELECT Participant_Type_Code , COUNT(*) FROM Participants GROUP BY Participant_Type_Code ORDER BY Participant_Type_Code ASC
Visualize PIE SELECT monthly_rental, COUNT(monthly_rental) FROM Student_Addresses GROUP BY monthly_rental
Visualize BAR SELECT EMPLOYEE_ID , SUM(SALARY) FROM employees GROUP BY (hire_date BIN 2002-06-21) , hire_date BY WEEKDAY
Visualize BAR SELECT employees.employee_id , count(*) FROM employees WHERE (salary BETWEEN 8000 AND 12000)        SELECT job_history.employee_id , SUM(job_history.job_id) AS JOB_ID  FROM job_history        GROUP BY job_history.employee_id        ORDER BY job_history.employee_id

Visualize BAR SELECT date_address_from , count(*) FROM Student_Addresses GROUP BY date_address_from ORDER BY date_address_from
Visualize BAR SELECT DISTINCT hire_date , department_id FROM departments WHERE department_id != 40 AND ( commission_pct IS NULL OR commission_pct = '' )     AND ( (salary >= 8000 AND salary <= 12000) OR (salary >= 12000 AND salary <= 16000) )      GROUP BY DISTINCT hire_date ORDER BY DISTINCT hire_date ASC , Visualize BAR SELECT hire_date , AVERAGE
Visualize BAR SELECT FIRST_NAME , SALARY FROM employees GROUP BY FIRST_NAME ORDER BY SALARY DESC
Visualize PIE SELECT REGION_ID , COUNT(*) FROM countries GROUP BY REGION_ID
Visualize BAR SELECT Participant_Type_Code , COUNT(Participant_Type_Code) FROM participants GROUP BY Participant_Type_Code ORDER BY Participant_Type_Code DESC
Visualize BAR SELECT job_history .*,JOB_ID, MIN(SALARY) AS min_salary , AVG(SALARY) as avg_salary, SUM(salary) as sum_salary FROM employee GROUP BY JOB_ID , DEPARTMENT_ID ORDER BY DEPARTMENT_ID ASC , job_id , DEPARTMENT_ID ASC
Visualize LINE SELECT HIRE_DATE , AVG(SALARY) FROM EMPLOYEES GROUP BY HIRE_DATE ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY WEEK
Visualize BAR SELECT DEPARTMENT_ID , count(EMPLOYEE_ID) FROM EMPLOYEES,DEPARTMENTS WHERE MANAGER_ID IN (40,10) AND DEPARTMENT_ID <> 40 AND SALARY >= 8000 AND SALARY < 12000 AND COMMISSION_PCT IS NULL AND JOB_ID IN (1,2) GROUP BY HIRE_DATE BIN 12 BIN TO SECOND ASC SUM(count(EMPLOYEE
Visualize BAR SELECT DEPARTMENT_ID , COUNT(DEPARTMENT_ID) FROM EMPLOYEE WHERE (SALARY between 8000 and 12000) AND ((COMMISSION_PCT is null OR COMMISSION_PCT = '' ) ) AND ((DEPARTMENT_ID = 40) AND (HIRE_DATE != '2018-05-10' )) GROUP BY DEPARTMENT_ID HAVING COUNT(DEPARTMENT_ID) >= 100 , department_id ,
Visualize BAR SELECT department_id , hire_date , AVG(hire_date) FROM employees WHERE first_name like 'D%' OR first_name like 'S%' GROUP BY department_id , hire_date , WEEKDAY ORDER BY hire_date ASC
Visualize BAR SELECT monthly_rental , COUNT(monthly_rental) FROM Student_Addresses GROUP BY monthly_rental BY weekday ORDER BY COUNT(monthly_rental) ASC
Visualize BAR SELECT DISTINCT(departments.department_id) FROM employee, departments, job_history WHERE employee.job_history_id = job_history.job_history_id AND employee.manager_id = departments.department_id
Visualize BAR SELECT DEPARTMENT_ID , COUNT(EMPLOYEE_ID) FROM EMPLOYEES WHERE SALARY BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NOT NULL AND DEPARTMENT_ID IS NOT 40 GROUP BY DEPARTMENT_ID ORDER BY COUNT(EMPLOYEE_ID)

Visualize BAR SELECT Date_Payment_Made , AVG(Amount_Payment) FROM Payments GROUP BY Year BIN Date_Payment_Made

Visualize BAR SELECT FIRST_NAME , SALARY FROM employees ORDER BY SALARY DESC LIMIT 5
Visualize LINE SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' GROUP BY HIRE_DATE ORDER BY HIRE_DATE ASC BIN HIRE_DATE BY WEEKDAY
Visualize BAR SELECT Job_ID , SUM(EMPLOYEE_ID) FROM job_history GROUP BY Job_ID ORDER BY Job_ID ASC
Visualize BAR SELECT EMPLOYEE_ID , SUM(HIRE_DATE) FROM employees GROUP BY MANAGER_ID , HIRE_DATE ORDER BY SUM(HIRE_DATE) ASC BIN HIRE_DATE BY WEEKDAY
Visualize HISTOGRAM SELECT MANAGER_ID , DEPARTMENT_ID FROM employees WHERE  Salary BETWEEN 8000 AND 12000 AND Commission_Pct IS NULL AND department_id NOT IN(40) GROUP BY job_id ORDER BY AVERAGE(Salary) ASC
Visualize BAR SELECT * FROM employees WHERE SALARY BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NOT NULL AND MANAGER_ID <> 15 AND DEPARTMENT_ID NOT IN (40) AND JOB_ID IN (10, 12, 14) GROUP BY HIRE_DATE, SUM(SALARY) ASC
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE job_id in (4,7) AND SALARY BETWEEN 8000 AND 12000 AND commission_pct IS NOT NULL AND department_id != 40 GROUP BY job_id ORDER BY job_id DESC


Visualize PIE SELECT hand , COUNT(*) FROM players GROUP BY hand

Visualize BAR SELECT 'D' , 'S' , 'D' , 'S' , 'D' , 'S' , 'D' , 'S' , 'D' , 'S' , 'D' FROM employee GROUP BY JOB_ID ORDER BY 'D' , 'S' DESC
Visualize BAR SELECT First_name , count(*) FROM employees WHERE First_name LIKE 'D' OR First_name LIKE 'S' GROUP BY First_name ORDER BY First_name ASC , visualize line SELECT HIRE_DATE , avg(SALARY) FROM employees WHERE First_name LIKE 'D' OR First_name LIKE 'S' GROUP BY HIRE_DATE ORDER BY HIRE_DATE ASC
SELECT date_address_from , monthly_rental , COUNT(*) FROM Student_Addresses GROUP BY date_address_from, monthly_rental BIN date_address_from BY YEAR
For all employees who have the letters D or S in their first name  Visualize BAR SELECT EMAIL , HIRE_DATE , SUM(hire_date) , MOD(hire_date, 7) , bin(hire_date, 1) AS hire_date FROM employees WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%'  GROUP BY EMAIL , HIRE_DATE , SUM(hire_date) , MOD(hire_date, 7) , bin(hire_date, 1) AS
Visualize Bar SELECT FIRST_NAME , COUNT(MANAGER_ID) , SUM(SALARY) FROM employees GROUP BY FIRST_NAME , JOB_ID HAVING FIRST_NAME LIKE 'D' OR FIRST_NAME LIKE 'S' ORDER BY SALARY ASC
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' GROUP BY JOB_ID ORDER BY SUM(EMPLOYEE_ID) DESC
1. Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM jobs, jobs_history JOIN employees ON jobs.JOB_ID=jobs_history.JOB_ID JOIN departments ON departments.DEPARTMENT_ID=employees.DEPARTMENT_ID GROUP BY JOB_ID, DEPARTMENT_ID 2. Visualize LINE SELECT start_date , end_date , JOB_ID FROM job_history, employees GROUP BY start_date, end_date, JOB_ID 3. Visualize HISTOG
Visualize BAR SELECT hire_date , count(*) FROM employees WHERE HIRE_DATE < '2002-06-21' GROUP BY hire_date ORDER BY COUNT(*) DESC

Visualize BAR SELECT date_address_from , COUNT(date_address_from) FROM Student_Addresses GROUP BY date_address_from
Visualize LINE SELECT FIRST_NAME , Count(*) FROM employees WHERE first_name like '%D%' OR first_name like '%S%' GROUP BY first_name ORDER BY Count(*) DESC
Visualize BAR SELECT Investor , COUNT(Investor) FROM entrepreneur GROUP BY Investor ORDER BY COUNT(Investor) DESC
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE JOB_ID NOT IN (SELECT JOB_ID FROM job_history WHERE JOB_ID IS NULL AND department_id = 40 ) AND SALARY between 8000 AND 12000 AND commission_pct IS NULL GROUP BY JOB_ID ORDER BY JOB_ID DESC
SELECT Service_ID , COUNT(*) FROM Events GROUP BY Service_ID
Visualize BAR SELECT Carrier , sum(Memory_in_G) FROM phone GROUP BY Carrier ORDER BY Carrier ASC
Visualize BAR SELECT LAST_NAME , SALARY FROM employees WHERE FIRST_NAME LIKE 'M%'  ORDER BY SALARY ASC
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM jobs WHERE FIRST_NAME LIKE 'D% OR S%' GROUP BY JOB_ID ORDER BY COUNT(JOB_ID)
Visualize BAR SELECT EMPLOYEE_ID , JOB_ID , SUM(SALARY) FROM employees GROUP BY EMPLOYEE_ID , JOB_ID HAVING MIN_SALARY >= 500000 HAVING MAX_SALARY <= 1000000 ORDER BY JOB_ID DESC
Visualize BAR SELECT Manufacturer , COUNT(Manufacturer) FROM Products GROUP BY Manufacturer ORDER BY Manufacturer
Visualize BAR SELECT Event_Details , COUNT(Event_Details) FROM Events GROUP BY Event_Details ORDER BY COUNT(Event_Details) ASC
1.Visualize BAR SELECT JOB_ID, SUM(MANAGER_ID) FROM job_history WHERE HIRE_DATE > '2002-06-21' GROUP BY JOB_ID 2.Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM job_history WHERE HIRE_DATE > '2002-06-21' GROUP BY JOB_ID ORDER BY SUM(MANAGER_ID) DESC
1. Table employees has attribute job_id , then join Table jobs, group by job_id 2. Table job_history has attributes job_id and department_id , then join Table employees and group by job_id, department_id 3. Visualize BAR SELECT job_id , AVG(department_id) FROM job_history GROUP BY job_id ORDER BY AVG(department_id) DESC
Visualize BAR SELECT FIRST_NAME , SALARY FROM employees GROUP BY FIRST_NAME ORDER BY SALARY ASC
Visualize BAR SELECT first_name , AVG(salary) FROM employees WHERE FIRST_NAME NOT LIKE "%M%" GROUP BY day_of_week(hire_date) HAVING COUNT(distinct manager_id) <= 2 ORDER BY AVG(salary)
Visualize BAR SELECT LAST_NAME , avg(salary) FROM employees GROUP BY LAST_NAME ORDER BY avg(salary)
Visualize TIME SELECT employee_id , date_time FROM employees WHERE hire_date = '2002-06-21' GROUP BY employee_id ORDER BY DATE_TIME ASC
Visualize SCATTER PLOT salary, commission_pct FROM employees WHERE FIRST_NAME IN ('D','S')
Visualize BAR SELECT job_id , AVG(department_id) FROM employees WHERE HIRE_DATE < '2002-06-21' GROUP BY job_id ORDER BY job_id DESC BIN job_id BY YEAR
Visualize BAR SELECT DISTINCT FIRST_NAME , sum(EMPLOYEE_ID) AS SUM FROM employees GROUP BY FIRST_NAME
Visualize  SELECT DEPARTMENT_ID, SUM(EMPLOYEE_ID) OVER (PARTITION BY JOB_ID) AS department_employee_id FROM job_history WHERE COMMISSION_PCT IS NOT NULL AND SALARY BETWEEN 8000 AND 12000  Visualize BAR SELECT SUM(EMPLOYEE_ID) OVER (PARTITION BY JOB_ID) AS department_employee_id , COUNT(*) FROM job_history WHERE COMMISSION_PCT IS NOT NULL AND
Visualize BAR SELECT D, E , HIRE_DATE , avg(employee_id) FROM employee where FIRST_NAME like '%D%' OR FIRST_NAME like '%S%' GROUP BY HIRE_DATE ORDER BY HIRE_DATE
Visualize BAR SELECT EMPLOYEE_ID, BIN(HIRE_DATE, 3, "MON") AS HIRE_DATE , avg(EMPLOYEE_ID) FROM DEPARTMENTS LEFT OUTER JOIN employees ON employees.department_id=departments.department_id  LEFT OUTER JOIN job_history ON job_history.employee_id=employees.employee_id  WHERE SALARY BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NULL  AND
Visualize BAR SELECT Payment_Method_Code, Average(Amount_Payment) FROM Payments GROUP BY Payment_Method_Code ORDER BY Average(Amount_Payment) ASC
Visualize BAR SELECT FIRST_NAME, AVG(SALARY) FROM employees WHERE (FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%') GROUP BY FIRST_NAME ORDER BY AVG(SALARY)
1. Visualize bar for all employees who have the letters D or S in their first name by the sum of employee_id , and group by attribute job_id and sort in asc by the sum employee id ,  2. Visualize bar for all employees who have the letters D or S in their first name by the sum of job_id , and group by attribute employee_id and sort in asc by the sum job_id  3. Visualize bar for all employees who have the letters D or S in their first name by the sum of job_id , and group by attribute department_id and sort
Visualize BAR SELECT CITY , COUNT(CITY) FROM locations GROUP BY CITY ORDER BY COUNT(CITY) DESC
Visualize BAR SELECT FIRST_NAME , AVG(SALARY) FROM employees GROUP BY FIRST_NAME ORDER BY AVG(SALARY) DESC
Visualize BAR SELECT Carrier , COUNT(*) FROM phone GROUP BY Carrier ORDER BY Price ASC
Visualize BAR SELECT Competition , count(*) FROM Match GROUP BY competition ORDER BY Competition ASC
Visualize BAR SELECT job_id , COUNT(employee_id) FROM employees INNER JOIN job_history ON employees.job_id = job_history.job_id WHERE employees.job_id = jobs.job_id AND employees.department_id <> 40 AND employees.salary IN (8000,12000) AND employees.commission_pct IS NULL AND employees.department_id IN (SELECT DEPARTMENT_ID FROM departments WHERE DEPARTMENT_ID = 40) GROUP BY job_id ORDER BY COUNT(employee_
Visualize SELECT Manufacturers.Code , Manufacturers.Revenue FROM Manufacturers LEFT OUTER JOIN Products ON Manufacturers.Code = Products.Manufacturer_ID  GROUP BY Manufacturers.Code ORDER BY Manufacturers.Revenue
Visualize LINE SELECT FIRST_NAME , HIRE_DATE , MANAGER_ID , SALARY FROM employees WHERE FIRST_NAME like "%D%S%" GROUP BY HIRE_DATE ORDER BY HIRE_DATE DESC

Visualize BAR SELECT Name , Price FROM Products
Visualize BAR SELECT Customer_Addresses.customer_address, count(*) FROM Customer_addresses GROUP BY customer_address, count(*) ORDER BY count(*) DESC
SELECT FIRST_NAME , SALARY , COUNT(*) , SUM(COMMISSION_PCT) AS CUMULATIVE_COMMISSION_PCT FROM EMPLOYEES WHERE FIRST_NAME LIKE 'D%S%'  GROUP BY FIRST_NAME , SALARY
Visualize HISTOGRAM SELECT DEPARTMENT_ID , FIRST_NAME FROM employees GROUP BY DEPARTMENT_ID
Visualize BAR SELECT date_address_from , COUNT(date_address_from) FROM Student_Addresses GROUP BY date_address_from ORDER BY date_address_from

Visualize BAR SELECT JOB_ID, AVG(DEPARTMENT_ID) FROM employees GROUP BY JOB_ID ORDER BY JOB_ID
Visualize BAR SELECT JOB_ID , avg(salary) FROM jobs WHERE HIRE_DATE < '2002-06-21' GROUP BY JOB_ID ORDER BY avg(salary) ASC

Visualize BAR SELECT HIRE_DATE, HIRE_DATE BIN HIRE_DATE BY WEEKDAY  FROM employees  GROUP BY HIRE_DATE  ORDER BY COUNT(HIRE_DATE) DESC
Visualize BAR SELECT COUNT(EMPLOYEE_ID) as 'employee_cnt', HIRE_DATE, SALARY FROM employees WHERE SALARY BETWEEN 8000 AND 12000 AND DEPARTMENT_ID != 40 GROUP BY HIRE_DATE , SALARY ORDER BY SALARY DESC
Visualize BAR SELECT JOB_ID , sum(department_id) FROM employees GROUP BY JOB_ID ORDER BY sum(department_id) DESC
Visualize BAR SELECT LAST_NAME , EMPLOYEE_ID FROM employees GROUP BY LAST_NAME
Visualize BAR SELECT MANAGER_ID , COUNT(*) FROM EMPLOYEES GROUP BY MANAGER_ID ORDER BY COUNT(*) DESC
Visualize BAR SELECT LName , COUNT(LName) FROM STUDENT WHERE Sex = "F" AND Age >= 18 AND Major NOT IN("600") GROUP BY LName ORDER BY COUNT(LName) DESC
Visualize BAR SELECT MANAGER_ID , FIRST_NAME , EMAIL , PHONE_NUMBER , LOCATION_ID FROM departments GROUP BY MANAGER_ID BIN FIRST_NAME BY First_name ORDER BY First_name ASC , SELECT EMPLOYEE_ID , START_DATE , END_DATE , JOB_ID , DEPARTMENT_ID FROM job_history GROUP BY EMPLOYEE_ID BIN START_DATE BY Start_date ASC
Visualize SCALE SELECT Employee_ID , COUNT(Department_ID) FROM EMPLOYEES GROUP BY Employee_ID HAVING FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%') AS D_FULL_NAME, COUNT(Department_ID) FROM EMPLOYEES GROUP BY FULL_NAME HAVING FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%') HAVING JOB_ID IS NULL, COUNT(Department_ID) FROM EMPLOY
Visualize BAR SELECT FIRST_NAME , count(*) , SUM(manager_id) FROM employees WHERE FIRST_NAME LIKE 'D% or S%' GROUP BY FIRST_NAME , HIRE_DATE ORDER BY SUM(manager_id) DESC , HIRE_DATE DESC
Visualize BAR SELECT EMPLOYEE_ID , SUM(JOB_ID) FROM employees WHERE FIRST_NAME LIKE "%D%" OR FIRST_NAME LIKE "%S%" AND JOB_ID >= 1 GROUP BY JOB_ID ORDER BY JOB_ID DESC
Visualize SCATTER SELECT payment_method_code, sum(amount_payment) AS "Amount Payment" FROM payments GROUP BY payment_method_code  HAVING payment_method_code = 'VISA' BIN payment_method_code BY day_of_week ORDER BY day_of_week DESC
SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM ( SELECT employee_id , job_id , department_id FROM employees INNER JOIN job_history INNER JOIN departments on employee_id = manager_id WHERE salary BETWEEN 8000 AND 12000 AND (department_id <> 40 OR commission_pct IS NULL)) GROUP BY JOB_ID ORDER BY SUM(DEPARTMENT_ID) DESC
Visualize BAR SELECT customer_address.customer_id , COUNT(customer_address.address_id) FROM customer_address GROUP BY customer_address.customer_id ,customer_address.customer_address.customer_id
Visualize BAR SELECT FIRST_NAME , COUNT(HIRE_DATE) FROM employees WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' GROUP BY FIRST_NAME ORDER BY COUNT(HIRE_DATE) ASC LIMIT 3
Visualize LINE SELECT Date_Payment_Made , average(amount_payment) FROM Payments  group by date_payment_made order by date_payment_made ASC
Select Entrepreneur_ID, COUNT(Investor) AS Count_Investor FROM entrepreneur GROUP BY Entrepreneur_ID ORDER BY Count_Investor DESC
1. Visualize BAR SELECT EMPLOYEE_ID , SUM(HIRE_DATE) FROM employees WHERE HIRE_DATE BETWEEN ? AND ? AND JOB_ID IS NULL AND MANAGER_ID IS NOT NULL AND department_id <> ? GROUP BY hire_date BIN hire_date BY DAY , SHOWING ? 2. Visualize BAR SELECT EMPLOYEE_ID , COUNT(MANAGER_ID) FROM employees WHERE MANAGER_ID IS NOT NULL GROUP BY EMPLOYEE_ID BIN
Visualize SELECT COUNT(*) AS 'TOTAL COUNT'  FROM employees WHERE HIRE_DATE <= '2002-06-21' GROUP BY DEPARTMENT_ID  HAVING COUNT(*) > 0 ORDER BY COUNT(*) DESC;
Visualize BAR SELECT FIRST_NAME , COUNT(job_id) FROM employees WHERE (first_name LIKE ‘S%’ OR first_name LIKE ‘D%’) GROUP BY department_id , job_id ORDER BY job_id ASC
Visualize BAR SELECT job_id , sum(department_id) FROM employees GROUP BY job_id  ORDER BY (job_id) ASC , sum(department_id) ASC
Visualize BAR SELECT Employee_ID , DISTINCT hire_date , SALARY , SUM(SALARY) FROM employees GROUP BY Employee_ID , DISTINCT hire_date  ORDER BY  SUM(SALARY) DESC , SALARY DESC
Visualize BAR SELECT D, S, FIRST_NAME FROM employees GROUP BY FIRST_NAME
Visualize BAR SELECT EMPLOYEE_ID, AVG(HIRE_DATE) FROM EMPLOYEES WHERE SALARY BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NULL AND DEPARTMENT_ID BETWEEN 0 AND 40 GROUP BY EMPLOYEE_ID BIN HIRE_DATE BY SECONDS
Visualize BAR SELECT Manufacturer , (Price / 100) AS scaled_price FROM Products GROUP BY Manufacturer ORDER BY Manufacturer
Visualize BAR SELECT County_Name , Population FROM county GROUP BY County_Name ,  Population ORDER BY Population ASC
Visualize BAR SELECT MANAGER_ID , SUM(HIRE_DATE) FROM employees WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' GROUP BY HIRE_DATE BIN HIRE_DATE BY WEEKDAY ORDER BY SUM(HIRE_DATE) DESC
Visualize BAR SELECT Headquarter , max(Revenue) FROM Manufacturer GROUP BY Headquarter
Visualize BAR SELECT EMAIL , COUNT(*) FROM employees WHERE FIRST_NAME LIKE "D%S" GROUP BY EMAIL ORDER BY COUNT(*) DESC
Visualize BAR SELECT HIRE_DATE , SALARY FROM departments JOIN employees JOIN job_history ON department_id = department_id AND employee_id = employee_id AND job_id = job_id GROUP BY HIRE_DATE BIN 10,SALARY ORDER BY SALARY DESC,BIN_ID
Visualize BAR SELECT JOB_ID , COUNT(EMPLOYEE_ID) FROM jobs GROUP BY JOB_ID ORDER BY JOB_ID ASC
Visualize BAR SELECT product_id , MAX(product_price) FROM Products GROUP BY product_type_code
Visualize BAR SELECT EMPLOYEE_ID , sum(JOB_ID) FROM jobs, job_history WHERE EMPLOYEE_ID=EMPLOYEE_ID AND job_history.JOB_ID=jobs.JOB_ID and hire_date before '2002-06-21' GROUP BY EMPLOYEE_ID ORDER BY EMPLOYEE_ID
Visualize LINE SELECT monthly_rental , Count(monthly_rental) FROM Student_Addresses GROUP BY other_details
Visualize BAR SELECT Draft_Pick_Number , Draft_Class FROM match_season GROUP BY Draft_Pick_Number
Visualize BAR SELECT JOB_ID, COUNT(*) FROM jobs GROUP BY JOB_ID ORDER BY JOB_ID ASC  Visualize BAR SELECT 0 AS Attributes, 1 as Count(job_id) FROM jobs WHERE HIRE_DATE <= '2002-06-21' AND JOB_TITLE IN ('GREEN','PURPLE') GROUP BY job_id ORDER BY Count(job_id) DESC  Visualize BAR SELECT 1 AS Attributes, 2 AS Count(job_id) FROM job_
/* Visualize a bar chart with the amount of net contributions for each candidate in millions, show them in descending order of the amount . */ Database schema: Table campaigns, columns = [*,Campaign_ID, Candidate_ID, Amount_Contribution] Answer:   /* Visualize a bar chart with the share of total contribution amount for each candidate in millions, show them in descending order of the amount . */ Database schema: Table campaigns, columns = [*,Campaign_ID, Candidate_ID, Amount_Contribution]
1) Visualize BAR SELECT FIRST_NAME , count(*) FROM employees WHERE FIRST_NAME LIKE 'D' OR FIRST_NAME LIKE 'S' GROUP BY JOB_ID 2) Visualize BAR SELECT MANAGER_ID , count(*) FROM employees GROUP BY JOB_ID ORDER BY manager_id DESC
Visualize BAR SELECT FIRST_NAME , AVG(SALARY) FROM employees WHERE FIRST_NAME LIKE "D%" OR FIRST_NAME LIKE "S%" GROUP BY FIRST_NAME, HIRE_DATE ORDER BY AVG(SALARY) DESC
/*   Bar Select  JOB_ID , EMPLOYEE_ID , SUM(EMPLOYEE_ID) , SALARY FROM jobs JOIN employees ON JOB_ID = JOB_ID GROUP BY JOB_ID */
/* Visualize BAR SELECT Investor , COUNT(*) FROM entrepreneur GROUP BY Investor */ /* Visualize BAR SELECT Entrepreneur_ID , COUNT(*) FROM entrepreneur GROUP BY Investor */
1. SELECT Employee_ID , COUNT(*) FROM departments GROUP BY Employee_ID 2. SELECT EMPLOYEE_ID , (Employees.HIRE_DATE + ' ' + Employees.SALARY + ' ' + Employees.COMMISSION_PCT) FROM employees INNER JOIN job_history ON Employees.EMPLOYEE_ID = job_history.EMPLOYEE_ID GROUP BY Employee_ID 3. Visualize LINES SELECT Employee_ID, count(*) FROM employees WHERE hire_date > '201
Visualize BAR SELECT EMPLOYEE_ID , COUNT(EMPLOYEE_ID) FROM employees GROUP BY MANAGER_ID , HIRE_DATE ORDER BY COUNT(EMPLOYEE_ID) ASC BIN HIRE_DATE BY WEEKDAY
Visualize BAR SELECT Investor , COUNT(Investor) FROM entrepreneur GROUP BY Investor ORDER BY COUNT(Investor) ASC
Visualize LINE SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE EMPLOYEE_ID IN (4,18,20,27) GROUP BY HIRE_DATE ORDER BY HIRE_DATE
Visualize BAR SELECT Years_Played , COUNT(Years_Played) FROM player GROUP BY Years_Played ORDER BY COUNT(Years_Played) ASC
Visualize HISTOGRAM SELECT customer_name , COUNT(customer_name) FROM customers GROUP BY customer_name HAVING customer_name LIKE 'TN'
Visualize BAR SELECT job_id , Count(salary) FROM employees GROUP BY job_id ORDER BY Count(salary)
Visualize BAR SELECT Name , COUNT(Price) FROM Manufacturers  JOIN Products ON Manufacturers.Code = Products.Code GROUP BY Name
Visualize LINE SELECT employee_id FROM employees WHERE SALARY BETWEEN 8000 AND 12000 AND commission IS NULL AND department_id <> 40 GROUP BY employee_id ORDER BY HIRE_DATE DESC
Visualize BAR SELECT Revenue, manufacturers.Name, manufacturers.Headquarter FROM Manufacturers ORDER BY Revenue DESC
Visualize BAR SELECT Position , sum(Years_Played) FROM player GROUP BY Position ORDER BY sum(Years_Played) DESC
Visualize BAR SELECT HIRE_DATE , COUNT(*) FROM employees GROUP BY HIRE_DATE ORDER BY COUNT(*) DESC
Plot from bar chart -> line chart , by the reference in the following code $sql = "SELECT DISTINCT EMPLOYEE_ID, MANAGER_ID, HIRE_DATE FROM EMPLOYEES WHERE FIRST_NAME LIKE 'D%' or FIRST_NAME LIKE 'S%' ";  $handler = new SQLHandler($sql); $handler->query(); $linechart = new LineChart(); $linechart->from($handler->toAssociativeArray());
Visualize BAR SELECT JOB_ID , DEPARTMENT_ID , SUM(JOB_TITLE), MIN_SALARY, MAX_SALARY, SUM(EMPLOYEE_SALARY) FROM jobs JOIN employee ON employee.JOB_ID = job.JOB_ID  GROUP BY JOB_ID , DEPARTMENT_ID , MIN_SALARY, MAX_SALARY, EMPLOYEE_SALARY
Visualize BAR SELECT job_history , COUNT(job_history) FROM job_history WHERE employees.salary BETWEEN 8000 AND 12000 AND employees.commission IS NULL AND employees.department_id != 40 GROUP BY job_history ORDER BY job_history ASC

Visualize BAR SELECT EMAIL , AVG(hire_date) FROM employees WHERE HIRE_DATE < "2002-06-21" GROUP BY EMAIL ORDER BY AVG(hire_date) ASC
Visualize BAR SELECT         Date_Payment_Made ,         AVG(amount_payment)         OVER(PARTITION BY DAYOFWEEK(Date_Payment_Made)) AS average         FROM Payments         GROUP BY Date_Payment_Made         ORDER BY DAYOFWEEK(Date_Payment_Made) ASC
Visualize CUBE SELECT JOB_ID, AVG(SALARY) FROM employees WHERE salary > 8000 AND ( commission_pct IS NOT NULL OR DEPARTMENT_ID NOT IN (40)) GROUP BY JOB_ID HAVING (DEPT_ID > 40)
Visualize BAR SELECT product_type_code , max(product_price) FROM products GROUP BY product_type_code ORDER BY max(product_price) ASC
Visualize BAR SELECT DATE_FORMAT(Hire_Date, '%w') , AVG(MANAGER_ID) FROM employee WHERE HIRE_DATE < 2002-06-21 GROUP BY DATE_FORMAT(Hire_Date, '%w') ORDER BY AVG(MANAGER_ID) ASC
Visualize BAR SELECT EMPLOYEE_ID , AVG(SALARY) FROM employees GROUP BY HIRE_DATE(DAYOFWEEK) HAVING MANAGER_ID NOT LIKE 'M%'
Scatter SELECT Code , Manufacturer FROM Products WHERE Price between 60 and 120 BIN Code BY Manufacturer
Visualize BAR SELECT MANAGER_ID , COUNT(EMPLOYEE_ID) FROM employees GROUP BY MANAGER_ID ORDER BY COUNT(EMPLOYEE_ID) ASC
Visualize SELECT HIRE_DATE , COMMISSION_PCT , COUNT(HIRE_DATE) FROM employee GROUP BY HIRE_DATE,COMMISSION_PCT  ORDER BY COUNT(HIRE_DATE) ASC
1) Visualize BAR SELECT EMPLOYEE_ID , count(*) FROM employees WHERE hire_date < 2002-06-21 GROUP BY EMPLOYEE_ID 2) Visualize BAR SELECT EMPLOYEE_ID , count(*) FROM job_history WHERE START_DATE < 2002-06-21 GROUP BY EMPLOYEE_ID 3) Visualize BAR SELECT JOB_ID , count(*) FROM job_history WHERE START_DATE < 2002-06-2
Visualize BAR SELECT Entrepreneur_ID , COUNT(Entrepreneur_ID) FROM entrepreneur GROUP BY Entrepreneur_ID
Visualize SQUARE SELECT other_details , COUNT(other_details) FROM Addresses GROUP BY address_id
Visualize BAR SELECT Competition , COUNT(*) FROM match GROUP BY Competition ORDER BY Competition DESC
Visualize BAR SELECT EMPLOYEE_ID , MIN_SALARY , MAX_SALARY , JOB_ID , SUM(COMMISSION_PCT) , COUNT(*) FROM employees LEFT JOIN job_history ON EMPLOYEE_ID = JOB_ID GROUP BY EMPLOYEE_ID , JOB_ID , MIN_SALARY , MAX_SALARY ORDER BY COUNT(*) ASC
Visualize BAR SELECT STATE_PROVINCE , count(*) FROM locations GROUP BY STATE_PROVINCE ORDER BY count(*) ASC

Visualize HISTOGRAM SELECT employee_id FROM employees GROUP BY first_name ORDER BY first_name ASC

Visualize SCATTER SELECT EMPLOYEE_ID, COMMISSION_PCT FROM employee  WHERE LAST_NAME LIKE 'S%' or FIRST_NAME LIKE 'D%' GROUP BY EMPLOYEE_ID HAVING count(*) >= 2
Visualize BAR SELECT EMPLOYEE_ID, commission_pct FROM employees GROUP BY EMPLOYEE_ID ORDER BY commission_pct DESC
Visualize BAR SELECT HIRE_DATE , SALARY FROM employees  WHERE department_number = 40 AND commission_pct is not null AND SALARY BETWEEN 8000 AND 12000 AND HIRE_DATE BETWEEN '2018-05-11' AND '2018-05-18'  ORDER BY SALARY ASC
Visualize BAR SELECT Price , COUNT(Price) FROM products WHERE Manufacturer=Minimum(Manufacturers.Code) ORDER BY Price
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE JOB_ID IN (SELECT JOB_ID FROM job_history WHERE JOB_ID IN (SELECT JOB_ID FROM jobs WHERE SALARY BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NOT NULL AND DEPARTMENT_ID = 40) AND EMPLOYEE_ID NOT IN (SELECT EMPLOYEE_ID FROM job_history) ) GROUP BY JOB_
Visualize BAR SELECT EMPLOYEE_ID , SUM(JOB_ID) FROM employee GROUP BY JOB_ID , EMPLOYEE_ID HAVING EMPLOYEE_ID LIKE 'D|S' ORDER BY SUM(JOB_ID) ASC
Visualize BAR SELECT year , COUNT(year) FROM matches GROUP BY year ORDER BY COUNT(year) DESC
Select department_id , manager_id , avg(hire_date) as average_hire_date , COUNT(*) as hire_date_count , SUM(salary) as salary_sum ,  SUM(commission_pct) as commission_pct , MIN(hire_date) , MAX(hire_date)  FROM EMPLOYEES GROUP BY manager_id , department_id , AVG(hire_date) , COUNT(*) , SUM(salary) , SUM(commission_pct)
Visualize BAR SELECT JOB_ID , avg(manager_id) FROM employees WHERE FIRST_NAME LIKE '%D%' or FIRST_NAME like '%S%' GROUP BY JOB_ID ORDER BY JOB_ID ASC
Visualize PIE SELECT Carrier , count(Carrier) FROM phone  GROUP BY Carrier
1.Visualize BAR SELECT hire_date , SALARY FROM employees GROUP BY hire_date BIN hire_date 1.5 HOUR, 2.Visualize BAR SELECT hire_date , SALARY FROM employees GROUP BY hire_date BIN hire_date 1.5 MONTH, 3.Visualize BAR SELECT hire_date , SALARY FROM employees GROUP BY hire_date BIN hire_date 1.5 YEAR, 4.Visualize BAR SELECT hire_date , SALARY FROM
1. Visualize BAR SELECT Hire_date , AVG(Employee_ID) FROM employees WHERE HIRE_DATE BETWEEN "2016-08-01" AND "2016-10-31" AND salary BETWEEN 8000 AND 12000 AND commission_pct IS NOT NULL AND department_id <> 40 GROUP BY hire_date BIN hire_date BY WEEKDAY RANK(Y) ASC 2. Visualize BAR SELECT hire_date ,
Visualize BAR SELECT First_Name ,Hire_Date , SUM(Department_ID) FROM employees GROUP BY Department_ID ORDER BY SUM(Department_ID)
Visualize BAR SELECT product_type_code , Min(product_price) FROM Products GROUP BY product_type_code ORDER BY Min(product_price) DESC
Visualize BAR SELECT Start_Date , START_DATE - HIRE_DATE, JOB_ID, COUNT(*) FROM job_history WHERE HIRE_DATE < 2002-06-21 GROUP BY JOB_ID ORDER BY START_DATE ASC, HIRE_DATE DESC
Visualize BAR SELECT HIRE_DATE ,AVG(EMPLOYEE_ID) FROM employees WHERE EMPLOYEE_ID > 15000 GROUP BY HIRE_DATE ORDER BY AVG(EMPLOYEE_ID) DESC
Visualize LINE SELECT HIRE_DATE, COMMISSION_PCT FROM employees WHERE HIRE_DATE < "2002-06-21" GROUP BY HIRE_DATE ORDER BY HIRE_DATE ASC
Visualize BAR SELECT MIN_SALARY , MAX_SALARY FROM jobs WHERE HIRE_DATE BETWEEN '2002-06-21' AND '2005-05-01' GROUP BY JOB_ID ORDER BY JOB_ID
Visualize SCATTER SELECT FIRST_NAME, COMMISSION_PCT FROM employees WHERE FIRST_NAME LIKE "%D%" OR FIRST_NAME LIKE "%S%" GROUP BY FIRST_NAME, COMMISSION_PCT HAVING COUNT(FIRST_NAME) > 0 ORDER BY COMMISSION_PCT ASC
Visualize BAR SELECT HIRE_DATE , AVG(Department_ID) FROM employees BIN HIRE_DATE BY WEEKDAY GROUP BY HIRE_DATE
Visualize BAR SELECT job_id , sum(manager_id) FROM jobs WHERE JOB_ID IN (SELECT JOB_ID FROM job_history WHERE EMPLOYEE_ID = ? AND ? < HIRE_DATE GROUP BY JOB_ID ORDER BY SUM(manager_id) DESC)

Visualize SCATTER SELECT employee_id , job_id FROM job_history WHERE hire_date < '2002-06-21'
Visualize BAR SELECT other_details , AVERAGE(monthly_rental) FROM Student_Addresses GROUP BY other_details BIN (date_address_from,time)
Visualize SCATTER SELECT employee_id , salary FROM employees WHERE FIRST_NAME LIKE '%D%'

Visualize BAR SELECT Investor , COUNT(Investor) FROM entrepreneur GROUP BY Investor ORDER BY Investor ASC
Visualize BAR SELECT Payment_Method_Code , AVERAGE(Amount_Payment) FROM Payments GROUP BY Payment_Method_Code ORDER BY Average(Amount_Payment)
Visualize BAR SELECT EMAIL , AVG(hire_date) FROM employees WHERE HIRE_DATE < '2002-06-21' GROUP BY EMAIL ORDER BY AVG(hire_date) ASC
Visualize HISTOGRAM SELECT LAST_NAME FROM employees  GROUP BY MANAGER_ID ORDER BY LAST_NAME DESC
Visualize BAR SELECT MANAGER_ID , COUNT(EMPLOYEE_ID) FROM employees GROUP BY MANAGER_ID, Type ORDER BY MANAGER_ID ASC
Visualize BAR SELECT First_Name LIKE '%D' , MANAGER_ID , HIRE_DATE , WEEKDAY() FROM employees GROUP BY FIRST_NAME , MANAGER_ID , HIRE_DATE , WEEKDAY() ORDER BY HIRE_DATE DESC , WEEKDAY() ASC
Visualize SPARKLINE  SELECT Payment_ID , Amount_Payment FROM Payments GROUP BY Payment_ID

Visualize BAR SELECT date_address_to , monthly_rental FROM Student_Addresses GROUP BY date_address_to ORDER BY date_address_to ASC BIN date_address_to BY WEEKDAY

Visualize BAR SELECT Job_ID, SUM(Salary) FROM employees WHERE Salary between 8000 and 12000 and Commission_PCT is null and MANAGER_ID is not null GROUP BY Job_ID ORDER BY SUM(Salary) DESC BIN Job_ID by WEEKDAY

Visualize BAR SELECT Code , COUNT(Code) FROM Manufacturers , Products GROUP BY Code ORDER BY Code ASC BIN Count(Code) BY WEEKDAY
Visualize LINE SELECT DEPARTMENT_ID , COUNT(EMPLOYEE_ID) FROM employees WHERE EMPLOYEE_ID IN ( SELECT EMPLOYEE_ID FROM job_history WHERE START_DATE < "2002-06-21" GROUP BY DEPARTMENT_ID )  ORDER BY DEPARTMENT_ID ASC
SELECT  	JOB_ID , 	( 		SELECT COUNT(EMPLOYEE_ID) 		FROM ( 			SELECT EMPLOYEE_ID, MIN(SALARY) OVER (PARTITION BY JOB_ID) MIN_SALARY, MAX(SALARY) OVER (PARTITION BY JOB_ID) MAX_SALARY 			FROM EMPLOYEES 		) a 	) YIELDS_DIFFERENCE , 	( 		SELECT
Visualize BAR SELECT hire_date , avg(SALARY) BY (DAY(hire_date)) GROUP BY hire_date
Visualize BAR SELECT DATEDIFF(MONTH,Hire_date, Start_date) , avg(salary) , HIRE_DATE , DEPARTMENT_ID FROM employees WHERE salary >= 8000 AND commission_pct IS NOT NULL AND department_id NOT IN (40) GROUP BY Hire_Date,Department_ID ORDER BY avg(salary)
Visualize BAR SELECT Manager_ID , HIRE_DATE , COUNT(*) FROM employees WHERE FIRST_NAME LIKE '%D%S%' GROUP BY MANAGER_ID , HIRE_DATE , COUNT(*)  GROUP BY MANAGER_ID , HIRE_DATE ORDER BY Manager_ID, HIRE_DATE  , COUNT(*) ASC

Visualize BAR SELECT Payment_Method_Code, SUM(Amount_Payment) FROM Payments GROUP BY Payment_Method_Code ORDER BY SUM(Amount_Payment) DESC
Visualize BAR SELECT FIRST_NAME , COUNT(Hire_date) FROM employees WHERE FIRST_NAME LIKE 'D' OR FIRST_NAME LIKE 'S' GROUP BY FIRST_NAME ORDER BY COUNT(Hire_Date) DESC
SELECT EMPLOYEE_ID ,  count(distinct job_id) as count_job_id ,  count(distinct department_id) as count_department_id, count(distinct job_id) as count_job_id_not_null,  count(distinct department_id) as count_department_id_not_null, count(distinct manager_id) as count_manager_id ,  count(distinct department_id) as count_department_id_in_range, count(

Visualize BAR SELECT carrier,count(distinct Phone_ID) FROM phone GROUP BY carrier
Visualize BAR SELECT product_price , product_type_code FROM Products GROUP BY product_type_code ORDER BY product_price ASC
Visualize LINE SELECT Salary , Commission_Pct FROM employees WHERE SALARY BETWEEN 8000 AND 12000 AND Commission_Pct IS NOT NULL AND DEPARTMENT_ID NOT IN (40) GROUP BY SALARY HAVING Salary <= 10000 ORDER BY SALARY ASC
Visualize BAR SELECT FIRST_NAME , AVG(MANAGER_ID)/EMPLOYEE_ID FROM employees GROUP BY FIRST_NAME ORDER BY FIRST_NAME,AVG(MANAGER_ID)/EMPLOYEE_ID
Visualize BAR SELECT job_id , sum(salary) FROM jobs WHERE hire_date < 2002-06-21 GROUP BY job_id ORDER BY job_id DESC
Visualize BAR SELECT payment_method_code , COUNT(payment_method_code) FROM customers GROUP BY payment_method_code ORDER BY COUNT(payment_method_code) ASC
Visualize BAR SELECT date_address_to , monthly_rental FROM Student_Addresses GROUP BY date_address_to ORDER BY monthly_rental DESC
SELECT     EMPLOYEE_ID,     COUNT(*) FROM     (SELECT         JOB_ID,         SUM(COMMISSION_PCT) AS COMMISSION_PCT,         MIN(SALARY) AS MIN_SALARY,         AVG(SALARY) AS AVG_SALARY,         MAX(SALARY) AS MAX_SALARY,         SUM(SALARY) AS TOTAL_SALARY,         SUM(SALARY) / SUM(COMM
Visualize BAR SELECT employees.salary , count(*) FROM employees WHERE salary > 8000 AND salary < 12000 AND commission_pct is not null AND department_id <> 40 GROUP BY job_id, employees.job_id, employees.job_id ORDER BY total DESC
Visualize BAR SELECT Payment_Method_Code , COUNT(Payment_Method_Code) FROM Payments WHERE Payment_Method_Code <> 'C' GROUP BY Payment_Method_Code ORDER BY COUNT(Payment_Method_Code) ASC
Visualize BAR SELECT EMPLOYEE_ID , COUNT(*) FROM employees GROUP BY JOB_ID , MANAGER_ID , DEPARTMENT_ID , SUM(EMPLOYEE_ID) ORDER BY JOB_ID ASC , SUM(EMPLOYEE_ID) ASC
Visualize LINE SELECT MANAGER_ID , SALARY , HIRE_DATE FROM employee WHERE HIRE_DATE > '2002-06-21' GROUP BY MANAGER_ID , SALARY , HIRE_DATE ORDER BY MANAGER_ID ASC , SALARY ASC
Visualize BAR SELECT DEPARTMENT_ID , COUNT(DEPARTMENT_ID) FROM department WHERE salary BETWEEN 8000 and 12000 AND job_id is NOT NULL AND department_id != 40 GROUP BY DEPARTMENT_ID ORDER BY count(DEPARTMENT_ID) DESC
Visualize BAR SELECT EMPLOYEE_ID, SUM(SALARY) FROM employees WHERE HIRE_DATE BETWEEN '2015-04-01' AND '2015-05-01' AND SALARY > 8000 AND SALARY <= 12000 GROUP BY EMPLOYEE_ID, HIRE_DATE ORDER BY SUM(SALARY) DESC
Visualize BAR SELECT AVG(MANAGER_ID), HIRE_DATE , COUNT(*) FROM employees GROUP BY HIRE_DATE ,WEEKDAY BIN HIRE_DATE ORDER BY AVG(MANAGER_ID) DESC
Visualize BAR SELECT hire_date , COUNT(*) FROM employees WHERE HIRE_DATE BETWEEN '8000-01-01' AND '12000-01-01' AND DEPARTMENT_ID <> 40 GROUP BY hire_date, (HOUR(hire_date)) BY WEEKDAY ORDER BY COUNT(*) ASC BIN hire_date BY WEEKDAY
Visualize LINE SELECT year , COUNT(year) FROM matches GROUP BY year
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees BIN HIRE_DATE BY DAY_OF_WEEK
Visualize HISTOGRAM SELECT job_history.DEPARTMENT_ID , job_history.START_DATE , job_history.END_DATE, job_history.JOB_ID FROM job_history GROUP BY job_history.DEPARTMENT_ID HAVING job_history.DEPARTMENT_ID = departments.DEPARTMENT_ID ORDER BY job_history.START_DATE ASC
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE LAST_NAME NOT LIKE 'M%'
Visualize BAR SELECT FIRST_NAME , SALARY FROM employees WHERE FIRST_NAME NOT LIKE 'M%' GROUP BY FIRST_NAME ORDER BY SALARY ASC
1. Visualize BAR SELECT D , count(*) FROM employees WHERE FIRST_NAME LIKE "D%" GROUP BY job_id 2. Visualize BAR SELECT S , count(*) FROM employees WHERE FIRST_NAME LIKE "S%" GROUP BY job_id 3. Visualize SCATTER SELECT MANAGER_ID , count(*) FROM job_history WHERE MANAGER_ID > EMPLOYEE_ID GROUP BY MANAGER_ID
Visualize BAR SELECT JOB_TITLE , MAX(MAX_SALARY) , MIN(MIN_SALARY) FROM jobs  WHERE MAX(MAX_SALARY) between 12000 and 18000 GROUP BY JOB_TITLE ORDER BY JOB_TITLE
Visualize LINE SELECT [FIRST_NAME], hire_date , [COMMISSION_PCT], [JOB_ID] FROM employees WHERE [FIRST_NAME] LIKE 'D%' OR [FIRST_NAME] LIKE 'S%' GROUP BY [FIRST_NAME]
Visualize BAR SELECT job_id , avg(salary) FROM employee WHERE hire_date <= 2002-06-21 GROUP BY job_id ORDER BY avg(salary) ASC
Visualize LINE SELECT HIRE_DATE , COMMISSION_PCT FROM employees GROUP BY HIRE_DATE ORDER BY HIRE_DATE ASC
Visualize BAR SELECT SALARY , COUNT(*) FROM employees WHERE SALARY BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NULL AND DEPARTMENT_ID NOT IN (40) GROUP BY SALARY ORDER BY SALARY ASC
Visualize BAR SELECT FIRST_NAME , HIRE_DATE FROM employees GROUP BY FIRST_NAME , COUNT(HIRE_DATE) FROM employees HAVING DISTINCT FIRST_NAME AND FIRST_NAME LIKE ‘%D%’ OR FIRST_NAME LIKE ‘%S%’ GROUP BY FIRST_NAME HAVING DISTINCT FIRST_NAME AND FIRST_NAME LIKE ‘%D%’ OR FIRST_NAME LIKE ‘%S%’ , RANK() OVER(ORDER BY COUNT(HIRE_DATE
Visualize BAR SELECT Manufacturer , sum(Price) FROM Products GROUP BY Manufacturer ORDER BY Manufacturer ASC
Visualize BAR SELECT  FIRST_NAME, SALARY FROM employees WHERE FIRST_NAME LIKE '%S%' OR FIRST_NAME LIKE '%D%' GROUP BY FIRST_NAME ORDER BY SALARY ASC
Visualize BAR SELECT hire_date , COUNT(hire_date) FROM employees WHERE SALARY> 8000 AND commission is not null AND department_id <> 40 GROUP BY hire_date BIN hire_date BY 1day ORDER BY COUNT(hire_date) ASC
Visualize BAR SELECT FIRST_NAME , EMAIL FROM employees WHERE LAST_NAME IN ('D','S') AND HIRE_DATE >= '2014-01-01' AND HIRE_DATE <= '2014-01-07' GROUP BY HIRE_DATE , FIRST_NAME , SALARY BY WEEKDAY BIN HIRE_DATE BY WEEKDAY
SELECT EMPLOYEE_ID , AVG(SALARY) as average_salary FROM employees WHERE SALARY BETWEEN 8000 AND 12000 and MANAGER_ID = ? and COMMISSION_PCT IS NULL and DEPARTMENT_ID <> ? AND HIRE_DATE BETWEEN ? AND ? and job_id in ( 		select job_id from job_history 		where employee_id = ? and start_date between ? and ? and end_date between ? and ?)
Visualize HISTOGRAM SELECT price, count(*) FROM products GROUP BY price ORDER BY 2 DESC
Visualize BAR SELECT Years_Played , SUM(Total_WL) FROM player GROUP BY Years_Played  ORDER BY Total_WL DESC
Visualize the correlation between commission_pct and department_id
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) / COUNT(SALARY) AS Average_Salary FROM employees WHERE FIRST_NAME NOT LIKE "M%"  GROUP BY HIRE_DATE , BIN HIRE_DATE BY DAY(HIRE_DATE)
Visualize BAR SELECT DEPARTMENT_ID , avg(job_id) FROM employees GROUP BY job_id ORDER BY avg(job_id) DESC BIN DEPARTMENT_ID BY WEEKDAY
Visualize BAR SELECT Date_Address_From , AVG(Monthly_Rental) FROM Student_Addresses  BIN Date_Address_From BY time
Visualize BAR SELECT hire_date , AVG(SALARY) FROM employees GROUP BY HIRE_DATE ORDER BY HIRE_DATE ASC
Visualize BAR SELECT DEPARTMENT_ID , SUM(EMPLOYEE_ID) FROM job_history WHERE JOB_ID IS NULL AND DEPARTMENT_ID != 40 GROUP BY DEPARTMENT_ID HAVING count(*) between 8000 and 12000 AND COUNT(COMMISSION_PCT) = 0  BIN DEPARTMENT_ID BY YEAR ORDER BY DEPARTMENT_ID
Visualize BAR SELECT department_id , avg(salary) FROM jobs GROUP BY job_id, department_id ORDER BY avg(salary) DESC
Visualize BAR SELECT date_address_from , avg(monthly_rental) AS avg FROM student_addresses GROUP BY weekday(date_address_from)
Visualize BAR SELECT Date_Claim_Settled , Count(*) FROM Claims GROUP BY Date_Claim_Settled ORDER BY Date_Claim_Settled ASC
Visualize BAR SELECT EMPLOYEE_ID , Count(Employee_ID) FROM employees GROUP BY DEPARTMENT_ID  ORDER BY Count(Employee_ID)
Visualize COLUMN SELECT Name , Revenue FROM Manufacturers GROUP BY Headquarter ASC
Select Count(*) from assessment_notes
Visualize BAR SELECT Revenue , Code FROM Manufacturers GROUP BY Revenue ORDER BY Revenue DESC
Visualize BAR SELECT date_address_to , count(*) FROM Student_Addresses GROUP BY date_address_to ORDER BY date_address_to
Visualize BAR SELECT Player , Years_Played , count(*) FROM player GROUP BY Player , Years_Played ORDER BY Years_Played DESC , count(*) DESC
Visualize BAR SELECT job_id , COUNT(EMPLOYEE_ID) FROM employees WHERE HIRE_DATE < 2002-06-21 GROUP BY job_id ORDER BY Count(EMPLOYEE_ID) DESC
Visualize BAR SELECT Price , COUNT(Code) FROM Products GROUP BY Price BIN Price BY 100 ORDER BY Price ASC, COUNT(Code) DESC, Code
Visualize BAR SELECT (EXPLAIN EXPLAIN) bedType , avg(basePrice) FROM Rooms GROUP BY bedType ORDER BY avg(basePrice) DESC
Visualize BAR SELECT County_name , COUNT(County_name) FROM county GROUP BY County_name
Visualize BAR SELECT CASE WHEN SALARY BETWEEN 8000 AND 12000 THEN 1 ELSE 0 END , salary , SUM(salary) FROM employees WHERE ((COMMISSION_PCT IS NULL) OR (DEPARTMENT_NUMBER <> 40)) GROUP BY SALARY BIN(HIRE_DATE, 1) ORDER BY salary ASC
Visualize BAR SELECT job_id, AVG(department_id) FROM employees GROUP BY job_id
Visualize BAR SELECT DEPARTMENT_ID , avg(HIRE_DATE) FROM employees  GROUP BY first_name HAVING FIRST_NAME IN(SELECT LOWER(FIRST_NAME) FROM employees WHERE FIRST_NAME IN (D,S) GROUP BY FIRST_NAME) ORDER BY avg(HIRE_DATE) DESC BIN HIRE_DATE BY YEAR
Visualize BAR SELECT CASE when first_name like 'D%' then 'Distribution of first name' else 'Average of manager_id bin hire_date' END ,sum(hire_date) FROM employees GROUP BY MANAGER_ID, FIRST_NAME ,DEPARTMENT_ID ,bin(hire_date, 'YEAR')  BY YEAR  ORDER BY sum(hire_date) DESC
Visualize BAR SELECT manager_id , COUNT(manager_id) FROM employees GROUP BY manager_id HAVING FIRST_NAME LIKE 'A%' OR LAST_NAME LIKE 'A%' GROUP BY manager_id HAVING HIRE_DATE >= '2000-10-13 08:00:00' BIN hire_date by weekday GROUP BY manager_id , weekday , COUNT(manager_id) ORDER BY weekday DESC , COUNT(manager_id) DESC
Visualize BAR SELECT Name , COUNT(Price) FROM Products WHERE Price <= 200 GROUP BY Name ORDER BY Name DESC
visualize SCATTER SELECT monthly_rental, address_id FROM Addresses GROUP BY address_id
Visualize BAR SELECT customer_address, COUNT(*) FROM Customer_Addresses WHERE address_id >= 30 GROUP BY address_id
Visualize BAR SELECT Founder , Revenue FROM Manufacturers ORDER BY Revenue DESC
Visualize GROUP BY EMPLOYEE_ID , FILTER(WHERE HIRE_DATE < 2002-06-21) BAR SELECT LAST_NAME, COUNT(LAST_NAME), AVG(MANAGER_ID) from employees GROUP BY employee_id
Visualize BAR SELECT investor , COUNT(Entrepreneur_ID) FROM entrepreneur GROUP BY investor ORDER BY COUNT(Entrepreneur_ID) ASC
Database schema: Table employee_manager, columns = [*,MANAGER_ID, MANAGER_FIRST_NAME, MANAGER_LAST_NAME]
1.Visualize BAR SELECT lastname , count(*) FROM employees GROUP BY lastname ORDER BY count(*) ASC  2.Visualize BAR SELECT job_history.Job_id , count(*) FROM job_history GROUP BY job_history.Job_id ORDER BY count(*) ASC  3.Visualize BAR SELECT job_history.Job_id , count(*) FROM job_history GROUP BY job_history.Job_id ORDER BY count(*) DESC  4.Visualize LINE SELECT DEPARTMENT_ID , COUNT(*) FROM employees GROUP BY DEPARTMENT_ID ORDER BY COUNT(*) DESC
Visualize BAR SELECT DISTINCT LAST_NAME , HIRE_DATE , DEPARTMENT_ID FROM employees GROUP BY LAST_NAME BIN HIRE_DATE BY MONTH
Visualize BAR SELECT Fname , COUNT(*) FROM Student WHERE Major = '600' GROUP BY Fname ORDER BY COUNT(*) ASC
Visualize BAR SELECT Date_Payment_Made , COUNT(Date_Payment_Made) FROM Payments  GROUP BY Date_Payment_Made ORDER BY Amount_Payment ASC
Visualize BAR SELECT SUM(salary) , DEPARTMENT_ID FROM departments JOIN employees ON departments.DEPARTMENT_ID = employees.DEPARTMENT_ID JOIN job_history ON employees.EMPLOYEE_ID = job_history.EMPLOYEE_ID GROUP BY DEPARTMENT_ID HAVING COUNT(employees.EMPLOYEE_ID) > 2
Visualize PIE SELECT Payment_Method_Code , COUNT(*) FROM Payments GROUP BY Payment_Method_Code
Visualize TABLE SELECT Count(Entrepreneur_ID) , Invested_Amount FROM entrepreneur GROUP BY Investor ORDER BY Invested_Amount DESC
Visualize BAR SELECT LAST_NAME , HIRE_DATE FROM EMPLOYEES WHERE (FIRST_NAME = "D" OR FIRST_NAME = "S") GROUP BY LAST_NAME ORDER BY HIRE_DATE ASC
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM EMPLOYEES GROUP BY HIRE_DATE ORDER BY HIRE_DATE
Visualize BAR SELECT Carrier , SUM(Memory_in_G) FROM phone GROUP BY Carrier ORDER BY Carrier
1) TREND LINE SELECT Claim_ID , Date_Claim_Made , Date_Claim_Settled , Amount_Claimed , Amount_Settled FROM Claims GROUP BY Claim_ID 2) TREND LINE SELECT Settlement_ID , Date_Claim_Settled FROM Settlements GROUP BY Settlement_ID

1.VQL = VQL-tag="visualize"     Visualize BAR SELECT HIRE_DATE , count(*) FROM employees WHERE hire_date < "2002-06-21"  GROUP BY weekday ORDER BY weekday ASC   2.VQL = VQL-tag="visualize"     Visualize BAR SELECT HIRE_DATE , count(*) FROM employees WHERE hire_date < "2002-06-21"  GROUP BY hire_date ,weekday ORDER BY weekday ASC
Visualize BAR SELECT EMAIL , avg(SALARY) FROM employees GROUP BY EMAIL ORDER BY SALARY DESC
Visualize BAR SELECT EMPLOYEE_ID , SUM(JOB_ID) , AVERAGE(SALARY) FROM employees GROUP BY EMPLOYEE_ID HAVING FIRST_NAME LIKE '%D%' OR FIRST_NAME LIKE '%S%'
Visualize BAR SELECT year , COUNT(*) FROM matches GROUP BY year ORDER BY year DESC
Visualize BAR SELECT other_details , SUM(monthly_rental) FROM Student_Addresses GROUP BY other_details
Visualize BAR SELECT Revenue , Manufacturer , Code FROM Manufacturers,Products GROUP BY Manufacturer,Code ORDER BY Revenue DESC,Code ASC
Visualize LINE SELECT SALARY , sum(salary) FROM employee GROUP BY first_name,last_name ORDER BY sum(salary) ASC
Visualize BAR SELECT Manufacturer , max(Revenue) FROM products GROUP BY Manufacturer ORDER BY max(Revenue) DESC
Visualize PIE SELECT Carrier , COUNT(*) FROM phone GROUP BY Carrier
Visualize LINE SELECT EMPLOYEE_ID ,COUNT(*) FROM employees GROUP BY EMPLOYEE_ID HAVING FIRST_NAME like 'D' OR FIRST_NAME like 'S' ORDER BY EMPLOYEE_ID ASC
Visualize BAR SELECT hire_date , COUNT(hire_date) FROM employees WHERE SALARY between 8000 and 12000 AND commission is not null AND department_number NOT in (40) GROUP BY hire_date BIN hire_date BY YEAR , Visualize LINE SELECT department_id , COUNT(employee_id) FROM departments GROUP BY department_id BIN department_id BY YEAR , Visualize BAR SELECT job_id , COUNT(job_id) FROM job_history GROUP BY job_id BIN job_id BY
Visualize BAR SELECT Founder , count(Revenue) FROM Manufacturer GROUP BY Founder ORDER BY Founder ASC
Visualize LINE SELECT MANAGER_ID , COUNT(HIRE_DATE) FROM employees GROUP BY MANAGER_ID ORDER BY COUNT(HIRE_DATE) DESC

Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees GROUP BY HIRE_DATE
Visualize LINE SELECT JOB_ID, SALARY FROM employees WHERE LAST_NAME = 'D' OR FIRST_NAME = 'S' GROUP BY JOB_ID
Visualize BAR SELECT Name , count(*) FROM Products GROUP BY Name BIN Name BY Price
1. Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees GROUP BY JOB_ID ORDER BY SUM(EMPLOYEE_ID) DESC 2. Visualize BAR SELECT job_history.end_date , EMPLOYEE_ID FROM job_history GROUP BY employee_id, end_date
Visualize BAR SELECT Committee , COUNT(Counties_Represented) FROM election GROUP BY Committee
Visualize POINT SELECT MANAGER_ID, DEPARTMENT_ID FROM DEPARTMENTS WHERE DEPARTMENT_ID NOT IN (SELECT DEPARTMENT_ID FROM JOB_HISTORY WHERE EMPLOYEE_ID = ?)  AND MANAGER_ID IN (SELECT MANAGER_ID FROM DEPARTMENTS WHERE DEPARTMENT_ID NOT IN (SELECT DEPARTMENT_ID FROM JOB_HISTORY WHERE EMPLOYEE_ID = ?)) AND SALARY BETWEEN ? AND ? AND COMMISSION_
Visualize LINE SELECT EMPLOYEE_ID , MANAGER_ID FROM employees WHERE FIRST_NAME LIKE ('%D%') OR FIRST_NAME LIKE ('%S%') GROUP BY EMPLOYEE_ID, HIRE_DATE
Visualize HISTOGRAM SELECT last_name , SUM(SALARY) FROM employees GROUP BY last_name ORDER BY SUM(SALARY) DESC, count(DISTINCT last_name) ASC
Visualize BAR SELECT job_id , AVG(SALARY) FROM jobs JOIN employees ON job_id = JOB_ID JOIN job_history on job_id = JOB_ID GROUP BY job_id ORDER BY job_id ASC
Visualize BAR SELECT JOB_ID, MIN(SALARY), AVG(SALARY) FROM employees  WHERE SALARY BETWEEN 8000 AND 12000 AND (COMMISSION_PCT IS NULL OR DEPARTMENT_ID != 40 ) GROUP BY JOB_ID ORDER BY AVG(SALARY) ASC, MIN(SALARY) ASC
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE HIRE_DATE < "2002-06-21" GROUP BY HIRE_DATE BY WEEKDAY ASC
Visualize  SELECT SUM(salary), COUNT(JOB_ID), AVG(EMPLOYEE_ID) FROM  jobs, departments, employees, job_history WHERE  JOB_ID IN (SELECT job_id FROM job_history WHERE salary BETWEEN 8000 AND 12000) AND department_id = 40 AND job_history.employee_id NOT IN (SELECT employee_id FROM jobs WHERE salary IN (8000, 12000))
Visualize BAR SELECT job_id , AVG(employee_id) FROM employees WHERE JOB_ID >= 2002-06-21 GROUP BY job_id ORDER BY AVG(employee_id) DESC
1.Create a simple table called departments_map. INSERT INTO departments_map SELECT Department_id , department_name FROM departments; 2.Query for those whose salary is in range of 8000 and 12000, create a table called commission_by_employee_id , INSERT INTO commission_by_employee_id SELECT employee_id , salary, commission_pct FROM employees WHERE salary >= 8000 AND salary <= 12000; 3.Query for those who have a job_history and has commission, create
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE EMPLOYEE_ID IN ( SELECT EMPLOYEE_ID FROM job_history WHERE HIRE_DATE < '2002-06-21') GROUP BY JOB_ID ORDER BY JOB_ID DESC BIN job_id BY YEAR
Visualize STATS SELECT FIRST_NAME , (SALARY+COMMISSION_PCT) FROM EMPLOYEES WHERE FIRST_NAME REGEXP ‘(D|S)’

Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees  WHERE HIRE_DATE < '2002-06-21'  GROUP BY HIRE_DATE BIN HIRE_DATE BY WEEKDAY ORDER BY AVG(MANAGER_ID) DESC
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE SALARY between 8000 and 12000 AND MANAGER_ID IS NOT NULL GROUP BY HIRE_DATE ORDER BY SUM(MANAGER_ID) DESC BIN HIRE_DATE BY WEEKDAY
1. Select HIRE_DATE, MANAGER_ID, AVG(MANAGER_ID) FROM employees GROUP BY HIRE_DATE ,MANAGER_ID ORDER BY AVG(MANAGER_ID) ASC BIN HIRE_DATE BY WEEKDAY 2. Visualize HIRE_DATE, MANAGER_ID FROM employees WHERE HIRE_DATE < '2002-06-21' GROUP BY HIRE_DATE ,MANAGER_ID ORDER BY AVG(MANAGER_ID) ASC B
Visualize BAR SELECT Manufacturer , count(Products) FROM Products GROUP BY Manufacturer ORDER BY Revenue DESC
Visualize BAR SELECT Competition , COUNT(Competition) FROM Match GROUP BY Competition
Visualize LINE SELECT EMPLOYEE_ID , SALARY FROM employees WHERE HIRE_DATE > '2002-06-21' GROUP BY EMPLOYEE_ID ORDER BY HIRE_DATE ASC
Visualize BAR SELECT Manager_ID , count(Manager_ID) , AVG(Manager_ID) FROM EMPLOYEES GROUP BY Manager_ID BIN HIRE_DATE BY YEAR
Visualize BAR SELECT DEPARTMENT_ID , AVG(HIRE_DATE) FROM employees GROUP BY DEPARTMENT_ID HAVING SALARY BETWEEN 8000 AND 12000 AND COMMISSION IS NOT NULL AND DEPARTMENT_ID <> 40 AND JOB_HISTORY IS NOT NULL  BIN HIRE_DATE BY TIME
Visualize LINE SELECT Date_Payment_Made , AVG(Amount_Payment) FROM Payments GROUP BY Date_Payment_Made , Payment_Method_Code
Visualize BAR SELECT job_id, JOB_TOTAL FROM jobs GROUP BY job_id ORDER BY JOB_TOTAL DESC
Visualize Bar SELECT EMPLOYEE_ID , COUNT(JOB_ID) FROM employees WHERE FIRST_NAME LIKE 'D%' or FIRST_NAME LIKE 'S%'  GROUP BY EMPLOYEE_ID , JOB_ID ORDER BY COUNT(JOB_ID) ASC BIN JOB_ID BY JOB_TITLE
Visualize PIE SELECT product_type_code , SUM(CASE WHEN product_type_code = 'A' THEN product_price ELSE 0 END) AS 'Apple' , SUM(CASE WHEN product_type_code = 'B' THEN product_price ELSE 0 END) AS 'Banana', SUM(CASE WHEN product_type_code = 'C' THEN product_price ELSE 0 END) AS 'Coconut' FROM Products GROUP BY product_type_code
1) Visualize BAR SELECT job_history.EMPLOYEE_ID , sum(job_history.JOB_ID) AS JOB_ID , COUNT(*) AS TOTALS  FROM job_history GROUP BY job_history.EMPLOYEE_ID ORDER BY 1  2) Visualize BAR SELECT EMPLOYEE_ID , department_id , count(job_id) FROM jobs GROUP BY EMPLOYEE_ID , department_id ORDER BY 2 , 1  3) Visualize BAR SELECT department_id , COUNT
SELECT          JOB_ID,          COUNT(*) AS NUMBER_OF_EMPLOYEES,         SUM(SALARY + COMMISSION_PCT) AS SALARY_SUM     FROM          jobs      INNER JOIN          employees          ON JOB_ID = JOB_ID      INNER JOIN          job_history          ON JOB_ID = JOB_ID      INNER JOIN          employees          ON EMPLOYEE_ID = JOB_
Visualize LINE SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE FIRST_NAME IN('D', 'S') GROUP BY HIRE_DATE BIN HIRE_DATE BY WEEKDAY ORDER BY SUM(SALARY) DESC
Visualize BAR SELECT name , population FROM county GROUP BY name ORDER BY population
Visualize BAR SELECT HIRE_DATE , Average(manager_id) FROM employee WHERE SALARY between 8000 and 12000 AND HIRE_DATE NOT IN (SELECT HIRE_DATE FROM JOB_HISTORY WHERE JOB_ID=5) AND MANAGER_ID is not null AND MANAGER_ID != 40  GROUP BY HIRE_DATE ORDER BY Average(manager_id) DESC
Visualize BAR SELECT hire_date , SUM(salary) FROM employee WHERE salary between 8000 and 12000 and (department_id != 40 or commission_pct is null or commission_pct <> 0 or job_history.job_id is null) GROUP BY hire_date BIN hire_date by time , desc
Visualize SCATTER SELECT Payment_Method_Code , Amount_Payment FROM Payments GROUP BY Payment_Method_Code  BIN Date_Payment_Made YEAR ORDER BY Amount_Payment
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE FIRST_NAME <> "M" GROUP BY HIRE_DATE
Visualize BAR SELECT first_name , sum(employee_id) FROM employees GROUP BY first_name BIN hire_date BY WEEKDAY
Visualize BAR SELECT FIRST_NAME, AVG(MANAGER_ID) FROM employees GROUP BY FIRST_NAME, AVG(MANAGER_ID) ORDER BY AVG(MANAGER_ID) ASC
Visualize BAR SELECT SUBSTRING_INDEX(LAST_NAME,CONCAT(CONCAT('first ',' ','FIRST_NAME'),', '),1,1), AVERAGE(SALARY) FROM employees GROUP BY SUBSTRING_INDEX(LAST_NAME,CONCAT(CONCAT('first ',' ','FIRST_NAME'),', '),1,1) ORDER BY AVERAGE(SALARY) ASC
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees GROUP BY Is_full_time ORDER BY SUM(HIRE_DATE) ASC BIN HIRE_DATE BY WEEKDAY
SELECT EMPLOYEE_ID FROM employees GROUP BY EMPLOYEE_ID HAVING FIRST_NAME LIKE D OR S AND COMMISSION_PCT IS NOT NULL;
Visualize BAR SELECT Dept , SUM(Department_ID) FROM employees GROUP BY Dept ORDER BY SUM(Department_ID) ASC
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) , SUM(salary) BIN (HIRE_DATE) FROM employees GROUP BY FIRST_NAME, LAST_NAME, HIRE_DATE ORDER BY FIRST_NAME, LAST_NAME, HIRE_DATE ASC
Visualize BAR SELECT LAST_NAME , DEPARTMENT_ID FROM employees GROUP BY LAST_NAME ORDER BY LAST_NAME ASC
Visualize BAR SELECT Payment_Method_Code , AVG(Amount_Payment) FROM Payments GROUP BY Payment_Method_Code ORDER BY AVG(Amount_Payment) ASC
Visualize BAR SELECT JOB_ID , AVG(manager_id) FROM jobs WHERE HIRE_DATE < '2002-06-21' GROUP BY JOB_ID
Visualize BAR SELECT Payment_Method_Code , count(*) FROM Payments GROUP BY payment_method_code ORDER BY count(*) DESC
Visualize LINE SELECT SALARY , COUNT(SALARY) FROM EMPLOYEES WHERE FIRST_NAME != 'N/A' AND LAST_NAME != 'N/A' GROUP BY HIRE_DATE ASC SORT SALARY ASC
Visualize BAR SELECT FIRST_NAME , HIRE_DATE , SALARY , sum(salary) FROM employees GROUP BY FIRST_NAME HAVING FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' BIN HIRE_DATE by YEAR order by salary DESC, hire_date ASC
Visualize BAR SELECT EMPLOYEE_ID , SUM(DEPARTMENT_ID) FROM employees WHERE SALARY IN (8000,12000) AND COMMISSION_PCT IS NOT NULL AND JOB_ID NOT IN (40) GROUP BY EMPLOYEE_ID ORDER BY SUM(DEPARTMENT_ID) ASC
Visualize BAR SELECT Participant_Type_Code , count(*) FROM Participants GROUP BY Participant_Type_Code
Visualize BAR SELECT JOB_ID , COUNT(*) FROM employees WHERE JOB_ID IN (SELECT JOB_ID FROM job_history WHERE HIRE_DATE > '2002-06-21') GROUP BY JOB_ID ORDER BY COUNT(*)
Visualize BAR SELECT EMPLOYEE_ID FROM employees WHERE SALARY BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NULL AND DEPARTMENT_ID != 40  ORDER BY EMPLOYEE_ID ASC Visualize BAR SELECT HIRE_DATE , count(*) FROM employees WHERE SALARY BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NULL AND DEPARTMENT_ID != 40  GROUP BY HIRE
Visualize BAR SELECT Salary , AVG(HIRE_DATE) FROM employees WHERE (JOB_ID NOT IN ('124','125','126','127','128','129')) AND DEPARTMENT_ID NOT IN (40,41,42) AND (COMMISSION_PCT IS NOT NULL OR MANAGER_ID=20) AND (HIRE_DATE >= '2018-01-01' AND HIRE_DATE < '2018-12-3
Visualize BAR SELECT manager_id , COUNT(*) , AVG(hire_date) FROM employees GROUP BY EMPLOYEE_ID , AVG(hire_date) ORDER BY AVG(hire_date) ASC
Visualize BAR SELECT Price , count(Manufacturer.Code) FROM Products WHERE Price >=60 AND Price <120 AND Manufacturer.Code IN (select Code from Manufacturers) GROUP BY Manufacturer.Code ORDER BY Price ASC
Visualize PIE SELECT Count(Event_ID) AS Count ,Event_Details FROM Events GROUP BY Event_Details ORDER BY Count DESC
Visualize LINE SELECT EMPLOYEE_ID , DEPARTMENT_ID FROM departments INNER JOIN employees ON (departments.DEPARTMENT_ID = employees.DEPARTMENT_ID) WHERE employees.FIRST_NAME LIKE 'D%' or employees.FIRST_NAME LIKE 'S%' AND employees.DEPARTMENT_ID = job_history.DEPARTMENT_ID ORDER BY employees.FIRST_NAME, employees.HIRE_DATE
Visualize BAR SELECT FIRST_NAME , SALARY FROM employees  WHERE FIRST_NAME = 'M' ORDER BY FIRST_NAME
Visualize BAR SELECT employee_id , SUM(department_id) ,JOB_ID FROM job_history WHERE JOB_ID IN (SELECT job_id from jobs WHERE HIRE_DATE <= '2002-06-21' GROUP BY job_id) AND EMPLOYEE_ID = employee_id GROUP BY employee_id , JOB_ID  ORDER BY SUM(department_id)
Visualize BAR SELECT (EMPLOYEE_ID , SUM(salary) OVER (BIN BY HIRE_DATE ORDER BY HIRE_DATE RANGE BETWEEN 8000 AND 12000)) AS EMP_ID , SUM(salary) OVER (BIN BY HIRE_DATE ORDER BY HIRE_DATE RANGE BETWEEN 8000 AND 12000) FROM employees WHERE (commission_pct IS NULL OR department_number = 40) GROUP BY (E
Visualize BAR SELECT Years_Played, COUNT(Years_Played) FROM player GROUP BY Years_Played
Visualize LINE SELECT FIRST_NAME , MIN(HIRE_DATE) FROM employees WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' GROUP BY FIRST_NAME ORDER BY HIRE_DATE ASC
1) Visualize BAR SELECT hire_date , COUNT(*) FROM employees WHERE salary < 12000 OR hire_date not in (select start_date from job_history WHERE job_id = 810) GROUP BY hire_date , BIN hire_date BY WEEKDAY 2) Visualize BAR SELECT SUM(employee_id) FROM employees WHERE salary < 12000 AND (hire_date not in (select start_date from job_history WHERE job_id = 810) OR commission_pct is
Visualize Scatter SELECT student_id, monthly_rental FROM students_in_detention GROUP BY student_id
Visualize BAR SELECT FIRST_NAME, HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees GROUP BY FIRST_NAME BIN HIRE_DATE BY WEEKEND

Visualize LINE SELECT date_address_to , MIN(date_address_from), MAX(date_address_from) FROM Student_Addresses GROUP BY date_address_to
Visualize BAR SELECT employee_id , job_id , sum(salary) FROM employees WHERE (first_name LIKE '%D%') OR (first_name LIKE '%S%') GROUP BY job_id , employee_id ORDER BY job_id , employee_id
1. Visualize LINE SELECT DEPARTMENT_ID , COUNT(DEPARTMENT_ID) FROM departments JOIN employees ON (employees.DEPARTMENT_ID = departments.DEPARTMENT_ID) WHERE HIRE_DATE < '2002-06-21' GROUP BY DEPARTMENT_ID; 2. Visualize BAR SELECT HIRE_DATE , COUNT(DEPARTMENT_ID) FROM employees JOIN departments ON (departments.DEPARTMENT_ID = employees.DEPARTMENT_ID) WHERE HIRE_DATE <

Visualize BAR SELECT (EMPLOYEE_ID, JOB_ID) , count(*) , avg(salary) FROM EMPLOYEES GROUP BY EMPLOYEE_ID, JOB_ID ,count(*)  ORDER BY count(*) ASC  Visualize BAR SELECT (EMPLOYEE_ID, JOB_ID) , avg(salary) , MIN(salary) , MAX(salary) FROM EMPLOYEES GROUP BY EMPLOYEE_ID, JOB_ID  ORDER BY avg(
Visualize line SELECT SALARY FROM employees WHERE HIRE_DATE >= '2002-06-21' GROUP BY SALARY ORDER BY SALARY
Visualize LINE SELECT other_details , amount_of_date_address_from , amount_of_date_address_to FROM Student_Addresses GROUP BY other_details
Visualize BAR SELECT MIN(Job_ID) , COUNT(*) FROM EMPLOYEES WHERE FIRST_NAME LIKE "D" OR FIRST_NAME LIKE "S" GROUP BY Job_ID ORDER BY Job_ID DESC
Visualize BAR SELECT hire_date, COUNT(hire_date) FROM employees WHERE EMPLOYEE_ID = $EMPLOYEE_ID GROUP BY hire_date BIN HIRE_DATE BY MONTH, YEAR
Visualize BAR SELECT SALARY , AVERAGE(SALARY) FROM employee WHERE job_history IS NULL AND SALARY > 8000 AND commission_pct != NULL AND MANAGER_ID = 1 AND DEPARTMENT_ID != 40 GROUP BY SALARY BY TIME BIN TIME = '1d', '3d', '1w' ORDER BY AVERAGE(SALARY) DESC
Visualize BAR SELECT Draft_Pick_Number, Draft_Class , COUNT(*) FROM match_season WHERE Player = 'defender' GROUP BY Draft_Pick_Number, Draft_Class  ORDER BY Draft_Pick_Number DESC
Visualize LINE SELECT EMPLOYEE_ID , START_DATE FROM job_history ORDER BY SALARY DESC
1.Visualize BAR SELECT JOB_ID , count(*) FROM employees GROUP BY JOB_ID HAVING hire_date <= 2002-06-21 ORDER BY JOB_ID ASC 2.Visualize BAR SELECT JOB_ID , count(*) FROM employees GROUP BY JOB_ID HAVING hire_date > 2002-06-21 ORDER BY JOB_ID ASC 3.Visualize BAR SELECT JOB_ID , count(*) FROM job_history GROUP BY JOB_ID HAVING start_date
Visualize BAR SELECT EMPLOYEE_ID , SUM(SALARY) , JOB_ID , SUM(COMMISSION_PCT) FROM employees JOIN job_history ON employee_id = employee_id JOIN jobs ON job_id = job_id JOIN employees ON job_id = job_id GROUP BY job_id , employee_id     Visualize BAR SELECT FIRST_NAME , SUM(salary) FROM employees JOIN job_history ON employee_id = employee_id JOIN jobs ON job_id = job_id GROUP BY FIRST_
Visualize BAR SELECT LAST_NAME , count(EMPLOYEE_ID) FROM employees GROUP BY LAST_NAME ORDER BY LAST_NAME ASC
1.Visualize SCATTER SELECT EMPLOYEE_ID, count(*) FROM employees WHERE (salary between 8000 AND 12000 AND commission IS NOT NULL) AND department_id != 40 AND (hire_date BETWEEN '2017-11-01' AND '2017-11-30') GROUP BY employee_id ORDER BY COUNT(*) DESC;
Visualize BAR SELECT Investor , COUNT(Investor) FROM entrepreneur GROUP BY Investor ORDER BY COUNT(Investor) DESC
Visualize BAR SELECT HIRE_DATE ,SUM(SALARY) FROM EMPLOYEES GROUP BY HIRE_DATE , BIN(HIRE_DATE , DAY_OF_WEEK)
Visualize BAR SELECT JOB_ID , COUNT(job_id) FROM employees WHERE HIRE_DATE <= "2002-06-21" GROUP BY JOB_ID
Visualize BAR SELECT DEPARTMENT_ID , SUM(JOB_ID) FROM EMPLOYEES GROUP BY DEPARTMENT_ID ORDER BY JOB_ID ASC LIMIT 5

Visualize BAR SELECT Hire_date , SUM(EMPLOYEE_ID) FROM EMPLOYEES WHERE HIRE_DATE BETWEEN 2002-06-21 AND 2005-10-11 ORDER BY Hire_date DESC BIN Hire_date BY MONTH
Visualize BAR SELECT Event_Details , COUNT(*) FROM Events GROUP BY Event_Details ORDER BY COUNT(*)
Visualize BAR SELECT DEPARTMENT_ID , avg(salary) FROM employees where (salary >=8000 AND salary <=12000 AND department_id != 40) GROUP BY department_id HAVING COUNT(*)>0 ORDER BY COUNT(*) ASC Visualize BAR SELECT EMPLOYEE_ID , avg(hire_date) FROM employees where (salary >=8000 AND salary <=12000 AND department_id != 40) GROUP BY EMPLOYEE_ID HAVING COUNT(*)
Visualize LINE  SELECT HIRE_DATE , SALARY FROM employees WHERE HIRE_DATE > '2002-06-21' ORDER BY HIRE_DATE ASC
Visualize LINE SELECT date_address_from , monthly_rental FROM Student_Addresses WHERE address_id = "Hunterdon-Somerset" GROUP BY date_address_from, monthly_rental
SELECT EMPLOYEE_ID , COUNT(*), AVG(SALARY) FROM employees WHERE SALARY IN (8000,12000) AND COMMISSION_PCT IS NOT NULL AND MANAGER_ID != 2 AND DEPARTMENT_ID != 40 AND HIRE_DATE >= '2018-01-01' GROUP BY EMPLOYEE_ID HAVING COUNT(*) >= 3  AND AVG(SALARY) BETWEEN 8000 AND 12
Visualize BAR SELECT job_id , COUNT(job_id) , AVG(salary) FROM employees WHERE hire_date <= '2002-06-21' GROUP BY job_id ORDER BY COUNT(job_id) DESC

Visualize BAR SELECT Manufacturer , avg(Price) FROM Products GROUP BY Manufacturer ORDER BY avg(Price) DESC
Visualize SCATTER SELECT MANAGER_ID , commission_pct FROM employees WHERE FIRST_NAME IN ('D','S') GROUP BY MANAGER_ID

Visualize BAR SELECT HIRE_DATE , SALARY FROM employees WHERE FIRST_NAME <> 'M' GROUP BY HIRE_DATE
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees BIN HIRE_DATE BY WEEKDAY GROUP BY HIRE_DATE ORDER BY Y DESC
//select t.Job_ID, t.JOB_TITLE, AVG(t.MANAGER_ID) FROM DEPARTMENTS d INNER JOIN JOBS j ON d.MANAGER_ID = j.JOB_ID INNER JOIN EMPLOYEES e ON e.MANAGER_ID = j.MANAGER_ID INNER JOIN EMPLOYEES t ON e.JOB_ID = t.JOB_ID INNER JOIN job_history h ON e.EMPLOYEE_ID = h.EMPLOYEE
Visualize LINE SELECT (EMPLOYEE_ID, START_DATE), COUNT(*) FROM employees GROUP BY EMPLOYEE_ID, START_DATE HAVING FIRST_NAME LIKE 'D' OR FIRST_NAME LIKE 'S' ORDER BY START_DATE ASC
Visualize BAR SELECT Investor , count(*) FROM ENTREPRENEUR GROUP BY Investor ORDER BY Investor ASC
Visualize BAR SELECT Carrier , count(*) FROM phone GROUP BY Carrier ORDER BY count(*) ASC
Visualize BAR SELECT FIRST_NAME , AVG(SALARY) FROM employees  WHERE FIRST_NAME LIKE "%m" ORDER BY AVG(SALARY) ASC
1) Visualize BAR SELECT job_id , count(*) FROM departments WHERE job_id IN (SELECT JOB_ID FROM job_history WHERE EMPLOYEE_ID = (SELECT EMPLOYEE_ID FROM job_history WHERE job_id = <YOUR JOB_ID HERE> AND (SALARY BETWEEN 8000 AND 12000) AND COMMISSION_PCT IS NOT NULL AND DEPARTMENT_ID <> 40) GROUP BY JOB_ID) ORDER BY count(*) ASC 2) Visual
Visualize TABLE_DISPLAY(jobs, [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]) ,  Table_DISPLAY(departments, [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]) ,  Table_DISPLAY(employees, [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE,
1) Visualize BAR SELECT DEPARTMENT_ID , COUNT(*) FROM employees GROUP BY DEPARTMENT_ID ORDER BY DEPARTMENT_ID 2)Visualize BAR SELECT JOB_ID , COUNT(*) FROM job_history GROUP BY JOB_ID
Visualize PIE SELECT Carrier , COUNT(*) FROM phone GROUP BY Carrier ORDER BY COUNT(*)
Visualize BAR SELECT Event_Details , COUNT(Event_ID) FROM Events GROUP BY Event_Details ORDER BY Count(Event_ID) ASC
Visualize BAR SELECT date_address_to , date_address_from FROM Student_Addresses WHERE other_details IN (other_details_bin) GROUP BY other_details_bin
1. Visualize BAR SELECT Price , Count(Code) FROM Products WHERE Code between '60' AND '120' GROUP BY Price 2. Visualize BAR SELECT Name , Price FROM Products WHERE Price between '60' AND '120' GROUP BY Name ORDER BY Price ASC
Visualize BAR SELECT Manufacturer , Price FROM products WHERE price BETWEEN 60 and 120 GROUP BY Manufacturer ORDER BY Price ASC
Visualize BAR SELECT Student_Addresses.Student_ID , Student_Addresses.Monthly_Rental, DATE_ADDRESS_TO FROM Student_Addresses WHERE other_details LIKE '%student grade%' OR other_details LIKE '%student behavior%' OR other_details LIKE '%student behavior incident%' GROUP BY Student_Addresses.Student_ID ORDER BY Student_Addresses.Date_Address_To ASC
Visualize BAR SELECT FIRST_NAME , MANAGER_ID FROM employees

Visualize BAR SELECT HIRE_DATE, SALARY FROM EMPLOYEES GROUP BY HIRE_DATE BIN HIRE_DATE BY WEEKDAY
Visualize BAR SELECT hire_date , SUM(SALARY) FROM employees WHERE EMPLOYEE_ID in (select EMPLOYEE_ID from emp where SALARY BETWEEN 0 and 100000) GROUP BY hire_date
Visualize BAR SELECT EMAIL, SALARY FROM employees GROUP BY EMAIL ORDER BY SALARY ASC
1. Visualize BAR SELECT job_id , SUM(manager_id) FROM jobs GROUP BY job_id HAVING salary >= 8000 AND salary <= 12000 AND commission IS NULL AND department_id NOT IN(40) ORDER BY SUM(manager_id) DESC, JOB_ID 2. Visualize BAR SELECT EMPLOYEE_ID, JOB_ID, SUM(manager_id) FROM job_history WHERE EMPLOYEE_ID IN (SELECT EMPLOYEE_ID FROM jobs GROUP BY job_
Visualize SCATTER SELECT SALARY , DEPARTMENT_ID FROM employees WHERE FIRST_NAME LIKE '%D%' OR FIRST_NAME LIKE '%S%' ORDER BY SALARY ASC , DEPARTMENT_ID ASC
Visualize BAR SELECT product_type_code , avg(product_price) FROM Products GROUP BY product_type_code ORDER BY product_type_code ASC


Visualize LINE SELECT EMPLOYEE_ID , HIRE_DATE ,START_DATE FROM employees WHERE HIRE_DATE < "2002-06-21" ORDER BY HIRE_DATE ASC
Visualize SCATTER SELECT JOB_ID , MANAGER_ID FROM employees,job_history WHERE EMPLOYEE_ID = MANAGER_ID AND EMPLOYEE_ID IN ( SELECT EMPLOYEE_ID FROM departments WHERE EMPLOYEE_ID = HIRE_DATE <= '2002-06-21') GROUP BY JOB_ID , MANAGER_ID , HAVING COUNT(*) > 0 ORDER BY 2
Visualize BAR SELECT product_type_code , max(product_price) FROM Products GROUP BY product_type_code ORDER BY max(product_price) DESC
1. Select job_id from job_history and employee_id from employees WHERE hire_date BETWEEN '2002-06-21' AND '2002-06-21' 2. Visualize BAR SELECT job_id , sum(department_id) FROM (SELECT j.EMPLOYEE_ID , job_history.job_id FROM job_history JOIN employees USING (EMPLOYEE_ID) JOIN job USING (JOB_ID) WHERE hire_date BETWEEN '20
Visualize BAR SELECT Payment_Method_Code , AVG(Amount_Payment) FROM Payments WHERE Payment_Method_Code IN (3,4,5,6) GROUP BY Payment_Method_Code BIN Date_Payment_Made BY WEEKDAY ORDER BY Date_Payment_Made ASC
Visualize BAR SELECT Job_ID , AVG(DEPARTMENT_ID) FROM employees WHERE SALARY between 8000 and 12000 and commission is not null AND department_id not in (40) AND job_id in (3,1) GROUP BY Job_ID BIN Job_ID by WEEKEND ASC
Visualize BAR SELECT job_id , COUNT(job_id) FROM employees WHERE FIRST_NAME like 'D%' OR FIRST_NAME like 'S%' GROUP BY job_id , SORT BY AVERAGE(salary) DESC BIN job_id BY MONTH
Visualize BAR SELECT hire_date , COUNT(*) FROM employees WHERE HIRE_DATE <= '2002-06-21' GROUP BY hire_date ORDER BY COUNT(*) ASC, hire_date
Visualize BAR SELECT MANAGER_ID , AVG(DEPARTMENT_ID) FROM employees GROUP BY MANAGER_ID HAVING EMPLOYEE_ID IN (SELECT employee_id FROM job_history WHERE JOB_ID IN (5,11,12,13)) AND SALARY BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NOT NULL AND DEPARTMENT_ID <> 40 ORDER BY AVG(DEPARTMENT_ID) ASC
Visualize BAR SELECT Founder , Revenue FROM Manufacturers ORDER BY Revenue DESC
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE), AVG(MANAGER_ID) FROM employees GROUP BY HIRE_DATE ORDER BY HIRE_DATE
Visualize BAR SELECT FIRST_NAME , HIRE_DATE , COUNT(HIRE_DATE) FROM employees GROUP BY FIRST_NAME,HIRE_DATE BIN HIRE_DATE BY SECOND(HIRE_DATE) DESC
Visualize BAR SELECT Date_Payment_Made , count(Date_Payment_Made) as Date_Payment_Made_counter FROM Payments GROUP BY Date_Payment_Made_counter ORDER BY Date_Payment_Made
Visualize LINE SELECT * FROM employees WHERE salary between 8000 and 12000 AND commission is not null and department number does not equal to 40 Visualize LINE SELECT * FROM job_history WHERE start_date between '1995-01-01' and '2005-01-01' AND end_date between '1995-01-01' and '2005-01-01' AND employee_id in select * FROM job_history WHERE job_history
Visualize BAR SELECT Total_price , product_type_code FROM Products WHERE product_type_code = "Hot" ORDER BY Total_price ASC
Visualize SPLINE SELECT price , manufacturer FROM Products GROUP BY price , manufacturer
1. Visualize BAR SELECT HIRE_DATE , avg(hire_date) FROM employees WHERE HIRE_DATE BETWEEN '2002-06-20 00:00:00' AND '2002-06-21 23:59:59' AND employee_id BETWEEN 0 AND 999 AND JOB_ID = 1 AND manager_id IS NULL AND DEPARTMENT_ID = 1 GROUP BY HIRE_DATE BIN 1 DAY
Visualize  BAR SELECT EMPLOYEE_ID FROM employees WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' ORDER BY EMPLOYEE_ID
Visualize BAR SELECT HIRE_DATE , count(*) FROM employees GROUP BY HIRE_DATE , sum(SALARY) , MANAGER_ID
Visualize BAR SELECT Code , Revenue FROM Manufacturers GROUP BY Code, Revenue ORDER BY Revenue DESC
Visualize BAR SELECT Manufacturer_Code , COUNT(*) FROM products WHERE price BETWEEN 60 AND 120 AND Manufacturer_code IN (SELECT Code FROM Manufacturers GROUP BY Code ORDER BY Revenue DESC) GROUP BY Manufacturer_code ORDER BY Revenue DESC
Visualize PIE SELECT FIRST_NAME FROM employees WHERE LAST_NAME LIKE 'm%' GROUP BY FIRST_NAME
Visualize PIE SELECT product_type_code , avg(product_price) FROM products GROUP BY product_type_code ORDER BY avg(product_price) DESC
Visualize BAR SELECT Amount_Payment , COUNT(Payment_ID) FROM Payments GROUP BY Amount_Payment ORDER BY Amount_Payment DESC
Visualize BAR SELECT EMPLOYEE_ID , AVG(MANAGER_ID) FROM employees WHERE hire_date BETWEEN 2002-06-21 AND 2006-06-21 GROUP BY EMPLOYEE_ID ORDER BY AVG(MANAGER_ID) DESC
Visualize HISTOGRAM JOB_ID , COUNT(JOB_ID) FROM jobs GROUP BY JOB_ID
Visualize  BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM job_history GROUP BY JOB_ID ORDER BY SUM(EMPLOYEE_ID) DESC BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM job_history GROUP BY JOB_ID ORDER BY SUM(EMPLOYEE_ID) ASC
Visualize BAR SELECT year , count(*) FROM matches GROUP BY year ORDER BY count(*) ASC
Visualize LINE SELECT monthly_rental FROM Student_Addresses WHERE date_address_to >= date_of_detention_start  AND monthly_rental > 0.0 GROUP BY other_details
Visualize BAR SELECT Founder , count(*) FROM Manufacturers  GROUP BY Founder ORDER BY count(*) ASC
Visualize BAR SELECT EMPLOYEE_ID , COUNT(1) FROM employees GROUP BY FIRST_NAME HAVING FIRST_NAME LIKE '%D%' , FIRST_NAME HAVING FIRST_NAME LIKE '%S%' GROUP BY HIRE_DATE ORDER BY HIRE_DATE ASC BIN HIRE_DATE BY WEEKDAY

BAR SELECT salary , COUNT(salary) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission IS NOT NULL AND department_id NOT IN (40) GROUP BY salary ORDER BY salary ASC
Visualize BAR SELECT year , avg(match_num) FROM matches GROUP BY year ORDER BY avg(match_num) ASC
Visualize BAR SELECT payment_method_code , count(*) FROM Customers GROUP BY payment_method_code ORDER BY count(*) DESC
1. Visualize bar chart about the price of phone SELECT Price , COUNT(Price) FROM phone GROUP BY Price  2. Visualize bar chart about the memory of phone SELECT Memory_in_G , COUNT(Memory_in_G) FROM phone GROUP BY Memory_in_G  3. Visualize bar chart about the carrier of phone SELECT Carrier , COUNT(Carrier) FROM phone GROUP BY Carrier
SELECT Payment_Method_Code , count(*) FROM Payments GROUP BY Payment_Method_Code ORDER BY Payment_Method_Code ASC
SELECT     teacher_id,     Date_address_from,     Monthly_Rental FROM     Teachers, Student_Addresses WHERE     Date_address_to is not null GROUP BY     other_details ORDER BY     other_details ASC
Visualize BAR SELECT job_id , SUM(employee_id) FROM employees GROUP BY job_id, HIRE_DATE, START_DATE, END_DATE
Visualize LINE SELECT Phone_ID , COUNT(Phone_ID) FROM phone GROUP BY Phone_ID ORDER BY Phone_ID DESC
Visualize BAR SELECT Price FROM Products GROUP BY Price
SELECT EMAIL , SUM(SALARY) FROM employees WHERE HIRE_DATE > '2002-06-21' GROUP BY EMAIL BIN EMAIL BY WEEKDAY
1. Visualize BAR SELECT Price , COUNT(Price) FROM Products WHERE Price <=200 GROUP BY Manufacturer ORDER BY Price ASC 2. Visualize BAR SELECT Founder , Revenue FROM Manufacturers GROUP BY Founder ORDER BY Revenue DESC
Visualize BAR SELECT MIN(HIRE_DATE), SALARY FROM employees WHERE FIRST_NAME <> 'M' GROUP BY MIN(HIRE_DATE) ORDER BY SALARY
Visualize BAR SELECT Year , AVG(Amount_Payment) FROM Payments GROUP BY Year ASC
SELECT EMPLOYEE_ID, DEPARTMENT_ID FROM EMPLOYEES  WHERE SALARY BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NOT NULL AND MANAGER_ID = 225 AND DEPARTMENT_ID != 40 GROUP BY DEPARTMENT_ID HAVING COUNT(EMPLOYEE_ID) > 1
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees GROUP BY HIRE_DATE BIN HIRE_DATE BY DAY_OF_WEEK
Visualize BAR SELECT Manufacturer , COUNT(Manufacturer) FROM Products  GROUP BY Manufacturer ORDER BY Manufacturer
Visualize BAR SELECT hire_date , sum(employee_id) FROM employees WHERE salary >= 8000 AND commission_pct IS NOT NULL AND department_id != 40 GROUP BY hire_date BIN hire_date BY DAY(hire_date) ORDER BY sum(employee_id) DESC
1. Visualize BAR SELECT JOB_ID , avg(SALARY) FROM job_history GROUP BY JOB_ID ORDER BY JOB_ID DESC 2. Visualize BAR SELECT EMPLOYEE_ID , AVG(SALARY) FROM job_history GROUP BY EMPLOYEE_ID ORDER BY EMPLOYEE_ID ASC 3. Visualize BAR SELECT JOB_TITLE , avg(SALARY) FROM job_history GROUP BY JOB_TITLE ORDER BY JOB_TITLE ASC 4
Visualize BAR SELECT HIRE_DATE , COUNT(*) FROM employees GROUP BY HIRE_DATE BIN HIRE_DATE BY WEEKDAY ORDER BY HIRE_DATE ASC
Visualize BAR SELECT Code , Name , Count(Manufacturer) FROM Products WHERE Price BETWEEN 60 AND 120 GROUP BY Code , Name , Count(Manufacturer) ORDER BY Count(Manufacturer) DESC
Visualize BAR SELECT FIRST_NAME , SALARY FROM employees GROUP BY FIRST_NAME ORDER BY SALARY DESC
Visualize LINE SELECT SALARY , DATE_FORMAT(HIRE_DATE,'%Y-%m-%d') FROM employees WHERE SALARY >= 8000 AND COMMISSION_PCT IS NULL AND DEPARTMENT_NUMBER != 40 ORDER BY SALARY DESC
Visualize LINE SELECT EMPLOYEE_ID, MANAGER_ID FROM EMPLOYEES WHERE salary <= 12000 AND commission IS NOT NULL AND department_id != 40 GROUP BY EMPLOYEE_ID ORDER BY MANAGER_ID
1. Select the weekday number for Hire_date.  2. Sort the record according to Hire_date  3. Visualize each weekday’s record as a bar chart.  4. Display the bar with highest count (visualize column) on top in an ascending order.  5. Concat to select column is ‘count’  6. Concat to select column is ‘Employee_ID’
Visualize BAR SELECT EMPLOYEE_ID , SUM(SALARY) FROM JOB_HISTORY WHERE JOB_ID IN (SELECT JOB_ID FROM JOBS WHERE FIRST_NAME IN ('D','S') AND JOB_ID IN (SELECT JOB_ID FROM JOBS WHERE FIRST_NAME IN ('D','S')) GROUP BY JOB_ID) GROUP BY EMPLOYEE_ID , COUNT(*) as N , DEPARTMENT_ID AS Dept , SALARY
Visualize BAR SELECT DEPARTMENT_ID, AVG(EMPLOYEE_ID) FROM employees  WHERE SALARY BETWEEN 8000 AND 12000 OR COMMISSION_PCT IS NULL OR MANAGER_ID != 40 GROUP BY DEPARTMENT_ID BIN HIRE_DATE BY TIME  ORDER BY HIRE_DATE ASC
Visualize BAR SELECT SALARY , Email FROM employees ORDER BY SALARY DESC
Visualize Bar SELECT dept_num , sum(salary) FROM EMPLOYEES GROUP BY dept_num BIN (hire_date) HAVING salary between 8000 AND 12000 AND commission_pct is not null AND MANAGER_ID = 10 AND dept_num not equal to 40
Visualize BAR SELECT Job_History.EMPLOYEE_ID, Sum(Salary) FROM Job_History BIN Job_History.HIRE_DATE BY Time

2. Visualize BAR SELECT job_id , (AVG(job_history.salary) OVER (PARTITION BY job_history.employee_id) / max(job_history.salary)) AS avg_salary FROM jobs LEFT JOIN job_history ON job_history.job_id = jobs.JOB_ID LEFT JOIN employees ON employees.EMPLOYEE_ID = job_history.employee_id WHERE employees.HIRE_DATE >= '2002-06-21'
Visualize BAR SELECT hire_date , count(*) FROM employees WHERE salary >= 8000 AND commission IS NOT NULL AND department_id != 40  GROUP BY hire_date ORDER BY sum(employee_id) ASC BIN hire_date BY WEEKDAY
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees GROUP BY HIRE_DATE BIN HIRE_DATE BY DATE_DAY
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees GROUP BY HIRE_DATE ORDER BY HIRE_DATE ASC
Visualize HISTOGRAM SELECT County_name , Population FROM county GROUP BY County_name
Visualize BAR SELECT Investor , COUNT(*) FROM entrepreneur GROUP BY Investor ORDER BY COUNT(*) DESC


Visualize BAR SELECT Carrier , COUNT(*) FROM phone GROUP BY Carrier ORDER BY COUNT(*) DESC

Visualize BAR SELECT employee_id , SUM(COMMISSION_PCT) FROM employees GROUP BY employee_id,JOB_ID,DEPARTMENT_ID HAVING FIRST_NAME LIKE 'D' OR FIRST_NAME LIKE 'S' ORDER BY employee_id, JOB_ID, DEPARTMENT_ID
Visualize LINE SELECT monthly_rental FROM Student_Addresses GROUP BY date_address_to
Visualize BAR SELECT HIRE_DATE , count(hire_date) FROM employees WHERE EMPLOYEE_ID BETWEEN 10001 AND 10005 GROUP BY HIRE_DATE BIN HIRE_DATE BY YEAR
Visualize BAR SELECT Revenue, Name, Founder, Headquarter, Products.Name, Products.Price, Products.Code FROM Manufacturers INNER JOIN Products USING (Code)  GROUP BY Revenue, Name, Founder, Headquarter, Products.Name, Products.Price, Products.Code ORDER BY Revenue DESC , Founder DESC , Headquarter DESC, Products.Name DESC
Visualize BAR SELECT (EMPLOYEE_ID , JOB_ID, AVG(EMPLOYEE_ID)) AS EMPLOYEE_AVERAGE , COUNT(*) FROM employees WHERE SALARY > 8000 AND COMMISSION_PCT IS NOT NULL AND MIN_SALARY > 8000 AND MAX_SALARY < 12000 GROUP BY JOB_ID ORDER BY JOB_ID ASC
Visualize BAR SELECT County_name , Population FROM county GROUP BY County_name
Visualize PIE SELECT date_of_notes, COUNT(*) FROM Assessment_Notes GROUP BY date_of_notes ORDER BY COUNT(*) DESC
1. Visualize SCATTER SELECT order_id , customer_id FROM Customer_Orders WHERE order_status_code = "C" BIN order_date BY order_date 2. Visualize SCATTER SELECT customer_id , order_id FROM Customer_Orders WHERE order_status_code = "C" BIN order_date BY order_date
Visualize BAR SELECT JOB_ID , sum(EMPLOYEE_ID) FROM employees WHERE HIRE_DATE <= '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID ASC
Visualize BAR SELECT date_address_from , date_address_to , monthly_rental FROM Student_Addresses GROUP BY date_address_from ORDER BY date_address_to ASC
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE EMPLOYEE_ID IN (SELECT EMPLOYEE_ID FROM employees WHERE HIRE_DATE <= '2002-06-21')
Visualize LINE SELECT SALARY , AVG(EMPLOYEE_ID) FROM employees  WHERE FIRST_NAME LIKE ‘%D%’ or FIRST_NAME LIKE ‘%S%’ GROUP BY SALARY
Visualize BAR SELECT Carrier, sum(Memory_in_G) FROM phone GROUP BY Carrier ORDER BY sum(Memory_in_G) ASC
Visualize LINE SELECT HIRE_DATE, Commission_PCT FROM employees WHERE FIRST_NAME like “%D” OR FIRST_NAME like “%S” GROUP BY HIRE_DATE ORDER BY HIRE_DATE ASC
Visualize HISTOGRAM SELECT hand , COUNT(hand) FROM players GROUP BY hand ORDER BY hand DESC
SELECT JOB_TITLE , MIN_SALARY , MAX_SALARY FROM jobs WHERE MIN_SALARY >= 12000 and MIN_SALARY <= 18000 GROUP BY JOB_TITLE ORDER BY MAX_SALARY DESC, MIN_SALARY ASC
Visualize BAR SELECT EMPLOYEE_ID , AVG(job_id) FROM job_history GROUP BY EMPLOYEE_ID ORDER BY EMPLOYEE_ID ASC
Visualize BAR SELECT date_address_from , SUM(monthly_rental) FROM Student_Addresses GROUP BY address_id,other_details BIN date_address_from BY WEEKDAY
Visualize BAR SELECT Investor , COUNT(Investor) FROM entrepreneur GROUP BY Investor  ORDER BY COUNT(Investor) DESC

Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employee GROUP BY JOB_ID ORDER BY JOB_ID ASC
Visualize BAR SELECT Code , COUNT(*) FROM Manufacturers GROUP BY Manufacturer ORDER BY COUNT(*) ASC
Visualize BAR SELECT EMPLOYEE_ID , SUM(SALARY) FROM employees GROUP BY JOB_ID ORDER BY JOB_ID ASC
Visualize PIE SELECT payment_method_code , count(payment_method_code) FROM Customers GROUP BY payment_method_code ORDER BY count(payment_method_code) DESC
Visualize BAR SELECT Date_Claim_Settled , Count(Date_Claim_Settled) FROM Claims GROUP BY Date_Claim_Settled BIN Year(Date_Claim_Settled) BY MONTH(Date_Claim_Settled) ASC ORDER BY Count(Date_Claim_Settled) DESC
Visualize BAR SELECT payment_method_code , COUNT(*) FROM Payments GROUP BY Payment_Method_Code ORDER BY Amount_Payment DESC
Visualize BAR SELECT Manufacturer , price FROM Products  ORDER BY price DESC
Visualize BAR SELECT EMPLOYEE_ID , job_id , sum(EMPLOYEE_ID) AS sum_eid , AVG(salary) AS avg_salary , COUNT(job_id) AS count_jobid FROM employees GROUP BY job_id ORDER BY count_jobid DESC ,avg_salary DESC
1) Visualize BAR SELECT job_id , COUNT(job_id) FROM employees GROUP BY job_id 2) Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM job_history GROUP BY job_id 3) Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE FIRST_NAME REGEXP '[D|S]' GROUP BY JOB_ID
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE SALARY BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NOT NULL AND DEPARTMENT_NUMBER != 40 GROUP BY JOB_ID ORDER BY SUM(EMPLOYEE_ID) DESC
Visualize BAR SELECT Player , COUNT(Player) FROM player GROUP BY Player ORDER BY COUNT(Player) ASC
Visualize BAR SELECT Hire_date , SUM(Hire_date) FROM (SELECT  hire_date , COUNT(*) FROM ( SELECT MIN(hire_date)  as hire_date FROM employee  WHERE  hire_date > '2013-12-01' AND  hire_date < '2014-12-31' AND  JOB_ID IN ( SELECT JOB_ID FROM job_history WHERE  MANAGER_ID = 72 AND  DEPARTMENT_ID  = 30 ) GROUP
Visualize BAR SELECT Payment_Method_Code , SUM(Amount_Payment) FROM Payments GROUP BY Payment_Method_Code ORDER BY SUM(Amount_Payment) DESC
Visualize BAR SELECT Payment_Method_Code , count(*) FROM Payments GROUP BY Payment_Method_Code ORDER BY count(*) DESC
Visualize BAR SELECT FIRST_NAME , COUNT(FIRST_NAME) FROM employees GROUP BY FIRST_NAME ORDER BY COUNT(FIRST_NAME) DESC BIN FIRST_NAME BY WEEKDAY
Visualize SCATTER SELECT student_id , address_id FROM Students GROUP BY student_id, address_id
Visualize BAR SELECT Year_Played , COUNT(Player_ID) FROM player GROUP BY Year_Played ORDER BY COUNT(Player_ID) ASC
Visualize BAR SELECT JOB_ID, COUNT(*) FROM job_history GROUP BY job_id ORDER BY job_id DESC
Visualize BAR SELECT Investor , COUNT(*) FROM entrepreneur GROUP BY Investor ORDER BY COUNT(*) ASC
Visualize BAR SELECT HIRE_DATE , SUM(salary) FROM employees WHERE HIRE_DATE < '2002-06-21' GROUP BY HIRE_DATE ORDER BY SUM(salary) DESC
Visualize PIE SELECT Player , COUNT(Season) FROM match_season GROUP BY Season ORDER BY Player ASC
Visualize BAR SELECT EMAIL , HIRE_DATE , SUM(MANAGER_ID) AS MANAGER_ID_SUM , SUM(MANAGER_ID)/7 AS DAYS_PER_WEEK , SUM(MANAGER_ID)/7-1 AS NON_MANAGER_DAYS , SUM(MANAGER_ID)/7-2 AS MANAGER_DAYS , SUM(COMMISSION_PCT) AS COMMISSION_PCT_SUM FROM employees GROUP BY EMAIL , HIRE_DATE ,
Visualize BAR SELECT monthly_rental , other_details FROM Student_Addresses GROUP BY other_details  BAR SELECT notes_id , other_details FROM Assessment_Notes  GROUP BY other_details  BAR SELECT incident_id , other_details FROM Behavior_Incident GROUP BY other_details  BAR SELECT detention_id , other_details FROM Detention GROUP BY other_details

Visualize LINE SELECT date_address_to , sum(monthly_rental) FROM Student_Addresses GROUP BY date_address_to ORDER BY date_address_to ASC
1. Scatter chart using two data sets [Code, Price] 2. Correlation function = Pearson Correlation 3. Enter correlation equation in Excel , enter the formula =(Correlation(A1,B1)*(B1-A1)^2)/(var(A1)*var(B1)) 4. Select A1 cell to drag formula down to all cells 5. Add a line equation in A2 cell 6. Select the line cell and drag it down to calculate the correlation value for every product 7. Select the scatter chart to change the line color to pink and
Visualize BAR SELECT Major , COUNT(Major) FROM Student WHERE Major = 600  GROUP BY Major ORDER BY Major ASC
Visualize LINE SELECT First_name[0..20] , LAST_NAME[0..20] , department_ID[0..20] , COUNT(CASE WHEN LAST_NAME[0..20] LIKE 'D' OR LAST_NAME[0..20] LIKE 'S' THEN EMPLOYEE_ID END) , AVG(HIRE_DATE[7] OVER (PARTITION BY department_ID ORDER BY hire_date)) , CAST(HIRE_DATE AS DATE) AS HIRE_DATE FROM employees GROUP BY department
Visualize PIE SELECT Manufacturer , Price FROM products WHERE Price BETWEEN 60 and 120 GROUP BY Manufacturer
Visualize BAR SELECT FIRST_NAME , count(*) FROM employee GROUP BY job_id ORDER BY job_id DESC Visualize BAR SELECT FIRST_NAME , COUNT(job_id) FROM employee WHERE FIRST_NAME LIKE '%S%' GROUP BY job_id ORDER BY job_id DESC Visualize BAR SELECT FIRST_NAME , SUM(manager_id) FROM employee WHERE FIRST_NAME LIKE '%S%' GROUP BY job_id ORDER BY job_id DESC Visualize BAR SELECT FIRST_NAME , SUM(manager_id) FROM
Visualize BAR SELECT EMPLOYEE_ID, DEPARTMENT_ID FROM employees WHERE MIN(SALARY) BETWEEN 8000 AND 12000 AND commission_pct IS NOT NULL AND department_id != 40  GROUP BY EMPLOYEE_ID, DEPARTMENT_ID  ORDER BY MIN(SALARY) DESC , DEPARTMENT_ID DESC
Visualize BAR SELECT First_Name, AVERAGE(hire_date) FROM employees GROUP BY First_Name HAVING REGEXP_MATCH(First_Name, D|S) ORDER BY AVERAGE(hire_date) ASC
Visualize BAR SELECT DEPARTMENT_ID , JOB_ID , SUM(JOB_ID) , SUM(EMPLOYEE_ID)  FROM job_history GROUP BY DEPARTMENT_ID, JOB_ID ORDER BY BAR(EMPLOYEE_ID) ASC
Visualize BAR SELECT FIRST_NAME , COUNT(FIRST_NAME) FROM employees WHERE FIRST_NAME = 'm' GROUP BY FIRST_NAME ORDER BY COUNT(FIRST_NAME) DESC
Visualize BAR SELECT FIRST_NAME , HIRE_DATE , COUNT(*) FROM employees WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' GROUP BY FIRST_NAME , HIRE_DATE ORDER BY HIRE_DATE
Visualize PIE SELECT Price , count(*) FROM Products GROUP BY Price HAVING Price>=180 ORDER BY Price DESC , Name ASC
Visualize SCATTER SELECT Price , Manufacturer FROM Products WHERE Price BETWEEN 60 AND 120 ORDER BY Price ASC
Visualize LINE SELECT SALARY , count(*) FROM employees WHERE HIRE_DATE < 2002-06-21 GROUP BY SALARY  ORDER BY SALARY ASC
Visualize BAR SELECT EMPLOYEE_ID , SALARY FROM employees JOIN job_history ON employee_id = employee_id WHERE SALARY BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NOT NULL AND DEPARTMENT_ID != 40 ORDER BY HIRE_DATE DESC , LINE SELECT EMPLOYEE_ID, hire_date FROM employees GROUP BY employee_id ORDER BY hire_date DESC
Visualize BAR SELECT First_Name , SUM(EMPLOYEE_ID) FROM employees WHERE First_Name IN ('D','S') AND JOB_ID IN (SELECT job_id FROM job_history) AND DEPARTMENT_ID IN (SELECT department_id FROM jobs) GROUP BY First_Name , JOB_ID ORDER BY SUM(EMPLOYEE_ID) ASC
SELECT Manufacturer ,AVG(Price) FROM Products where Price>60 and Price<120 GROUP BY Manufacturer ORDER BY Manufacturer DESC
Visualize BAR SELECT Name , sum(Price) FROM Products GROUP BY Code ORDER BY sum(Price) ASC
Visualize BAR SELECT LAST_NAME , EMPLOYEE_ID FROM employees GROUP BY LAST_NAME  ORDER BY LAST_NAME
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM jobs JOIN employees ON jobs.JOB_ID = employees.JOB_ID  WHERE employees.FIRST_NAME LIKE 'D%' OR employees.FIRST_NAME LIKE 'S%'  GROUP BY job_id  ORDER BY AVG(DEPARTMENT_ID) ASC
Visualize BAR SELECT FIRST_NAME , DEPARTMENT_ID FROM employees GROUP BY FIRST_NAME
Visualize BAR SELECT job_id , SUM(MANAGER_ID) FROM employees GROUP BY job_id ORDER BY SUM(MANAGER_ID) DESC
Visualize BAR SELECT department_id , COUNT(*) FROM employees GROUP BY department_id , job_id , HIRE_DATE ASC
Visualize SCATTER SELECT salary , DEPARTMENT_ID FROM employees WHERE HIRE_DATE < '2002-06-21'
Visualize BAR SELECT FIRST_NAME , COUNT(EMPLOYEE_ID) FROM employees WHERE FIRST_NAME LIKE "D%" OR FIRST_NAME LIKE "S%" GROUP BY FIRST_NAME, HIRE_DATE ORDER BY COUNT(EMPLOYEE_ID) ASC
Visualize BAR SELECT product_price , max(product_price) FROM products GROUP BY product_type_code ORDER BY max(product_price) ASC
Select EMPLOYEE_ID , START_DATE , COMMISSION_PCT , MANAGER_ID , DEPARTMENT_ID , HIRE_DATE , JOB_ID FROM employees WHERE SALARY between 8000 and 12000 and COMMISSION_PCT IS NOT NULL and DEPARTMENT_ID NOT IN (40) ORDER BY SALARY ASC , HIRE_DATE ASC , MANAGER_ID ASC , JOB_ID ASC , DEPARTMENT_ID ASC
Visualize BAR SELECT employee_id , JOB_ID, AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21 00:00:00' GROUP BY employee_id , JOB_ID
Visualize BAR SELECT LAST_NAME , SALARY FROM employees ORDER BY SALARY DESC
Visualize BAR SELECT JOB_ID , COUNT(*) , AVG(SALARY) FROM job_history WHERE FIRST_NAME LIKE "D" or FIRST_NAME LIKE "S" GROUP BY JOB_ID
Visualize BAR SELECT Headquarter , max(Revenue) FROM manufacturer GROUP BY Headquarter ORDER BY Revenue DESC
Visualize BAR SELECT DEPARTMENT_ID , avg(salary) FROM employees WHERE hire_date between 20170515 and 20170515 AND salary between 8000 and 12000 GROUP BY DEPARTMENT_ID BAR SELECT DEPARTMENT_ID , avg(salary) FROM employees WHERE hire_date between 20170515 and 20170515 AND salary between 8000 and 12000 GROUP BY DE
Visualize SPLINE SELECT salary , department_id FROM employee WHERE salary >= 8000 AND salary <=12000 AND commission_pct is not null AND job_id <> 40 AND department_id <> 40 ORDER BY salary ASC
Visualize BAR SELECT job_id , SUM(salary) FROM employees GROUP BY job_id ORDER BY SUM(salary) ASC
(Visualize BAR SELECT JOB_ID FROM employees WHERE SALARY between 8000 and 12000 and commission IS NOT NULL and department_ID != 40 ORDER BY SALARY DESC )   	(Visualize LINE SELECT DEPARTMENT_ID FROM employees WHERE SALARY between 8000 and 12000 and commission IS NOT NULL and department_ID != 40 ORDER BY SALARY ASC)
Visualize BAR SELECT JOB_ID , avg(salary) FROM jobs WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY avg(salary) DESC
1) Visualize BAR SELECT Job_ID, AVG(employee_id) FROM employees WHERE JOB_ID IN(SELECT JOB_ID FROM job_history WHERE salary > 8000 AND commission is null AND department_id NOT = 40 GROUP BY job_id) 2) Visualize BAR SELECT Job_ID , employee_id FROM employees WHERE JOB_ID IN(SELECT JOB_ID FROM job_history WHERE salary > 8000 AND commission is null AND department_id NOT = 40 GROUP BY job_id) ORDER BY J
Visualize BAR SELECT EMPLOYEE_ID , DEPARTMENT_ID FROM employees GROUP BY EMPLOYEE_ID, DEPARTMENT_ID ORDER BY DEPARTMENT_ID ASC
Visualize BAR SELECT DISTINCT FIRST_NAME , count(*) FROM EMPLOYEES GROUP BY FIRST_NAME  ORDER BY count(*) DESC
Visualize BAR SELECT (SELECT EMPLOYEE_ID FROM job_history JOIN employees JOIN jobs ON employee.EMPLOYEE_ID = job_history.EMPLOYEE_ID WHERE HIRE_DATE >= '2002-06-21' AND JOB_ID IS NOT NULL) , COUNT(*) FROM job_history GROUP BY job_id order by total_num DESC
Visualize BAR SELECT DISTINCT(FIRST_NAME) , HIRE_DATE ,AVG(MANAGER_ID) FROM employees GROUP BY HIRE_DATE , DISTINCT(FIRST_NAME) ORDER BY AVG(MANAGER_ID) DESC BIN HIRE_DATE BY DAY_OF_WEEK

Visualize BAR SELECT EMPLOYEE_ID , AVG(hire_date) , count(*) FROM employees WHERE HIRE_DATE BETWEEN 19990401 AND 20020621 GROUP BY EMPLOYEE_ID ORDER BY AVG(hire_date)
Visualize LINE SELECT EMPLOYEE_ID , SUM(SALARY) FROM employees WHERE COMMISSION_PCT IS NULL AND DEPARTMENT_ID IS NOT 40 GROUP BY EMPLOYEE_ID RANKED BY EMPLOYEE_ID ASC, HIRE_DATE
Visualize BAR SELECT incident_type_code , count(*) FROM incident_type GROUP BY incident_type_code , date_incident_end
Visualize BAR SELECT *, hire_date , count(department_id) FROM employees WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' GROUP BY hire_date , count(department_id) ASC , hire_date
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE FIRST_NAME LIKE ‘%D%’ OR FIRST_NAME LIKE ‘%S%’ BIN HIRE_DATE BY WEEKDAY
Visualize BAR SELECT  MANAGER_ID , SUM( department_id )  FROM  employees GROUP BY department_id , MANAGER_ID , HIRE_DATE
Visualize BAR SELECT job_history.job_id , sum(employee_id) FROM employees, job_history, jobs GROUP BY job_history.job_id , employee_id ORDER BY sum(employee_id) ASC BIN job_history.job_id BY DISTINCT JOB_ID
Visualize BAR SELECT EMPLOYEE_ID , MIN_SALARY , JOB_ID FROM jobs JOIN employee_history ON employee_id = emplyee_id ORDER BY JOB_ID ASC , EMPLOYEE_ID ASC
Visualize BAR SELECT department_id , SUM(EMPLOYEE_ID) FROM employees WHERE HIRE_DATE>=20191201 AND HIRE_DATE<=20191207 AND COMMISSION_PCT IS NOT NULL AND SALARY BETWEEN 8000 AND 12000 AND MANAGER_ID IS NULL AND DEPARTMENT_ID IS NOT 40 AND JOB_ID IS NOT NULL GROUP BY department_id BIN hire_date by MONTH ASC ,
Visualize BAR SELECT LAST_NAME , COUNT(EMPLOYEE_ID) FROM employees GROUP BY LAST_NAME ORDER BY COUNT(EMPLOYEE_ID) DESC
Visualize BAR SELECT HIRE_DATE , COUNT(MANAGER_ID) FROM employees WHERE HIRE_DATE < '2002-06-21' GROUP BY WEEKDAY(HIRE_DATE), HIRE_DATE ORDER BY HIRE_DATE ASC, COUNT(MANAGER_ID)
Visualize BAR SELECT Products.Name , COUNT(Products.Name) FROM Products JOIN Manufacturers ON Manufacturers.Code = Products.Manufacturer_ID WHERE Manufacturers.Revenue >= 60 AND Manufacturers.Revenue <= 120 GROUP BY Products.Name ORDER BY Products.Name DESC
Visualize LINE SELECT hire_date , commission_pct FROM employees BIN hire_date BY YEAR
Visualize BAR SELECT Draft_Pick_Number , COUNT(Draft_Pick_Number) FROM match_season WHERE Player IN player.team AND Position = 'defender' GROUP BY Draft_Pick_Number ORDER BY Draft_Pick_Number ASC
Visualize BAR SELECT COUNTRY_ID, COUNT(*) FROM countries GROUP BY COUNTRY_ID ORDER BY COUNT(*) DESC
Visualize BAR SELECT Payment_Method_Code , sum(Amount_Payment) FROM Payments GROUP BY Payment_Method_Code , Date_Payment_Made DIVIDE BY 12
Visualize BAR SELECT DEPARTMENT_ID , COUNT(*) FROM employees GROUP BY DEPARTMENT_ID ORDER BY COUNT(*) DESC BIN HIRE_DATE BY WEEKDAY
Visualize BAR SELECT job_id , avg(department_id) FROM employees GROUP BY job_id HAVING (salary >= 8000 AND commission_pct IS NOT NULL) OR (job_id=40 AND department_id IS NULL)
Visualize PIE SELECT FIRST_NAME , SUM(SALARY) FROM employees GROUP BY FIRST_NAME
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE HIRE_DATE < '2002-06-21' GROUP BY WEEKDAY ORDER BY COUNT(HIRE_DATE) DESC
Visualize BAR SELECT DEPARTMENT_ID , COUNT(DEPARTMENT_ID) FROM employees GROUP BY JOB_ID
Visualize BAR SELECT Participant_ID , Participant_Details FROM Participants GROUP BY Participant_ID ORDER BY Participant_Details
Visualize BAR SELECT department_id, AVG(hire_date) , AVG(job_id) FROM employees WHERE hire_date BETWEEN '1990-01-01' AND '1994-04-01' AND department_id IS NOT NULL AND manager_id IS NOT NULL AND salary IS BETWEEN 8000 AND 12000 AND commission_pct IS NOT NULL AND department_id != 40  GROUP BY department_id , AVG(hire_date) , AVG(
Visualize BAR SELECT Date_Payment_Made , COUNT(Date_Payment_Made) FROM Payments WHERE Payment_Method_Code = 'VISA' GROUP BY 3 YEAR(Date_Payment_Made) BIN (Date_Payment_Made) BY MONTH(Date_Payment_Made) ORDER BY COUNT(Date_Payment_Made)
Visualize SCATTER SELECT student_id, monthly_rental FROM Students GROUP BY student_id, monthly_rental
Visualize BAR SELECT job_id , COUNT(job_id) FROM employees GROUP BY job_id HAVING FIRST_NAME like 'D' OR FIRST_NAME like 'S' ORDER BY COUNT(job_id) DESC , SELECT job_id , SUM(job_history.job_id) FROM job_history GROUP BY job_id HAVING job_history.job_id like 'D' OR job_history.job_id like 'S'
Visualize BAR SELECT DEPARTMENT_ID , sum(employee_id) FROM employees JOIN job_history on employee_id = job_history.EMPLOYEE_ID JOIN departments on job_history.DEPARTMENT_ID = departments.DEPARTMENT_ID WHERE ( hire_date BETWEEN '2008-01-01' AND '2010-12-31') AND ( job_history.END_DATE is null OR job_history.END_DATE IS NULL) AND (department_id <> 4
1. Visualize PIE SELECT Venue FROM match GROUP BY Venue ORDER BY Date DESC 2. Visualize BAR SELECT Date , count(*) FROM match GROUP BY Date ORDER BY Date ASC BIN Date BY YEAR
Visualize HISTOGRAM SELECT Code , sum(Price) FROM Products GROUP BY Code ORDER BY sum(Price) DESC
Visualize BAR SELECT FIRST_NAME , SUM(SALARY) FROM employees GROUP BY FIRST_NAME BIN HIRE_DATE BY 10 YEARS
Visualize BAR SELECT email , COUNT(email) FROM employees GROUP BY email

Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees GROUP BY HIRE_DATE ORDER BY HIRE_DATE ASC
Visualize PIE SELECT Position , COUNT(Position) FROM match_season GROUP BY Position
Bar Select JOB_ID , SUM(EMPLOYEE_ID) FROM jobs , employees , job_history GROUP BY job_id ORDER BY job_id DESC
1.Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees GROUP BY JOB_ID , 2. Visualize BAR SELECT EMPLOYEE_ID , SUM(DEPARTMENT_ID) FROM employees GROUP BY EMPLOYEE_ID 3. Visualize BAR SELECT EMPLOYEE_ID , SUM(DEPARTMENT_ID) FROM job_history WHERE job_id = (SELECT JOB_ID FROM employees) GROUP BY EMPLOYEE_ID
Visualize BAR SELECT Name , sum(price) FROM products GROUP BY Name ORDER BY sum(price) ASC

Visualize BAR SELECT job_id , COUNT(*) FROM jobs GROUP BY job_id ORDER BY job_id ASC   Visualize BAR SELECT job_id , avg(department_id) FROM job_history GROUP BY job_id ORDER BY job_id ASC
Visualize BAR SELECT other_details , COUNT(other_details) FROM Student_Addresses GROUP BY other_details ORDER BY Count(other_details) ASC BIN other_details BY WEEKDAY , Visualize BAR SELECT date_address_from , COUNT(date_address_from) FROM Student_Addresses GROUP BY date_address_from ORDER BY date_address_from ASC
Visualize BAR SELECT Revenue , Revenue FROM Manufacturers GROUP BY Revenue ORDER BY Revenue ASC
Visualize BAR SELECT JOB_ID , COUNT(DEPARTMENT_ID) FROM employee WHERE FIRST_NAME LIKE 'D%sS' GROUP BY JOB_ID ORDER BY JOB_ID ASC
Visualize BAR SELECT JOB_ID , MANAGER_ID, AVG(MANAGER_ID) FROM employees WHERE HIRE_DATE < '2002-06-21' GROUP BY JOB_ID , MANAGER_ID ORDER BY AVG(MANAGER_ID) ASC
Visualize BAR SELECT Payment_Method_Code , COUNT(Payment_Method_Code) FROM Payments GROUP BY Payment_Method_Code
1) Visualize LINE SELECT First_Name , Count(job_id) FROM employees WHERE First_Name LIKE "D%S%" GROUP BY job_id, first_name ORDER BY Count(job_id)  2) Visualize BAR SELECT First_Name , AVG(SALARY) FROM employees WHERE First_Name LIKE "D%S%" GROUP BY First_Name ORDER BY First_Name ASC  3) Visualize BAR SELECT First_Name , AVG(SALARY) FROM employees WHERE First_Name LIKE "D%S%" GROUP BY First_Name, job
Visualize BAR SELECT code , price FROM products where price >= 180 Group By code Order By Price DESC Order By code ASC
Visualize SCATTER SELECT address_id , monthly_rental FROM Student_Addresses GROUP BY monthly_rental, other_details
Visualize BAR SELECT product_type_code , product_price FROM PRODUCTS ORDER BY product_price ASC, visualize BAR SELECT product_type_code , avg(product_price) FROM PRODUCTS GROUP BY product_type_code
Visualize BAR SELECT Payment_Method_Code , Amount_Payment / count(*) FROM Payments GROUP BY Payment_Method_Code
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees GROUP BY JOB_ID , DEPARTMENT_ID ORDER BY SUM(EMPLOYEE_ID) ASC ,DEPARTMENT_ID ASC
``` Visualize SCATTER SELECT LAST_NAME , COUNT(*) FROM employees GROUP BY LAST_NAME HAVING FIRST_NAME LIKE 'C%20' AND EMPLOYEE_ID LIKE 'A%' AND HIRE_DATE LIKE '2002-06-21%' AND SALARY > 0 AND COMMISSION_PCT >= 0.2 AND SALARY >= 50000 AND COMMISSION_PCT <= 0.5 GROUP BY LAST_NAME ORDER BY SALARY ASC ```
1. Visualize SINGLE SELECT student_id , COUNT(address_id) FROM Addresses GROUP BY student_id 2. Visualize SINGLE SELECT student_id , COUNT(address_id) FROM Addresses GROUP BY student_id 3. Visualize SINGLE SELECT student_id , COUNT(address_id) FROM Addresses GROUP BY student_id 4. Visualize SINGLE SELECT student_id , COUNT(address_id) FROM Addresses GROUP BY student_id 5. Visualize SINGLE SELECT student_id , COUNT(address_id) FROM Address
Visualize HISTOGRAM SELECT MANAGER_ID , FIRST_NAME FROM employees GROUP BY MANAGER_ID, FIRST_NAME ORDER BY FIRST_NAME DESC , MANAGER_ID DESC
1.Visualize BAR SELECT JOB_ID , count(*) FROM jobs GROUP BY JOB_ID ORDER BY JOB_ID ASC 2.Visualize BAR SELECT JOB_ID , Average(MANAGER_ID) FROM employees GROUP BY JOB_ID ORDER BY JOB_ID ASC
Visualize BAR SELECT Date_Payment_Made , AVG(Amount_Payment) FROM Payments GROUP BY Date_Payment_Made ORDER BY Amount_Payment DESC
Visualize BAR SELECT Carrier , COUNT(Carrier) FROM phone GROUP BY Carrier ORDER BY COUNT(Carrier) DESC
Visualize BAR SELECT DEPARTMENT_ID, SUM(HIRE_DATE) FROM employees WHERE HIRE_DATE < '2002-06-21' GROUP BY DEPARTMENT_ID
Visualize BAR SELECT Payment_Method_Code , SUM(Amount_Payment) / SUM(total) AS Percentage FROM Payments GROUP BY Payment_Method_Code
Visualize BAR SELECT EMPLOYEE_ID , SUM(SALARY) FROM employees GROUP BY EMPLOYEE_ID, job_id  ORDER BY job_id
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE FIRST_NAME LIKE 'D%'; OR FIRST_NAME LIKE 'S%'; GROUP BY JOB_ID , FIRST_NAME, LAST_NAME BIN JOB_ID BY YEAR
Visualize BAR SELECT Payment_Method_Code , SUM(Amount_Payment) FROM Payments GROUP BY Date_Payment_Made ORDER BY Date_Payment_Made DESC
Visualize BAR SELECT department_id , hire_date , avg(hire_date) FROM employee WHERE hire_date BETWEEN '2008-01-01' AND '2008-01-07' GROUP BY department_id ORDER BY avg(hire_date) DESC
Visualize BAR SELECT EMPLOYEE_ID , COMMISSION_PCT FROM employees WHERE COMMISSION_PCT IS NOT NULL AND EMPLOYEE_ID IN (SELECT EMPLOYEE_ID FROM job_history WHERE job_history.department_id = 40)
Visualize BAR SELECT job_history.EMPLOYEE_ID , COUNT(job_history.JOB_ID) , SUM(job_history.JOB_ID) FROM jobs INNER JOIN employees ON jobs.JOB_ID = employees.JOB_ID INNER JOIN job_history ON employees.JOB_ID = job_history.JOB_ID AND employees.EMPLOYEE_ID = job_history.EMPLOYEE_ID GROUP BY employees.EMPLOYEE_ID, JOB_ID, DEPARTMENT_ID BIN EMP
Visualize PIE SELECT Investor , COUNT(*) FROM entrepreneur GROUP BY Investor ORDER BY COUNT(*) ASC
Visualize BAR SELECT EMPLOYEE_ID , SUM(JOB_ID) FROM employees WHERE FIRST_NAME LIKE "%D%" OR FIRST_NAME LIKE "%S%" GROUP BY EMPLOYEE_ID ORDER BY EMPLOYEE_ID ASC
/* Visualize BAR SELECT DEPARTMENT_ID , SUM(salary) FROM employees, job_history WHERE hire_date BETWEEN '2019-01-01' and '2019-01-31' GROUP BY DEPARTMENT_ID BIN hire_date by 60d , sort total number by asc order please ,  Visualize SCATTER SELECT job_history.employee_id , COUNT(job_history.employee_id) FROM employees, job_history WHERE hire_date BETWEEN '2
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) , COUNT(JOB_ID) FROM employees GROUP BY JOB_ID ORDER BY COUNT(JOB_ID) DESC
Visualize BAR SELECT job_id , AVG(salary) FROM employees GROUP BY job_id ORDER BY AVG(salary) DESC
1) JUDGE()     SELECT MANAGER_ID FROM departments GROUP BY MANAGER_ID ORDER BY MANAGER_ID DESC 2) JUDGE()     SELECT LAST_NAME FROM employees GROUP BY LAST_NAME ORDER BY LAST_NAME DESC 3) SELECT DISTINCT(MANAGER_ID) FROM departments GROUP BY MANAGER_ID ORDER BY MANAGER_ID DESC 4) SELECT MANAGER_ID FROM departments WHERE MANAGER_ID IN (JUDGE(1)) GROUP
Visualize BAR SELECT Investor, COUNT(Investor) FROM entrepreneur GROUP BY Investor ORDER BY COUNT(Investor) ASC
Visualize BAR SELECT date_of_notes , COUNT(date_of_notes) FROM Assessment_Notes GROUP BY date_of_notes
Visualize BAR SELECT Salary , COUNT(Salary) FROM employees WHERE Salary BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NOT NULL AND DEPARTMENT_ID != 40 GROUP BY Salary ORDER BY COUNT(Salary) DESC
Visualize BAR SELECT   EMPLOYEE_ID , JOB_ID ,   SUM(START_DATE) AS JOB_START_DATE ,   SUM(SALARY) AS SALARY ,   SUM(COMMISSION_PCT) AS COMMISSION_PCT ,   SUM(END_DATE) AS JOB_END_DATE FROM   employees   JOIN job_history   JOIN departments   JOIN jobs WHERE   MIN_SALARY BETWEEN 8000 AND 1
Visualize BAR SELECT Revenue , sum(Revenue) FROM Manufacturers GROUP BY Code ORDER BY sum(Revenue) DESC BIN Revenue BY WEEKDAY
Visualize BAR SELECT sum(salary),job_id FROM employees WHERE salary >= 8000 AND salary <= 12000 AND commission is null AND department_id NOT IN (40) GROUP BY job_id ORDER BY job_id DESC
Visualize BAR SELECT JOB_ID , COUNT(EMPLOYEE_ID) FROM employees JOIN job_history ON employee_id = job_history.employee_id WHERE salary BETWEEN 8000 AND 12000 AND commission IS NOT NULL AND job_id <> 40 GROUP BY JOB_ID ORDER BY JOB_ID ASC , Visualize BAR SELECT JOB_ID , SUM(salary) FROM employees JOIN job_history ON employee_id = job_history.employee_id WHERE salary BETWEEN 800
Visualize LINE SELECT Date_of_notes , COUNT(Date_of_notes) FROM Assessment_Notes  GROUP BY Date_of_notes ORDER BY COUNT(Date_of_notes) DESC
SELECT EMPLOYEE_ID, DEPARTMENT_ID ,AVG(HIRE_DATE) as HIRE_DATE FROM employees  GROUP BY EMPLOYEE_ID ,DEPARTMENT_ID HAVING HIRE_DATE < '2002-06-21' ORDER BY AVG(HIRE_DATE) ASC Visualize BAR SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE HIRE_DATE < '2002-06-21' GROUP BY HIRE_DATE,
Visualize BAR SELECT HIRE_DATE , avg(SALARY) FROM employees GROUP BY HIRE_DATE ORDER BY avg(SALARY)
1. Visualize BAR SELECT other_details , AVG(monthly_rental) FROM student_addresses GROUP BY other_details ORDER BY AVG(monthly_rental) DESC 2. Visualize BAR SELECT teacher_id , SUM(cloud_cover) FROM teachers GROUP BY teacher_id BIN time BY year 3. Visualize BAR SELECT incident_type_code , COUNT(incident_type_code) FROM behavior_incident GROUP BY incident_type_code ORDER BY COUNT(incident_type_code) ASC 4. Visualize BAR SELECT
1) Select BIN HIRE_DATE BY DAY_OF_WEEK  2) Select EMPLOYEE_ID , COUNT(*) FROM employees GROUP BY EMPLOYEE_ID ORDER BY COUNT(*) DESC
Visualize BAR SELECT EMPLOYEE_ID , SUM(SALARY) FROM job_history GROUP BY EMPLOYEE_ID WHERE JOB_ID = FIRST_VALUE(JOB_ID) OVER (ORDER BY EMPLOYEE_ID , DEPARTMENT_ID) AND EMPLOYEE_ID NOT IN (SELECT EMPLOYEE_ID FROM job_history GROUP BY EMPLOYEE_ID) AND EMPLOYEE_ID NOT IN (SELECT EMPLOYEE_ID FROM employees WHERE EMAIL NOT LIKE
Visualize BAR SELECT date_address_from , date_address_to , COUNT(*) FROM Student_Addresses GROUP BY date_address_from , date_address_to ORDER BY COUNT(*) ASC
Visualize SCATTER SELECT EMPLOYEE_ID , count(*) FROM job_history WHERE EMPLOYEE_ID IN (SELECT EMPLOYEE_ID FROM employees WHERE SALARY BETWEEN 8000 AND 12000 AND JOB_ID NOT IN (SELECT DISTINCT JOB_ID FROM job_history)) AND EMPLOYEE_ID NOT IN (SELECT MANAGER_ID FROM departments WHERE DEPARTMENT_ID = 40) AND JOB_ID IN (SELECT DISTINCT JOB_ID
Visualize BAR SELECT D, S ,sum(EMPLOYEE_ID) FROM employees GROUP BY D, S ORDER BY SORT() ASC
Visualize BAR SELECT JOB_ID, count(EMPLOYEE_ID), sum(MANAGER_ID) FROM employees GROUP BY JOB_ID ORDER BY JOB_ID ASC
Visualize BAR SELECT JOB_ID , COUNT(salary) FROM employees  WHERE JOB_ID >= 1000 GROUP BY JOB_ID ,  START_DATE ASC
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM department JOIN job ON job.department_id = department.department_id WHERE job.department_id > 40 AND salary >= 8000 AND salary <= 12000 AND commission_pct IS NOT NULL AND job_history.employee_id = employees.employee_id GROUP BY JOB_ID RANK BAR DESC
Visualize STOCKHOLM_BINARY  SELECT ranking_date , tours FROM rankings GROUP BY ranking_date,tours ORDER BY tours DESC
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM jobs INNER JOIN employees ON JOB_ID = EMPLOYEE_ID GROUP BY JOB_ID ORDER BY SUM(EMPLOYEE_ID) DESC
Visualize BAR SELECT Position , COUNT(*) FROM match_season GROUP BY Position
Visualize BAR SELECT job_id , COUNT(employee_id) FROM employees WHERE hire_date >= '2002-06-21' GROUP BY job_id BIN job_id BY JOB_ID , SORT BY COUNT(employee_id)
Visualize PIE SELECT Code , Price FROM Products WHERE Price >= 180 ORDER BY Price DESC,Name ASC
Visualize LINE SELECT MANAGER_ID , EMPLOYEE_ID , HIRE_DATE , job_history.STAR_DATE, job_history.END_DATE, job_history.JOB_ID FROM employees  JOIN departments ON departments.MANAGER_ID = employees.MANAGER_ID JOIN job_history ON job_history.EMPLOYEE_ID = employees.EMPLOYEE_ID WHERE SALARY BETWEEN 8000 AND 12000 AND commission_pct IS NOT NULL
Visualize BAR SELECT Department_ID , AVG(HIRE_DATE) FROM employees WHERE FIRST_NAME = 'D' OR FIRST_NAME = 'S' GROUP BY Department_ID , weekday ASC
Visualize LINE SELECT monthly_rental , COUNT(*) FROM student_addresses GROUP BY date_address_to
Visualize BAR SELECT Products.Name , Manufacturers.Price FROM Products JOIN Manufacturers ON Products.Manufacturer = Manufacturers.Code  GROUP BY Products.Name , Manufacturers.Price  ORDER BY Manufacturers.Price DESC
Visualize BAR SELECT MIN(job_id) , AVG(manager_id) FROM employees WHERE HIRE_DATE < 2002-06-21 GROUP BY AVG(manager_id) ORDER BY AVG(manager_id) ASC
Visualize BAR SELECT Code , Price FROM Manufacturers GROUP BY Code ORDER BY Price ASC
Visualize BAR SELECT Code , Price FROM Products  WHERE Price between 60 and 120 GROUP BY Price ORDER BY Price DESC BIN Code BY Products.Manufacturer.Code
Visualize BAR SELECT department_id , hire_date, department_id.sum() FROM ( SELECT employees.hire_date, employee_id, department_id FROM employees WHERE (salary BETWEEN 8000 AND 12000 OR department_id != 40 ) AND commission_pct IS NOT NULL AND job_id IS NOT NULL GROUP BY department_id, employees.hire_date, employee_id, department_id) AS department_id GROUP BY department_id, hire_date ORDER BY SUM(department_id.sum()) ASC
Visualize BAR SELECT County_name , Population FROM county ORDER BY Population DESC
Visualize BAR SELECT Competition , count(*) FROM match GROUP BY competition ORDER BY Competition ASC
1. Visualize BAR SELECT EMPLOYEE_ID , AVG(SALARY) FROM jobs GROUP BY EMPLOYEE_ID ORDER BY EMPLOYEE_ID, JOB_ID ASC  2. Visualize BAR SELECT EMPLOYEE_ID , AVG(SALARY) FROM employees GROUP BY EMPLOYEE_ID,JOB_ID ORDER BY EMPLOYEE_ID,JOB_ID ASC  3. Visualize BAR SELECT EMPLOYEE_ID , AVG(SALARY) FROM
Visualize BAR SELECT FIRST_NAME , COUNT(FIRST_NAME) , AVG(MANAGER_ID) FROM employees GROUP BY FIRST_NAME ORDER BY AVG(MANAGER_ID) ASC
Visualize BAR SELECT Code , Name, Price FROM Manufacturers GROUP BY Code , Name , Price  ORDER BY Price ASC
Visualize BAR SELECT HIRE_DATE , avg(EMPLOYEE_ID) FROM employees WHERE HIRE_DATE < '2002-06-21' GROUP BY weekday
Visualize LINE SELECT date_of_notes , COUNT(date_of_notes) FROM Assessment_Notes GROUP BY date_of_notes
Visualize Bar SELECT Dept_Id , AVG(hire_date) FROM departments WHERE LOCATION_ID != 40 AND (COMMISSION_PCT IS NULL OR COMMISSION_PCT ='') AND Dept_Id BETWEEN 8 AND 12 GROUP BY Dept_Id ORDER BY AVG(hire_date) DESC
Visualize BAR SELECT Position , COUNT(*) FROM match_season GROUP BY Position, Season DESC
1st Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE  HIRE_DATE > '2019-12-05' GROUP BY HIRE_DATE ORDER BY HIRE_DATE DESC BIN HIRE_DATE BY YEAR , 2nd Visualize BAR SELECT DEPARTMENT_ID , SUM(EMPLOYEE_ID) FROM employees WHERE DEPARTMENT_ID = 40  GROUP BY DEPARTMENT_ID ORDER BY DEPARTMENT_ID DESC BIN DEPARTMENT
Visualize BAR SELECT EMPLOYEE_ID, COUNT(EMPLOYEE_ID) FROM employees WHERE HIRE_DATE BETWEEN '2007/01/01' AND '2007/12/31' AND SALARY BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NULL AND DEPARTMENT_ID <> 40 AND FIRST_NAME <> 'James' AND LAST_NAME <> 'Jim' GROUP BY EMPLOYEE
Visualize BAR SELECT DEPARTMENT_ID , COUNT(*) FROM employees WHERE SALARY BETWEEN 8000 AND 12000 AND commission_pct IS NULL AND job_id IS NOT NULL AND department_id != 40 GROUP BY department_id, hire_date ORDER BY SUM(department_id) DESC
Visualize BAR SELECT Year , COUNT(Year) FROM player GROUP BY Year ORDER BY Count(Year) DESC
1. Visualize BAR SELECT EMPLOYEE_ID , JOB_ID FROM jobs GROUP BY EMPLOYEE_ID, JOB_ID 2. Visualize BAR SELECT EMPLOYEE_ID, COUNT(JOB_ID) FROM job_history GROUP BY EMPLOYEE_ID, JOB_ID
1. Select for job_history WHERE EMPLOYEE_ID = X AND job_id = Y 2. Select salary, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID from employee where SALARY between 8000 AND 12000 AND commission_pct IS NOT NULL AND department_id NOT IN (40) 3. SELECT DATE_TRUNC(hire_date , MONTH) , count(*) FROM employee WHERE salary BETWEEN 8000 AND 1200
Visualize BAR SELECT FIRST_NAME , AVG(SALARY) FROM employees WHERE FIRST_NAME = "D" OR FIRST_NAME = "S" GROUP BY FIRST_NAME BIN hire_date BY WEEKDAY ORDER BY avg(SALARY) DESC
Visualize BAR SELECT COUNTRY_ID , count(*) FROM countries GROUP BY COUNTRY_ID ORDER BY count(*) DESC
Visualize SCATTER SELECT Product_Suppliers.product_id, Products.product_price FROM Product_Suppliers JOIN Products ON Product_Suppliers.product_id = Products.product_id  WHERE Product_Suppliers.supplier_id = 10 ORDER BY Product_Suppliers.date_supplied_from DESC
Visualize BAR SELECT FIRST_NAME , count(EMPLOYEE_ID) FROM employees WHERE FIRST_NAME IN ('D','S') GROUP BY hire_date  BIN HIRE_DATE BY WEEKDAY
Visualize BAR SELECT Manufacturer , Price FROM Products WHERE Price BETWEEN 60 AND 120 GROUP BY Manufacturer ORDER BY Price DESC
Visualize BAR SELECT count(*) FROM departments WHERE ( DEPARTMENT_ID != 40 OR COMMISSION_PCT IS NULL) AND ((hire_date>=2018-01-01 AND hire_date <=2019-06-01 OR hire_date <=2018-06-01 AND hire_date >=2018-01-01) AND ((hire_date>=2019-06-01 AND hire_date <=2019-09-0
Visualize SCATTER SELECT employee_id , salary FROM employees GROUP BY employee_id HAVING HIRE_DATE < '2002-06-21'
Visualize BAR SELECT hand , count(*) FROM player GROUP BY hand ORDER BY count(*) DESC
Visualize BAR SELECT job_id , AVG(job_id) FROM jobs GROUP BY job_id ORDER BY AVG(job_id) ASC
Visualize BAR SELECT last_name , employee_id FROM employees
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees GROUP BY HIRE_DATE ORDER BY AVG(DEPARTMENT_ID) ASC
Visualize BAR SELECT job_id , COUNT(*) FROM jobs WHERE HIRE_DATE <= '2002-06-21' GROUP BY job_id ORDER BY COUNT(*)
Visualize BAR SELECT Employee_ID , count(*) FROM employees GROUP BY Employee_ID ORDER BY count(*) DESC
Visualize BAR SELECT First_name, SUM(manager_id) FROM employees GROUP BY FIRST_NAME HAVING First_name LIKE 'D%' OR First_name LIKE 'S%' ORDER BY SUM(manager_id) DESC
Visualize BAR SELECT job_id , AVG(JOB_ID) FROM employees GROUP BY job_id ORDER BY AVG(JOB_ID)
Visualize BAR SELECT Month(Hire_date) , mean(SALARY) FROM employees GROUP BY MONTH(HIRE_DATE)
Visualize BAR SELECT FIRST_NAME , HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees GROUP BY FIRST_NAME , HIRE_DATE ORDER BY HIRE_DATE ASC
Visualize BAR SELECT hand , COUNT(*) FROM players GROUP BY hand ORDER BY hand ASC
Visualize BAR SELECT customer_name , customer_id , COUNT(customer_id) FROM Customers  INNER JOIN Customer_Addresses ON customer_id = Customer_Addresses.customer_id WHERE address_id=TN AND customer_id=TN GROUP BY Customer_Addresses.customer_id , customer_name , customer_id ORDER BY Count(customer_id)
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM EMPLOYEES WHERE FIRST_NAME like 'D' or FIRST_NAME like 'S' GROUP BY JOB_ID ORDER BY AVG(SALARY) DESC
Visualize HISTOGRAM SELECT MANAGER_ID , count(*) FROM departments WHERE DEPARTMENT_ID IN (SELECT DEPARTMENT_ID FROM EMPLOYEES WHERE DEPARTMENT_ID = 1) GROUP BY MANAGER_ID ORDER BY count(*) DESC
Visualize BAR SELECT (EMPLOYEE_ID, SALARY), HIRE_DATE, AVG(SALARY) FROM employees WHERE SALARY BETWEEN 8000 AND 12000 AND commission is not null AND department_id != 40 GROUP BY HIRE_DATE , EMPLOYEE_ID BIN HIRE_DATE BY WEEKDAY
Visualize BAR SELECT Name , Count(name) FROM Manufacturers GROUP BY name ORDER BY Name ASC
Visualize BAR SELECT to_char(date_address_from, 'e') , to_char(date_address_to, 'e') FROM Student_Addresses GROUP BY to_char(date_address_from, 'e') , to_char(date_address_to, 'e') ORDER BY to_char(date_address_to, 'e') ASC
1. Visualize BAR SELECT Hire_Date , SUM(Salary) FROM employees WHERE Commission_PCT IS NOT NULL AND Department_ID = 40 AND Hire_Date between '2017-01-01' and '2017-02-01' GROUP BY Hire_Date 2. Visualize RANK(DISTINCT HIRE_DATE, SUM(SALARY)) AS number FROM employees  where Commission_Pct is not null and Department_ID = 40  GROUP BY HIRE_DATE
Visualize BAR SELECT Price , COUNT(phone_id) FROM phone GROUP BY Carrier
Visualize BAR SELECT product_type_code , COUNT(product_type_code) FROM Products GROUP BY product_type_code ORDER BY COUNT(product_type_code) ASC
Visualize LINE SELECT hire_date , COUNT(hire_date) FROM employees WHERE hire_date >= '2002-06-21'  GROUP BY hire_date  ORDER BY hire_date ASC
Visualize LINE SELECT date_of_notes , count(*) FROM Assessment_Notes GROUP BY date_of_notes ORDER BY date_of_notes ASC
Visualize BAR SELECT Department_ID, SUM(hire_date) FROM employees GROUP BY Department_ID, HIRE_DATE ORDER BY HIRE_DATE ASC
Visualize BAR SELECT MANAGER_ID , COUNT(*) FROM employees GROUP BY MANAGER_ID HAVING SALARY BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NOT NULL GROUP BY hire_date , MANAGER_ID ORDER BY COUNT(*) ASC
Visualize SPARKLINE SELECT address_id, student_id , monthly_rental, COUNT(other_address_details) FROM Student_Addresses GROUP BY address_id,student_id
Visualize BAR SELECT Date_Claim_Settled , Amount_Claim_Settled FROM Claims  GROUP BY Date_Claim_Settled
Visualize BAR SELECT District , COUNT(Delegate) FROM election GROUP BY District ORDER BY COUNT(Delegate) DESC
Visualize BAR SELECT JOB_ID, count(*) FROM employees,job_history WHERE ((FIND_IN_SET(D,'First_name') OR FIND_IN_SET(S,'First_name'))  AND job_history.JOB_ID = jobs.JOB_ID) GROUP BY job_id ORDER BY JOB_ID DESC BIN SALARY BY MONTH
1)Visualize BAR SELECT HIRE_DATE , EMPLOYEE_ID FROM employees  WHERE HIRE_DATE < '2002-06-21' ORDER BY HIRE_DATE ASC 2)Visualize LINE SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees  WHERE HIRE_DATE < '2002-06-21' ORDER BY HIRE_DATE ASC BIN HIRE_DATE BY YEAR
Visualize BAR SELECT job_id , COUNT(*) FROM employees WHERE HIRE_DATE > '2002-06-21' GROUP BY job_id ORDER BY COUNT(*) DESC
1. Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM jobs GROUP BY JOB_ID ORDER BY JOB_ID DESC 2. Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM jobs WHERE HIRE_DATE < '2002-06-21' GROUP BY JOB_ID 3. Visualize LINE SELECT DEPARTMENT_ID , COUNT(DEPARTMENT_ID) FROM jobs WHERE HIRE_DATE < '2002-06-21' GROUP BY
Visualize BAR SELECT Committee , COUNT(Delegate) FROM election GROUP BY Committee ORDER BY Counties_Represented ASC
Visualize BAR SELECT notes_id , count(*) FROM Assessment_Notes GROUP BY notes_id ORDER BY count(*) ASC
Visualize BAR SELECT * ,SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE 'D%' OR first_name LIKE 'S%' GROUP BY hire_date BIN HIRE_DATE BY YEAR
Visualize SCATTER SELECT ranking , COUNT(*) FROM rankings GROUP BY ranking_date, ranking
Visualize BAR SELECT year , count(*) FROM matches GROUP BY year ORDER BY year DESC
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees  WHERE ( SALARY BETWEEN 8000 AND 12000 AND commission_pct IS NOT NULL )  AND department_id <> 40 GROUP BY HIRE_DATE BIN HIRE_DATE BY day
Visualize PIE SELECT manufacturer , count(*) FROM Products GROUP BY Manufacturer HAVING price BETWEEN 60 AND 120
1) SELECT DISTINCT EMPLOYEE_ID , COUNT(*) FROM employees GROUP BY EMPLOYEE_ID , JOB_ID 2) Visualize BAR SELECT DISTINCT EMPLOYEE_ID , JOB_ID , COUNT(*) FROM job_history GROUP BY EMPLOYEE_ID , JOB_ID
Visualize BAR SELECT MIN(JOB_TITLE) , JOB_ID , AVG(Salary) FROM employees WHERE FIRST_NAME LIKE "D%" OR FIRST_NAME LIKE "S%" GROUP BY JOB_ID , AVG(Salary) ORDER BY AVG(Salary) DESC
Visualize BAR SELECT CITY , COUNT(*) FROM locations GROUP BY CITY ORDER BY COUNT(*) DESC
Visualize HISTOGRAM SELECT COUNT(*) FROM county GROUP BY COUNTY_NAME ORDER BY COUNT(*) DESC
Visualize LINE SELECT HIRE_DATE , COUNT(EMPLOYEE_ID) FROM employees WHERE HIRE_DATE < "2002-06-21" GROUP BY hire_date ORDER BY hire_date DESC
Visualize BAR SELECT Product_type_code , avg(product_price) FROM Products GROUP BY product_type_code ORDER BY Product_type_code ASC , AVG(product_price) DESC
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE HIRE_DATE <= '2002-06-21' GROUP BY HIRE_DATE ORDER BY HIRE_DATE DESC
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE HIRE_DATE < "2002-06-21"  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY WEEKDAY
Visualize BAR SELECT EMPLOYEE_ID , COUNT(EMPLOYEE_ID) FROM employees GROUP BY EMPLOYEE_ID ORDER BY COUNT(EMPLOYEE_ID) DESC BIN EMPLOYEE_ID BY WEEKDAY
Visualize BAR SELECT Products.Code , COUNT(Products.Code) FROM Products WHERE Price between 60 and 120 GROUP BY Products.Code ORDER BY COUNT(Products.Code) DESC
Visualize HISTOGRAM SELECT Product_Price, COUNT(*) FROM Products GROUP BY Product_Price ORDER BY COUNT(*) DESC
Visualize BAR SELECT EMAIL , SALARY FROM employees ORDER BY total_salary ASC
Visualize BAR SELECT date_address_from , count(*) FROM Student_Addresses GROUP BY date_address_from ORDER BY date_address_from ASC
Visualize BAR SELECT hire_date , AVG(employee_id) AS average_employee FROM employees JOIN departments on employees.department_id = departments.department_id JOIN job_history on employees.employee_id = job_history.employee_id WHERE employees.salary between 8000 AND 12000 and (commission_pct IS NULL or department_id != 40) AND EXISTS (select * from job_history where job_history.employee_id = employees.employee_id AND job_history.start_date between employees
Visualize LINE SELECT FIRST_NAME, MANAGER_ID, hire_date FROM employee WHERE FIRST_NAME LIKE "D% OR S%" GROUP BY MANAGER_ID , FIRST_NAME , hire_date
Visualize BAR SELECT JOB_ID , avg(manager_id) FROM employees WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' GROUP BY JOB_ID
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees BIN HIRE_DATE BY WEEKDAY
Visualize BAR SELECT FIRST_NAME , AVG(SALARY) FROM employees WHERE FIRST_NAME LIKE ‘%m%’ GROUP BY FIRST_NAME
Visualize BAR SELECT Hire_Date , SUM(Salary) BIN(Hire_Date,1) AS Weekday FROM employees WHERE Hire_Date <= '2002-06-21' GROUP BY Hire_Date,Weekday ORDER BY Weekday ASC
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE HIRE_DATE < "2002-06-21" GROUP BY HIRE_DATE BIN HIRE_DATE BY YEAR
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM EMPLOYEE  WHERE MIN_SALARY <= 12000 AND MAX_SALARY >= 8000 AND COMMISSION_PCT IS NOT NULL AND JOB_ID NOT IN (SELECT JOB_ID FROM JOB_HISTORY WHERE MANAGER_ID=103) GROUP BY JOB_ID ORDER BY AVG(DEPARTMENT_ID) ASC
Visualize LINE SELECT year , COUNT(year) FROM matches GROUP BY year ORDER BY year DESC
Visualize HIST SELECT Name FROM Manufacturers GROUP BY Name ORDER BY COUNT(Name) DESC , HIST SELECT Price , COUNT(*) FROM Products GROUP BY Price
/* Visualize scatter chart, and color the line by department_id */ Visualize SCATTER SELECT EMAIL , SALARY FROM employees GROUP BY EMAIL, SALARY HAVING (1) AND (2), LOCATION_ID ASC
BIN BY date_incident_start AVG SUM(date_incident_end) FROM Behavior_Incident WHERE date_incident_start = "NOISE" GROUP BY day(date_incident_start) ORDER BY total DESC
Visualize BAR SELECT Amount_Payment, Payment_Method_Code FROM Payments GROUP BY Payment_Method_Code ORDER BY Amount_Payment DESC
Visualize BAR SELECT EMPLOYEE_ID , COUNT(JOB_ID) FROM job_history WHERE START_DATE < '2002-06-21' GROUP BY EMPLOYEE_ID  ORDER BY EMPLOYEE_ID ASC
Visualize BAR SELECT EMPLOYEE_ID , hire_date , COUNT(hire_date) FROM employees  WHERE hire_date between 13500 and 14900  AND (hired_date is not null or department_id <> 40) GROUP BY employee_id ORDER BY COUNT(hire_date)
Visualize BAR SELECT JOB_TITLE , COUNT(JOB_TITLE) FROM jobs WHERE MIN_SALARY >= 12000 AND MIN_SALARY <= 18000 GROUP BY JOB_TITLE ORDER BY COUNT(JOB_TITLE) DESC

Visualize BAR SELECT Order_Status_Code , SUM(Total_amount_Purchased) FROM Customer_Orders GROUP BY Order_Status_Code ORDER BY SUM(Total_amount_Purchased) ASC
SELECT DEPARTMENT_ID , SUM(EMPLOYEE_ID) FROM employees  WHERE DEPARTMENT_ID=40 AND SALARY>=8000 AND SALARY<=12000 AND COMMISSION_PCT is null AND  (SELECT SUM(JOB_ID) FROM job_history WHERE EMPLOYEE_ID IN ( SELECT EMPLOYEE_ID FROM employees  WHERE DEPARTMENT_ID=40 AND SALARY>=8000 AND SALARY<=12000 AND

Visualize BAR SELECT Headquarter , COUNT(Manufacturer) FROM products GROUP BY Manufacturer ORDER BY COUNT(Manufacturer) DESC BIN Manufacturer BY Headquarter
Visualize BAR SELECT DATE_ADDRESS_FROM , avg(monthly_rental) FROM Student_Addresses WHERE DATE_ADDRESS_FROM > '1999-01-01' AND DATE_ADDRESS_FROM < '2015-01-01' GROUP BY date_address_from ORDER BY weekday
Visualize BAR SELECT Year , AVG(Amount_Payment) FROM Payments GROUP BY Year ORDER BY Year ASC
Visualize BAR SELECT Name, price FROM Products GROUP BY Name,price ORDER BY price ASC,Code ASC,Name ASC
Visualize BAR SELECT Settlement_ID, Amount_Payment FROM Payments GROUP BY Settlement_ID ORDER BY Amount_Payment DESC
Visualize SCALE SELECT EMPLOYEE_ID , DEPARTMENT_ID FROM employee WHERE HIRE_DATE < '2002-06-21' GROUP BY EMPLOYEE_ID , DEPARTMENT_ID SORT by DEPARTMENT_ID HAVING COUNT(*) > 0 order by SALARY DESC BIN EMPLOYEE_ID BY DEPARTMENT_ID
Visualize LINE SELECT job_id, job_name , hire_date, commission_pct, count(*) FROM employee GROUP BY job_name, hire_date ORDER BY job_name, hire_date
Visualize BAR SELECT Job_ID , count(*) FROM job_history GROUP BY Job_ID
Visualize BAR SELECT manufacturer , min(price) FROM products GROUP BY manufacturer ORDER BY manufacturer
Visualize BAR SELECT first_name , SUM(salary) FROM employee GROUP BY first_name , JOB_ID ORDER BY SUM(salary) DESC
Visualize BAR SELECT JOB_ID , MIN_SALARY , MAX_SALARY FROM jobs WHERE SALARY >= 8000 AND SALARY <= 12000 AND COMMISSION_PCT IS NOT NULL AND DEPARTMENT_ID <> 40 GROUP BY JOB_ID  ORDER BY JOB_ID ASC
Visualize BAR SELECT Hire_Date , count(*) FROM employees WHERE (Salary >= 8000 AND Commission_PCT IS NOT NULL) AND (Department_ID != 40) AND (Job_ID != 38408) GROUP BY Hire_Date ORDER BY Hire_Date DESC
Visualize BAR SELECT EMPLOYEE_ID , MIN(HIRE_DATE) FROM employees GROUP BY FIRST_NAME , LAST_NAME HAVING IN (D,S) ORDER BY MIN(HIRE_DATE) ASC
Visualize BAR SELECT LAST_NAME, count(hire_date) FROM employees GROUP BY LAST_NAME ORDER BY count(hire_date) DESC
Visualize BAR SELECT payment_method_code , COUNT(*) FROM Customers GROUP BY payment_method_code ,customer_code ORDER BY payment_method_code ASC
Visualize BAR SELECT LName , count(*) FROM Student WHERE Major = 600 GROUP BY LName ORDER BY count(*) DESC
Visualize BAR SELECT Date_Claim_Settled, COUNT(Date_Claim_Settled) FROM Claims GROUP BY YEAR(Date_Claim_Settled) ORDER BY Year
Visualize BAR SELECT Name , Count(*) FROM Products GROUP BY Name ORDER BY Count(*) DESC
Visualize BAR SELECT CITY FROM LOCATIONS ORDER BY CITY ASC
Visualize PIE SELECT Code, COUNT(*) AS code, Price BETWEEN 60 AND 120 FROM Manufacturers JOIN Products ON Manufacturers.Code = Products.Code GROUP BY Price
Visualize PIE SELECT First_Name , SUM(SALARY) FROM EMPLOYEES WHERE First_Name like 'Mc%' GROUP BY First_Name
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM jobs GROUP BY JOB_ID ORDER BY JOB_ID DESC
Visualize BAR SELECT department_id , SUM(manager_id) FROM employees GROUP BY job_id ORDER BY job_id ASC
Visualize BAR SELECT state_province , COUNT(state_province) FROM locations GROUP BY state_province ORDER BY COUNT(state_province) ASC
Visualize BAR SELECT Code , Minimal_Price FROM Products GROUP BY Code ORDER BY Minimal_Price ASC
Visualize BAR SELECT HIRE_DATE , avg(salary) FROM employees WHERE HIRE_DATE < '2002-06-21' GROUP BY HIRE_DATE BIN HIRE_DATE BY YEAR
Visualize BAR SELECT Date_Payment_Made , SUM(Amount_Payment) FROM Payments BIN Date_Payment_Made BY YEAR  GROUP BY Date_Payment_Made, Payment_Method_Code ORDER BY Date_Payment_Made ASC
Visualize BAR SELECT DEPARTMENT_ID , COUNT(EMPLOYEE_ID) FROM employees WHERE (salary > 8000 AND salary < 12000) AND (commission_pct IS NOT NULL) AND (department_id <> 40) GROUP BY DEPARTMENT_ID
Visualize Bar select department_id , count(job_id) FROM employees WHERE SALARY BETWEEN 8000 AND 12000 AND ( commission_pct IS NULL OR department_id = 40) BIN job_id BY job_id , JOB_ID
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM jobs WHERE HIRED_BEFORE(2002-06-21) GROUP BY JOB_ID ORDER BY SUM(SALARY) ASC
Visualize BAR SELECT HIRE_DATE, SUM(SALARY) FROM employees WHERE HIRE_DATE < '2002-06-21' GROUP BY HIRE_DATE ORDER BY HIRE_DATE ASC
Visualize BAR SELECT FIRST_NAME , hire_date FROM employees WHERE FIRST_NAME LIKE "D%" OR FIRST_NAME LIKE "S%" GROUP BY hire_date BIN hire_date BY WEEKEND
Visualize BAR SELECT MANAGER_ID , COUNT(hire_date) FROM employees GROUP BY MANAGER_ID ORDER BY COUNT(hire_date) ASC
SELECT emp.EMPLOYEE_ID, DISTINCT(dept.DEPARTMENT_ID) , ISNULL(JH.END_DATE,NULL) AS END_DATE FROM employees AS emp LEFT JOIN departments AS dept ON dept.DEPARTMENT_ID = emp.DEPARTMENT_ID   LEFT JOIN job_history AS JH ON JH.EMPLOYEE_ID = emp.EMPLOYEE_ID AND JH.END_DATE IS NULL    GROUP BY emp.EMPLOYEE_ID, dept.DE
Visualize BAR SELECT date_address_to , COUNT(date_address_to) FROM Student_Addresses WHERE date_address_to > date_address_from GROUP BY date_address_to ORDER BY date_address_to ASC
Visualize LINE SELECT EMPLOYEE_ID , HIRE_DATE , HIRE_DATE - ROW_NUMBER() OVER (ORDER BY EMPLOYEE_ID, HIRE_DATE) start_date FROM employees JOIN job_history on employee_id = employee_id where start_date >= '2002-06-21' GROUP BY employee_id , HIRE_DATE , start_date ORDER BY start_date ASC
Visualize BAR SELECT Position , Draft_Pick_Number FROM match_season GROUP BY Position ORDER BY Draft_Pick_Number DESC
Visualize BAR SELECT job_history.EMPLOYEE_ID , COUNT(job_history.EMPLOYEE_ID) FROM job_history GROUP BY job_history.EMPLOYEE_ID ORDER BY job_history.EMPLOYEE_ID ASC
Visualize BAR SELECT Last_Name , MANAGER_ID FROM employees
Visualize HISTOGRAM x=year , y=count(*) FROM matches GROUP BY year ORDER BY year
Visualize BAR SELECT date_address_from , AVG(monthly_rental) FROM Student_Addresses ORDER BY AVG(monthly_rental) DESC BIN date_address_from BY WEEKDAY
Visualize BAR SELECT LAST_NAME, AVG(SALARY) FROM employees GROUP BY LAST_NAME ORDER BY AVG(SALARY) ASC
Visualize BAR SELECT date_address_from , COUNT(date_address_from) FROM Student_Addresses GROUP BY Teacher_id, Other_Details
Visualize BAR SELECT job_id , SUM(employee_id) FROM employees GROUP BY job_id HAVING HIRE_DATE > '2002-06-21'
Visualize BAR SELECT HIRE_DATE , COUNT(*) FROM employees WHERE SALARY BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NULL AND DEPARTMENT_ID != 40 GROUP BY hire_date ORDER BY COUNT(*) DESC
Visualize BAR SELECT date_address_from , COUNT(date_address_from) FROM Student_Addresses GROUP BY date_address_from BY DAY
Visualize BAR SELECT MANAGER_ID , AVG(JOB_ID) FROM employees GROUP BY job_id ORDER BY MANAGER_ID ASC
Visualize LINE SELECT EMPLOYEE_ID , COUNT(EMPLOYEE_ID) FROM departments , employees , job_history GROUP BY EMPLOYEE_ID HAVING MANAGER_ID IN (6, 7) AND LOCATION_ID IN (1, 2, 3, 4) AND salary BETWEEN 8000 and 12000 AND department_ID NOT IN (40) AND commission_pct is not null AND job_history.end_date is not null AND hire_
Visualize BAR SELECT FIRST_NAME , MANAGER_ID FROM employees WHERE department_id = 4
Visualize BAR SELECT  DEPARTMENT_ID , COUNT(EMPLOYEE_ID) FROM departments, employees WHERE departments.DEPARTMENT_ID = employees.DEPARTMENT_ID GROUP BY MANAGER_ID, DEPARTMENT_ID ORDER BY DEPARTMENT_ID ASC
Visualize BAR SELECT Year , COUNT(Year) FROM matches GROUP BY Year
Visualize PIE SELECT hand , count(*) FROM players GROUP BY hand
Visualize BAR SELECT EMPLOYEE_ID, SUM(DEPARTMENT_ID), JOB_ID , MIN(SALARY) , MAX(SALARY) FROM jobs, employees, job_history GROUP BY EMPLOYEE_ID, JOB_ID, JOB_TITLE ORDER BY 3 DESC, 2 DESC, 1 DESC
Visualize BAR SELECT HIRE_DATE , count(*) FROM employees  WHERE EMPLOYEE_ID IN ( SELECT EMPLOYEE_ID FROM job_history  WHERE START_DATE <= '2020-12-31' AND END_DATE >= '2020-12-31' AND JOB_ID NOT IN ( 2,5,34,42,143) AND (SALARY > 8000 AND SALARY < 12000) AND DEPARTMENT_ID <>
Visualize LINE SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM departments group by JOB_ID WHERE JOB_ID BETWEEN 40 and 120 GROUP BY JOB_ID HAVING JOB_ID > 8000 and JOB_ID < 12000 HAVING COMMISSION_PCT IS NOT NULL and MANAGER_ID != 40
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM jobs GROUP BY JOB_ID , COUNTS(JOB_ID) DESC
Visualize BAR SELECT HIRE_DATE, AVERAGE(DEPARTMENT_ID) FROM employees WHERE first_name LIKE "D" OR first_name LIKE "S" GROUP BY BIN(HIRE_DATE, 1YEAR)
Visualize BAR SELECT Event_Details , COUNT(Event_Details) FROM events GROUP BY Event_Details ORDER BY Event_Details ASC
Visualize BAR SELECT Investor , count(*) FROM Entrepreneur GROUP BY Investor ORDER BY count(*) ASC

Visualize BAR SELECT HIRE_DATE , AVG(HIRE_DATE) FROM employees GROUP BY HIRE_DATE BY WEEKDAY
Visualize PIE SELECT COUNTRY_NAME , COUNT(COUNTRY_ID) FROM COUNTRIES GROUP BY COUNTRY_NAME
Visualize BAR SELECT product_type_code , (SELECT product_price FROM Products WHERE product_id = Products.product_id ORDER BY product_price DESC) FROM Products GROUP BY product_type_code
Visualize BAR SELECT incident_type_code , COUNT(*) FROM Behavior_Incident GROUP BY incident_type_code BIN month  BY YEAR
Visualize BAR SELECT job_id, salary, count(*) FROM employees WHERE hire_date < '2002-06-21' GROUP BY job_id, salary, hire_date, count(*) ORDER BY count(*) DESC
Visualize BAR SELECT date_of_notes , COUNT(*) FROM Assessment_Notes GROUP BY date_of_notes ORDER BY COUNT(*) DESC
Visualize BAR SELECT Revenue FROM Manufacturers WHERE Revenue > 0 ORDER BY Revenue DESC
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees GROUP BY JOB_ID BIN JOB_ID BY YEAR  ORDER BY JOB_ID ASC
Visualize TREND SELECT other_details, COUNT(other_details) FROM teachers GROUP BY other_details ORDER BY COUNT(other_details) DESC
Visualize BAR SELECT HIRE_DATE , COUNT(*) , MANAGER_ID FROM employees WHERE HIRE_DATE < '2002-06-21' GROUP BY HIRE_DATE, MANAGER_ID ORDER BY COUNT(*) ASC BIN HIRE_DATE BY WEEKDAY
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees GROUP BY HIRE_DATE ORDER BY HIRE_DATE DESC
Visualize BAR SELECT address_id , id FROM Customers WHERE address_id IN (SELECT address_id FROM Customer_Addresses WHERE payment_method_code ='TN') AND customer_id NOT IN (SELECT customer_id FROM Customer_Addresses WHERE payment_method_code = 'TN')
Visualize SCATTER SELECT First_Name , SALARY FROM employees GROUP BY First_Name  WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%'
Visualize SCATTER SELECT Price , Manufacturer FROM Products WHERE Price between 60 AND 120 GROUP BY Manufacturer
Visualize BAR SELECT Code , count(*) FROM Products GROUP BY Code
Visualize BAR SELECT JOB_ID , MIN(EMPLOYEE_ID) FROM job_history  GROUP BY JOB_ID ORDER BY MIN(EMPLOYEE_ID) DESC
Visualize BAR SELECT payment_method_code , COUNT(payment_method_code) FROM Customers GROUP BY Customer_code ORDER BY COUNT(payment_method_code) DESC
Visualize BAR SELECT hire_date , hire_date , sum(manager_id) FROM employees WHERE hire_date < '2002-06-21' GROUP BY hire_date
Visualize TREND SELECT Monthly_Rental , Date_Address_To FROM Student_Addresses GROUP BY Monthly_Rental
Visualize LINE SELECT date_address_from , monthly_rental FROM Student_Addresses
Visualize LINE SELECT EMPLOYEE_ID , AVG(SALARY) FROM employees WHERE HIRE_DATE < '01/01/2016' AND HIRE_DATE > '12/31/2015' GROUP BY EMPLOYEE_ID ORDER BY EMPLOYEE_ID ASC
Visualize BAR SELECT HIRE_DATE , SALARY , HIRE_DATE FROM employees GROUP BY HIRE_DATE ORDER BY HIRE_DATE ASC
Visualize BAR SELECT name , sum(price) FROM Products  WHERE manufacturer = "apple" GROUP BY manufacturer ORDER BY sum(price)
Visualize BAR SELECT EMPLOYEE_ID , (SALARY-COMMISSION_PCT)/SALARY , YEAR(HIRE_DATE) FROM employees LEFT JOIN job_history ON employee_id = job_id LEFT JOIN departments ON department_id = department_id WHERE SALARY BETWEEN 8000 AND 12000 AND HIRE_DATE BETWEEN 1985 AND 2000 AND JOB_ID NOT IN (40) AND MANAGER_ID != 10
Visualize BAR SELECT job_id , avg(salary) FROM employees WHERE first_name LIKE 'D%S%' GROUP BY job_id ORDER BY job_id ASC
Visualize LINE SELECT EMPLOYEE_ID , SALARY FROM employees GROUP BY EMPLOYEE_ID ORDER BY SALARY
Visualize BAR SELECT LAST_NAME , hire_date , COUNT(*) FROM employees GROUP BY LAST_NAME , hire_date ORDER BY hire_date ASC
Visualize BAR SELECT Investor , COUNT(Investor) FROM entrepreneur GROUP BY Investor ORDER BY COUNT(Investor)
Visualize BAR SELECT Products , COUNT(*) FROM Products GROUP BY Code BIN Products BY Manufacturer
Visualize BAR SELECT year , COUNT(*) FROM matches GROUP BY year ORDER BY year ASC BIN year BY YEAR
Visualize BAR SELECT Department_ID , Count(*) FROM job_history GROUP BY Department_ID , HIRE_DATE
Visualize PIE SELECT SALARY FROM employees WHERE salary in between 8000 and 12000 GROUP BY JOB_ID HAVING DEPARTMENT_ID <> 40
Visualize BAR SELECT Code , Revenue FROM Manufacturers GROUP BY Code ORDER BY Revenue DESC
Visualize BAR SELECT Payment_Method_Code , SUM(Amount_Payment) FROM Payments GROUP BY Payment_Method_Code ORDER BY Payment_Method_Code ASC
SELECT EMPLOYEE_ID , SALARY FROM employees  WHERE MANAGER_ID IS NOT NULL  GROUP BY EMPLOYEE_ID
Visualize BAR SELECT Carrier , AVG(Memory_in_G) FROM phone GROUP BY Carrier ORDER BY AVG(Memory_in_G) DESC
Visualize BAR SELECT FIRST_NAME , sum(SALARY) FROM employees WHERE FIRST_NAME <> 'M' GROUP BY FIRST_NAME , BIN HIRE_DATE BY (WEEKDAY)
1. Visualize LINE SELECT * FROM departments ORDER BY DEPARTMENT_ID , NAME 2. Visualize LINE SELECT * FROM employees , job_history WHERE JOB_ID = DEPARTMENT_ID AND EMPLOYEE_ID = MANAGER_ID ORDER BY HIRE_DATE ASC , JOB_ID DESC
Visualize BAR SELECT product_type_code, AVG(product_price) FROM products GROUP BY product_type_code ORDER BY AVG(product_price)
Visualize BAR SELECT COUNT(EMPLOYEE_ID), HIRE_DATE, DEPARTMENT_ID FROM employees GROUP BY HIRE_DATE, DEPARTMENT_ID ORDER BY HIRE_DATE DESC
Visualize BAR SELECT EMPLOYEE_ID , HIRE_DATE FROM employees WHERE SALARY BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NOT NULL AND MANAGER_ID <> 40 AND DEPARTMENT_ID <> 40 GROUP BY HIRE_DATE BIN HIRE_DATE BY TWO_DAYS(HOUR) ASCENDING,EMPLOYEE_ID DESCENDING
Visualize BAR SELECT job_id , JOB_TITLE , AVG(department_id) FROM employees GROUP BY JOB_TITLE , AVG(department_id) ORDER BY AVG(department_id) DESC
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE SALARY BETWEEN 8000 and 12000 AND COMMISSION_PCT IS NULL AND DEPARTMENT_ID != 40 GROUP BY hire_date, department_id BIN hire_date WITH RANGE 2015-01-01 AND 2020-12-31 ORDER BY department_id, SUM(SALARY) ASC WITH INTERVAL 1 MONTH
BAR SELECT date_address_to , COUNT(date_address_to) FROM Student_Addresses  GROUP BY date_address_to HAVING COUNT(date_address_to) > 1 ORDER BY COUNT(date_address_to) DESC BIN date_address_to BY month  LINE SELECT date_incident_start , COUNT(date_incident_start) FROM Behavior_Incident GROUP BY date_incident_start HAVING COUNT(date_incident_start) > 1 ORDER BY COUNT(date_incident_start) DESC B
Visualize SCATTER SELECT manager_id, salary FROM employee WHERE HIRE_DATE < '2002-06-21'  GROUP BY manager_id ORDER BY salary ASC BIN manager_id BY SALARY
1. Visualize BAR SELECT employee_id, job_id , JOB_TITLE, count(*) from employees GROUP BY employee_id , department_id , job_id , sum(salary) , job_title order by sum(salary) , job_title asc 2. Visualize BAR SELECT EMPLOYEE_ID , job_id , sum(salary) from employees GROUP BY employee_id , department_id , job_id , sum(salary) , job_title order by sum(salary) , job_title asc
Visualize BAR SELECT employee_id , COUNT(employee_id) FROM employees GROUP BY employee_id , last_name ORDER BY last_name ASC
Visualize BAR SELECT Price , Manufacturer FROM Products ORDER BY Price DESC
Visualize BAR SELECT EMPLOYEE_ID, DEPARTMENT_ID, AVG(HIRE_DATE) FROM employees GROUP BY EMPLOYEE_ID , AVG(HIRE_DATE) HAVING SALARY BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NULL AND MANAGER_ID NOT IN (40) AND DEPARTMENT_ID NOT IN (40) ORDER BY AVG(HIRE_DATE) ASC
Visualize Line SELECT hire_date , (commission_pct / first_commission_pct) - 1 AS change FROM employees WHERE EMPLOYEE_ID > '2002-06-21' GROUP BY hire_date ORDER BY hire_date DESC
Visualize BAR SELECT salary , COUNT(*) FROM employees WHERE commission_pct is not null AND department_id = 40 AND hire_date BETWEEN '2015-06-01' AND '2015-09-01' GROUP BY SALARY ORDER BY COUNT(*) DESC
Visualize BAR SELECT count(*) , SUM(SALARY) FROM employees GROUP BY HIRE_DATE ORDER BY HIRE_DATE ASC
Visualize Scatter SELECT employee_id , salary , commission_pct FROM employee GROUP BY employee_id BIN commission_pct BY 0.25 WHERE salary BETWEEN 8000 AND 12000 AND commission_pct IS NOT NULL AND department_id <> 40
Visualize PIE SELECT Code , COUNT(*) FROM Products , Manufacturers  WHERE Products . Code BETWEEN 60 AND 120 AND Manufacturers . Code = Products . Manufacturer GROUP BY Code
Visualize BAR SELECT EMPLOYEE_ID , HIRE_DATE , COUNT(*) FROM employees WHERE SALARY BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NOT NULL AND department_id != 40 GROUP BY HIRE_DATE ORDER BY HIRE_DATE DESC
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees  WHERE SALARY BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NOT NULL AND DEPARTMENT_ID NOT IN (SELECT DEPARTMENT_ID FROM departments WHERE LOCATION_ID = 40) GROUP BY HIRE_DATE ORDER BY HIRE_DATE  RANK() OVER (ORDER BY (SELECT COUNT(*) FROM employees WHERE SALARY BETWEEN 8
Visualize SCATTER SELECT MIN(SALARY) , JOB_ID FROM employees GROUP BY DEPARTMENT_ID ORDER BY MIN(SALARY) ASC
Visualize BAR SELECT Manufacturers.Code , COUNT(Code) FROM Products WHERE Price between 60 and 120 GROUP BY Manufacturers.Code ORDER BY COUNT(Code)
Visualize BAR SELECT COUNTRY_ID , COUNT(COUNTRY_NAME) FROM countries GROUP BY COUNTRY_ID ORDER BY COUNTRY_NAME DESC
Visualize BAR SELECT FIRST_NAME , COUNT( EMPLOYEE_ID) FROM employees GROUP BY FIRST_NAME ORDER BY COUNT( EMPLOYEE_ID) ASC  Visualize BAR SELECT HIRE_DATE , COUNT( EMPLOYEE_ID) FROM employees GROUP BY HIRE_DATE ORDER BY COUNT( EMPLOYEE_ID) ASC  Visualize PIE SELECT MANAGER_ID , COUNT(*) FROM employees GROUP BY MANAGER_ID  Visualize BAR SELECT DEPARTMENT_ID ,
Visualize LINE SELECT EMAIL , COUNT(EMAIL) FROM employee GROUP BY EMAIL ORDER BY COUNT(EMAIL) DESC
Visualize BAR SELECT product_type_code , min(product_price) FROM Products GROUP BY product_type_code ORDER BY min(product_price) ASC
Visualize BAR SELECT  employees.manager_id, SUM(Job_history.job_id), SUM(Job_history.department_id), COUNT(DISTINCT HIRE_DATE) FROM departments, employees, job_history  WHERE employees.manager_id = departments.manager_id  AND employees.job_id = job_history.job_id  AND employees.department_id = job_history.department_id WHERE employees.department_id != 40  AND employees.salary between
Visualize BAR SELECT FIRST_NAME , COMMISSION_PCT , COUNT(department_id) FROM employees WHERE FIRST_NAME LIKE 'D' OR FIRST_NAME LIKE 'S'  BIN HIRE_DATE BY WEEKDAY AND TIME GROUP BY COUNT(department_id) ORDER BY COUNT(department_id) DESC
Visualize PIE SELECT Venue , COUNT(*) FROM match WHERE Competition = 1 GROUP BY Venue
Visualize PIE SELECT Investor, COUNT(*) FROM entrepreneur GROUP BY Investor
Visualize BAR SELECT Claim_ID , Date_Claim_Made FROM Claims GROUP BY Claim_ID , Date_Claim_Made ORDER BY Count(*) DESC
Visualize BAR SELECT start_date , sum(manager_id) AS hires, SUM(salary) AS pays, COUNT(*) AS in_range FROM employees WHERE salary >= 8000 AND salary <= 12000 AND department_id <> 40 AND department_id IN (select department_id from job_history) GROUP BY start_date , ORDER BY pays DESC
Visualize BAR SELECT hand , COUNT(hand) FROM players GROUP BY hand ORDER BY COUNT(hand) ASC
Visualize BAR SELECT date_of_notes , COUNT(date_of_notes) FROM Assessment_Notes GROUP BY date_of_notes ORDER BY COUNT(date_of_notes) DESC
1. Visualize BAR SELECT DATE_ADDRESS_TO , MONTHLY_RENTAL FROM Student_Addresses GROUP BY DATE_ADDRESS_TO 2. Visualize LINE SELECT monthly_rental , date_of_address_to FROM Student_Addresses GROUP BY monthly_rental 3. Visualize LINE SELECT DATE_INCIDENT_START, MONTHLY_RENTAL FROM Student_Addresses GROUP BY DATE_INCIDENT_START 4. Visualize LINE SELECT DATE_DETENTION_START, MONTHLY_
Visualize BAR SELECT Draft_Pick_Number , Draft_Class FROM match_season GROUP BY Draft_Pick_Number ORDER BY Draft_Pick_Number ASC
Visualize LINE SELECT date_of_notes , COUNT(date_of_notes) FROM Assessment_Notes GROUP BY date_of_notes ORDER BY COUNT(date_of_notes) ASC
Visualize BAR SELECT EMPLOYEE_ID , COUNT(*) , AVG(MANAGER_ID) FROM employees WHERE HIRE_DATE < "2002-06-21" GROUP BY EMPLOYEE_ID ORDER BY AVG(MANAGER_ID)
Visualize SCOOTER Select teacher_id , student_id , count(*) FROM Student_Addresses GROUP BY teacher_id , student_id , COUNT(*) WHERE COUNT(*) > 0 Having COUNT(*) > 1 Visualize BAR SELECT  student_id , COUNT(*)  FROM Students_in_Detention  GROUP BY student_id , COUNT(*) Having COUNT(*) > 0 Visualize SCOOTER Select teacher_id , student_id , count(*) FROM Student_Addresses GROUP BY teacher_id , student_id , COUNT(*)
Visualize SCALE SELECT salary , manager_id FROM employees WHERE MANAGER_ID = 1 GROUP BY salary ,manager_id ORDER BY salary ASC
Visualize BAR SELECT Founder , SUM(Revenue) FROM Manufacturers GROUP BY Founder ORDER BY Founder DESC

Visualize BAR SELECT 'S' || FIRST_NAME || 'D' FROM employees WHERE FIRST_NAME LIKE '[S,D]' JOIN jobs ON JOB_ID = EMPLOYEE_ID JOIN job_history ON EMPLOYEE_ID = JOB_HISTORY.EMPLOYEE_ID JOIN employees_departments ON EMPLOYEE_ID = employees_departments.EMPLOYEE_ID GROUP BY EMPLOYEE_ID ORDER BY job_id ASC
Visualize BAR SELECT MANAGER_ID , COUNT(Manager_ID) FROM jobs  JOIN employee on employee.JOB_ID = jobs.job_id GROUP BY MANAGER_ID , JOB_ID  Visualize BAR SELECT EMPLOYEE_ID , JOB_ID , COUNT(JOB_ID) , SUM(SALARY) FROM jobs  JOIN employee on employee.JOB_ID = jobs.JOB_ID  GROUP BY EMPLOYEE_ID , JOB_ID
Visualize BAR SELECT product_type_code , avg(product_price) FROM Products GROUP BY product_type_code ORDER BY COUNT(*)
Visualize BAR SELECT Code, MAX(Revenue) FROM Manufacturers GROUP BY Headquarter
Visualize BAR SELECT hire_date , day(hire_date) FROM employee WHERE HIRE_DATE > '2002-06-21' GROUP BY hire_date, day(hire_date) ORDER BY HIRE_DATE ASC
Visualize LINE SELECT HIRE_DATE, COMMISSION_PCT FROM employees WHERE EMPLOYEE_ID BETWEEN 1100 AND 1101 ORDER BY HIRE_DATE DESC
Visualize LINE SELECT job_id , SUM(job_history.department_id) FROM employees WHERE job_id in ( SELECT job_id FROM job_history WHERE job_id = ANY (SELECT distinct job_id FROM employees WHERE job_id in (SELECT distinct job_id FROM employees WHERE salary between 8000 and 12000 AND commission IS NOT NULL and department_id != 40 ORDER BY salary, commission_pct DESC )
Visualize BAR SELECT EMPLOYEE_ID , job_id , SUM(manager_id) FROM employees GROUP BY job_id HAVING FIRST_NAME LIKE 'D' OR FIRST_NAME LIKE 'S'
Visualize LINE SELECT Date_Payment_Made , Amount_Payment FROM Payments ORDER BY Date_Payment_Made ASC

Visualize BAR SELECT Price , Manufacturer FROM Products WHERE manufacturer = Manufacturer GROUP BY Manufacturer ORDER BY Price
Visualize BAR SELECT incident_type_code , count(DISTINCT date_incident_start) FROM Behavior_Incident GROUP BY incident_type_code ORDER BY count(DISTINCT date_incident_start) DESC
SQL SELECT          EMPLOYEE_ID , COUNT(EMPLOYEE_ID) as COUNT,          EMPLOYEE_ID , COUNT(EMPLOYEE_ID) as COUNT,         MANAGER_ID, COUNT(MANAGER_ID) as COUNT,         EMAIL, COUNT(EMAIL) as COUNT,         HIRE_DATE, COUNT(HIRE_DATE) as COUNT,         JOB_ID, COUNT(JOB_ID) as COUNT,         SALARY, COUNT(
Visualize BAR SELECT Phone_ID , COUNT(Phone_ID) FROM phone GROUP BY Phone_ID ORDER BY Phone_ID ASC
Visualize BAR SELECT Products.Price , sum(Manufacturers.Price) FROM Products, Manufacturers WHERE Manufacturers.Manufacturer = Products.Manufacturer GROUP BY Manufacturers.Manufacturer
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE HIRE_DATE <= '2002-06-21' GROUP BY HIRE_DATE ORDER BY COUNT(HIRE_DATE) ASC
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM job_history WHERE DEPARTMENT_ID != 40 AND SALARY BETWEEN 8000 AND 12000 GROUP BY JOB_ID ORDER BY SUM(EMPLOYEE_ID) DESC
Visualize BAR SELECT name , manufacturer FROM Products WHERE price BETWEEN 60 AND 120 ORDER BY name
Visualize BAR SELECT job_history.EMPLOYEE_ID, job_history.DEPARTMENT_ID FROM job_history INNER JOIN employees ON job_history.EMPLOYEE_ID=employees.EMPLOYEE_ID WHERE job_history.JOB_ID IN ('100001','100002') AND START_DATE > '2002-06-21' AND END_DATE < '2006-01-01' GROUP BY job_history.EMPLOYEE
Visualize BAR SELECT Code , Revenue FROM manufacturer , Products JOIN Products WHERE Manufacturer = Manufacturer.Code GROUP BY Manufacturer.Code, Manufacturer.Name ORDER BY Manufacturer.Code
Visualize BAR SELECT FIRST_NAME , count(HIRE_DATE) FROM employee WHERE FIRST_NAME in ('D','S') GROUP BY HIRE_DATE BIN by HIRE_DATE , TIME

Group By Teacher_ID and join other_details, generate a line chart about the change of the sum of monthly_rental over date_address_to
Visualize BAR SELECT Product_type_code , avg(product_price) FROM Products GROUP BY product_type_code ASC
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE SALARY BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NOT NULL AND department_id != 40 GROUP BY HIRE_DATE ORDER BY SALARY ASC
Visualize PIE SELECT payment_method_code , count(*) FROM customers GROUP BY payment_method_code ORDER BY count(*) ASC
Visualize BAR SELECT JOB_ID , COUNT(EMPLOYEE_ID) FROM employees WHERE salary between 8000 AND 12000 AND commission IS NOT NULL AND DEPARTMENT_ID <> 40 GROUP BY JOB_ID ORDER BY COUNT(EMPLOYEE_ID) DESC, HIRE_DATE ASC
Visualize BAR SELECT Date_Payment_Made, AVG(Amount_Payment) FROM Payments GROUP BY Date_Payment_Made ORDER BY AVG(Amount_Payment) ASC
Visualize BAR SELECT Memory_in_G , Price FROM phone

Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM EMPLOYEES WHERE JOB_ID IS NOT NULL AND DEPARTMENT_ID <> 40 GROUP BY JOB_ID , MANAGER_ID , DEPARTMENT_ID
Visualize bar SELECT employee.JOB_ID , SUM(department.DEPARTMENT_ID) FROM employees join job_history on employees.JOB_ID = job_history.JOB_ID AND employees.EMPLOYEE_ID = job_history.EMPLOYEE_ID WHERE employees.SALARY BETWEEN 8000 AND 12000 AND employees.commission_pct IS NOT NULL AND department.DEPARTMENT_ID != 40 GROUP BY employee.JOB_ID order by job_id  /* Question
Visualize BAR SELECT Job_ID , JOB_TITLE , AVG(SALARY) FROM JOBS JOIN EMPLOYEES ON JOB_ID = EMPLOYEE_ID GROUP BY JOB_ID ORDER BY ABS(Job_id)
Visualize PIE SELECT other_details , count(*) FROM Behavior_Incident, Student_Addresses, Detention , Assessment_Notes , Teachers GROUP BY other_details  Visualize PIE SELECT monthly_rental , sum(monthly_rental) FROM Student_Addresses GROUP BY monthly_rental
Visualize BAR SELECT Student_Addresses.Date_address_to , AVG(monthly_rental) FROM Student_Addresses GROUP BY date_address_to BIN Student_Addresses.Date_address_to BY YEAR
Visualize BAR SELECT Last_Name , SALARY FROM employees GROUP BY Last_Name ORDER BY SALARY
Visualize BAR SELECT JOB_ID , MIN(SALARY) FROM employees WHERE HIRE_DATE < "2002-06-21"  ORDER BY MIN(SALARY)
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM EMPLOYEES WHERE HIRE_DATE < '2002-06-21' GROUP BY HIRE_DATE , EMPLOYEE_ID ORDER BY EMPLOYEE_ID ASC
Visualize BAR SELECT Hire_Date , AVG(Employee_ID) FROM employees GROUP BY Hire_Date BIN Hire_Date BY WEEKDAY, DEPARTMENT_ID
Visualize BAR SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE hire_date <= '2002-06-21' GROUP BY EMPLOYEE_ID HAVING SUM(employee_id) OVER (PARTITION BY EMPLOYEE_ID) > 1;
Visualize BAR SELECT FIRST_NAME ,(SELECT AVG(MANAGER_ID) FROM employees GROUP BY DATE_PART(WEEKDAY, HIRE_DATE)) AS Average_Weekday , SUM(MANAGER_ID) FROM employees WHERE FIRST_NAME LIKE '%D' OR FIRST_NAME LIKE '%S' GROUP BY FIRST_NAME ORDER BY Average_Weekday DESC , SUM(MANAGER_ID) DESC
Visualize LINE SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE FIRST_NAME like 'D' or FIRST_NAME like 'S' AND HIRE_DATE < LAST_DATE GROUP BY JOB_ID ORDER BY AVG(EMPLOYEE_ID) DESC
Visualize BAR SELECT FIRST_NAME , count(*) FROM employees WHERE FIRST_NAME like 'm%' GROUP BY First_name
Visualize BAR SELECT COUNTRY_NAME , COUNT(COUNTRY_NAME) FROM countries
Visualize BAR SELECT carrier , COUNT(*) FROM phone GROUP BY carrier ORDER BY count(*) DESC
Visualize BAR SELECT Carrier , mean(Memory_in_G) FROM phone GROUP BY Carrier ORDER BY Carrier ASC
Visualize BAR SELECT FIRST_NAME , MANAGER_ID FROM employees
Visualize BAR SELECT EMPLOYEE_ID , AVG(SALARY) BY HIRE_DATE BY WEEKDAY , AVG(SALARY) FROM employees WHERE HIRE_DATE <= '2002-06-21' GROUP BY EMPLOYEE_ID, HIRE_DATE BY WEEKDAY
Visualize BAR SELECT  hire_date , AVG(EMPLOYEE_ID) BIN hire_date BY time ORDER BY Y DESC
Visualize LINE SELECT date_of_notes , count(*) FROM Assessment_Notes GROUP BY date_of_notes ORDER BY date_of_notes ASC
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM JOBS GROUP BY JOB_ID , BAR SELECT EMPLOYEE_ID, JOB_ID , SUM(SALARY) FROM EMPLOYEES GROUP BY EMPLOYEE_ID, JOB_ID, BAR SELECT EMPLOYEE_ID , JOB_ID , SUM(SALARY) FROM JOB_HISTORY GROUP BY EMPLOYEE_ID, JOB_ID, BAR SELECT EMPLOYEE_ID , SUM
Visualize SELECT EMPLOYEE_ID , SALARY , COUNT(*) FROM employees WHERE SALARY BETWEEN 8000 AND 12000 AND commission IS NOT NULL AND department_id <> 40 GROUP BY EMPLOYEE_ID HAVING COUNT(*) > 0 HAVING (Average(hire_date) > last_weekday(hire_date)) BIN hire_date by weekday BY department_ID

Visualize BAR SELECT Products.Code , count(Products.Code) FROM Products INNER JOIN Manufacturers ON Manufacturers.Code = Products.Code GROUP BY Products.Code ORDER BY count(Products.Code) ASC
Bar chart |  SELECT e.FIRST_NAME , e.LAST_NAME , e.PHONE_NUMBER , e.HIRE_DATE , IFNULL(COUNT(e.JOB_ID), 0) AS job, IFNULL(COUNT(jh.JOB_ID), 0) AS history, IFNULL(jh.END_DATE , NULL) AS end, IFNULL(COUNT(jh.JOB_ID), 0) AS jobhist FROM employees e LEFT JOIN departments d ON d
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM jobs WHERE EMPLOYEE_ID >= '2002-06-21' AND EMPLOYEE_ID < '2002-06-21' GROUP BY JOB_ID ORDER BY SUM(DEPARTMENT_ID) DESC
Visualize BAR SELECT year , COUNT(year) FROM matches GROUP BY year ORDER BY year DESC
Visualize BAR SELECT Hire_Date , Count(*) FROM employees GROUP BY HIRE_DATE ORDER BY Hire_Date DESC
Visualize BAR SELECT Participant_ID , Participant_Details FROM Participants_in_Events ORDER BY Participant_ID
Visualize LINE SELECT department_id , COUNT(*) FROM EMPLOYEES WHERE SALARY BETWEEN 8000 AND 12000 GROUP BY department_id HAVING MANAGER_ID != 40 ORDER BY HIRE_DATE ASC
Visualize BAR SELECT HIRE_DATE , SALARY FROM employees WHERE HIRE_DATE <= 2002-06-21 GROUP BY HIRE_DATE ORDER BY HIRE_DATE ASC
*/  var C = require('../constants'); var utils = require('../utils');  module.exports = function(req, res) {     var query = utils.getQuery(req.params.quiz_id, req.params.question_id);     if (!query) {         res.status(400).send(utils.badRequest(C.BAD_QUERY));         return;     }      if (!utils.validateQuery(query)) {         res.status(400).send
Visualize BAR SELECT job, hire_date, (EMPLOYEE_ID - MIN(EMPLOYEE_ID) OVER (PARTITION BY job ORDER BY hire_date)) AS INCREMENT, (SELECT AVERAGE(EMPLOYEE_ID) FROM (SELECT MIN(EMPLOYEE_ID) OVER (PARTITION BY job ORDER BY hire_date)) AS T, GROUP BY T) AS AVERAGE FROM employees WHERE job IN ( 'SOFTWARE DEVELOPER','SENIOR MARKETING
Visualize SCATTER SELECT MANAGER_ID , HIRE_DATE , MANAGER_ID FROM employees   WHERE HIRE_DATE < '2002-06-21' AND MANAGER_ID IS NOT NULL ORDER BY MANAGER_ID ASC
Visualize LINE SELECT [first_name], [last_name], [hire_date], SALARY FROM employees WHERE first_name like 'D%' OR first_name like 'S%' ORDER BY first_name ASC, last_name ASC, hire_date DESC
Visualize BAR SELECT job_id , count(*) , sum(salary) FROM EMPLOYEES WHERE JOB_ID < 2120 AND HIRE_DATE < 2100 GROUP BY JOB_ID  ORDER BY JOB_ID ASC
Visualize BAR SELECT Job_ID , avg(salary) FROM employees GROUP BY job_id ORDER BY avg(salary) ASC
Visualize Bar SELECT JOB_ID, COUNT(JOB_ID) FROM employees JOIN jobs USING (JOB_ID) GROUP BY JOB_ID ORDER BY COUNT(JOB_ID) DESC, AVG(EMPLOYEE_ID) DESC
Visualize BAR SELECT Price , Manufacturer FROM Products WHERE Manufacturer.Price BETWEEN 60 AND 120
Visualize LINE SELECT EMPLOYEE_ID , hire_date FROM employees WHERE SALARY BETWEEN 8000 AND 12000 and commission is not null and department_id not equal 40 GROUP BY employee_id
Visualize BAR SELECT EMPLOYEE_ID , MANAGER_ID FROM employees WHERE SALARY BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NULL AND DEPARTMENT_ID != 40 GROUP BY MANAGER_ID
Visualize BAR SELECT Name , sum(Price) FROM Products GROUP BY Name ORDER BY sum(Price) ASC
Visualize LINE SELECT Revenue , COUNT(Revenue) FROM Manufacturers GROUP BY Headquarter ORDER BY Revenue DESC
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE JOB_ID in ( SELECT JOB_ID FROM job_history WHERE HIRE_DATE <= '2002-06-21' GROUP BY JOB_ID )  ORDER BY AVG(SALARY)
Visualize BAR SELECT Employee_ID , SALARY FROM employees WHERE Job_id is null OR Department_ID != 40
1. Visualize BAR SELECT EMPLOYEE_ID , SUM(SALARY) FROM employees WHERE EMPLOYEE_ID IN ( SELECT EMPLOYEE_ID FROM job_history WHERE JOB_ID IN (SELECT JOB_ID FROM job_history WHERE SALARY IN (SELECT SALARY FROM employees WHERE SALARY > 8000 AND SALARY < 12000 AND COMMISSION_PCT IS NOT NULL AND DEPARTMENT_ID <> 40)) BIN HIRE_DATE BY YEAR )
Visualize BAR SELECT Job_ID , AVG(Manager_ID) FROM employees GROUP BY job_id ORDER BY AVG(Manager_ID)
SELECT product_id , min(product_price) AS lowest_price FROM Products GROUP BY product_id , product_type_code ORDER BY product_price ASC
Visualize BAR SELECT County_name , Population FROM county GROUP BY County_name ORDER BY County_name ASC
Visualize BAR SELECT Name , COUNT(*) FROM Manufacturers,Products GROUP BY Name ORDER BY Name ASC

Visualize BAR SELECT incident_type_code , COUNT(date_incident_end) FROM behavior_incident WHERE incident_type_code = "NOISE" GROUP BY incident_type_code ORDER BY COUNT(date_incident_end) ASC
Visualize PIE SELECT Price, count(*) FROM Products GROUP BY Price
Visualize PIE SELECT Payment_Method_Code , amount_payment / total_amount_payment  AS Percent FROM payments group by Payment_Method_Code
Visualize BAR SELECT Name , COUNT(Name) FROM Products GROUP BY Manufacturer ORDER BY Revenue DESC
Visualize BAR SELECT date_of_notes , COUNT(*) FROM Assessment_Notes GROUP BY date_of_notes ORDER BY COUNT(*) DESC
1. Visualize BAR SELECT job_id , sum(salary) FROM employees WHERE hire_date < '2002-06-21' GROUP BY job_id ORDER BY job_id ASC 2. Visualize BAR SELECT employee_id , sum(salary) FROM job_history WHERE start_date > '2002-06-21' AND employee_id NOT IN SELECT employee_id FROM employees WHERE hire_date < '2002-06-21' GROUP BY employee_id
Visualize HISTOGRAM SELECT match_num , year from matches GROUP BY year
Visualize BAR SELECT Code , SUM(Price) FROM Products GROUP BY Code AND Price IN (60, 120) ORDER BY Code ASC
1. Visualize GROUP SCATTER SELECT product_price , (SELECT min(supplier_id) FROM product_suppliers WHERE product_id = product_suppliers.product_id) AS min_supplier_id , (SELECT max(supplier_id) FROM product_suppliers WHERE product_id = product_suppliers.product_id) AS max_supplier_id FROM products GROUP BY product_price, product_type_code 2. Visualize SCATTER SELECT product_price , min_supplier_id , max_supplier_id FROM product_suppliers
Visualize BAR SELECT product_code , price , manufacturer , rank_from_low_to_high_by_Y  FROM products BIN price BY 60.00..120.00 , manufacturer BIN name BY manufacturer , price
Visualize BAR SELECT job_history.JOB_ID , COALESCE(SUM(job_history.salary),0) FROM employees, job_history WHERE job_history.job_id = employees.job_id AND employees.first_name LIKE 'D' OR employees.first_name LIKE 'S' GROUP BY job_history.job_id ORDER BY job_history.job_id ASC
Visualize BAR SELECT HIRE_DATE , count(*) FROM employees WHERE HIRE_DATE < '2002-06-21' GROUP BY HIRE_DATE,WEEKDAY order by count(*) asc
Visualize BAR SELECT HIRE_DATE , COUNT(*) FROM employees WHERE HIRE_DATE < 2002-06-21 GROUP BY HIRE_DATE ORDER BY HIRE_DATE ASC ,AVG(SALARY)
Visualize BAR SELECT Employee_ID , Department_ID FROM employees ORDER BY Department_ID ASC
Visualize BAR SELECT  product_type_code , MEAN(product_price) FROM Products GROUP BY product_type_code
Visualize Bar SELECT employee_id , count(*) FROM job_history GROUP BY employee_id ORDER BY employee_id ASC
Visualize BAR SELECT DEPARTMENT_ID, sum(DEPARTMENT_ID) as DEPARTMENT_ID, sum(HIRE_DATE) as HIRE_DATE, sum(Job_ID) as JOB_ID , sum(total_salary) as Total_Salary, sum(commission) as Commission FROM employees GROUP BY DEPARTMENT_ID , HIRE_DATE , JOB_ID , Total_Salary , Commission HAVING salary BETWEEN 8000 AND 12000 AND department_id
Visualize BAR SELECT DISTINCT FIRST_NAME ||' '||LAST_NAME , COUNT(JOB_ID) FROM employees GROUP BY JOB_ID ORDER BY JOB_ID ASC
Visualize BAR SELECT LAST_NAME , AVG(SALARY) FROM employees GROUP BY LAST_NAME HAVING CONTAINS(FIRST_NAME, 'S') OR CONTAINS(FIRST_NAME, 'D') ORDER BY AVG(SALARY) DESC
Visualize LINE SELECT EMPLOYEE_ID , COUNT(*) FROM employees WHERE HIRE_DATE < 2002-06-21 GROUP BY EMPLOYEE_ID ORDER BY EMPLOYEE_ID ASC


Visualize BAR SELECT Job_ID , Average(Employees_ID) FROM employees WHERE Job_ID = Job_ID AND Commission_PCT IS NOT NULL AND DEPARTMENT_ID != 40 GROUP BY Job_ID ORDER BY Total() DESC
Visualize BAR SELECT Products.Code , COUNT(Manufacturers.Code) FROM Manufacturers  GROUP BY Manufacturers.Code ORDER BY COUNT(*)
Visualize BAR SELECT FIRST_NAME , count(*) FROM employees GROUP BY FIRST_NAME ORDER BY count(*)
Visualize BAR SELECT job_history.job_id, count(*) FROM job_history  GROUP BY job_history.job_id  ORDER BY job_history.job_id ASC
Visualize BAR SELECT job_id , avg(salary) FROM employees group by hire_date BIN job_id BY weekday ORDER BY count(*) desc
Visualize BAR SELECT EMPLOYEE_ID , [DEPARTMENT_ID] FROM department INNER JOIN employees ON employees.department_id = department.Department_ID WHERE MANAGER_ID IS NULL
Visualize BAR SELECT JOB_ID, AVG(MANAGER_ID) FROM employees WHERE commission_pct <> null  AND job_id != 40 GROUP BY JOB_ID
Visualize LINE SELECT DEPARTMENT_ID, Start_Date , End_Date FROM job_history WHERE EMPLOYEE_ID IN (SELECT EMPLOYEE_ID FROM employees WHERE HIRE_DATE < '2002-06-21' ) GROUP BY DEPARTMENT_ID ORDER BY Start_Date ASC
Visualize BAR SELECT JOB_ID , count(*) FROM employee GROUP BY JOB_ID ORDER BY count(*) DESC , Salary , AVG(SALARY) FROM employee WHERE FIRST_NAME LIKE 'D%S%' GROUP BY JOB_ID ORDER BY Salary ASC
Visualize BAR SELECT Code , Price, Products.Name, Manufacturer.Code FROM Products GROUP BY Code ORDER BY Price ASC , BAR SELECT Code , Count(*) FROM Products GROUP BY Code
Visualize BAR SELECT Price , count(*) FROM products WHERE Price between 60 and 120 GROUP BY Name,Code ORDER BY Code DESC
Visualize BAR SELECT * FROM products GROUP BY Name ORDER BY Price ASC ,Histogram SELECT Code , sum(Price) FROM Manufacturer GROUP BY Code ORDER BY Revenue ASC ,BAR SELECT * FROM products GROUP BY Manufacturer ORDER BY Price ASC ,Histogram SELECT Name , sum(Price) FROM Manufacturer GROUP BY Name ORDER BY Name ASC
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees GROUP BY HIRE_DATE  BIN HIRE_DATE BY weekday
Visualize BAR SELECT EMPLOYEE_ID , AVG(JOB_ID) FROM employees WHERE hire_date >= '2002-06-21' GROUP BY EMPLOYEE_ID ORDER BY JOB_ID DESC
Visualize BAR SELECT Participant_Type_Code , count(*) FROM Participants GROUP BY Participant_Type_Code ORDER BY Participant_Type_Code DESC
Visualize BAR SELECT Date_Claim_Made, COUNT(Claim_ID) FROM Claims GROUP BY Date_Claim_Made ORDER BY Date_Claim_Made ASC
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees GROUP BY hire_date ORDER BY SALARY ASC
Visualize BAR SELECT First_name , count(*) from employees where first_name like 'D'  or first_name like 'S' GROUP BY First_name , Hire_date ORDER BY HIRE_DATE ASC
Visualize BAR SELECT LName , Advisor , Advisor_ID FROM Student GROUP BY LName ORDER BY Advisor DESC
Visualize BAR SELECT employee_id , DEPARTMENT_ID , COMMISSION_PCT , SUM(COMMISSION_PCT) / 3 FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct IS NOT NULL GROUP BY employee_id , DEPARTMENT_ID , commission_pct ORDER BY hire_date ASC BIN hire_date BY TIME
Visualize BAR SELECT HIRE_DATE , SUM(CASE WHEN MANAGER_ID != '0' THEN 1 ELSE 0 END)  FROM employees GROUP BY HIRE_DATE ORDER BY HIRE_DATE ASC
Visualize BAR SELECT job_id , count(*) FROM jobs WHERE FIRST_NAME like 'D%' OR FIRST_NAME like 'S%' AND job_id IN (SELECT DISTINCT JOB_ID FROM job_history WHERE EMPLOYEE_ID = ?) GROUP BY job_id ORDER BY count(*) ASC
1. Visualize BAR SELECT product_type_code, AVG(product_price) FROM products GROUP BY product_type_code ORDER BY AVG(product_price) DESC  2. Visualize BAR SELECT product_type_code, AVG(total_value_purchased) FROM products GROUP BY product_type_code ORDER BY AVG(total_value_purchased) DESC
Visualize LINE SELECT EMPLOYEE_ID , COMMISSION_PCT FROM employees WHERE SALARY between 8000 and 12000 and COMMISSION_PCT not null and DEPARTMENT_ID not in (40) GROUP BY EMPLOYEE_ID ORDER BY HIRE_DATE ASC
Visualize BAR SELECT JOB_ID, COUNT(EMPLOYEE_ID) FROM EMPLOYEES GROUP BY JOB_ID ORDER BY JOB_ID ASC, COUNT(EMPLOYEE_ID) ASC
Visualize BAR SELECT FIRST_NAME , sum(SALARY) FROM employees GROUP BY FIRST_NAME BIN HIRE_DATE ORDER BY SALARY ASC
Visualize BAR SELECT date_address_to , AVG(monthly_rental) FROM Student_Addresses GROUP BY other_details ORDER BY AVG(monthly_rental) DESC BIN date_address_to BY WEEKDAY
SELECT Code , Price , Manufacturer FROM Products WHERE Price BETWEEN 60 AND 120 GROUP BY Manufacturer , Price HAVING COUNT(*) > 1
1. Visualize BAR SELECT JOB_ID FROM jobs GROUP BY JOB_ID HAVING JOB_ID < '2002-06-21' ORDER BY JOB_ID ASC 2. Visualize BAR SELECT JOB_ID FROM jobs GROUP BY JOB_ID HAVING JOB_ID > '2002-06-21' ORDER BY JOB_ID DESC
Visualize BAR SELECT Years_Played , COUNT(Years_Played) FROM player GROUP BY Years_Played ORDER BY Years_Played ASC
Visualize BAR SELECT Population , County_name FROM county GROUP BY Population DESC ORDER BY Population
Visualize BAR SELECT Entrepreneur_ID , COUNT(investor) FROM entrepreneur GROUP BY Investor ORDER BY COUNT(investor) ASC BIN Entrepreneur_ID BY people_id
Visualize BAR SELECT employee.hire_date , sum(employee.salary) FROM employees JOIN job_history JOIN department ON employee.manager_id = department.department_id JOIN employees ON job_history.employee_id = employees.employee_id AND employee.department_id = job_history.department_id AND (employee.salary BETWEEN 8000 AND 12000 AND department.department_id != 40 AND (job_history.end_date IS NULL OR job_history.end_date <= '201
Visualize BAR SELECT DISTINCT FIRST_NAME , SUM(SALARY) FROM employees WHERE FIRST_NAME LIKE 'D%S%' OR FIRST_NAME LIKE 'S%D%' GROUP BY job_id , JOB_ID ORDER BY job_id ASC
Visualize BAR SELECT JOB_HISTORY.EMPLOYEE_ID , COUNT(DEPARTMENT_ID) FROM JOB_HISTORY GROUP BY JOB_HISTORY.EMPLOYEE_ID , MANAGER_ID , LOCATION_ID ORDER BY COUNT(DEPARTMENT_ID) ASC
Visualize BAR SELECT Date_Claim_Made , COUNT(*) FROM Claims GROUP BY Date_Claim_Made , DATE_CLAIM_SETTLED
Visualize BAR SELECT HIRE_DATE, COUNT(*) FROM employees GROUP BY HIRE_DATE, DEPARTMENT_ID BIN(Hire_Date,WEEK)   Visualize BAR SELECT HIRE_DATE, COUNT(*) FROM employees GROUP BY HIRE_DATE, WEEKDAY
Visualize BAR SELECT JOB_ID , sum(employee_id) FROM employees WHERE salary >= 8000 and salary <= 12000 and commission is null and department_number = 40 group by job_id
SELECT Product_ID , MIN(Product_Price) FROM Products GROUP BY Product_ID
Visualize SCATTER SELECT FIRST_NAME , SALARY FROM EMPLOYEES WHERE FIRST_NAME LIKE 'D' |'S' AND MANAGER_ID IS NULL |
Visualize BAR SELECT JOB_ID , COUNT(EMPLOYEE_ID) FROM EMPLOYEES WHERE SALARY BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NOT NULL AND DEPARTMENT_ID <> 40 GROUP BY JOB_ID  ORDER BY COUNT(EMPLOYEE_ID) DESC

Visualize BAR SELECT Carrier , COUNT(*) FROM Phone GROUP BY Carrier ORDER BY COUNT(*) ASC
Visualize LINE SELECT MANAGER_ID , HIRE_DATE, COMMISSION_PCT FROM employees WHERE FIRST_NAME LIKE "D" OR FIRST_NAME LIKE "S"
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM EMPLOYEES WHERE SALARY BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NOT NULL AND DEPARTMENT_NUMBER = 40 AND MANAGER_ID = NULL GROUP BY HIRE_DATE ORDER BY HIRE_DATE ASC
Visualize BAR SELECT EMPLOYEE_ID , HIRE_DATE , COUNT(HIRE_DATE) FROM employees GROUP BY EMPLOYEE_ID, HIRE_DATE ORDER BY COUNT(HIRE_DATE)
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE Salary BETWEEN 8000 AND 12000 AND Commission IS NOT NULL AND department_id != 40 GROUP BY JOB_ID ORDER BY COUNT(JOB_ID) ASC
Visualize BAR SELECT Product_Suppliers.product_id, product_type_code, AVG(product_price) FROM Product_Suppliers GROUP BY product_type_code, product_id ORDER BY product_type_code, AVG(product_price) DESC, product_id
Visualize BAR SELECT SALARY , AVERAGE(MANAGER_ID) FROM EMPLOYEES WHERE JOB_ID NOT IN(40) AND SALARY BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NOT NULL AND DEPARTMENT_ID != 40 GROUP BY SALARY BIN HIRE_DATE BY WEEKDAY ORDER BY AVG(MANAGER_ID) DESC
Visualize BAR SELECT Price, Manufacturer.Code FROM Products GROUP BY Manufacturer.Name, Manufacturer.Code ORDER BY Price
Visualize BAR SELECT hire_date , COUNT(hire_date) FROM employees WHERE hire_date < 2002-06-21 GROUP BY hire_date ORDER BY EMPLOYEE_ID ASC BIN hire_date BY YEAR
Visualize BAR SELECT hire_date , AVG(SALARY) FROM employees WHERE MANAGER_ID != 40 AND DEPARTMENT_NUMBER != 40 AND SALARY BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NOT NULL GROUP BY hire_date BIN hire_date BY YEAR
Visualize BAR SELECT Code , Price , manufacturer_name FROM Products WHERE Price BETWEEN 60 AND 120 GROUP BY manufacturer ORDER BY manufacturer_name DESC
Visualize BAR SELECT hire_date , COUNT(HIRE_DATE) FROM employees WHERE HIRE_DATE < 2002-06-21 GROUP BY hire_date ORDER BY COUNT(HIRE_DATE) ASC ,   Visualize BAR SELECT hire_date , COUNT(HIRE_DATE) FROM employees GROUP BY hire_date HAVING COUNT(HIRE_DATE) > 0  ← Previous Next →
Visualize SCATTER SELECT salary , manager_id FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission IS NOT NULL AND department_id <> 40  GROUP BY salary, manager_id ORDER BY salary
Visualize BAR SELECT CITY , COUNT(*) FROM locations GROUP BY CITY ORDER BY COUNT(*) DESC
Visualize BAR SELECT date_of_notes , COUNT(date_of_notes) FROM Assessment_Notes  ORDER BY date_of_notes
Visualize BAR SELECT country_name , COUNT(country_name) FROM countries GROUP BY country_name , REGION_ID ORDER BY country_name
Visualize BAR SELECT Hire_date , count(*) FROM employees WHERE HIRE_DATE < '2002-06-21' GROUP BY Hire_date BY WEEKDAY ORDER BY Hire_date DESC
Visualize BAR SELECT (count(*) filter job_history .JOB_ID = job_history . JOB_ID ) FROM departments , employees, job_history WHERE salary in (8000,12000) AND MANAGER_ID IN (41,44,45,46) AND department_id not in (40) AND job_history .JOB_ID = employees . JOB_ID AND job_history .START_DATE >= employees .HIRE_DATE GROUP BY (job_history .START_DATE ASC ,job_
Visualize BAR SELECT HIRE_DATE, COUNT(*) FROM employees WHERE SALARY BETWEEN 8000 AND 12000 AND commission IS NULL AND department_id != 40 GROUP BY HIRE_DATE

Visualize BAR SELECT monthly_rental , count(date_address_to) FROM Student_Addresses GROUP BY monthly_rental , BIN date_address_to BY WEEKDAY
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM job_history WHERE HIRE_DATE<'2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID ASC
Visualize BAR SELECT department_number , AVG(hire_date) FROM employees WHERE (salary BETWEEN 8000 AND 12000) AND (commission_pct IS NOT NULL OR department_number != 40) GROUP BY department_number , hire_date ORDER BY AVG(hire_date) DESC
1. Visualize bar SELECT DEPARTMENT_ID, COUNT(*) FROM departments JOIN jobs ON departments.DEPARTMENT_ID = jobs.DEPARTMENT_ID WHERE (jobs.JOB_ID IN (SELECT JOB_ID FROM job_history WHERE job_history.EMPLOYEE_ID = employees.EMPLOYEE_ID GROUP BY JOB_ID HAVING (job_history.EMPLOYEE_ID in (SELECT EMPLOYEE_ID FROM employees WHERE salary BETWEEN 8000 AND 120
Visualize BAR SELECT Year , COUNT(Payment_Method_Code) FROM Payments GROUP BY Year ORDER BY COUNT(Payment_Method_Code) ASC
Visualize BAR SELECT Year , Draft_Class , Draft_Pick_Number FROM match_season WHERE Position == 'Defender' AND Country != 'United States' ORDER BY Draft_Pick_Number DESC
Visualize BAR SELECT hire_date , AVG(EMPLOYEE_ID) FROM employees WHERE HIRE_DATE < '2002-06-21' GROUP BY LOCATION ORDER BY Location DESC
Visualize BAR SELECT hire_date , EMPLOYEE_ID FROM employees WHERE SALARY BETWEEN 8000 AND 12000 AND commission_pct IS NOT NULL AND department_ID <> 40 AND MANAGER_ID = 235 AND HIRE_DATE > '2019-04-02' AND HIRE_DATE < '2019-04-21' AND department_ID <> 40 GROUP BY hire_date , EMPLOYEE_ID ORDER
Visualize BAR SELECT  manager_id , EMPLOYEE_ID FROM employees WHERE SALARY BETWEEN 8000 AND 12000 AND commission IS NULL AND department_id != 40
Visualize BAR SELECT FIRST_NAME , SUM(SALARY) FROM employees GROUP BY FIRST_NAME HAVING (FIND_IN_SET('D','FIRST_NAME') OR FIND_IN_SET('S','FIRST_NAME')) GROUP BY JOB_ID , SUM(SALARY) FROM employees WHERE job_history.JOB_ID = jobs.JOB_ID GROUP BY JOB_ID HAVING (FIND_IN_SET('D','FIRST_NAME') OR FIND_IN_SET('S','FI
Visualize BAR SELECT Hire_Date, Department_ID FROM employees  WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' GROUP BY HIRE_DATE, Department_ID ORDER BY Hire_Date DESC
Visualize BAR SELECT Payment_Method_Code , AVG(Amount_Payment) FROM Payments GROUP BY Payment_Method_Code BIN Payment_Method_Code BY ASC
Visualize BAR SELECT Products.Code , Name , Price , Manufacturer.Name , Manufacturer.Headquarter , Manufacturer.Founder FROM Products INNER JOIN Manufacturers ON Products.Manufacturer = Manufacturer.Code WHERE Products.Price BETWEEN 60 AND 120 ORDER BY Manufacturer.Name DESC , Manufacturer.Price DESC
Visualize BAR SELECT JOB_ID , COUNT(*) , AVG(EMPLOYEE_ID) FROM employees GROUP BY JOB_ID , sort Y-axis in ASC order
Visualize BAR SELECT Last_Name , count(*) FROM employees GROUP BY Last_Name BIN Last_Name BY EMPLOYEE_ID ASC
Visualize BAR SELECT LOCATION_ID , SUM(EMPLOYEE_ID) FROM employees GROUP BY LOCATION_ID HAVING (SALARY BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NOT NULL AND DEPARTMENT_ID IS NOT 40) GROUP BY (DATEPART(weekday, HIRE_DATE)) BIN HIRE_DATE BY WEEKDAY
1. Visualize BAR SELECT job_id, count(distinct first_name) FROM employees WHERE first_name like 'D%' OR first_name like 'S%' GROUP BY JOB_ID 2. Visualize BAR SELECT JOB_ID , avg(salary) FROM job_history GROUP BY JOB_ID ORDER BY avg(salary) DESC 3. Visualize BAR SELECT JOB_ID, avg(salary) FROM jobs GROUP BY JOB_ID ORDER BY avg(salary) DESC 4. Visualize BAR SELECT job_id
Visualize BAR SELECT DISTINCT JOB_ID , SUM(employee_id) FROM employee, job_history, jobs WHERE EMPLOYEE_ID = JOB_ID GROUP BY JOB_ID
Visualize BAR SELECT product_type_code , MAX(product_price) FROM products GROUP BY product_type_code
Visualize BAR SELECT Name , COUNT(Name) FROM Products GROUP BY Name ORDER BY Name DESC
Visualize BAR SELECT JOB_ID , AVERAGE(MANAGER_ID) FROM job_history GROUP BY JOB_ID ORDER BY JOB_ID ASC
Visualize LINE SELECT employee_id , hire_date FROM employees WHERE HIRE_DATE >= '2002-06-21' GROUP BY employee_id ORDER BY employee_id ASC
Line SELECT DEPARTMENT_ID , count(*) FROM department_hist  GROUP BY employee_id , DEPARTMENT_ID order by DEPARTMENT_ID ASC
Visualize LINE SELECT hire_date , commission_pct FROM employees GROUP BY commission_pct , hire_date ORDER BY commission_pct DESC , hire_date ASC
1. Visualize BAR SELECT JOB_ID, AVG(EMPLOYEE_ID) FROM employees GROUP BY JOB_ID , I want to group by job_id, and i want to rank by the x-axis in ascending 2. Visualize BAR SELECT JOB_ID, MIN(EMPLOYEE_ID) FROM employees GROUP BY JOB_ID 3. Visualize BAR SELECT JOB_ID, MAX(EMPLOYEE_ID) FROM employees GROUP BY JOB_ID
Visualize BAR SELECT date_claim_made , Count(date_claim_made) FROM Claims GROUP BY date_claim_made ORDER BY Count(date_claim_made) ASC
Visualize BAR SELECT job_id , SUM(employee_id) FROM employee WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' GROUP BY job_id ORDER BY SUM(employee_id) ASC
Visualize LINE SELECT DEPARTMENT_NAME , EMPLOYEE_ID , HIRE_DATE , AVG(SALARY) FROM employees WHERE SALARY BETWEEN 8000 AND 12000 AND Commission IS NOT NULL AND DEPARTMENT_ID NOT EQUAL TO 40 GROUP BY DEPARTMENT_NAME, EMPLOYEE_ID HAVING HIRE_DATE ASC
Visualize LINE SELECT EMPLOYEE_ID , MIN(DEPARTMENT_ID) , SUM(DEPARTMENT_ID) FROM EMPLOYEE GROUP BY EMPLOYEE_ID , MIN(DEPARTMENT_ID) , SUM(DEPARTMENT_ID) ORDER BY SUM(DEPARTMENT_ID) DESC Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM job_history GROUP BY JOB_ID ORDER BY COUNT(JOB_ID) DESC
Select Commission_PCT , department_id FROM employees WHERE hire_date < '2002-06-21' GROUP BY Commission_PCT , department_id
Visualize BAR SELECT Investor , COUNT(Investor) FROM entrepreneur
Visualize SCATTER SELECT product_type_code , product_price , product_price::max(product_price) AS max_price FROM Products GROUP BY product_type_code, product_price

Visualize BAR SELECT EMPLOYEE_ID , START_DATE , COUNT(*) FROM job_history WHERE MANAGER_ID = 1 AND JOB_ID=1 GROUP BY EMPLOYEE_ID ORDER BY COUNT(*) DESC Visualize BAR SELECT EMPLOYEE_ID , START_DATE , COUNT(*) FROM job_history WHERE MANAGER_ID = 1 AND JOB_ID=2 GROUP BY EMPLOYEE_ID ORDER BY COUNT(*) DESC Visualize BAR SELECT EMPLOYEE_ID , START
Visualize BAR SELECT HIRE_DATE , COUNT(EMPLOYEE_ID) FROM employees GROUP BY hire_date ORDER BY HIRE_DATE ASC BIN hire_date BY WEEKDAY
Visualize BAR SELECT Product_Type_Code , MAX(Product_Price) FROM Products GROUP BY Product_Type_Code ORDER BY Product_Type_Code DESC
Visualize SCATTER SELECT Manufacturer , Price FROM Products WHERE Price > 60 AND Price < 120 GROUP BY Manufacturer
visualize BAR SELECT FIRST_NAME, LAST_NAME, COMMISSION_PCT , MANAGER_ID FROM employees GROUP BY MANAGER_ID HAVING COMMISSION_PCT BETWEEN 8000 AND 12000   AND department_id NOT IN (SELECT DEPARTMENT_ID FROM department  WHERE DEPARTMENT_ID = 40 ) ORDER BY MANAGER_ID
Visualize BAR SELECT date_first_rental , COUNT(student_id) FROM Students GROUP BY date_first_rental , other_details
Select JOB_ID , MANAGER_ID , count(*) FROM employees WHERE  ((JOB_ID IN (30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,6
Visualize SCATTER SELECT manufacturer , price FROM products WHERE price BETWEEN 60 AND 120
Visualize BAR SELECT Memory_in_G, COUNT(*) FROM phone GROUP BY Memory_in_G ORDER BY Memory_in_G DESC
Visualize SCATTER SELECT EMPLOYEE_ID, SALARY, MIN(SALARY) FROM EMPLOYEES GROUP BY EMPLOYEE_ID ,  SELECT DEPARTMENT_ID, MIN(SALARY) FROM DEPARTMENTS GROUP BY DEPARTMENT_ID ,  SELECT JOB_ID, SALARY, MIN(SALARY) FROM JOB_HISTORY GROUP BY JOB_ID
Visualize BAR SELECT department_id , AVG(hire_date) FROM employees GROUP BY department_id ORDER BY AVG(hire_date)
-- Prepare for the sql table:   CREATE TABLE sample1 (  employee_id INTEGER NOT NULL,  department_id INTEGER NOT NULL,  manager_id INTEGER NOT NULL  );  INSERT INTO sample1 (employee_id,department_id,manager_id) VALUES (1,10,2);  INSERT INTO sample1 (employee_id,department_id,manager_id) VALUES (1,10,3);  INSERT INTO sample1 (employee_id,department_id
1. Visualize BAR SELECT DEPARTMENT_ID , AVG(DEPARTMENT_ID) FROM employee WHERE EMPLOYEE_ID != NULL AND HIRE_DATE < '2002-06-21' GROUP BY DEPARTMENT_ID ORDER BY hire_date  2. Visualize BAR SELECT HIRE_DATE , AVG(HIRE_DATE) FROM employee WHERE EMPLOYEE_ID != NULL AND HIRE_DATE < '2002-06-21' GROUP BY HIRE_DATE ORDER
Visualize BAR SELECT other_details, date_address_from , AVG(monthly_rental) FROM Student_Addresses GROUP BY other_details, date_address_from ORDER BY date_address_from ASC , AVG(monthly_rental) DESC
Visualize LINE SELECT job_id , COUNT(job_id) FROM employees JOIN jobs ON (employees.job_id=jobs.JOB_ID) JOIN departments ON (jobs.DEPARTMENT_ID=departments.DEPARTMENT_ID) JOIN departments ON (employees.DEPARTMENT_ID=departments.DEPARTMENT_ID) WHERE MANAGER_ID NOT NULL AND COMMISSION_PCT IS NOT NULL AND JOB_ID IN (7,8,9) AND LOCATION_ID != 4
1. Visualize LIST SELECT FIRST_NAME, LAST_NAME FROM employees WHERE FIRST_NAME like 'D%' OR FIRST_NAME like 'S%' GROUP BY JOB_ID  2. Visualize BAR SELECT MIN_SALARY , COUNT(EMPLOYEE_ID) FROM job_history WHERE JOB_ID = 2 OR JOB_ID = 3 GROUP BY JOB_ID
Visualize BAR SELECT FIRST_NAME , SALARY FROM employee GROUP BY FIRST_NAME ORDER BY SALARY ASC
Visualize BAR SELECT FIRST_NAME , AVG(SALARY) FROM employees GROUP BY FIRST_NAME WHERE FIRST_NAME LIKE 'M%';
Visualize BAR SELECT payment_method_code , SUM(amount_payment) FROM payments GROUP BY payment_method_code ORDER BY SUM(amount_payment) DESC
Visualize BAR SELECT JOB_TITLE , MAX(MIN_SALARY) FROM JOBS WHERE JOB_TITLE LIKE 'Department%' AND MAX_SALARY BETWEEN 12000 AND 18000 GROUP BY JOB_TITLE ORDER BY max(min_salary)
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE MIN_SALARY >= 8000 AND MAX_SALARY <= 12000 AND COMMISSION_PCT IS NULL AND DEPARTMENT_ID != 40 GROUP BY JOB_ID ORDER BY JOB_ID DESC, DEPARTMENT_ID DESC
Visualize BAR SELECT employee_id ,  job_id , AVG(department_id), FROM employees WHERE job_id >= '2002-06-21' GROUP BY employee_id ORDER BY job_id ASC
Visualize BAR SELECT Code , Price FROM Products WHERE Price BETWEEN 60 AND 120 GROUP BY Manufacturer, Code ORDER BY Price ASC
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees GROUP BY HIRE_DATE ORDER BY COUNT(HIRE_DATE)
Visualize BAR SELECT JOB_ID , count(*) , avg(EMPLOYEE_ID) FROM employees WHERE commission_pct IS NOT NULL AND department_id != 40 AND SALARY BETWEEN 8000 AND 12000 GROUP BY JOB_ID
Visualize HISTOGRAM SELECT Date_Payment_Made , SUM(Amount_Payment) FROM Payments GROUP BY Date_Payment_Made ORDER BY SUM(Amount_Payment) DESC
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees where first_name like "D%", or first_name like "S%" GROUP BY HIRE_DATE BIN HIRE_DATE ORDER BY AVG(SALARY) ASC
Visualize BAR SELECT EMPLOYEE_ID , sum(hire_date) FROM employees WHERE JOB_ID = 1 GROUP BY EMPLOYEE_ID ORDER BY sum(hire_date) DESC
Visualize BAR SELECT Position , COUNT(Position) FROM match_season GROUP BY Position ORDER BY Position
Visualize BAR SELECT First_name , COUNT(first_name) FROM employees WHERE first_name like "M%" GROUP BY First_name ORDER BY COUNT(first_name) ASC
Visualize BAR SELECT LAST_NAME , SALARY FROM employees WHERE FIRST_NAME LIKE 'D%S%' GROUP BY LAST_NAME ORDER BY SALARY ASC
1. Table people, columns = [*,People_ID, Sex, Name, Date_of_Birth, Height, Weight] 2. Table Shops, columns = [*,Shop_ID, Shop_Name, Shop_Location_ID, Shop_Owner]
Visualize BAR SELECT MIN(HIRE_DATE) , COUNT(EMPLOYEE_ID) FROM EMPLOYEES GROUP BY (MIN(HIRE_DATE)) ORDER BY (MIN(HIRE_DATE))

1) Visualize BAR SELECT job_id , COUNT(job_id) FROM employees WHERE First_Name like 'D%S%' AND BIN job_id BY YEAR GROUP BY job_id ORDER BY mean(employee_id) DESC 2) Visualize BAR SELECT employee_id , mean(salary) FROM employees WHERE First_Name like 'D%S%' AND BIN employee_id BY YEAR GROUP BY employee_id ORDER BY employee_id
Visualize PIE SELECT Competition , COUNT(match_id) FROM match GROUP BY Competition ORDER BY COUNT(match_id) DESC
Visualize BAR SELECT JOB_ID, COUNT(JOB_ID) FROM employees WHERE FIRST_NAME LIKE "D%" OR FIRST_NAME LIKE "S%"  GROUP BY JOB_ID , ORDER BY JOB_ID ASC BIN JOB_ID
Visualize SCATTER SELECT EMPLOYEE_ID, COMMISSION_PCT FROM employees WHERE HIRE_DATE >= '2002-06-21' GROUP BY EMPLOYEE_ID
Visualize BAR SELECT hand , count(*) FROM player GROUP BY hand ORDER BY hand ASC
Visualize SCATTER SELECT employee_id , count(*) FROM employees GROUP BY employee_id HAVING FIRST_NAME LIKE 'D' OR FIRST_NAME LIKE 'S'
Visualize BAR SELECT hire_date , AVG(salary) FROM employees BIN hire_date BY MONTH ORDER BY hire_date
Visualize HISTOGRAM SELECT hand , COUNT(*) FROM players GROUP BY hand ORDER BY COUNT(*) DESC
1. Visualize BAR SELECT Code , AVG(Price) FROM Products GROUP BY Code ORDER BY AVG(Price) ASC 2. Visualize BAR SELECT Price , COUNT(Price) FROM Products  WHERE Price BETWEEN 60 AND 120 GROUP BY Price  ORDER BY Price ASC 3. Visualize BAR SELECT Manufacturer , AVG(Price) FROM Products GROUP BY Manufacturer ORDER BY AVG(Price) ASC 4. Visualize BAR SELECT Name , AVG(Price) FROM Products GROUP BY Name ORDER BY AVG(Price
1) Visualize BAR SELECT manager_id , AVG(JOB_ID) FROM jobs GROUP BY manager_id ORDER BY AVG(JOB_ID) DESC 2) Visualize BAR SELECT job_id , MIN(EMPLOYEE_ID) FROM employees WHERE job_id in (SELECT job_id FROM job_history WHERE salary in (8000,12000) and commission_pct is not null and department_id <> 40 GROUP BY job_id ) GROUP BY job_id ORDER BY MIN(EMPLOY
Visualize BAR SELECT employee_id, SUM(manager_id) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct IS NULL OR department_id IS NULL GROUP BY job_id
1.Visualize BAR SELECT MANAGER_ID , count(*) FROM employees WHERE salary between 8000 and 12000 and commission is not null and department_id != 40 GROUP BY manager_id ORDER BY count(*) DESC 2.Visualize BAR SELECT HIRE_DATE , COUNT(*) FROM employees WHERE MANAGER_ID between 20 and 40 GROUP BY HIRE_DATE
1) Visualize BAR SELECT EMAIL , COUNT(*) FROM employees GROUP BY EMAIL ORDER BY COUNT(*) ASC 2) Visualize BAR SELECT hire_date , SUM(EMAIL) FROM employees GROUP BY hire_date ORDER BY hire_date ASC 3) Visualize BAR SELECT first_name , SUM(EMAIL) FROM employees GROUP BY first_name ORDER BY first_name ASC BIN first_name BY HIRE_DATE

Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM job_history WHERE JOB_ID IN (SELECT JOB_ID FROM departments WHERE LOCATION_ID = 1 AND (DEPARTMENT_ID = 40 OR SALARY BETWEEN 8000 AND 12000) GROUP BY JOB_ID HAVING COUNT(*) = 1 AND COMMISSION_PCT IS NOT NULL AND DEPARTMENT_ID NOT = 40  ORDER BY SALARY DESC) AND JOB_

Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID BIN DEPARTMENT_ID BY YEAR
Visualize BAR SELECT FIRST_NAME , count(*) FROM employees GROUP BY FIRST_NAME HAVING (FIRST_NAME LIKE 'D%') OR (FIRST_NAME LIKE 'S%') HAVING MANAGER_ID IS NOT NULL,GROUP BY FIRST_NAME HAVING (FIRST_NAME LIKE 'D%') OR (FIRST_NAME LIKE 'S%') HAVING MANAGER_ID IS NOT NULL ,JOB_ID HAVING MANAGER_ID IS NOT NULL ORDER BY FIR
1.Visualize BAR SELECT Department_ID , count(*) FROM departments WHERE salary BETWEEN 8000 AND 12000 AND commission_pct IS NOT NULL AND department_id <> 40 GROUP BY Department_ID 2.Visualize BAR SELECT Department_ID , count(*) FROM departments WHERE salary BETWEEN 8000 AND 12000 AND commission_pct IS NOT NULL AND department_id <> 40 GROUP BY Department_ID
Visualize BAR SELECT DEPARTMENT_NAME , FIRST_NAME FROM EMPLOYEES , MANAGER_ID FROM DEPARTMENTS WHERE DEPARTMENT_ID = DEPARTMENT_ID
Visualize BAR SELECT Draft_Pick_Number , Draft_Class FROM match_season WHERE Position= 'defender' ORDER BY Draft_Class
Visualize BAR SELECT Manufacturer , Count(code) FROM products WHERE price <= 200 GROUP BY Manufacturer ORDER BY Count(code) DESC
Visualize BAR SELECT incident_type_code , COUNT(incident_type_code) FROM Reference_Incident_Type GROUP BY incident_type_code ORDER BY incident_type_code ASC
Visualize PIE SELECT JOB_TITLE , COUNT(JOB_TITLE) FROM jobs WHERE MIN_SALARY BETWEEN 12000 AND 18000 GROUP BY JOB_TITLE ORDER BY COUNT(JOB_TITLE) ASC
Visualize LINE SELECT SALARY , hire_date FROM employees WHERE FIRST_NAME LIKE ‘D’ OR FIRST_NAME LIKE ‘S’ ORDER BY SALARY ASC
Visualize BAR SELECT FIRST_NAME , COUNT(FIRST_NAME) FROM employees WHERE LAST_NAME IN ('D','S') GROUP BY FIRST_NAME BIN HIRE_DATE BY WEEKDAY ORDER BY COUNT(FIRST_NAME) DESC
Visualize BAR SELECT FIRST_NAME , DEPARTMENT_ID FROM employees WHERE (FINAL_STATUS_CODE != NULL) AND (DEPARTMENT_ID IN (SELECT DEPARTMENT_ID FROM job_history WHERE JOB_ID = 1) ) GROUP BY FIRST_NAME,DEPARTMENT_ID
Visualize BAR SELECT STATE_PROVINCE , COUNT(*) FROM Locations GROUP BY STATE_PROVINCE ORDER BY STATE_PROVINCE ASC
Visualize BAR SELECT Name , Code FROM Products WHERE Price BETWEEN 60 AND 120 GROUP BY Name , Code ORDER BY Code
Visualize BAR SELECT MANAGER_ID , JOB_ID , count(*) FROM employees WHERE HIRE_DATE < '2002-06-21' GROUP BY JOB_ID, MANAGER_ID , ROW_NUMBER() OVER (PARTITION BY MANAGER_ID ORDER BY HIRE_DATE) ASC
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE HIRE_DATE < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID DESC
Visualize LINE SELECT LAST_NAME , HIRE_DATE , SALARY FROM employees WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' ORDER BY SALARY DESC , HIRE_DATE ASC
Visualize BAR SELECT MIN_SALARY , SUM(SALARY) FROM employees  GROUP BY JOB_ID , HIRE_DATE ORDER BY SUM(SALARY) DESC
Visualize LINE SELECT SALARY , COUNT(EMPLOYEE_ID) FROM employees WHERE HIRE_DATE < '2002-06-21' GROUP BY SALARY ORDER BY SALARY ASC BIN SALARY BY YEAR
Visualize SCATTER SELECT JOB_ID , MIN(SALARY) FROM employees GROUP BY JOB_ID
Visualize BAR SELECT EMPLOYEE_ID , AVERAGE(SALARY) FROM employees WHERE commission_pct IS NOT NULL AND department_id !=40 GROUP BY job_id, department_id ORDER BY job_id DESC

Visualize BAR SELECT HIRE_DATE , avg(salary) FROM employees WHERE HIRE_DATE<2002-06-21 GROUP BY hire_date BY TIME
1. Visualize BAR SELECT job_id , COUNT(EMPLOYEE_ID) , AVG(EMPLOYEE_ID) FROM jobs GROUP BY job_id HAVING (salary > 8000 AND salary < 12000 AND commission_pct is not null AND department_number != 40) ORDER BY COUNT(EMPLOYEE_ID) DESC 2. Visualize BAR SELECT job_id , COUNT(EMPLOYEE_ID) FROM jobs GROUP BY job_id HAVING (salary >
1. Visualize PIE SELECT JOB_ID , COUNT(*) FROM departments,jobs,job_history GROUP BY JOB_ID,DEPARTMENT_ID,MANAGER_ID,LOCATION_ID ORDER BY JOB_ID, DEPARTMENT_ID,MANAGER_ID,LOCATION_ID 2. Visualize BAR SELECT JOB_ID , avg(department_id) FROM departments,jobs,job_history GROUP BY JOB_ID,MANAGER_ID,DEPARTMENT_ID ORDER BY JOB_ID,MANA
Visualize BAR SELECT FIRST_NAME , COUNT(FIRST_NAME) FROM employees WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' GROUP BY FIRST_NAME BIN hire_date BY weekday ORDER BY total_number OF hire_date asc    Visualize BAR SELECT FIRST_NAME , sum(SALARY) FROM employees WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' GROUP BY FIRST_NAME BIN hire_date BY week
Visualize LINE SELECT Manufacturer , count(Manufacturer) FROM products GROUP BY Manufacturer ORDER BY count(Manufacturer)
1.   Visualize BAR SELECT hire_date ,count(*) FROM employees GROUP BY hire_date  2.   SELECT Average(Department_ID) FROM ( SELECT count(*) , avg(Department_ID) FROM employees GROUP BY hire_date, department_id) ORDER BY Y  3.   Visualize BAR SELECT HIRE_DATE , count(*) FROM employees GROUP BY HIRE_DATE  4.   SELECT Average(Department_ID) FROM ( SELECT count(*) , avg(Department_ID)
Visualize BAR SELECT HIRE_DATE , count(*) FROM employees GROUP BY HIRE_DATE,manager_id BIN HIRE_DATE HAVING SALARY BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NULL AND DEPARTMENT_ID != 40 ORDER BY count(*) DESC
Visualize BAR SELECT Fname , COUNT(Fname) FROM Student WHERE Sex < 0 AND Major = 600 ORDER BY Fname DESC
Visualize BAR SELECT FIRST_NAME , MANAGER_ID FROM employees ORDER BY FIRST_NAME ASC
Visualize BAR SELECT Price , COUNT(Name) FROM Manufacturers GROUP BY Price ORDER BY COUNT(Price) DESC
Visualize LINE CHART SELECT date_address_to , SUM(monthly_rental) FROM Student_Addresses  GROUP BY other_details
1. Visualize Bar SELECT other_details, AVG(monthly_rental) FROM Student_Addresses GROUP BY other_details ORDER BY other_details ASC 2. Visualize BAR SELECT monthly_rental , COUNT(*) FROM Student_Addresses GROUP BY monthly_rental ORDER BY monthly_rental ASC
Visualize BAR SELECT hire_date , AVG(manager_id) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission IS NULL AND department_id != 40 GROUP BY hire_date ORDER BY hire_date ASC
Visualize PIE SELECT student_id, address_id, COUNT(student_id) AS count, address_id, COUNT(student_id) AS count2, SUM(COUNT(student_id)) / (COUNT(student_id) + COUNT(address_id)) AS rate FROM address_id, students_in_detention, students WHERE address_id.address_id = students_in_detention.address_id AND students_in_detention.student_id = students.student_id AND students_in_detention.student_id = students.student_id GROUP
Visualize BAR SELECT First_Name , Count(Job_ID) FROM employees WHERE First_Name LIKE "D%S%" AND First_Name <> "O%" AND First_Name <> "S%" GROUP BY First_Name      ORDER BY job_id , avg(Department_ID) DESC
Visualize BAR SELECT other_details , COUNT(other_details) FROM Teachers, Assessment_Notes, Behavior_Incident, Detention, Student_Addresses WHERE teacher_id = ? GROUP BY other_details
Visualize BAR SELECT EMPLOYEE_ID , count(*) FROM job_history GROUP BY job_history.EMPLOYEE_ID ORDER BY count(*) ASC


Visualize BAR SELECT Date_Payment_Made , sum(Amount_Payment) FROM Payments GROUP BY Date_Payment_Made ORDER BY Date_Payment_Made ASC
Visualize LINE SELECT MANAGER_ID , DATEDIFF(d,'2002-06-21',hire_date) FROM EMPLOYEES WHERE HIRE_DATE < '2002-06-21'  ORDER BY DATEDIFF(d,'2002-06-21',hire_date)
Visualize BAR SELECT Date_Address_From , AVG(Monthly_Rental) FROM Student_Addresses GROUP BY Date_Address_From ORDER BY Date_Address_From DESC BIN Date_Address_From BY WEEKDAY
Visualize HISTOGRAM SELECT EMPLOYEE_ID , COUNT(DISTINCT JOB_ID) FROM EMPLOYEES WHERE FIRST_NAME LIKE '%D%' OR FIRST_NAME LIKE '%S%' GROUP BY EMPLOYEE_ID , JOB_ID

SELECT Products.Name , Count(*) FROM Products INNER JOIN Manufacturers ON Products.Manufacturer = Manufacturers.Code GROUP BY Products.Name ORDER BY Products.Price DESC
Visualize BAR SELECT Headquarter , sum(Revenue) FROM Manufacturers GROUP BY Headquarter ORDER BY sum(Revenue) ASC
Visualize BAR SELECT FIRST_NAME , COUNT(hire_date) , MANAGER_ID, BIN(hire_date , 1) FROM employees WHERE FIRST_NAME = 'D' OR FIRST_NAME = 'S' GROUP BY FIRST_NAME , MANAGER_ID, BIN(hire_date , 1)
Visualize BAR SELECT hand , count(*) FROM players GROUP BY hand ORDER BY hand ASC
Visualize PIE SELECT Player, COUNT(*) FROM match_season GROUP BY Player
Visualize BAR SELECT hire_date , AVG(salary) FROM employees WHERE HIRE_DATE < 2002-06-21 GROUP BY hire_date BIN hire_date BY WEEKDAY
1. Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE COMMISSION_PCT IS NOT NULL AND (JOB_ID <> 40 OR DEPARTMENT_ID <> 40) GROUP BY HIRE_DATE ORDER BY HIRE_DATE  2. Visualize BAR SELECT EMPLOYEE_ID , HIRE_DATE , AVG(SALARY) FROM employees WHERE COMMISSION_PCT IS NOT NULL AND (JOB_ID <> 40 OR DEPART
Visualize BAR SELECT Manager_ID , COUNT(*) FROM employees GROUP BY Manager_ID HAVING Hire_date > '2002-06-21' AND Manager_ID IS NOT NULL ORDER BY Manager_ID DESC
Visualize BAR SELECT DATE(hire_date) , COUNT(*) FROM employees WHERE hire_date > 2002-06-21 AND (hire_date <= 2004-06-21 OR hire_date >= 2006-06-21) GROUP BY DAY(hire_date)
Visualize SCATTER SELECT EMPLOYEE_ID, COMMISSION_PCT FROM employees WHERE HIRE_DATE < '2002-06-21' GROUP BY EMPLOYEE_ID , COMMISSION_PCT
Visualize BAR SELECT County_name , COUNT(population) FROM county GROUP BY County_name ORDER BY COUNT(population) ASC
Visualize LINE SELECT date_address_from, date_address_to , monthly_rental FROM Student_Addresses ORDER BY monthly_rental ASC
Visualize LINE SELECT department_id , SUM(employee_id) FROM employee GROUP BY department_id
Visualize BAR SELECT employee_id , count(job_id) FROM employee GROUP BY employee_id ORDER BY employee_id ASC   Visualize BAR SELECT employee_id , avg(salary) FROM employee JOIN jobs ON employee_id = job_id GROUP BY employee_id, job_id ORDER BY employee_id ASC  Visualize BAR SELECT employee_id , salary FROM employee JOIN job_history ON employee_id = job_id JOIN jobs ON job_id = job_history.job_id GROUP BY employee_id, job_id ORDER BY employee_
Visualize LINE SELECT hire_date , department_id , MANAGER_ID , COUNT(*) FROM employees WHERE SALARY BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NOT NULL AND DEPARTMENT_NUMBER != 40 GROUP BY MANAGER_ID ORDER BY MANAGER_ID ASC , Visualize LINE SELECT hire_date , department_id , MANAGER_ID , COUNT(*) FROM employees WHERE SALARY BETWEEN 8000 AND 1200
Visualize BAR SELECT Founder , sum(Revenue) FROM Manufacturers GROUP BY Founder ORDER BY Founder ASC
Visualize BAR SELECT Country_ID , count(*) FROM locations GROUP BY Country_ID ORDER BY COUNT(*) DESC
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE HIRE_DATE between '2010-01-01' AND '2010-05-01' AND SALARY between 8000 AND 12000 AND Commission_PCT is not null AND department_id != 40 GROUP BY HIRE_DATE BIN HIRE_DATE BY time order BY SUM(EMPLOYEE_ID) DESC
Visualize BAR SELECT FIRST_NAME , DEPARTMENT_ID FROM employees GROUP BY FIRST_NAME, DEPARTMENT_ID ORDER BY FIRST_NAME ASC
Visualize BAR SELECT Customer_Addresses.customer_id , Customer.customer_code  FROM Customer_Addresses, Customer  WHERE address_id.address_id IN (1, 2, 3) ORDER BY COUNT(*) ASC

Visualize BAR SELECT FIRST_NAME , SUM(MANAGER_ID)  OVER (PARTITION BY HIRE_DATE  BIN hire_date  BY DATEPART(WEEKDAY,hire_date)) FROM employees  WHERE FIRST_NAME LIKE 'D' or FIRST_NAME LIKE 'S'
Visualize BAR SELECT FIRST_NAME , count(*) FROM employees  WHERE FIRST_NAME = "D" or FIRST_NAME = "S" GROUP BY FIRST_NAME ORDER BY COUNT(*) ASC BIN hire_date BY YEAR
Visualize BAR SELECT JOB_ID , AVERAGE(salary) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND department_id != 40 AND commission_pct != 'NULL' GROUP BY job_id ORDER BY AVERAGE(salary) DESC
Visualize BAR SELECT Manufacturer , count(*) FROM Products WHERE Price BETWEEN 60 AND 120 GROUP BY Manufacturer
Visualize BAR SELECT Phone_ID , Carrier FROM phone ORDER BY Carrier ASC
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' BIN JOB_ID BY WEEKDAY
1. Visualize BAR SELECT job_id , AVG(MANAGER_ID) FROM employees WHERE FIRST_NAME LIKE "%D%" OR FIRST_NAME LIKE "%S%" ORDER BY AVG(MANAGER_ID) DESC  2. Visualize LINE SELECT Start_Date , AVG(SALARY) FROM job_history  GROUP BY Start_Date ORDER BY AVG(SALARY) ASC  3. Visualize BAR SELECT Start_Date , count(*) FROM job_history  GROUP BY Start_Date ORDER BY count(*) DESC  4.
Visualize BAR SELECT job_id , avg(salary) FROM employees WHERE commission_pct > 0 GROUP BY job_id
Visualize BAR SELECT hire_date , AVG(salary) FROM employees GROUP BY hire_date ORDER BY hire_date DESC
1) Visualize BAR SELECT MIN(salary) , JOB_ID FROM jobs GROUP BY JOB_ID   2) Visualize BAR SELECT MIN(salary) , JOB_ID FROM job_history GROUP BY JOB_ID  3) Visualize BAR SELECT MIN(salary) , JOB_ID FROM job_history GROUP BY JOB_ID  4) Visualize PIE SELECT count(job_id) FROM job_history GROUP BY job_id  5) Visualize PIE SELECT count(job_id) FROM employees
Visualize BAR SELECT Position, COUNT(Position) FROM match_season GROUP BY Position ORDER BY COUNT(Position) ASC
Visualize BAR SELECT Job_ID , AVERAGE(MANAGER_ID) AS Average FROM employees WHERE FIRST_NAME LIKE 'D%' or FIRST_NAME LIKE 'S%' GROUP BY Job_ID ORDER BY Average DESC
Visualize BAR SELECT Job_ID , sum(employee_id) FROM jobs WHERE Job_ID in ( select job_id from job_history where employee_id in (select employee_id from employees where commission_pct is not null AND Job_ID = 1) and department_id=40) GROUP BY Job_ID
Visualize LINE SELECT DEPARTMENT_ID , count(*) FROM job_history GROUP BY job_history.department_id WHERE FIRST_NAME LIKE D OR FIRST_NAME LIKE S
Visualize BAR SELECT First_Name , COUNT(job_id) FROM employees GROUP BY First_Name , job_id ORDER BY avg(employee_id) ASC
Visualize BAR SELECT EMPLOYEE_ID , CASE when MANAGER_ID IS NULL THEN EMAIL ELSE MANAGER_ID END , HIRE_DATE , CASE WHEN job_history.END_DATE is NULL THEN EMPLOYEE_ID ELSE job_history.EMPLOYEE_ID END, CASE WHEN hire_date_bin.HIRE_DATE is not null THEN 1 ELSE 0 END , CASE WHEN SALARY is not null AND commission_pct IS not null THEN 1 ELSE 0 END, CASE WHEN DEPARTMENT
Visualize BAR SELECT HIRE_DATE , avg(MANAGER_ID) FROM employees GROUP BY HIRE_DATE ORDER BY avg(MANAGER_ID) ASC BIN HIRE_DATE BY WEEKDAY
Visualize RANK BY (Job_ID), BAR SELECT AVG(manager_id) FROM EMPLOYEES WHERE MANAGER_ID IS NOT NULL AND MIN(salary) <= 8000 AND MAX(salary) >= 12000 AND commission_pct IS NOT NULL AND job_id = job_history.job_id AND department_id = 40 GROUP BY (job_id)
Visualize BAR SELECT Product_type_code , MAX(product_price) FROM Products GROUP BY Product_type_code ORDER BY MAX(product_price) ASC
1) Visualize PIE SELECT SALARY , count(*) FROM employees  WHERE HIRE_DATE < '2002-06-21' GROUP BY salary 2) Visualize BAR SELECT SALARY , count(*) FROM employees WHERE HIRE_DATE < '2002-06-21' GROUP BY salary 3) Visualize BAR SELECT hire_date , count(*) FROM employees WHERE HIRE_DATE < '2002-06-21' GROUP BY hire_date 4) Visualize BAR SELECT
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees , departments  JOIN employees ON employees.department_id = departments.DEPARTMENT_ID WHERE salary between 8000 and 12000 AND commission_pct != null AND MANAGER_ID != 40 and department_id != 40 order by hire_date ASC
Visualize BAR SELECT JOB_ID, avg(EMPLOYEE_ID) FROM EMPLOYEES GROUP BY JOB_ID  ORDER BY avg(EMPLOYEE_ID) ASC LIMIT 10
Visualize BAR SELECT DEPARTMENT_NAME , AVG(SALARY) FROM employees GROUP BY DEPARTMENT_NAME , AVG(SALARY) FROM employees WHERE SALARY >= 8000 AND commission_pct is not null AND job_history.job_id in (81,82,83) GROUP BY DEPARTMENT_NAME BIN HIRE_DATE BY YEAR THEN MONTH, then HIRE_DATE END ASC
Query: visualize bar SELECT JOB_ID, COUNT(*) FROM employees GROUP BY JOB_ID UNION SELECT JOB_ID, COUNT(*) FROM job_history GROUP BY JOB_ID UNION SELECT JOB_ID, COUNT(*) FROM jobs GROUP BY JOB_ID ORDER BY JOB_ID
1-Make the LIST ORDERED query using the following SQL code. 2-Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees GROUP BY HIRE_DATE ORDER BY HIRE_DATE DESC

Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE HIRE_DATE < '2002-06-21' GROUP BY HIRE_DATE, DEPARTMENT_ID BIN HIRE_DATE BY WEEKDAY
Visualize BAR SELECT job_id , SUM(manager_id) FROM employees GROUP BY job_id, xaxis_show_order = "Desc"
Visualize BAR SELECT Code , MAX(Revenue) FROM Manufacturers INNER JOIN Products ON Manufacturers.Code=Products.Code GROUP BY Manufacturers.Code ORDER BY Manufacturers.Code
BAR SELECT DEPARTMENT_ID, SALARY , COMMISSION_PCT , COUNT(*) FROM employees  WHERE HIRE_DATE BETWEEN 	(SELECT MIN(HIRE_DATE) FROM employees WHERE DEPARTMENT_ID = 40 	AND SALARY BETWEEN 8000 AND 12000 	AND COMMISSION_PCT IS NOT NULL) AND 	(SELECT MAX(HIRE_DATE) FROM employees WHERE DEPARTMENT_ID = 40 	AND SAL
Visualize BAR SELECT Name , COUNT(*) FROM products GROUP BY Name ORDER BY count(*) ASC
Visualize BAR SELECT Investor , count(*) FROM entrepreneur GROUP BY Investor ORDER BY count(*) DESC
Visualize BAR SELECT FIRST_NAME , COUNT(hire_date) FROM employees GROUP BY FIRST_NAME HAVING FIRST_NAME LIKE 'D' OR FIRST_NAME LIKE 'S'  SELECT FIRST_NAME , count(hire_date) , SUM(DEPARTMENT_ID) AS department_id, CAST(hire_date AS DATE) AS hire_date FROM employees GROUP BY department_id, hire_date HAVING FIRST_NAME LIKE 'D' OR FIRST_NAME LIKE 'S'
Visualize BAR SELECT Years_Played , Count(Years_Played) FROM player GROUP BY Years_Played ORDER BY Count(Years_Played) ASC
SELECT Founder , COUNT(Founder) FROM Manufacturers GROUP BY Founder
Visualize HISTOGRAM SELECT Name, Price FROM products GROUP BY Name ORDER BY Price DESC
Visualize BAR SELECT payment_method_code , count(*) FROM customers GROUP BY payment_method_code ORDER BY count(*) ASC
Visualize BAR SELECT CITY , count(*) FROM location GROUP BY CITY ORDER BY CITY ASC

Visualize BAR SELECT date_address_to , COUNT(date_address_to) FROM Student_Addresses GROUP BY date_address_to ORDER BY COUNT(date_address_to) DESC BIN date_address_to BY WEEKDAY
Visualize BAR SELECT JOB_ID, AVG(MANAGER_ID) FROM employees GROUP BY JOB_ID HAVING FIRST_NAME NOT LIKE "%gr%" AND HIRE_DATE < "2002-06-21"
Visualize Bar chart SELECT manufacturer_code , COUNT(*) FROM products GROUP BY manufacturer_code ORDER BY COUNT(*) DESC
Visualize LINE CHART STUDENT_ADDRESS_TO , AVERAGE(monthly_rental) FROM student_addresses GROUP BY other_details
Visualize BAR SELECT hire_date , department_id , COUNT(department_id) FROM employees  GROUP BY hire_date, department_id BIN hire_date BY WEEKDAY ORDER BY SUM(department_id) DESC
Visualize BAR SELECT LOWER(FIRST_NAME) , avg(SALARY) FROM employees GROUP BY LOWER(FIRST_NAME) ORDER BY avg(SALARY) ASC
1.Visualize BAR SELECT EMPLOYEE_ID , COUNT(EMPLOYEE_ID) FROM employees,departments WHERE departments.DEPARTMENT_ID BETWEEN 40 AND 49 AND employees.MANAGER_ID = 13 AND (salary BETWEEN 8000 AND 12000) AND commission_pct IS NOT NULL AND department_id NOT IN(SELECT department_id from departments WHERE DEPARTMENT_ID = 40) GROUP BY EMPLOYEE_ID ORDER BY
Visualize BAR SELECT Year(Date_Payment_Made) , count(*) FROM Payments WHERE Payment_Method_Code='VISA' GROUP BY Year(Date_Payment_Made)
Visualize BAR SELECT job_id , COUNT(job_id) FROM departments , jobs , employees , job_history WHERE (jobs.min_salary > 8000 AND jobs.max_salary < 12000) AND employees.job_id = job_history.job_id AND job_history.department_id = departments.department_id AND employees.department_id = departments.department_id AND employees.job_id = jobs.job_id AND (jobs.commission_pct IS NOT NULL OR
Visualize BAR SELECT JOB_TITLE , MIN_SALARY , MAX_SALARY FROM jobs WHERE MAX_SALARY >= 12000 and MAX_SALARY <= 18000 GROUP BY JOB_TITLE
1. Select the product_type_code (column A) , and sum (column D) for the total_value_purchased , then divide by the total_amount_purchased (column B) 2. Visualize PIE SELECT product_type_code FROM Products GROUP BY product_type_code ORDER BY product_type_code ASC
Visualize BAR SELECT EMPLOYEE_ID, SUM(HIRE_DATE) FROM employees WHERE FIRST_NAME LIKE '%D%S%' GROUP BY EMPLOYEE_ID ORDER BY SUM(HIRE_DATE) DESC BIN HIRE_DATE BY WEEKDAY

Visualize BAR SELECT Payment_Method_Code , count(*) FROM Payments GROUP BY Payment_Method_Code ORDER BY Payment_Method_Code ASC
1. Select attribute from job table. 2. Select Employee_ID from Job_History, Join on employees.job_id. 3. Select from people. Join on employees.person_id. 4. Generate visualization from attribute JOB_ID
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE MANAGER_ID IS NULL AND FIRST_NAME NOT LIKE "M%" ORDER BY HIRE_DATE ASC
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees GROUP BY HIRE_DATE ORDER BY HIRE_DATE DESC
1. Visualize BAR SELECT Monthly_Rental , COUNT(*) FROM Student_Addresses GROUP BY Address_ID ORDER BY Address_ID DESC 2. Visualize BAR SELECT other_details , SUM(Monthly_Rental) FROM Student_Addresses GROUP BY Address_ID ORDER BY Address_ID DESC
Visualize BAR SELECT Manufacturer , SUM(Revenue) FROM products WHERE products.Manufacturer = manufacturers.Code GROUP BY Manufacturer ORDER BY SUM(Revenue) DESC
1 . Visualize BAR SELECT DATEDIFF (WEEK,Hire_date, getdate()), AVERAGE(Department_ID) FROM employees GROUP BY DATEDIFF (WEEK,Hire_date, getdate()) BIN HIRE_DATE BY WEEKDAY  2. Visualize BAR SELECT DATEDIFF (WEEK,Hire_date, getdate()), COUNT(Department_ID) FROM employees GROUP BY DATEDIFF (WEEK,Hire_date, getdate()) BIN HIRE_DATE BY WEE
Visualize BAR SELECT HIRE_DATE, HIRE_DATE + MONTH(HIRE_DATE), HIRE_DATE + YEAR(HIRE_DATE), COUNT(EMPLOYEE_ID) FROM EMPLOYEES WHERE HIRE_DATE <= '2002-06-21' GROUP BY HIRE_DATE
Visualize SCATTER SELECT SALARY , COMMISSION_PCT FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct IS NOT NULL AND department_id != 40 AND job_history.END_DATE IS NULL GROUP BY SALARY HAVING COUNT(*)>1

Visualize BAR SELECT EMPLOYEE_ID , AVG(SALARY) FROM employees WHERE JOB_ID IN (SELECT JOB_ID FROM job_history WHERE SALARY IN (8000, 12000) AND JOB_ID IN (SELECT JOB_ID FROM job_history WHERE COMMISSION_PCT IS NOT NULL OR DEPARTMENT_ID = 40) AND MANAGER_ID IN (SELECT MANAGER_ID FROM job_history) GROUP BY JOB_ID)
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM EMPLOYEES WHERE SALARY BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NOT NULL AND DEPARTMENT_ID <> 40 GROUP BY HIRE_DATE , COUNT(*) BIN hire_date by weekday
Visualize BAR SELECT Hire_date , AVG(Salary) FROM employees WHERE LAST_NAME NOT LIKE "M" GROUP BY Hire_date
Visualize BAR SELECT JOB_ID , SUM(manager_id) FROM employees JOIN job_history ON employees.job_id = job_history.job_id JOIN jobs on job_history.job_id = jobs.JOB_ID WHERE HIRE_DATE < '2002-06-21' GROUP BY JOB_ID , SUM(manager_id) ORDER BY SUM(manager_id) DESC
1. Visualize BAR SELECT EMPLOYEE_ID , COUNT(*) FROM employees GROUP BY EMPLOYEE_ID ORDER BY COUNT(*) ASC 2. Visualize BAR SELECT EMPLOYEE_ID , DEPARTMENT_ID , AVG(COMMISSION_PCT) FROM employees GROUP BY DEPARTMENT_ID , EMPLOYEE_ID ORDER BY AVG(COMMISSION_PCT) DESC 3. Visualize BAR SELECT EMPLOYEE_ID , JOB_ID , COUNT(*) FROM job_history GROUP BY EMP
Visualize SELECT HIRE_DATE , EMPLOYEE_ID, SALARY FROM employees WHERE FIRST_NAME LIKE D OR S ORDER BY SALARY ASC BIN HIRE_DATE BY MONTH
Visualize BAR SELECT job_id , DEPARTMENT_ID FROM departments GROUP BY job_id
Visualize BAR SELECT TN , COUNT(*) FROM Customers_Addresses WHERE address_id IN (SELECT address_id FROM Customers_Addresses WHERE TN = 'TN') GROUP BY TN ASC
Visualize PIE SELECT manufacturer , price FROM Products WHERE price between 60 and 120 GROUP BY manufacturer
Visualize BAR SELECT Phone_ID , COUNT(Phone_ID) FROM phone GROUP BY Phone_ID ORDER BY Phone_ID ASC
Visualize BAR SELECT EMPLOYEE_ID , HIRE_DATE , SUM(employee_id) FROM employee GROUP BY HIRE_DATE , EMPLOYEE_ID  ORDER BY HIRE_DATE ASC
Visualize SCATTER SELECT Code, Price FROM Products GROUP BY Name
Visualize BAR SELECT JOB_ID , (SELECT AVG(DEPARTMENT_ID) FROM DEPARTMENTS AS d INNER JOIN EMPLOYEES AS e ON e.DEPARTMENT_ID=d.DEPARTMENT_ID WHERE JOB_ID=jobs.JOB_ID AND ( salary BETWEEN 8000 AND 12000 OR commission_pct IS NULL OR department_id NOT IN (13)) ORDER BY avg(department_id) DESC) AS average FROM employees WHERE salary BETWEEN
Visualize PIE SELECT MANAGER_ID , count(*) FROM employees WHERE first_name LIKE 'D%' OR first_name LIKE 'S%' GROUP BY MANAGER_ID ORDER BY count(*) DESC
Use self join to get the detail of employee id and manager id. Then use scatter to display .
Visualize BAR SELECT date_address_from , sum(monthly_rental) FROM Student_Addresses GROUP BY date_address_from ORDER BY date_address_from ASC
Visualize BAR SELECT Venue , COUNT(Venue) FROM match GROUP BY Venue ORDER BY COUNT(Venue) DESC BIN Venue BY YEAR
Visualize SCATTER SELECT student_id , address_id FROM address_id GROUP BY student_id , address_id
Visualize LINE SELECT employee_id , count(*) FROM departments GROUP BY employee_id HAVING salary>8000 AND COMMISSION_PCT IS NOT NULL AND department_id <> 40 ORDER BY employee_id ASC
Visualize BAR SELECT Committee , count(DELEGATE) FROM election order by committee desc
Visualize BAR SELECT Code , COUNT(Name) FROM Products GROUP BY Name, Code, Price BETWEEN 60 AND 120 HAVING COUNT(Name) >= 3
Visualize BAR SELECT job_id , AVG(EMPLOYEE_ID) FROM employees WHERE FIRST_NAME LIKE 'D%S%' GROUP BY job_id ORDER BY AVG(EMPLOYEE_ID)
Visualize HISTOGRAM SELECT HIRE_DATE, COUNT(EMPLOYEE_ID) FROM employees WHERE SALARY BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NOT NULL AND DEPARTMENT_ID != 40 GROUP BY HIRE_DATE
Visualize BAR SELECT Carrier , COUNT(Phone_ID) FROM phone GROUP BY Carrier ORDER BY COUNT(Phone_ID) ASC

Visualize BAR SELECT MANAGER_ID, hire_date FROM departments JOIN employees ON departments.MANAGER_ID = employees.MANAGER_ID JOIN job_history ON departments.MANAGER_ID = job_history.EMPLOYEE_ID GROUP BY MANAGER_ID ORDER BY sum(hire_date)
Visualize SCATTER SELECT EMPLOYEE_ID, COMMISSION_PCT FROM employees WHERE FIRST_NAME LIKE 'D' OR FIRST_NAME LIKE 'S' GROUP BY EMPLOYEE_ID, COMMISSION_PCT HAVING COMMISSION_PCT > 0, ORDER BY EMPLOYEE_ID ASC, COMMISSION_PCT ASC

Visualize BAR SELECT job_history .*, AVG(department_id) FROM employees WHERE FIRST_NAME like 'D%' OR FIRST_NAME like 'S%' GROUP BY job_history .* ORDER BY AVG(department_id) ASC
Visualize LINE SELECT hire_date , salary FROM employees WHERE employee_first_name LIKE '%D%' or employee_first_name LIKE '%S%'
Visualize BAR SELECT JOB_ID , SUM(employees.salary) FROM jobs, employees, job_history WHERE employees.job_id = job.job_id AND job.job_id = job_history.job_id AND (employees.salary BETWEEN 8000 AND 12000 OR employees.commission_pct IS NULL OR employees.department_id <> 40) GROUP BY job_id ORDER BY job_id ASC
Visualize BAR SELECT Investor , COUNT(Investor) FROM entrepreneur GROUP BY Investor ORDER BY Investor ASC
Visualize BAR SELECT DEPARTMENT_ID , hire_date , COUNT(EMPLOYEE_ID) , SUM(EMPLOYEE_ID) FROM employees WHERE salary between 8000 AND 12000 AND commission IS NOT NULL AND department_id != 40 GROUP BY DEPARTMENT_ID , hire_date , COUNT(EMPLOYEE_ID) , SUM(EMPLOYEE_ID) ORDER BY COUNT(EMPLOYEE_ID) DESC
Visualize PIE SELECT employee_id , SUM(salary) FROM employees GROUP BY hire_date BIN hire_date BY WEEKDAY
Visualize BAR SELECT job_id , SUM(manager_id) FROM jobs WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' GROUP BY job_id ORDER BY job_id ASC
Visualize BAR SELECT hand , COUNT(player_id) FROM players GROUP BY hand ORDER BY COUNT(player_id) DESC
* Visualize AREA SELECT EMPLOYEE_ID , HIRE_DATE FROM employees GROUP BY HIRE_DATE * Visualize AREA SELECT EMPLOYEE_ID , HIRE_DATE FROM employees GROUP BY HIRE_DATE * Visualize AREA SELECT EMPLOYEE_ID , HIRE_DATE FROM employees GROUP BY HIRE_DATE * Visualize AREA SELECT EMPLOYEE_ID , HIRE_DATE FROM employees GROUP BY HIRE_DATE * Visualize AREA SELECT
1.Visualize BAR SELECT Payment_Method_Code , count(*) FROM Payments GROUP BY Payment_Method_Code ORDER BY count(*) DESC 2.Visualize BAR SELECT Payment_Method_Code , count(*) FROM Payments GROUP BY Payment_Method_Code ORDER BY count(*)
Visualize BAR SELECT Job_ID , count(HIRE_DATE) FROM employees GROUP BY Job_ID
Visualize BAR SELECT FIRST_NAME , AVG(HIRE_DATE) FROM employees WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' GROUP BY FIRST_NAME BIN HIRE_DATE ORDER BY HIRE_DATE ASC
Visualize BAR SELECT incident_type_code , COUNT(incident_type_code) FROM Ref_Incident_Type GROUP BY incident_type_code BIN BY month (date_incident_end) ORDER BY incident_type_code ASC
Visualize SCATTER SELECT EMPLOYEE_ID , SALARY FROM employees  WHERE  (SALARY BETWEEN 8000 AND 12000) AND (Commission_PCT IS NOT NULL OR  Department_ID NOT IN  (SELECT DEPARTMENT_ID FROM Departments WHERE DEPARTMENT_ID = 40))  GROUP BY Employee_ID
Visualize PIPELINE SELECT EMPLOYEE_ID FROM employees WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' HAVING SUM(COMMISSION_PCT) > 0 AND MANAGER_ID IS NOT NULL GROUP BY DEPARTMENT_ID, MANAGER_ID ORDER BY SUM(COMMISSION_PCT) DESC
1. Show me all employees whose first names contain S or D GROUP BY EMPLOYEE_ID 2. Visualize BAR SELECT JOB_ID , COUNT(EMPLOYEE_ID) FROM job_history GROUP BY JOB_ID 3. Visualize BAR SELECT FIRST_NAME , MIN(EMPLOYEE_ID), MAX(EMPLOYEE_ID) FROM employees GROUP BY JOB_ID 4. Visualize BAR SELECT FIRST_NAME , AVG(EMPLOYEE_ID) FROM employees GROUP BY J
Visualize BAR SELECT Payment_Method_Code , AVG(Amount_Payment) FROM Payments GROUP BY Payment_Method_Code
Visualize BAR SELECT Start_Date , Count(Employee_ID) FROM job_history WHERE Hire_Date < '2002-06-21' GROUP BY job_id ORDER BY Start_Date ASC
Visualize BAR SELECT Hire_date , COUNT(*) FROM employee GROUP BY Hire_date BIN(Hire_Date, DAY_OF_WEEK)
Visualize BAR SELECT Price , COUNT(Price) FROM products GROUP BY Manufacturer ,  Price ORDER BY Count(Price) ASC
Visualize STEP chart STEP Manufacturers.Name
Visualize PIE SELECT Price , COUNT(Price) FROM Products WHERE Price between 60 and 120 GROUP BY Name, Manufacturer
Visualize BAR SELECT Product_price , product_type_code FROM Products GROUP BY product_type_code , product_price ORDER BY product_price DESC
Visualize BAR SELECT Investor , COUNT(Investor) FROM entrepreneur GROUP BY Investor ORDER BY COUNT(Investor) ASC
Visualize POINTS SELECT (Employee_ID, MANAGER_ID) AS (row_id), (EMPLOYEE_ID, MANAGER_ID) AS (pt) FROM departments LEFT OUTER JOIN departments ON departments.MANAGER_ID = departments.EMPLOYEE_ID LEFT OUTER JOIN employees ON employees.EMPLOYEE_ID = departments.EMPLOYEE_ID LEFT OUTER JOIN job_history ON job_history.EMPLOYEE_ID = employees.EMPLOYEE_ID
1. BAR SELECT HIRE_DATE , count(*) FROM employees GROUP BY HIRE_DATE 2. Visualize BAR SELECT Dept.Dept_name , sum(employee_id) FROM Job_history GROUP BY Dept.Dept_name
Visualize BAR SELECT first_name, COUNT(1) FROM employees GROUP BY first_name HAVING first_name NOT LIKE 'M%' ORDER BY first_name DESC
Visualize BAR SELECT YEAR(HIRE_DATE), MONTH(HIRE_DATE), AVG(SALARY) FROM EMPLOYEES WHERE MONTH(HIRE_DATE) <> 'M' GROUP BY YEAR(HIRE_DATE), MONTH(HIRE_DATE) BIN YEAR(HIRE_DATE), MONTH(HIRE_DATE) BY WEEK
Visualize BAR SELECT MANAGER_ID , AVG(HIRE_DATE) FROM employees GROUP BY MANAGER_ID BIN HIRE_DATE BY EMPLOYEE_ID , TIME
Visualize BAR SELECT EMPLOYEE_ID , SUM(MANAGER_ID) FROM jobs, employees, job_history WHERE EMPLOYEE_ID IN (SELECT EMPLOYEE_ID FROM employees WHERE HIRE_DATE > "2002-06-21 00:00:00") GROUP BY EMPLOYEE_ID HAVING SUM(MANAGER_ID) > 0;
Visualize LINE SELECT Venue, count(*) FROM match GROUP BY Venue ORDER BY Venue DESC
Visualize LINE SELECT department_id , avg(hire_date) FROM employees GROUP BY department_id ORDER BY avg(hire_date) DESC
Visualize BAR SELECT FIRST_NAME , COUNT(FIRST_NAME) FROM employees WHERE FIRST_NAME LIKE 'M%' GROUP BY FIRST_NAME ORDER BY FIRST_NAME ASC

Visualize BAR SELECT Hire_Date , sum(salary) FROM employees WHERE Hire_Date < '2002-06-21'  GROUP BY Hire_Date ORDER BY Hire_Date ASC
Visualize BAR SELECT HIRE_DATE , COUNT(*) FROM employee WHERE salary BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NOT NULL AND department_ID <> 40 GROUP BY hire_date BIN (hire_date,1) ORDER BY COUNT(*) ASC
Visualize BAR SELECT job_id , sum(salary) FROM employees WHERE salary > 8000 AND commission_pct IS NOT NULL AND department_id != 40 GROUP BY job_id ORDER BY job_id ASC      Visualize BAR SELECT job_id , sum(salary) FROM employees WHERE salary > 8000 AND commission_pct IS NOT NULL AND department_id = 40 GROUP BY job_id ORDER BY job_id ASC      Visualize BAR SELECT job_id , sum(salary) FROM
SELECT  Match_ID , COUNT(Match_ID) as the number of matches from match GROUP BY match_id  ORDER BY the number of matches DESC BIN Match_ID BY YEAR
Visualize BAR SELECT MANAGER_ID , AVG(HIRE_DATE) FROM employees WHERE EMPLOYEE_ID IN (SELECT MANAGER_ID FROM departments WHERE DEPARTMENT_ID IN (SELECT DEPARTMENT_ID FROM departments WHERE LOCATION_ID IN (SELECT LOCATION_ID FROM departments WHERE LOCATION_ID = 40) AND MANAGER_ID IS NULL) AND HIRE_DATE IN (SELECT JOB_HISTORY_END_DATE FROM job_history WHERE EMPLOYEE_ID
Visualize BAR SELECT manufacturer.Name , SUM(price) FROM products GROUP BY manufacturer.Name ORDER BY SUM(price) DESC
Visualize SCATTER SELECT employee_id , salary FROM employees GROUP BY employee_id HAVING ( salary BETWEEN 8000 AND 12000 ) AND ( commission_pct IS NOT NULL ) AND ( department_id <> 40 ) ORDER BY salary DESC
Visualize BAR SELECT job_id , avg(employee_id) FROM employees GROUP BY job_id ORDER BY job_id ASC
Visualize LINE SELECT employee_id , MIN(hire_date) AS minHireDate , MAX(hire_date) AS maxHireDate FROM employees WHERE FIRST_NAME LIKE '%D%' OR FIRST_NAME LIKE '%S%'  GROUP BY employee_id ORDER BY minHireDate ASC
Visualize BAR SELECT MANAGER_ID , SALARY FROM employees WHERE LAST_NAME LIKE '%d%' OR LAST_NAME LIKE '%s%' OR FIRST_NAME LIKE '%d%' OR FIRST_NAME LIKE '%s%' ORDER BY HIRE_DATE ASC BIN BY WEEKDAY
Visualize BAR SELECT Position , count(*) FROM match_season GROUP BY Position ORDER BY count(*) ASC
Visualize BAR SELECT COUNTY_ID , Population FROM county GROUP BY COUNTY_ID
Visualize BAR SELECT job_id , COUNT(job_id) FROM jobs , job_history GROUP BY job_id HAVING hire_date < 2002-06-21 ORDER BY COUNT(job_id) DESC
Visualize BAR SELECT JOB_ID , COUNT(*) FROM employees WHERE FIRST_NAME LIKE 'D%S%' GROUP BY JOB_ID ORDER BY MIN(SALARY) ASC, MIN(START_DATE) ASC
Visualize BAR SELECT DEPARTMENT_ID , COUNT(EMPLOYEE_ID) FROM employees WHERE SALARY BETWEEN 8000 AND 12000 GROUP BY DEPARTMENT_ID ORDER BY DEPARTMENT_ID ASC
Visualize BAR SELECT Code , Price FROM Products WHERE Price>60 AND Price<120 AND Manufacturer.Code=Products.Manufacturer GROUP BY Code ORDER BY Price DESC

Visualize BAR SELECT County_Id , Population FROM county GROUP BY County_Id

Visualize CALC SELECT * FROM Products WHERE Price BETWEEN 60 AND 120 GROUP BY Price
1) Visualize LINE SELECT MANAGER_ID , DEPARTMENT_ID FROM departments  BIN MANAGER_ID BY Dept_name_ 2) Visualize SCATTER SELECT EMPLOYEE_ID ,DEPARTMENT_ID FROM employees BIN EMPLOYEE_ID BY SQUARE
Visualize BAR SELECT hire_date , SUM(hire_date) FROM employees GROUP BY hire_date ORDER BY hire_date DESC
Visualize SCATTER SELECT EMPLOYEE_ID , COMMISSION_PCT FROM employees WHERE SALARY BETWEEN 8000 AND 12000 AND (COMMISSION_PCT IS NOT NULL OR DEPARTMENT_ID NOT IN (40))
Visualize BAR SELECT hire_date , avg(salary) FROM employee WHERE salary BETWEEN 8000 AND 12000 AND commission_pct IS NOT NULL AND department_id <> 40 GROUP BY hire_date BIN hire_date BY WEEK ORDER BY avg(salary) ASC
SELECT * FROM Manufacturers WHERE Headquarter = 'Seattle' GROUP BY Revenue ORDER BY Revenue DESC
Visualize BAR SELECT Date_Payment_Made , COUNT(Date_Payment_Made) FROM Payments WHERE paymentMethodCode = "VISA" GROUP BY Date_Payment_Made BIN Date_Payment_Made BY YEAR
Visualize BAR SELECT  EMPLOYEE_ID , COUNT(*) FROM employees GROUP BY EMPLOYEE_ID  HAVING FIRST_NAME LIKE 'D%' or FIRST_NAME LIKE 'S%' ORDER BY COUNT(*) DESC
Visualize LINE  SELECT employee_id, hire_date , SUM(salary) FROM employee  GROUP BY employee_id , hire_date  ORDER BY hire_date ASC
Visualize BAR SELECT EMPLOYEE_ID , count(*) FROM employees GROUP BY EMPLOYEE_ID ORDER BY count(*) ASC
Visualize BAR SELECT Name , SUM(price) FROM products  INNER JOIN Manufacturers ON Manufacturers.Code = products.Manufacturer GROUP BY Name ORDER BY SUM(price) DESC
1. BAR SELECT dept_name , count(*) FROM departments GROUP BY dept_name ORDER BY dept_name 2. BAR SELECT employee_id , count(*) FROM job_history GROUP BY employee_id ORDER BY employee_id 3. BAR SELECT e.employee_id , dept_id , e.hire_date , count(*) FROM job_history JOIN departments D ON e.department_id = D.department_id JOIN employees E ON e.employee_id = D.manager_id GROUP BY e.employee_id, dept_id,
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employee WHERE SALARY BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NOT NULL AND DEPARTMENT_ID NOT EQUALS 40 GROUP BY HIRE_DATE  BIN HIRE_DATE BY WEEKDAY ORDER BY AVG(DEPARTMENT_ID)
Visualize BAR SELECT Participant_Type_Code , Count(Participant_Type_Code) FROM Participants GROUP BY Participant_Type_Code ORDER BY Participant_Type_Code ASC
Visualize BAR SELECT EMPLOYEE_ID , COUNT(DEPARTMENT_ID) FROM employees GROUP BY EMPLOYEE_ID HAVING (HIRE_DATE > '2002-06-21 00:00:00' AND HIRE_DATE < '2002-06-28 00:00:00') AND (WEEKDAY('2002-06-21 00:00:00') = '6' OR WEEKDAY('2
Visualize BAR SELECT Headquarter, Manufacturer FROM products JOIN manufacturers on manufacturer_id = code GROUP BY Headquarter , Manufacturer ORDER BY Manufacturer DESC
Visualize CIRCLE SELECT DISTINCT FIRST_NAME, JOB_ID FROM employees  WHERE FIRST_NAME = 'D' OR FIRST_NAME = 'S'  SELECT JOB_ID, MIN(SALARY) as MIN_SALARY , MAX(SALARY) AS MAX_SALARY, COUNT(*) AS COUNT(*) FROM  ( 	SELECT FIRST_NAME, LAST_NAME, EMAIL, JOB_ID, SALARY, COMMISSION_PCT, MANAG
/* Visualize BAR SELECT HIRE_DATE , sum(manager_id) FROM employees WHERE (MANAGER_ID <> 40 OR HIRE_DATE IS NOT NULL) AND SALARY BETWEEN 8000 AND 12000 GROUP BY HIRE_DATE , weekday(HIRE_DATE) */
Visualize SCATTER SELECT employee_id, salary FROM employees WHERE HIRE_DATE <= '2002-06-21' ORDER BY salary
Visualize PIE SELECT payment_method_code , COUNT(*) FROM Customers GROUP BY payment_method_code ORDER BY COUNT(*) DESC
Visualize BAR SELECT job_id , AVG(manager_id) FROM JOBS GROUP BY job_id ORDER BY AVG(manager_id) DESC
Visualize BAR SELECT customer_payment_method_code , count(*) FROM Customer_Orders GROUP BY customer_payment_method_code ORDER BY customer_payment_method_code DESC
Visualize BAR SELECT dept_id , SUM(employee_id) FROM employees GROUP BY dept_id ORDER BY HIRE_DATE ASC
Visualize BAR SELECT job_id , COUNT(*) FROM job_history GROUP BY job_id , DEPARTMENT_ID  ORDER BY job_id DESC
Visualize BAR SELECT HIRE_DATE, SUM(JOB_ID) FROM employees WHERE SALARY BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NOT NULL AND DEPARTMENT_NUMBER <> 40 GROUP BY HIRE_DATE BIN HIRE_DATE BY WEEKDAY ORDER BY COUNT(job_id) DESC
Visualize BAR SELECT Start_Date , AVG(Manager_ID) FROM employees WHERE SALARY BETWEEN 8000 AND 12000 GROUP BY Start_Date , department_id BIN Start_Date BY WEEKDAY

Visualize BAR SELECT HIRE_DATE , HIRE_DATE.BIN_HIRING_DATE.TIME AS "HIRING_TIME" FROM employees ORDER BY HIRE_DATE ASC
Visualize LINE SELECT Investor, COUNT(Investor) FROM entrepreneur WHERE Entrepreneur_ID != Investor GROUP BY Investor ORDER BY Investor ASC
Visualize BAR SELECT DATEPART(YEAR, HIRE_DATE), HIRE_DATE , COUNT(HIRE_DATE) FROM EMPLOYEES WHERE LAST_NAME LIKE 'd%' OR LAST_NAME LIKE 's%' GROUP BY DATEPART(YEAR, HIRE_DATE) BIN HIRE_DATE BY WEEKDAY
Visualize BAR SELECT state_province , COUNT(*) FROM locations GROUP BY state_province ORDER BY state_province ASC
Visualize BAR SELECT Carrier , Memory_in_G FROM phone GROUP BY Carrier ORDER BY Carrier DESC
Visualize BAR SELECT MANAGER_ID , COUNT(MANAGER_ID) FROM departments GROUP BY MANAGER_ID
Visualize LINE SELECT Hire_Date , count(*) FROM employees WHERE FIRST_NAME LIKE "%D%" OR FIRST_NAME LIKE "%S%" GROUP BY hire_date ORDER BY hire_date DESC
Visualize BAR SELECT payment_day , count(*) AS Counter_Value , AVG(Amount_Payment) AS Avg_Payment FROM Payments GROUP BY payment_day, Year(payment_day)
Visualize PIE SELECT other_details , SUM(monthly_rental) FROM Student_Addresses GROUP BY other_details
1. Visualize PIE SELECT departments , DEPARTMENT_ID FROM departments GROUP BY DEPARTMENT_ID ORDER BY DEPARTMENT_ID DESC 2. Visualize BAR SELECT employees , manager_id FROM employees WHERE salary >= 8000 AND salary <= 12000 AND commission_pct != null AND department_id != 40 GROUP BY manager_id ORDER BY manager_id DESC
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE HIRE_DATE <= '2002-06-21' GROUP BY HIRE_DATE ORDER BY HIRE_DATE ASC
SELECT Employee_ID, hire_date, max(hire_date) as Max_Hire, min(hire_date) as Min_Hire, max(hire_date) - min(hire_date) as Total_Date, department_id, hire_date from employees join departments on departments.DEPARTMENT_ID = employees.DEPARTMENT_ID where employees.hire_date < '2002-06-21' GROUP BY Employee_ID, department_id, hire_date ORDER BY Max_Hire ASC, Total_Date ASC
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM jobs WHERE SALARY > 8000 AND SALARY < 12000 AND COMMISSION_PCT IS NOT NULL AND MANAGER_ID NOT IN(40) GROUP BY JOB_ID ORDER BY COUNT(JOB_ID) DESC
Visualize BAR SELECT MANAGER_ID, (Hire_Date - Min(Hire_Date)) AS Days_Since_Hire , sum(Salary) FROM employees GROUP BY Manager_ID , (Hire_Date - Min(Hire_Date)) ASC ORDER BY (Hire_Date - Min(Hire_Date))
Visualize BAR SELECT MANAGER_ID , AVG(HIRE_DATE) FROM employees WHERE HIRE_DATE < '2002-06-21' GROUP BY MANAGER_ID ORDER BY AVG(HIRE_DATE) DESC
Visualize LINE SELECT Employee_ID , SUM(HIRE_DATE) FROM employees WHERE HIRE_DATE <= '2002-06-21' GROUP BY Employee_ID ORDER BY SUM(HIRE_DATE) DESC BIN SUM(HIRE_DATE) BY YEAR
1. Visualize BAR SELECT Manager_ID , AVG(EMPLOYEE_ID) FROM employees GROUP BY Manager_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID BIN HIRE_DATE BY YEAR(HIRE_DATE),DAY(HIRE_DATE) AS DAY_OF_WEEK 2. Visualize LINE SELECT Manager_
Visualize BAR SELECT LAST_NAME , HIRE_DATE , COUNT(HIRE_DATE) FROM EMPLOYEES WHERE FIRST_NAME IN ('D', 'S') GROUP BY LAST_NAME, HIRE_DATE BIN HIRE_DATE BY WEEKDAY
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees GROUP BY HIRE_DATE ORDER BY COUNT(HIRE_DATE) DESC , HIRE_DATE ASC
Visualize BAR SELECT City , COUNT(*) FROM locations GROUP BY City ORDER BY City ASC
Visualize BAR SELECT hire_date , AVG(hire_date) FROM employees GROUP BY hire_date ORDER BY hire_date, AVG(hire_date)
Visualize SCRATTER SELECT student_id, address_id FROM Addresses GROUP BY student_id , address_id
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE SALARY BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NOT NULL AND DEPARTMENT_ID NOT IN (40) GROUP BY HIRE_DATE BIN HIRE_DATE BY WEEKDAY ORDER BY HIRE_DATE DESC
Select EMPLOYEE_ID , COMMISSION_PCT FROM employee  WHERE first_name like 'D%' OR first_name like 'S%'  AND department_id is not null  AND job_history.JOB_ID = job.JOB_ID  AND job_history.EMPLOYEE_ID = employee.EMPLOYEE_ID  AND job_history.START_DATE >= '2018-01-01' AND job_history.END_DATE <= '2018-0
SELECT MANAGER_ID , count(*) FROM departments INNER JOIN employees  INNER JOIN job_history ON departments.DEPARTMENT_ID = job_history.DEPARTMENT_ID and job_history.EMPLOYEE_ID = employees.EMPLOYEE_ID GROUP BY JOB_ID, MANAGER_ID ORDER BY MANAGER_ID, JOB_ID ASC
SELECT address_id,  		other_details ,  		other_details ,  		BIN(date_address_from, 'month') BY Time , 		Other_details_code FROM Teachers ,  		Assessment_Notes ,  		Behavior_Incident ,  		Detention ,  		Student_Addresses  		GROUP BY address_id ,  		other_details ,  		other_details ,  		Time ,
Visualize SCATTER SELECT Length , Height FROM roller_coaster GROUP BY Length, Height
Visualize BAR SELECT employee_id, HIRE_DATE, FIRST_NAME, LAST_NAME, COUNT(*) FROM employees  WHERE COMMISSION_PCT IS NOT NULL AND DEPARTMENT_ID != 40 AND SALARY BETWEEN 8000 AND 12000 GROUP BY EMPLOYEE_ID, HIRE_DATE, FIRST_NAME, LAST_NAME ORDER BY COUNT(*) DESC
1.Visualize BAR SELECT COUNT(*) FROM job_history WHERE MIN_SALARY BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NOT NULL AND DEPARTMENT_ID != 40 GROUP BY job_id  2.Visualize BAR SELECT COUNT(*) FROM job_history WHERE MIN_SALARY BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NOT NULL AND DEPARTMENT_ID != 40 GROUP BY job_id ORDER BY

1) Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE HIRE_DATE < "2002-06-21"  2) Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE HIRE_DATE < "2002-06-21" GROUP BY JOB_ID ORDER BY SALARY DESC
Visualize BAR SELECT HIRE_DATE , EMPLOYEE_ID , AVERAGE(EMPLOYEE_ID) AS AVERAGE FROM employees WHERE SALARY > 8000 AND COMMISSION_PCT IS NULL AND JOB_ID IN (SELECT JOB_ID FROM job_history WHERE START_DATE > '2009-01-01') AND DEPARTMENT_ID != 40 GROUP BY HIRE_DATE BIN HIRE_DATE BY MONTH, YEAR
SELECT EMPLOYEE_ID, SALARY, COMMISSION_PCT, count(*) FROM employees WHERE SALARY > 8000 and DEPARTMENT_ID <> 40 GROUP BY EMPLOYEE_ID HAVING count(*) > 1
Visualize a LINE SELECT other_details FROM Teachers JOIN (SELECT teacher_id , count(*) as number_notes FROM Assessment_Notes JOIN Student_Addresses GROUP BY teacher_id) AS A ON Teachers.teacher_id = A.teacher_id JOIN (SELECT teacher_id , count(*) as number_incident FROM Behavior_Incident JOIN Student_Addresses GROUP BY teacher_id) AS B ON Teachers.teacher_id = B.teacher_id JOIN (SELECT teacher_id , count(*) as number_detention FROM Det
Visualize BAR SELECT Payment_Method_Code , COUNT(Payment_Method_Code) FROM Payments GROUP BY Payment_Method_Code ORDER BY Payment_Method_Code ASC
Visualize BAR SELECT JobID , SUM(manager_id) FROM employees WHERE MIN(salary)> 8000 AND max(salary)<=12000 AND commission_pct IS NOT NULL AND department_id !=40 GROUP BY JobID ORDER BY SUM(manager_id) DESC

Visualize BAR SELECT HIRE_DATE , SUM(COMMISSION_PCT) FROM EMPLOYEES WHERE DEPARTMENT_ID NOT IN (40) AND COMMISSION_PCT IS NOT NULL AND MANAGER_ID IS NOT NULL AND SALARY BETWEEN 8000 AND 12000 GROUP BY hire_date ORDER BY hire_date ASC
Visualize BAR SELECT LAST_NAME , SUM(DEPARTMENT_ID) FORM DEPARTMENT_ID BIN HIRE_DATE BY (WEEKDAY)
Visualize BAR SELECT Player, count(*) FROM player WHERE Position = "Defender" GROUP BY Player ORDER BY count(*) DESC
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID] Answer: Visualize BAR SELECT job_history , JOB_ID FROM employees  WHERE FIRST_NAME LIKE "D%" OR FIRST_NAME LIKE "S%" GROUP BY JOB_ID ORDER BY job_id
Visualize BAR SELECT position , count(*) FROM match_season WHERE player_id = player.player_id GROUP BY position
SELECT EMPLOYEE_ID FROM employees WHERE EMAIL= 'nmccluskey@gmail.com'
1. Visualize BAR SELECT EMPLOYEE_ID, SUM(SALARY) FROM employees GROUP BY JOB_ID 2. Visualize BAR SELECT SUM(SALARY) FROM employees 3. Visualize BAR SELECT EMPLOYEE_ID, SUM(SALARY) FROM job_history 4. Visualize BAR SELECT SUM(SALARY) FROM job_history 5. Visualize BAR SELECT SUM(SALARY) FROM job_history
Visualize BAR SELECT first_name, salary FROM employees GROUP BY first_name ORDER BY salary
Visualize LINE SELECT FIRST_NAME , AVG(SALARY) FROM employees WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' GROUP BY FIRST_NAME
Visualize BAR SELECT Position , COUNT(Player) FROM match_season GROUP BY Position ORDER BY Position ASC
Visualize BAR SELECT job_id , SUM(employee_id) FROM employees WHERE FIRST_NAME LIKE 'D%' or FIRST_NAME LIKE 'S%' GROUP BY job_id  ORDER BY job_id
Visualize LINE SELECT first_name , (salary + commission_pct) FROM employees WHERE first_name = 'D' OR first_name = 'S' AND first_name <> 'G' AND first_name <> 'H' GROUP BY first_name , (salary + commission_pct) ORDER BY first_name DESC
Visualize BAR SELECT Manufacturers.Revenue , Products.Price FROM Manufacturers, Products ORDER BY Products.Revenue DESC
SELECT Locations.PostalCode , COUNT(Distinct Locations.CITY) FROM locations GROUP BY PostalCode ORDER BY POSTAL_CODE
Visualize BAR SELECT Revenue , COUNT(Revenue) FROM Manufacturers GROUP BY Revenue ORDER BY Revenue DESC , BIN Revenue BY Headquarter
Visualize BAR SELECT MAX(product_price) FROM Products GROUP BY product_type_code ORDER BY MAX(product_price) ASC
Visualize BAR SELECT First_Name , COUNT(First_Name) FROM employees GROUP BY First_Name BIN Hire_Date BY Weekday , SORT BY COUNT(First_Name) ASC
Visualize BAR SELECT SUBSTRING(First_Name,1,1) LIKE 'D' || 'S' , Job_Id , sum(Manager_Id) FROM employees GROUP BY Substring(First_Name,1,1) LIKE 'D' || 'S' , Job_Id , sum(Manager_Id) ORDER BY Substring(First_Name,1,1) LIKE 'D' || 'S' , Job_Id
Visualize Bar SELECT Department_ID , AVG(SUM(Employee_ID)) FROM job_history WHERE Salary BETWEEN 8000 and 12000 AND Commission IS NOT NULL AND Department_ID != 40 GROUP BY Department_ID BIN Department_ID BY DEPARTMENT_ID ORDER BY AVG(SUM(Employee_ID)) DESC
Visualize BAR SELECT job_id , count(*) , SUM(salary) FROM jobs JOIN employees ON (jobs.JOB_ID = employees.JOB_ID) WHERE hire_date < "2002-06-21" GROUP BY job_id , count(*) , SUM(salary) ORDER BY job_id ASC
Visualize BAR SELECT Job_ID , Count(*) FROM employee GROUP BY Job_ID HAVING Salary BETWEEN 8000 AND 12000 HAVING commission_pct IS NULL AND Job_ID != 40 GROUP BY Job_ID HAVING Job_ID != 40 ORDER BY Mean SALARY ASC , HIRE_DATE BIN Hire_Date BY WEEKDAY
Visualize BAR SELECT product_type_code , avg(product_price) FROM products GROUP BY product_type_code ORDER BY avg(product_price) DESC
Visualize BAR SELECT job_id , AVG(salary) FROM employees WHERE (MIN_SALARY BETWEEN 8000 AND 12000) AND (COMMISSION_PCT IS NOT NULL OR DEPARTMENT_ID <> 40) GROUP BY job_id ORDER BY AVG(salary) ASC

Visualize BAR SELECT Years_Played , COUNT(*) FROM player GROUP BY Years_Played ORDER BY Years_Played ASC
Visualize BAR SELECT job_id , SUM(department_id) FROM employee GROUP BY job_id ORDER BY job_id     BAR SELECT job_id , avg(salary) FROM job_history GROUP BY job_id
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM job_history GROUP BY JOB_ID,DEPARTMENT_ID Visualize BAR SELECT DEPARTMENT_ID , COUNT(DEPARTMENT_ID) FROM employees GROUP BY DEPARTMENT_ID Visualize BAR SELECT MANAGER_ID , COUNT(MANAGER_ID) FROM employees GROUP BY MANAGER_ID
Visualize BAR SELECT DEPARTMENT_ID , LAST_NAME FROM employees  GROUP BY DEPARTMENT_ID ORDER BY DEPARTMENT_ID DESC
Visualize SCATTER SELECT student_id , address_id FROM Students ORDER BY date_first_rental ASC
Visualize BAR SELECT FIRST_NAME , avg(SALARY) FROM employees GROUP BY FIRST_NAME ORDER BY FIRST_NAME ASC
Visualize LINE Select JOB_ID , count(*) FROM jobs GROUP BY JOB_ID ORDER BY JOB_ID ASC BIN JOB_ID BY YEAR
Visualize BAR SELECT LAST_NAME , COUNT(JOB_ID), SUM(SALARY), COUNT(COMMISSION_PCT) FROM employees WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' GROUP BY JOB_ID ORDER BY JOB_ID DESC , PIE SELECT JOB_TITLE , COUNT(JOB_TITLE) FROM jobs GROUP BY JOB_TITLE
Visualize BAR SELECT Payment_Method_Code , AVG(Amount_Payment) AS Total_Amount FROM Payments GROUP BY Payment_Method_Code
1. Visualize LINE SELECT EMPLOYEE_ID, SALARY FROM employees WHERE MANAGER_ID >= 8000 AND MANAGER_ID <= 12000 AND JOB_ID = 1 GROUP BY SALARY, EMPLOYEE_ID 2. Visualize LINE SELECT JOB_ID, HIRE_DATE , START_DATE , END_DATE , DEPARTMENT_ID FROM job_history WHERE EMPLOYEE_ID IN (SELECT EMPLOYEE_ID FROM employees WHERE MAN
Visualize BAR SELECT Manufacturer , count(Code) FROM Products GROUP BY Manufacturer ORDER BY Manufacturer ASC
1. Visualize SCATTER SELECT count(*) , department_id FROM employees WHERE job_id IN ( SELECT JOB_ID FROM job_history WHERE employee_id IN ( SELECT EMPLOYEE_ID FROM job_history WHERE JOB_ID = job_id AND department_id = department_id ) AND MANAGER_ID = 1 GROUP BY department_id HAVING count(*) >= 100 AND COUNT(*) <= 1000 ) AND MANAGER_ID = 1 AND DEPARTMENT_ID = 40 AND JOB_ID NOT
/* Flight: Bar chart of the total number from each origin */ Visualize BAR SELECT other_details , COUNT(*) FROM flight GROUP BY other_details  /* Visualize PIE SELECT monthly_rental , COUNT(*) FROM student_addresses GROUP BY monthly_rental  Visualize PIE SELECT other_details , COUNT(*) FROM student_addresses GROUP BY other_details  Visualize PIE SELECT incident_summary , COUNT(*) FROM Behavior_Incident GROUP BY incident_summary  Visualize PIE SELECT note_type , COUNT(*) FROM assessment_notes
Visualize BAR SELECT Participant_Type_Code , count(*) FROM Participants GROUP BY Participant_Type_Code
Visualize BAR SELECT date_address_from, COUNT(date_address_from), monthly_rental FROM Student_Addresses GROUP BY date_address_from ORDER BY COUNT(date_address_from) ASC BIN date_address_from BY DAY
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees GROUP BY HIRE_DATE ORDER BY HIRE_DATE DESC BIN HIRE_DATE BY weekday
Visualize LINE SELECT job_id , COUNT(*) FROM employees WHERE hire_date BETWEEN '2002-06-21' AND '2005-08-08' GROUP BY job_id ORDER BY COUNT(*) DESC
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM jobs GROUP BY JOB_ID,  SELECT EMPLOYEE_ID, JOB_ID, JOB_TITLE, MIN(SALARY), MAX(SALARY) FROM jobs, employees,job_history WHERE jobs.JOB_ID = job_history.JOB_ID and job_history.EMPLOYEE_ID = employees.EMPLOYEE_ID and (jobs.HIRE_DATE <= '2002-06-
Visualize BAR SELECT first_name , sum(salary) FROM employees where first_name like '%D%|%S%' GROUP BY first_name HAVING count(*) =2 ORDER BY salary DESC
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees GROUP BY JOB_ID ORDER BY SUM(DEPARTMENT_ID) DESC
Visualize BAR SELECT EMPLOYEE_ID , MIN(JOB_ID), SUM(SALARY) FROM jobs GROUP BY EMPLOYEE_ID HAVING FIRST_NAME LIKE 'D' OR FIRST_NAME LIKE 'S'
Visualize LINE SELECT draft_pick_number, count(*) FROM player JOIN match_season ON player.Player_ID = match_season.Player GROUP BY draft_pick_number ORDER BY draft_pick_number ASC

Visualize BAR SELECT HIRE_DATE, count(*) FROM employees WHERE SALARY BETWEEN 8000 AND 12000 AND DEPARTMENT_ID != 40 GROUP BY HIRE_DATE BY SEASONAL_SCHEDULE
Visualize LINE SELECT MANAGER_ID , EMPLOYEE_ID FROM employees , departments , job_history JOIN employees ON employees.MANAGER_ID = job_history.EMPLOYEE_ID  WHERE EMPLOYEE_ID > 21 JOIN departments ON departments.DEPARTMENT_ID = job_history.DEPARTMENT_ID AND job_history.START_DATE = "2002-06-21" GROUP BY employee_id, MANAGER_ID
Visualize BAR SELECT monthly_rental , COUNT(*) FROM student_address GROUP BY monthly_rental HAVING COUNT(*) > 0
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees GROUP BY (HIRE_DATE, MANAGER_ID) BIN HIRE_DATE BY YEAR
SELECT customer_id , customer_name  FROM customer  WHERE customer_address like TN;

Visualize BAR SELECT TOP 10 JOB_ID, COUNT(*) FROM employees WHERE HIRE_DATE <= '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE HIRE_DATE >= DATE_ADD(DATE_SUB(2002-06-21, INTERVAL 4 DAY), INTERVAL 1 DAY) GROUP BY HIRE_DATE,WEEKDAY(HIRE_DATE) ORDER BY HIRE_DATE,WEEKDAY(HIRE_DATE) ASC
Visualize SCATTER SELECT MANAGER_ID , DEPARTMENT_ID FROM departments GROUP BY MANAGER_ID, DEPARTMENT_ID
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees GROUP BY HIRE_DATE BIN TERM BY 1 ORDER BY count(*) DESC
Visualize BAR SELECT price ,Code FROM Products WHERE price BETWEEN 60 AND 120 GROUP BY price ,Code
Visualize BAR SELECT incident_type_code , COUNT(*) FROM behavior_incident GROUP BY incident_type_code ORDER BY COUNT(*) DESC
Visualize BAR SELECT Payment_Method_Code , avg(Amount_Payment) FROM Payments GROUP BY Payment_Method_Code ORDER BY avg(Amount_Payment) ASC
Visualize PIE SELECT supplier_id, COUNT(*) FROM Products JOIN Product_Suppliers GROUP BY supplier_id, COUNT(*)
Visualize BAR SELECT Date_Claim_Settled , Count(Claim_ID) FROM Claims GROUP BY Date_Claim_Settled ORDER BY Date_Claim_Settled ASC
Visualize BAR SELECT hire_date , AVG(salary) FROM employees WHERE department_id != 40 AND MANAGER_ID != 30 AND commission_pct IS NULL AND salary > 8000 AND salary < 12000 AND hire_date IS NOT NULL GROUP BY hire_date ORDER BY hire_date ASC BIN hire_date BY MONTH
Visualize BAR SELECT EMPLOYEE_ID, SUM(salary) FROM employees GROUP BY EMPLOYEE_ID BIN 10 YEAR,BIN HIRE_DATE BY YEAR BIN HIRE_DATE ,BIN HIRE_DATE
Visualize WATERLINE SELECT JOB_ID , COUNT(EMPLOYEE_ID) FROM jobs WHERE (JOB_TITLE="RETAIL SALES ASSOCIATE") AND (HIRE_DATE<=2002-06-21) AND (HIRE_DATE>=2002-06-21) GROUP BY JOB_ID ORDER BY COUNT(EMPLOYEE_ID) DESC
Visualize BAR SELECT FIRST_NAME , AVG(HIRE_DATE) FROM employees WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' GROUP BY FIRST_NAME ORDER BY TOTAL_COUNT DESC
Visualize BAR SELECT Carrier , COUNT(Carrier) FROM phone GROUP BY Carrier ORDER BY count(Carrier) DESC
Visualize BAR SELECT SALARY , COUNT(SALARY) FROM employees GROUP BY LAST_NAME ORDER BY COUNT(SALARY) DESC
Visualize BAR SELECT JOB_ID , COUNT(job_id) FROM employees GROUP BY JOB_ID
Visualize BAR SELECT hand , COUNT(*) FROM players GROUP BY hand ORDER BY hand ASC
Visualize Scatter SELECT Code, Price FROM Products GROUP BY Code, Price ORDER BY Price ASC, Code ASC

Visualize BAR SELECT MANAGER_ID , EMPLOYEE_ID FROM employees , WHERE JOB_ID=111 AND MANAGER_ID NOT IN ( SELECT MANAGER_ID FROM employees , WHERE JOB_ID=111 AND HIRE_DATE= “2002-06-21” ) ORDER BY EMPLOYEE_ID
Visualize BAR SELECT Player , Count(*) FROM match_season GROUP BY Player ORDER BY Player DESC
1) Visualize LINE  SELECT EMPLOYEE_ID , SALARY , HIRE_DATE FROM employees GROUP BY EMPLOYEE_ID, HIRE_DATE ORDER BY HIRE_DATE ASC , SALARY 2) Visualize LINE SELECT EMPLOYEE_ID , HIRE_DATE FROM employees WHERE (HIRE_DATE >= '2002-06-21') GROUP BY EMPLOYEE_ID, HIRE_DATE ORDER BY HIRE_DATE ASC
Visualize BAR SELECT date_address_to , SUM(monthly_rental) FROM Student_Addresses GROUP BY date_address_to ORDER BY date_address_to DESC

Visualize LINE SELECT EMPLOYEE_ID, COUNT(JOB_ID) FROM employees GROUP BY EMPLOYEE_ID, FIRST_NAME ORDER BY EMPLOYEE_ID BIN hire_date BY DATE
1.Visualize PIE SELECT Employees.JOB_ID , COUNT(Job_ID) FROM JOB_HISTORY WHERE Employees.Hire_Date > '2017-01-01' AND Employees.Hire_Date < '2017-02-01' AND Employees.SALARY > 8000 AND Employees.SALARY < 12000 AND Commission_PCT IS NOT NULL AND Hire_Date IN (SELECT Job_HISTORY.Start_Date FROM

Visualize Bar SELECT HIRE_DATE , SUM(SALARY) FROM employees GROUP BY HIRE_DATE ORDER BY HIRE_DATE ASC
Visualize BAR SELECT Participant_ID , Participant_Details FROM Participants_in_Events GROUP BY Participant_ID
Visualize BAR SELECT  Claim_ID , Date_Claim_Made, Year(Date_Claim_Made) AS Claim_Year , COUNT(*) AS Claim_Count FROM Claims GROUP BY Claim_ID ORDER BY Claim_Year DESC , Claim_Count
Visualize BAR SELECT Price , min(Price) FROM Products GROUP BY Price, Manufacturer
Visualize HISTOGRAM SELECT Entrepreneur_ID , Investor FROM entrepreneur GROUP BY Entrepreneur_ID , Investor
Visualize BAR SELECT HIRE_DATE , SALARY FROM employees GROUP BY HIRE_DATE  ORDER BY SALARY DESC

Visualize BAR SELECT job_id , AVG(salary) FROM employee GROUP BY job_id
Visualize BAR SELECT FIRST_NAME , COUNT(departmentId) FROM employees WHERE departmentId=job_history.department_id GROUP BY first_name ORDER BY first_name ASC
Visualize LINE SELECT JOB_ID, (AVG(SALARY) + AVG(COMMISSION_PCT))/2 FROM employees GROUP BY JOB_ID, DEPARTMENT_ID ORDER BY AVG(SALARY) + AVG(COMMISSION_PCT) DESC Visualize BAR SELECT (SALARY + COMMISSION_PCT) FROM employees WHERE JOB_ID IN (233,330) AND MIN_SALARY <= 8000 AND MAX_SALARY <= 12
Visualize PIE SELECT FIRST_NAME , HIRE_DATE , count(EMPLOYEE_ID) FROM employees GROUP BY FIRST_NAME ORDER BY HIRE_DATE ASC
Visualize HISTOGRAM SELECT memory_in_G , count(*) FROM phone GROUP BY memory_in_g ORDER BY count(*) DESC BIN memory_in_g BY memory_in_g
Visualize BAR SELECT FIRST_NAME , HIRE_DATE , COUNT(*) FROM employees GROUP BY FIRST_NAME, HIRE_DATE , TIME ORDER BY HIRE_DATE ASC, COUNT(*)
Visualize PIE SELECT COUNTRY_NAME , COUNT(*) FROM countries GROUP BY COUNTRY_NAME ORDER BY COUNT(*)
Visualize BAR SELECT date_address_to , monthly_rental , AVG(monthly_rental) FROM Student_Addresses GROUP BY date_address_to BIN DATE_ADDRESS_TO BY WEEKDAY
```   Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE HIRE_DATE < '2002-06-21' GROUP BY JOB_ID  ORDER BY JOB_ID  ASC ```
/* Visualize LINE SELECT [EMPLOYEE_ID], SUM(COMMISSION_PCT) FROM employees GROUP BY employee_id */  Visualize BAR SELECT [EMPLOYEE_ID], [HIRE_DATE], SUM(commission_pct) FROM employees GROUP BY employee_id, hire_date  Visualize BAR SELECT [EMPLOYEE_ID], [HIRE_DATE], COUNT([JOB_ID]) FROM job_history GROUP BY employee_id, hire_date  Visualize BAR SELECT
Visualize BAR SELECT Manufacturer.Name , count(Products.Name) FROM Products GROUP BY Manufacturer.Name ORDER BY Manufacturer.Name ASC
Visualize PIE SELECT Code , Price , Manufacturer , COUNT(Code) FROM Products GROUP BY Code , Price , Manufacturer  HAVING price BETWEEN 60 AND 120
Visualize BAR SELECT date , sum(emp_id) FROM employee WHERE salary >= 8000 AND salary < 12000 AND commission is not null AND job_id != 40 AND hire_date != null GROUP BY date ORDER BY date ASC
Visualize BAR SELECT hire_date , AVG(hire_date) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission IS NOT NULL AND department_id NOT IN (40) GROUP BY hire_date BIN hire_date BY time(hire_date)
Visualize BAR SELECT Date_Claim_Made , Date_Claim_Settled  FROM Claims GROUP BY Date_Claim_Made ,Date_Claim_Settled  ORDER BY Date_Claim_Made  ASC
Visualize BAR SELECT job_id , sum(employee_id) FROM employees GROUP BY job_id
Visualize BAR SELECT payment_method_code , COUNT(*) FROM Customers GROUP BY payment_method_code ORDER BY COUNT(*) DESC
Visualize LINE SELECT employee , EMPLOYEE_ID FROM job_history ,  departments , employees ,  employees WHERE EMPLOYEE_ID IS NOT NULL AND hire_date <= '2002-06-21' ORDER BY EMPLOYEE_ID ASC
Visualize LINE SELECT hire_date , COUNT(hire_date) FROM employees WHERE FIRST_NAME NOT LIKE 'M%' GROUP BY hire_date ORDER BY hire_date
Visualize BAR SELECT Price , Count(*) FROM Products GROUP BY Code , Manufacturer HAVING Price BETWEEN 60 AND 120 ORDER BY Code , Manufacturer ASC
Visualize PIE SELECT payment_method_code , COUNT(*) FROM Customer GROUP BY payment_method_code ORDER BY COUNT(*)

Visualize BAR SELECT hand , count(*) FROM players GROUP BY hand ORDER BY hand DESC
Visualize BAR SELECT manager_id , COUNT(*) FROM EMPLOYEES BIN COUNT(*) BY manager_id GROUP BY manager_id ORDER BY manager_id ASC     /* Generate the SQL SELECT statement for each question using the database schema. */
Visualize BAR SELECT EMPLOYEE_ID , sum(hire_date) FROM employees GROUP BY EMPLOYEE_ID BETWEEN '2002-06-21' AND '2002-06-22' ORDER BY EMPLOYEE_ID DESC
Visualize HISTOGRAM SELECT Zip_code , COUNT(*) FROM County GROUP BY County_name , Population ORDER BY Population
Visualize BAR SELECT Position, avg(Draft_Pick_Number) FROM match_season WHERE Player = "defender" GROUP BY Position
Visualize PIE SELECT County_name , COUNT(County_name) FROM county GROUP BY County_name
1. Visualize BAR SELECT JOB_ID , sum(salary) FROM employees GROUP BY JOB_ID  2. Visualize BAR SELECT JOB_ID , SUM(salary) FROM employees WHERE commission_pct = null AND department_id != 40 GROUP BY JOB_ID  3. Visualize BAR SELECT JOB_ID , SUM(salary) FROM employees WHERE commission_pct != null GROUP BY JOB_ID
Visualize BAR SELECT LOCATION_ID , COUNT(LOCATION_ID) FROM locations GROUP BY LOCATION_ID
Visualize BAR SELECT Payment_Method_Code , AVG(Amount_Payment) FROM Payments GROUP BY Payment_Method_Code
Visualize BAR SELECT SUM(salary) FROM employees WHERE DEPARTMENT_NUMBER != 40 AND HIRE_DATE BETWEEN '1980-01-01' AND '1990-01-01' GROUP BY hire_date ORDER BY sum(salary) DESC
Visualize BAR SELECT carrier , COUNT(phone_ID) FROM phone GROUP BY carrier ORDER BY COUNT(phone_ID) ASC
Visualize BAR SELECT COUNT(*) , HIRE_DATE, HIRE_DATE_BIN(WEEKDAY) FROM employees GROUP BY HIRE_DATE_BIN(WEEKDAY)
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees GROUP BY JOB_ID ORDER BY AVG(EMPLOYEE_ID) ASC
Visualize BAR SELECT FIRST_NAME , HIRE_DATE , sum(EMPLOYEE_ID) FROM EMPLOYEES WHERE FIRST_NAME = 'D' OR FIRST_NAME = 'S'
Visualize BAR SELECT Name, Price FROM Products GROUP BY Code, Price ORDER BY Code ASC
Visualize BAR SELECT Participant_Type_Code , count(Participant_ID) FROM Participants GROUP BY Participant_Type_Code ORDER BY Participant_Type_Code ASC
``` Visualize BAR SELECT Payment_Method_Code , sum(Amount_Payment) FROM Payments GROUP BY Payment_Method_Code ```
Visualize PIE SELECT Type , COUNT(*) FROM Teachers GROUP BY Type  Visualize PIE SELECT Type , COUNT(*) FROM Assessment_Notes GROUP BY Type  Visualize PIE SELECT Type , COUNT(*) FROM Behavior_Incident GROUP BY Type  Visualize PIE SELECT Type , COUNT(*) FROM Detention GROUP BY Type  Visualize PIE SELECT Type , COUNT(*) FROM Student_Addresses GROUP BY Type

Visualize BAR SELECT job_history .JOB_ID , AVG(Manager_ID) FROM employees , job_history GROUP BY job_history .JOB_ID ORDER BY AVG(Manager_ID) DESC BIN job_history .JOB_ID IN [8000, 12000] , job_history .MANAGER_ID = Null , job_history .DEPARTMENT_ID <> 40
Visualize BAR SELECT product_type_code , SUM(total_value_purchased) FROM product_suppliers GROUP BY product_type_code ORDER BY SUM(total_value_purchased) DESC
Visualize LINE SELECT monthly_rental , other_details FROM Student_addresses WHERE date_address_from <= '2000-04-01' AND date_address_to >= '2000-04-01'
Visualize BAR SELECT date_address_to , COUNT(*) FROM Student_Addresses GROUP BY student_address_id, date_address_to ORDER BY date_address_to ASC
Visualize BAR SELECT First_Name , count(First_Name) FROM employees WHERE First_Name LIKE 'M%' GROUP BY First_Name ORDER BY count(First_Name) DESC
Visualize BAR SELECT LAST_NAME , MIN(SALARY) AS MIN_SALARY , AVG(SALARY) AS AVG_SALARY , SUM(SALARY) AS TOTAL_SALARY FROM employees GROUP BY LAST_NAME BIN(HIRE_DATE, 'month' )
Visualize LINE SELECT JOB_ID , AVG(SALARY) FROM employees INNER JOIN jobs USING(JOB_ID) INNER JOIN department USING(DEPARTMENT_ID) INNER JOIN job_history USING(EMPLOYEE_ID) WHERE 8000  <= MAX_SALARY < 12000 and commission_pct is not null and job_id != 40 GROUP BY JOB_ID ORDER BY AVG(SALARY) ASC
Visualize BAR SELECT FIRST_NAME, HIRE_DATE , AVG(SALARY) FROM employees GROUP BY FIRST_NAME, HIRE_DATE   ORDER BY HIRE_DATE DESC
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE HIRE_DATE < '2002-06-21' GROUP BY HIRE_DATE BY WEEKDAY ORDER BY AVG(EMPLOYEE_ID) ASC
Visualize BAR SELECT LAST_NAME , SALARY FROM employees ORDER BY SALARY DESC
Visualize BAR SELECT FIRST_NAME , COUNT(Salary) FROM employees WHERE FIRST_NAME LIKE 'Ma%' GROUP BY FIRST_NAME ORDER BY COUNT(Salary)
Visualize BAR SELECT JOB_ID , SUM(job_history.DEPARTMENT_ID) FROM jobs WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' AND DEPARTMENT_ID IS NOT NULL GROUP BY JOB_ID , SALARY ASC
Visualize TREND Select First_name, count(*) FROM employees GROUP BY First_name HAVING FIRST_NAME LIKE 'D' OR FIRST_NAME LIKE 'S' ORDER BY COUNT(First_name) ASC
Visualize BAR SELECT Headquarter , Manufacturer , AVG(Revenue) FROM Products GROUP BY Manufacturer , Headquarter  ORDER BY AVG(Revenue) DESC
Visualize SCATTER SELECT FIRST_NAME, MANAGER_ID FROM employees GROUP BY FIRST_NAME HAVING (FIRST_NAME LIKE 'D' OR FIRST_NAME LIKE 'S') AND (FIRST_NAME NOT LIKE 'D') ORDER BY SORT_RATING
Visualize BAR SELECT HIRE_DATE , Count(*) FROM employees GROUP BY HIRE_DATE HAVING HIRE_DATE BETWEEN DATE('1970-01-01', '-1 week') AND DATE('1970-01-01', '1 week') ORDER BY HIRE_DATE ASC
Visualize BAR SELECT payment_method_code , count(*) FROM Customers GROUP BY payment_method_code ORDER BY count(*) DESC
Visualize BAR SELECT EMPLOYEE_ID , SUM(MANAGER_ID) , AVG(MANAGER_ID) FROM employees WHERE (FIRST_NAME LIKE ‘%D%’ OR FIRST_NAME LIKE ‘%S%’) GROUP BY EMPLOYEE_ID ORDER BY AVG(MANAGER_ID) ASC BIN HIRE_DATE BY day_name()
Visualize BAR SELECT First_name , COUNT(First_name) FROM employee WHERE first_name != 'N/A'  GROUP BY First_name ORDER BY COUNT(First_name) DESC
Visualize BAR SELECT HIRE_DATE , count(*) FROM employees  GROUP BY HIRE_DATE , DEPT_ID , SALARY , COUNT(DEPT_ID)
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE FIRST_NAME LIKE 'D'  OR FIRST_NAME LIKE 'S' GROUP BY HIRE_DATE ,  BIN HIRE_DATE BY WEEK BIN DEPARTMENT_ID BY MONTH_END(HIRE_DATE) ORDER BY COUNT(HIRE_DATE) ASC
Visualize BAR SELECT * FROM departments, employees, job_history WHERE ( (employees.hire_date BETWEEN TO_DAYS(DATE_ADD(to_date('01/01/1900', 'MM/DD/YYYY'), 1) + 8000) AND TO_DAYS(DATE_ADD(to_date('01/01/1900', 'MM/DD/YYYY'), 12000))) AND (employees.commission_pct IS NOT NULL) AND (
Visualize BAR SELECT Date_Payment_Made , Amount_Payment , Payment_Method_Code FROM Payments GROUP BY Date_Payment_Made , Payment_Method_Code , Amount_Payment ORDER BY Date_Payment_Made ASC
Visualize BAR SELECT Code, Count(*) FROM manufacturers GROUP BY Code ORDER BY Code ASC
Visualize BAR SELECT date_of_notes , count(*) FROM Assessment_Notes GROUP BY date_of_notes ORDER BY date_of_notes ASC
Visualize BAR SELECT hire_date , SUM(salary) FROM employees WHERE MANAGER_ID IN (1,2) AND JOB_ID IN (1,2) AND SALARY IN (8000,12000) AND COMMISSION_PCT IS NOT NULL AND DEPARTMENT_ID NOT IN (40) GROUP BY WEEKDAY(hire_date) ORDER BY SUM(salary) ASC
Visualize BAR SELECT LName , COUNT(*) FROM Student WHERE major = 600 GROUP BY LName ORDER BY LName ASC
Visualize BAR SELECT address_id , count(*) FROM Student_Addresses GROUP BY other_details ,  bin(date_address_to)  Visualize BAR SELECT teacher_id , sum(monthly_rental) FROM Student_Addresses GROUP BY other_details  Visualize SCATTER SELECT other_details ,  count(*) FROM Student_Addresses GROUP BY other_details
Visualize BAR SELECT EMPLOYEE_ID , HIRE_DATE FROM employees WHERE HIRE_DATE < '2002-06-21' GROUP BY HIRE_DATE HAVING SUM(EMPLOYEE_ID) > 10
Visualize BAR SELECT employee_id , sum(salary) FROM employees WHERE salary > 8000 AND salary <= 12000 AND commission_pct IS NOT NULL AND department_id != 40 AND job_id IS NOT NULL GROUP BY employee_id ORDER BY SUM(salary) ASC
Visualize BAR SELECT hand , COUNT(hand) FROM players GROUP BY hand ORDER BY hand ASC
Visualize BAR SELECT HIRE_DATE , COUNT(DEPARTMENT_ID) FROM employees GROUP BY HIRE_DATE ORDER BY HIRE_DATE
Visualize BAR SELECT SALARY FROM employees WHERE COMMISSION_PCT IS NOT NULL AND DEPARTMENT_ID != 40 AND SALARY BETWEEN 8000 AND 12000 ORDER BY SALARY ASC
Visualize BAR SELECT Investor , count(*) FROM entrepreneur GROUP BY Investor ORDER BY Investor DESC
Visualize BAR SELECT Department_ID , COUNT(Employee_ID) FROM departments  WHERE SALARY BETWEEN 8000 AND 12000 AND (Job_ID NOT IN (40) OR Job_ID IS NULL) GROUP BY Department_ID ORDER BY COUNT(Employee_ID) ASC
Visualize LINE SELECT date_address_from , monthly_rental FROM Student_Addresses GROUP BY student_id ORDER BY monthly_rental ASC
Visualize BAR SELECT HIRE_DATE , count(CASE WHEN HIRE_DATE = '2002-06-21' THEN manager_ID END) FROM employees  GROUP BY HIRE_DATE,WEEKDAY,CASE WHEN HIRE_DATE = '2002-06-21' THEN manager_ID END  ORDER BY  count(*) DESC,WEEKDAY ASC
Visualize BAR SELECT date_address_from , monthly_rental FROM Student_Addresses GROUP BY date_address_from ORDER BY date_address_from ASC
Visualize BAR SELECT Competition , COUNT(Competition) FROM match  GROUP BY Competition  ORDER BY COUNT(Competition) ASC
Visualize BAR SELECT Participant_Type_Code , COUNT(*) FROM Participants GROUP BY Participant_Type_Code ORDER BY COUNT(*) DESC BIN Participant_Type_Code BY YEAR
1) Bar plot the Population of each county 2) Display the bar in desc by the x-axis
Visualize BAR SELECT DISTINCT job_id , SUM(employee.manager_id) FROM employees INNER JOIN job_history ON employee.EMPLOYEE_ID = job_history.EMPLOYEE_ID GROUP BY job_id ORDER BY SUM(employee.manager_id) ASC

Visualize BAR SELECT DEPARTMENT_ID , SUM(EMPLOYEE_ID) FROM jobs WHERE JOB_ID IN(1,2,4,5) AND JOB_ID IN(6,7,9,10,12,13,14,16) AND JOB_ID NOT IN(3,5,8,11) AND SALARY BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NOT NULL GROUP BY DEPARTMENT_ID ORDER BY DEPARTMENT_ID
Visualize BAR SELECT FIRST_NAME , COUNT(hire_date) FROM employees  GROUP BY FIRST_NAME HAVING FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' AND FIRST_NAME NOT LIKE 'D%' AND FIRST_NAME NOT LIKE 'S%' ORDER BY COUNT(hire_date) DESC BIN hire_date BY WEEKDAY
Visualize BAR SELECT job_id , SUM(employee_id) FROM jobs WHERE hire_date < '2002-06-21' GROUP BY job_id ORDER BY SUM(employee_id) DESC
Visualize LINE SELECT Employee_ID , SALARY FROM employees WHERE FIRST_NAME LIKE ('D%') OR FIRST_NAME LIKE ('S%') ORDER BY HIRE_DATE ASC
Visualize HISTOGRAM SELECT Investor , count(*) FROM entrepreneur GROUP BY Investor ORDER BY count(*) ASC
Visualize BAR SELECT HIRE_DATE , avg(salary) FROM employees where hire_date<2002-06-21 GROUP BY HIRE_DATE ORDER BY avg(salary) ASC
Visualize BAR SELECT hire_date , count(*) FROM EMPLOYEES WHERE HIRE_DATE < '2002-06-21' GROUP BY hire_date ORDER BY count(*)
Visualize PIE SELECT FIRST_NAME , EMAIL FROM employees
Visualize BAR SELECT First_name , salary FROM employees GROUP BY First_name ORDER BY salary DESC,first_name ASC

Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM jobs WHERE MIN_SALARY = 8000 AND MAX_SALARY = 12000 AND job_id IS NOT NULL AND department_id != 40 GROUP BY JOB_ID ORDER BY SUM(EMPLOYEE_ID)
Visualize SCATTER SELECT address_id , monthly_rental FROM Student_Addresses
Visualize BAR SELECT County_name , Count(Population) FROM county GROUP BY County_name ORDER BY count(population) ASC
Visualize BAR SELECT HIRE_DATE , COUNT(*) FROM employees WHERE HIRE_DATE < 2002-06-21  GROUP BY HIRE_DATE ORDER BY HIRE_DATE ASC BIN HIRE_DATE BY YEAR
Visualize LINE SELECT HIRE_DATE , DEPARTMENT_ID FROM employee WHERE HIRE_DATE > '2002-06-21' ORDER BY HIRE_DATE ASC
Visualize HISTOGRAM SELECT customer_name , COUNT(customer_name) FROM customers WHERE address like "%TN%" GROUP BY customer_name ORDER BY customer_name DESC
Visualize BAR SELECT date_incident_end , count(*) FROM behavior_incident GROUP BY date_incident_end ORDER BY date_incident_end ASC
Visualize HISTOGRAM SELECT hand , COUNT(hand) FROM players GROUP BY hand ORDER BY COUNT(hand) DESC
Visualize BAR SELECT JOB_ID , COUNT(EMPLOYEE_ID) FROM EMPLOYEE GROUP BY JOB_ID HAVING HIRE_DATE < '2002-06-21' ORDER BY COUNT(EMPLOYEE_ID) ASC
Visualize BAR SELECT SUM(salary) , COUNT(hire_date) FROM employees WHERE HIRE_DATE < '2002-06-21' GROUP BY hire_date BIN hire_date BY WEEKDAY ORDER BY SUM(salary) DESC
Visualize BAR SELECT FIRST_NAME , SALARY , HIRE_DATE , count(*) FROM employees    WHERE FIRST_NAME LIKE 'D% or S%' GROUP BY FIRST_NAME , HIRE_DATE  , count(*)    ORDER BY HIRE_DATE  DESC
Visualize BAR SELECT LOCATION_ID , COUNT(*) FROM locations GROUP BY LOCATION_ID ORDER BY Count(*) DESC
Visualize BAR SELECT Price , Count(Price) FROM Manufacturers GROUP BY Price BIN Price BY 60 TO 120
Visualize BAR SELECT First_Name , HIRE_DATE , COUNT(hi_de_code), SUM(manager_id) FROM employees GROUP BY First_Name , HIRE_DATE , COUNT(hi_de_code), SUM(manager_id) ORDER BY SUM(manager_id) DESC , HIRE_DATE
Visualize LINE SELECT EMPLOYEE_ID , COUNT(EMPLOYEE_ID) FROM employees GROUP BY EMPLOYEE_ID WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' ORDER BY HIRE_DATE DESC
Visualize BAR SELECT EMPLOYEE_ID , min(HIRE_DATE) FROM employees WHERE SALARY BETWEEN 8000 and 12000 and COMMISSION_PCT IS NOT NULL or DEPARTMENT_ID != 40 GROUP BY EMPLOYEE_ID BIN HIRE_DATE BY SECONDS HAVING AVG(HIRE_DATE) < 0.8 SECONDS
Visualize PIE SELECT product_type_code , MIN(product_price) FROM Products GROUP BY product_type_code
Visualize BAR SELECT product_type_code , AVG(product_price) FROM products GROUP BY product_type_code
Visualize BAR SELECT JOB_ID , count(*) FROM employees GROUP BY JOB_ID ORDER BY count(*) DESC
Visualize LINE SELECT date_address_to , AVG(monthly_rental) FROM Student_Addresses GROUP BY date_address_to
Visualize BAR SELECT EMPLOYEE_ID , AVG(MANAGER_ID) AS AVG_MANAGER , AVG(HIRE_DATE) AS AVG_HIRE FROM employees JOIN job_history ON EMPLOYEE_ID = JOB_ID JOIN departments ON DEPARTMENT_ID = DEPARTMENT_ID WHERE JOB_ID IS NOT NULL  WHERE SALARY >= 8000 AND SALARY <= 12000 AND COMMISSION_PCT IS NOT NULL AND DEPARTMENT_NUMBER !=
1. Visualize SELECT Dept_ID, count(EMPLOYEE_ID), sum(Job_ID) FROM departments          LEFT OUTER JOIN jobs          ON departments.DEPARTMENT_ID = jobs.MANAGER_ID          LEFT OUTER JOIN jobs          ON departments.DEPARTMENT_ID = job_history.DEPARTMENT_ID          GROUP BY Dept_ID          ORDER BY 2 DESC; 2. SELECT Job_ID , count(*) FROM employees          LEFT OUTER JOIN job_history
Visualize BAR SELECT EMPLOYEE_ID , SUM(salary) FROM employees group by EMPLOYEE_ID AND job_id and DEPARTMENT_ID order by DEPARTMENT_ID ASC , and Visualize BAR SELECT EMPLOYEE_ID , SUM(salary) FROM employees group by EMPLOYEE_ID AND job_id and DEPARTMENT_ID , Visualize BAR SELECT EMPLOYEE_ID , SUM(salary) FROM employees group by EMPLOYEE_ID AND job_id and DE
Visualize BAR SELECT JOB_ID , COUNT(EMPLOYEE_ID) FROM departments LEFT JOIN jobs ON departments.MANAGER_ID = jobs.JOB_ID AND salary BETWEEN 8000 AND 12000 AND commission_pct IS NOT NULL AND departments.DEPARTMENT_ID IS NOT 40 GROUP BY job_id ORDER BY COUNT(EMPLOYEE_ID) ASC
Visualize BAR SELECT  HIRE_DATE , COUNT(HIRE_DATE) FROM employees GROUP BY HIRE_DATE ORDER BY COUNT(HIRE_DATE)
Visualize BAR SELECT EMPLOYEE_ID , AVG(HIRE_DATE)  FROM employees WHERE EMPLOYEE_ID IS NOT NULL AND HIRE_DATE < '2002-06-21' GROUP BY EMPLOYEE_ID ORDER BY AVG(HIRE_DATE) DESC
1) BAR SELECT job_id FROM jobs GROUP BY JOB_ID 2) BAR SELECT job_id , AVG(SALARY) FROM employees GROUP BY job_id 3) BAR SELECT job_id , AVG(SALARY) FROM employees WHERE SALARY BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NOT NULL AND DEPARTMENT_ID != 40 GROUP BY job_id
Visualize BAR SELECT substring(FIRST_NAME,1,1) ,count(*) , AVG(DEPARTMENT_ID) from employees group by substring(FIRST_NAME,1,1) , day(HIRE_DATE) DISTINCT,WEEKDAY(HIRE_DATE)
Visualize BAR SELECT Year , COUNT(Payment_ID) FROM Payments WHERE Payment_Method_Code = "Visa" GROUP BY Year
Visualize BAR SELECT HIRE_DATE , count(*) FROM employees GROUP BY HIRE_DATE ORDER BY HIRE_DATE ASC
Visualize BAR SELECT year, COUNT(year) FROM matches GROUP BY year ORDER BY COUNT(year) ASC
Visualize BAR SELECT Code , COUNT(Name) FROM Products GROUP BY Name ORDER BY Name DESC
Visualize CORR SELECT DEPARTMENT_ID , SALARY FROM EMPLOYEES WHERE HIRE_DATE > '2002-06-21' GROUP BY DEPARTMENT_ID
Visualize BAR SELECT first_name FROM employees JOIN job_history WHERE first_name LIKE 'D%' or first_name LIKE 'S%'
/* Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE HIRE_DATE < '2002-06-21' GROUP BY HIRE_DATE ORDER BY HIRE_DATE ASC */
Visualize BAR SELECT DATEPART(WEEKDAY,HIRE_DATE) , AVG(SALARY) FROM EMPLOYEES WHERE LAST_NAME NOT IN ('M') AND MANAGER_ID IS NULL GROUP BY DATEPART(WEEKDAY,HIRE_DATE) ORDER BY AVG(SALARY)
Visualize BAR SELECT JOB_ID , SALARY FROM employees WHERE FIRST_NAME LIKE 'D%S%' GROUP BY job_id DESC
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees GROUP BY HIRE_DATE
1) Visualize BAR SELECT product_type_code , MAX(product_price) FROM products GROUP BY product_type_code ORDER BY MAX(product_price) DESC  2) Visualize BAR SELECT product_suppliers_id , MAX(product_price) FROM product_suppliers GROUP BY product_suppliers_id ORDER BY MAX(product_price) DESC
Visualize BAR SELECT EMPLOYEE_ID , COUNT(DISTINCT(hire_date)) , sum(salary) FROM employees WHERE hire_date > '2002-06-21' GROUP BY EMPLOYEE_ID , DISTINCT(hire_date), bin(hire_date) BY weekday ORDER BY sum(salary)
Visualize BAR SELECT JOB_ID , count(*) FROM job_history WHERE (job_id not in (40)) AND (salary BETWEEN 8000 AND 12000) GROUP BY JOB_ID
Visualize BAR SELECT Date_Claim_Made , Amount_Claimed FROM Settlements  GROUP BY Date_Claim_Made BIN 0 , 1
Visualize BAR SELECT EMPLOYEE_ID , COUNT(job_id) , SUM(salary) FROM employees GROUP BY EMPLOYEE_ID BIN job_id HAVING HIRE_DATE <= '2002-06-21' AND JOB_ID IS NOT NULL BIN job_id
Visualize BAR SELECT Venue , COUNT(*) FROM match GROUP BY Venue ORDER BY Venue ASC
Visualize LINE SELECT student_id , date_address_to FROM Student_Addresses GROUP BY date_address_to
Visualize BAR SELECT Memory_in_G , Phone_ID FROM phone GROUP BY Memory_in_G ORDER BY Phone_ID DESC
Visualize BAR SELECT FIRST_NAME , Average(SALARY) , DATE_TRUNC(hire_date , 'year') FROM employees WHERE ( FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%') GROUP BY FIRST_NAME , DATE_TRUNC(hire_date , 'year') ORDER BY Average(SALARY) ASC
Visualize LINE SELECT Monthly_rental , count(*) FROM Student_Addresses GROUP BY Monthly_Rental
SELECT E.EMPLOYEE_ID, E.FIRST_NAME, E.LAST_NAME, E.EMPLOYEE_ID, E.SALARY, E.COMMISSION_PCT, E.DEPARTMENT_ID, J.DEPARTMENT_ID, J.SALARY, J.COMMISSION_PCT   FROM departments d JOIN employees e ON d.DEPARTMENT_ID = e.DEPARTMENT_ID JOIN job_history j ON e.EMPLOYEE_ID = j.EMP
Visualize PIE SELECT LAST_NAME , COUNT(LAST_NAME) FROM employees GROUP BY LAST_NAME  HAVING LAST_NAME LIKE 'M%'
Visualize BAR SELECT FIRST_NAME , HIRE_DATE FROM employees GROUP BY HIRE_DATE BIN hire_date BY WEEKDAY
Visualize BAR SELECT teacher_id , COUNT(*) FROM teacher GROUP BY teacher_id  ORDER BY teacher_id DESC
1. Visualize BAR SELECT job_id , count(*) FROM departments WHERE DEPARTMENT_ID IS NOT NULL AND MANAGER_ID IS NOT NULL AND job_id in (SELECT JOB_ID FROM job_history WHERE SALARY IN (8000, 12000) AND DEPARTMENT_ID IS NOT NULL AND MANAGER_ID IS NOT NULL) GROUP BY job_id; 2. Visualize BAR SELECT job_id , count(*) FROM departments WHERE DEPARTMENT_ID IS NOT NULL AND MANAGER_ID IS
Visualize BAR SELECT JOB_ID, avg(manager_id) FROM employees GROUP BY JOB_ID ORDER BY avg(manager_id) DESC
Visualize BAR SELECT department_id, job_id FROM employees WHERE DEPARTMENT_ID NOT IN (SELECT DEPARTMENT_ID FROM jobs WHERE MIN_SALARY BETWEEN 8000 AND 12000 AND commission IS NOT NULL AND department_id = 40) AND job_id IN (SELECT JOB_ID FROM job_history WHERE employee_id = ?) GROUP BY job_id
Visualize LINE SELECT employee_id , EMPLOYEE_ID FROM job_history  BIN employee_id BY EMPLOYEE_ID
Visualize BAR SELECT Carrier, count(*) FROM phone GROUP BY Carrier
Visualize SCATTER SELECT count(*) , sum(other_details) FROM assessment_notes GROUP BY teacher_id ORDER BY count(*) DESC
Visualize BAR SELECT EMPLOYEE_ID , COUNT(EMPLOYEE_ID) FROM employees WHERE hire_date < 2002-06-21 GROUP BY EMPLOYEE_ID ORDER BY COUNT(EMPLOYEE_ID) DESC
Visualize BAR SELECT Carrier , COUNT(*) FROM phone GROUP BY Carrier
Visualize PIE SELECT FIRST_NAME, DEPARTMENT_ID FROM employees GROUP BY FIRST_NAME, DEPARTMENT_ID HAVING (FIND_IN_SET('D','DEPARTMENT_NAME')>0) ORDER BY DEPARTMENT_ID ASC
Visualize BAR SELECT Payment_Method_Code , COUNT(Payment_Method_Code) FROM Payments GROUP BY Payment_Method_Code ORDER BY Payment_Method_Code ASC
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees  WHERE HIRE_DATE < '2002-06-21' GROUP BY WEEKDAY(HIRE_DATE)
Visualize BAR SELECT FIRST_NAME , COUNT(FIRST_NAME) FROM EMPLOYEES WHERE FIRST_NAME LIKE ('D%') or FIRST_NAME LIKE ('S%') GROUP BY FIRST_NAME , COST_IN, AVERAGE(cost_in) WITHIN GROUP(ORDER BY FIRST_NAME , SORT(cost_in))
Visualize BAR SELECT job_id , COUNT(job_id) FROM employees GROUP BY job_id  ORDER BY job_id ASC BIN job_id BY JOB_TITLE
Visualize BAR SELECT First_name , DEPARTMENT_ID FROM employees GROUP BY First_name ORDER BY DEPARTMENT_ID
1) Visualize BAR SELECT other_details , monthly_rental FROM Student_addresses  2) Visualize BAR SELECT other_details , date_address_from , monthly_rental FROM Student_addresses  3) Visualize BAR SELECT other_details , date_address_from , monthly_rental FROM Student_addresses BIN (date_address_from)  4) Visualize BAR SELECT other_details , count(distinct date_address_from) , monthly_rental FROM Student_addresses GROUP BY other_details
Visualize Scatter SELECT EMPLOYEE_ID , DEPARTMENT_ID FROM employees WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' GROUP BY EMPLOYEE_ID, DEPARTMENT_ID
Visualize BAR SELECT salary , COUNT(*) FROM employees GROUP BY salary WITHIN (bin(hire_date), 2) GROUP BY hire_date WITHIN (weekday, 1) ORDER BY COUNT(*) DESC
1. Visualize BAR SELECT Other_Details , count(date_address_from) FROM Student_Addresses GROUP BY Other_Details  2. Visualize BAR SELECT Other_Details , avg(monthly_rental) FROM Student_Addresses GROUP BY Other_Details  3. Visualize BAR SELECT Other_Details , count(*) FROM Student_Addresses GROUP BY Other_Details , bin date_address_from BY WEEKDAY  4. Visualize BAR SELECT Other_Details , count(date_address_from) FROM Student_Addresses GROUP BY Other_
Select Code, Name, Count(*) FROM Products GROUP BY Name HAVING Price < 200 ORDER BY Name, Price ASC
Visualize BAR SELECT EMPLOYEE_ID , SUM(EMPLOYEE_ID) FROM employees  ORDER BY AVG(hire_date) DESC BIN (hire_date) BY WEEKDAY
Visualize SCATTER SELECT hire_date , (AVG(manag_ID) OVER (PARTITION BY hire_date  PIVOT department_id BIN hire_date)) AS total_department FROM employees WHERE hire_date >= '2002-06-21' GROUP BY hire_date
Visualize BAR SELECT county_name , count(*) FROM county GROUP BY county_name ORDER BY count(*) ASC
Visualize BAR SELECT date_address_from , COUNT(date_address_from) FROM Student_Addresses GROUP BY date_address_from, monthly_rental ASC
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE hire_date < 2002-06-21 GROUP BY JOB_ID ORDER BY JOB_ID ASC
Visualize HISTOGRAM SELECT job_id, COUNT(*) FROM employees WHERE hire_date > '2002-06-21' GROUP BY job_id Visualize BAR SELECT job_id , COUNT(employee_id) , SUM(salary) FROM jobs WHERE job_id = job_history.JOB_ID GROUP BY job_id ORDER BY SUM(salary) DESC
Visualize LINE SELECT Date_Claim_Made, Date_Claim_Settled FROM Claims GROUP BY Date_Claim_Settled
Visualize SPLIT Scatter SELECT Employee_ID , Commission_PCT FROM employees WHERE HIRE_DATE < '2002-06-21' GROUP BY Employee_ID
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE HIRE_DATE < '2002-06-21' GROUP BY HIRE_DATE ORDER BY HIRE_DATE DESC
Visualize BAR SELECT EMPLOYEE_ID , AVG(SALARY) AS AvgSalary FROM employee WHERE SALARY >= 8000 AND SALARY < 12000 AND COMMISSION_PCT IS NULL AND DEPARTMENT_ID != 40 AND JOB_ID = 1 GROUP BY EMPLOYEE_ID ORDER BY SUM(SALARY) ASC , HIRE_DATE, Total(salary) FROM employee WHERE SALARY >= 8000 AND SALARY < 1200

Visualize BAR SELECT Investor , COUNT(*) FROM entrepreneur GROUP BY Investor ORDER BY COUNT(*) ASC
Visualize HISTOGRAM SELECT MANU_CODE , count(*) FROM product GROUP BY MANU_CODE ORDER BY count(*) DESC
Visualize BAR SELECT job_id, SUM(SALARY) FROM employees GROUP BY job_id
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) , SUM(SALARY) AS TOTAL_SALARY FROM employees GROUP BY HIRE_DATE HAVING HIRE_DATE < '2002-06-21' ORDER BY TOTAL_SALARY
Visualize BAR SELECT MANAGER_ID , count(last_name) FROM employees GROUP BY MANAGER_ID ORDER BY MANAGER_ID ASC
Visualize LINE SELECT monthly_rental, date_address_from FROM Student_Addresses  GROUP BY date_address_from BIN date_address_from BY MONTH
Visualize BAR SELECT hire_date , SALARY FROM employees WHERE FIRST_NAME NOT LIKE 'M%' GROUP BY hire_date BIN hire_date BY MONTH ORDER BY SALARY ASC
Visualize BAR SELECT job , count(*) FROM employees WHERE FIRST_NAME not like 'Ma%' GROUP BY job ORDER BY job ASC
Visualize SCATTER SELECT employee_id , job_history.end_date FROM employees GROUP BY employee_id ORDER BY employee_id ASC
Visualize BAR SELECT Name , COUNT(*) FROM Products WHERE Price <= 200 GROUP BY Name ORDER BY COUNT(*) DESC
Visualize BAR SELECT Participant_Type_Code , COUNT(*) FROM Participants GROUP BY Participant_Type_Code ORDER BY Participant_Type_Code DESC
Visualize SCATTER SELECT Manager_ID ,SALARY FROM employees WHERE SALARY > 0 AND Manager_ID IS NOT NULL GROUP BY Manager_ID ORDER BY SALARY ASC
visualize BAR SELECT student_id, monthly_rental FROM Students GROUP BY student_id visualize BAR SELECT student_id, monthly_rental FROM Student_Addresses GROUP BY student_id visualize BAR SELECT student_id, monthly_rental FROM Students_in_Detention GROUP BY student_id visualize BAR SELECT student_id, monthly_rental FROM Detention GROUP BY student_id visualize BAR SELECT student_id, monthly_rental FROM Students_in_Detention GROUP BY student_id
Visualize LINE SELECT EMAIL , SALARY FROM employees WHERE EMPLOYEE_ID >= 1 AND EMPLOYEE_ID <= 5 AND HIRE_DATE < 2002-06-21 GROUP BY EMAIL ORDER BY SALARY ASC
Visualize BAR SELECT EMPLOYEE_ID , HIRE_DATE FROM employees GROUP BY EMPLOYEE_ID ORDER BY HIRE_DATE DESC , EMPLOYEE_ID ASC
Visualize BAR SELECT Manager_ID , MIN(hire_date) , MAX(hire_date) , AVG(hire_date)  FROM employees WHERE Manager_ID IN ( 'D','S' ) GROUP BY Manager_ID  ORDER BY AVG(hire_date)
SELECT DEPARTMENT_ID, SUM(SALARY), SUM(JOB_ID) FROM employees WHERE EMPLOYEE_ID IN ( SELECT EMPLOYEE_ID FROM departments INNER JOIN employees ON (EMPLOYEE_ID=EMPLOYEE_ID) INNER JOIN job_history ON (EMPLOYEE_ID=EMPLOYEE_ID) WHERE DEPARTMENT_ID > 2 AND COUNT(DEPARTMENT_ID)>1) GROUP BY DEPARTMENT_ID    Visualize SCATTER SELECT DEPARTMENT
1.Visualize BAR SELECT manager_id , SUM(salary) FROM employees WHERE (salary BETWEEN 8000 AND 12000 AND commission IS NOT NULL OR department_id != 40)  GROUP BY manager_id ORDER BY SUM(salary) ASC
Visualize BAR SELECT year , COUNT(year) FROM matches GROUP BY year ORDER BY COUNT(year) DESC
Visualize HISTOGRAM SELECT EMPLOYEE_ID , COUNT(*) FROM employees  GROUP BY EMPLOYEE_ID
Visualize BAR SELECT job_id , AVG(department_id) FROM employees WHERE first_name LIKE 'D%' OR first_name LIKE 'S%' GROUP BY job_id ORDER BY AVG(department_id) ASC
Visualize BAR SELECT Draft_Pick_Number , Draft_Class FROM match_season WHERE Position = 'defender' GROUP BY Draft_Pick_Number ORDER BY Draft_Pick_Number ASC
SELECT FIRST_NAME , AVG(SALARY) FROM employees GROUP BY FIRST_NAME ORDER BY SALARY DESC
For those employees who was hired before 2002-06-21 , draw a scatter chart about the correlation between commission_pct and department_id
Visualize LINE SELECT AVERAGE(total_value_purchased) , product_type_code  FROM Products GROUP BY product_type_code ORDER BY AVG(total_value_purchased)
Visualize BAR SELECT job_id , COUNT(*) FROM jobs GROUP BY job_id ORDER BY job_id DESC
Visualize LINE SELECT monthly_rental , count(*) FROM student_addresses GROUP BY date_address_to
Visualize BAR SELECT STREET_ADDRESS , COUNT(LOCATION_ID) FROM locations GROUP BY STREET_ADDRESS ORDER BY COUNT(LOCATION_ID) ASC
Visualize LINE SELECT monthly_rental , date_address_to FROM Student_Addresses GROUP BY date_address_to , student_id
Visualize BAR SELECT job_id , AVG(manager_id) FROM jobs , ( job_history JOIN departments ON job_history.job_id = departments.department_id) WHERE job_id between 6 and 13 , manager_id != null , manager_id != 40 GROUP BY job_id , manager_id ORDER BY AVG(manager_id) DESC
Visualize TIME DISTRIBUTION EMPLOYEE_ID , AVG(MANAGER_ID) OVER ( PARTITION BY HIRE_DATE ROWS  BETWEEN 2116639 AND 2116643) FROM employees WHERE HIRE_DATE BETWEEN 2116639 AND 2116643     Visualize TIME DISTRIBUTION EMPLOYEE_ID , AVG(MANAGER_ID) OVER
Visualize BAR SELECT city , COUNT(*) FROM locations GROUP BY city
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees GROUP BY HIRE_DATE BIN HIRE_DATE BY YEAR , MONTH
Visualize HISTOGRAM SELECT  FIRST_NAME , HIRE_DATE , COUNT(*) , AVERAGE(manager_id) , MIN(HIRE_DATE) , MAX(HIRE_DATE) FROM employees GROUP BY first_name ORDER BY AVERAGE(manager_id) DESC, HIRE_DATE DESC
Visualize BAR SELECT last_name , DEPARTMENT_ID FROM employees GROUP BY DEPARTMENT_ID BIN last_name
Visualize LINE SELECT HIRE_DATE , salary FROM employees WHERE FIRST_NAME NOT LIKE 'M%' ORDER BY salary DESC
Visualize BAR SELECT job_id , avg(salary) FROM departments WHERE salary between 8000 AND 12000 GROUP BY job_id
1.Visualize BAR SELECT JOB_ID , COUNT(*) FROM employees JOIN jobs ON employees.JOB_ID = jobs.JOB_ID GROUP BY JOB_ID BIN JOB_ID BY JOB_TITLE ASC 2. Visualize BAR SELECT JOB_ID , COUNT(*) FROM employees JOIN job_history ON employees.JOB_ID = job_history.JOB_ID GROUP BY JOB_ID BIN JOB_ID BY MIN_SALARY ASC 3. Visualize BAR SELECT JOB_ID , COUNT(*) FROM employees JOIN
Visualize PIE , Then Visualize BAR HIRE_DATE , SALARY FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission IS NULL AND department_id !=40 ORDER BY salary DESC , SALARY FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission IS NULL AND department_id !=40 ORDER BY salary DESC
Visualize PIE SELECT Participant_Type_Code , COUNT(*) FROM Participants GROUP BY Participant_Type_Code ORDER BY COUNT(*) DESC

Visualize BAR SELECT date_address_from , AVG(monthly_rental) FROM Student_Addresses  GROUP BY other_details ORDER BY monthly_rental DESC BIN date_address_from BY WEEKDAY
Visualize BAR SELECT Manager_ID , avg(hire_date) FROM employees  WHERE FIRST_NAME LIKE 'D' OR FIRST_NAME LIKE 'S' AND DEPARTMENT_ID=2 BIN HIRE_DATE BY YEAR
Visualize BAR SELECT Participant_ID , COUNT(Participant_ID) FROM Participants GROUP BY Participant_ID ASC BIN Participant_ID BY WEEKDAY
Visualize BAR SELECT Hire_date, Job_ID, SALARY, DEPARTMENT_ID, Commission_PCT , COUNT(Job_ID) AS Count FROM employees WHERE FIRST_NAME LIKE ('D%') OR FIRST_NAME LIKE ('S%') OR Job_ID = 1 GROUP BY HIRE_DATE, JOB_ID, DEPARTMENT_ID , Commission_PCT HAVING COUNT(Job_ID) > 3 ORDER BY COUNT(Job_ID) ASC
Visualize BAR SELECT Position , count(*) FROM player GROUP BY position ORDER BY count(*) DESC
Visualize BAR SELECT LAST_NAME , SUM(SALARY) FROM employees GROUP BY LAST_NAME ORDER BY SUM(SALARY) ASC Visualize BAR SELECT EMPLOYEE_ID , SALARY FROM employees GROUP BY EMPLOYEE_ID ORDER BY SALARY ASC
Visualize BAR SELECT FIRST_NAME , SUM(MANAGER_ID) FROM employees WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' GROUP BY FIRST_NAME BIN (hire_date , 0 , 12 ) ORDER BY SUM(MANAGER_ID) DESC
Visualize BAR SELECT payment_method_code , count(*) FROM Customers GROUP BY payment_method_code ,  payment_method_code ASC
Visualize FUNNEL SELECT address_id , sum(other_details) FROM teachers GROUP BY other_details ORDER BY address_id ASC
SELECT DISTINCT HIRE_DATE FROM employees WHERE MATCH(FIRST_NAME, '^[A-Za-z]{3}$')) = 0 GROUP BY HIRE_DATE
Visualize BAR SELECT HIRE_DATE , SALARY FROM employees ORDER BY HIRE_DATE DESC
Visualize LINE SELECT employee_id , COALESCE(END_DATE , NULL) - COALESCE(START_DATE , NULL) AS DURATION , JOB_ID FROM employees, job_history WHERE EMPLOYEE_ID in  (select employee_id from employees where hire_date < '2002-06-21') GROUP BY employee_id HAVING count(1) > 10 ORDER BY employee_id
Visualize BAR SELECT Year(Date_Claim_Made) , Count(Claim_ID) FROM Claims GROUP BY Year(Date_Claim_Made) ORDER BY Year(Date_Claim_Made) ASC
Visualize BAR SELECT HIRE_DATE , SALARY FROM EMPLOYEES WHERE hire_date <= "2002-06-21" ORDER BY hire_date desc LIMIT 0,10
Visualize BAR SELECT date_address_to, monthly_rental FROM Student_Addresses GROUP BY date_address_to, monthly_rental ORDER BY date_address_to ASC
Select job_history.JOB_ID, SUM(employees.SALARY)  FROM employees JOIN job_history ON jobs.JOB_ID = job_history.JOB_ID  WHERE job_history.START_DATE < '2002-06-21' AND job_history.END_DATE > '2002-06-21' AND job_history.EMPLOYEE_ID = employees.EMPLOYEE_ID AND job_history.JOB_ID NOT IN (SELECT JOB_ID FROM
Visualize BAR SELECT hire_date , count(hire_date) as Hire_Date , manager_id , sum(manager_id) FROM employees GROUP BY hire_date, manager_id ORDER BY Hire_Date ASC
Visualize BAR SELECT JOB_ID , DEPARTMENT_ID FROM jobs LEFT JOIN employees JOIN departments ON MANAGER_ID = DEPARTMENT_ID JOIN job_history ON JOB_ID = job_history.JOB_ID WHERE Salary BETWEEN 8000 AND 12000 AND commission_pct IS NOT NULL AND department_id != 40 GROUP BY job_id ORDER BY JOB_ID ASC
Visualize BAR SELECT FIRST_NAME , SALARY FROM employees ORDER BY SALARY DESC
Visualize BAR SELECT Product_type_code , MAX(product_price) FROM products GROUP BY Product_type_code ORDER BY MAX(product_price) ASC
Visualize BAR SELECT HIRE_DATE , COUNT(*) FROM employees GROUP BY (WEEKDAY(HIRE_DATE))
Visualize BAR SELECT date_address_to , monthly_rental, BIN date_address_to BY WEEKDAY
Visualize BAR SELECT County_name, Population FROM county ORDER BY Population DESC
Visualize BAR SELECT State_Province , count(*) FROM locations GROUP BY State_Province ORDER BY count(*) ASC
1) Visualize LINE SELECT Employee_ID , END_DATE FROM job_history WHERE END_DATE < '2002-06-21'  ORDER BY Employee_ID DESC; 2) Visualize LINE SELECT Employee_ID , START_DATE FROM job_history WHERE END_DATE > '2002-06-21'  ORDER BY Employee_ID DESC;
-- 1. Get the employees who have D or S in their first name. SELECT EmployeeID FROM Employee WHERE FirstName LIKE 'D%' OR FirstName LIKE 'S%';  -- 2. Visualize the correlation between commission_pct and manager_id for those employees. SELECT MANAGER_ID, COMMISSION_PCT, ROLLUP (COMMISSION_PCT) AS rollup FROM (SELECT MANAGER_ID, COMMISSION_PCT, EmployeeID FROM Employee WHERE FirstName LIKE 'D%' OR First
Visualize SCALE SELECT EMPLOYEE_ID , DEPARTMENT_ID FROM employees WHERE SALARY BETWEEN 8000 AND 12000 AND commission IS NOT NULL AND department_id != 40 GROUP BY employee_id,department_id
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE JOB_ID NOT IN (SELECT JOB_ID FROM job_history WHERE JOB_ID IN (SELECT job_id FROM job_history WHERE JOB_ID IN (SELECT job_id FROM job_history WHERE JOB_ID IN (SELECT job_id FROM job_history WHERE JOB_ID IN (SELECT job_id FROM job_history WHERE JOB_ID IN (SELECT job_id FROM job_history WHERE JOB_ID IN (SELECT job_id FROM job_history WHERE J
Visualize BAR SELECT year , count(*) FROM matches GROUP BY year ORDER BY count(*) ASC
Visualize LINE SELECT LAST_NAME , FIRST_NAME , COMMISSION_PCT , HIRE_DATE FROM EMPLOYEE WHERE LAST_NAME LIKE 'S%' OR LAST_NAME LIKE 'D%' AND SALARY >= 60000 ORDER BY HIRE_DATE
Visualize PIE SELECT Investor , COUNT(Investor) FROM entrepreneur GROUP BY Investor
Visualize BAR SELECT  EMPLOYEE_ID, SUM(HIRE_DATE), SUM(DEPARTMENT_ID) , hire_date from employees where salary between 8000 and 12000 AND commission is not null AND department_id not in (40) group by hire_date,department_id  Visualize BAR SELECT  EMPLOYEE_ID, SUM(HIRE_DATE), SUM(MANAGER_ID) , hire_date from departments  where department_id in (
1) Visualize BAR SELECT EMPLOYEE_ID , COUNT(EMPLOYEE_ID) FROM employees GROUP BY EMPLOYEE_ID ORDER BY EMPLOYEE_ID ASC 2) Visualize BAR SELECT EMPLOYEE_ID , AVG(SALARY) FROM employees GROUP BY EMPLOYEE_ID ORDER BY EMPLOYEE_ID ASC 3) Visualize BAR SELECT EMPLOYEE_ID , JOB_ID , COUNT(*) FROM employees GROUP BY EMPLOYEE_ID, JOB_
Visualize BAR SELECT EMPLOYEE_ID , AVG(salary) FROM employees  WHERE HIRE_DATE >= '2002-06-21' AND HIRE_DATE < '2003-06-21' GROUP BY EMPLOYEE_ID ORDER BY AVG(salary) DESC BIN HIRE_DATE BY WEEKDAY
Visualize LINE SELECT EMPLOYEE_ID , HIRE_DATE FROM EMPLOYEES GROUP BY manager_id , department_id BIN hire_date BY MONTH
Visualize BAR SELECT EMPLOYEE_ID , SALARY , count(*) FROM employees WHERE salary between 8000 and 12000 AND commission is not null AND department_id != 40 GROUP BY employee_id ORDER BY salary DESC
Visualize BAR SELECT hire_date , COUNT(hire_date) FROM employees WHERE hire_date < 2002-06-21 GROUP BY hire_date , DEPARTMENT_ID
Visualize SCATTER SELECT SALARY , MANAGER_ID FROM employees WHERE FIRST_NAME LIKE ‘D’ OR FIRST_NAME LIKE ‘S’
visualize bar SELECT Payment_Method_Code , AVG(Amount_Payment) FROM Payments GROUP BY Payment_Method_Code visualize BAR SELECT Amount_Payment , Settlement_ID FROM Payments GROUP BY Amount_Payment
Visualize BAR SELECT Payment_Method_Code , Amount_Payment FROM Payments GROUP BY Payment_Method_Code ,  Order BY Payment_Method_Code DESC
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees GROUP BY JOB_ID
Visualize LINE SELECT DISTINCT EMPLOYEE_ID , DEPARTMENT_ID FROM EMPLOYEES WHERE EMPLOYEE_ID IN (SELECT EMPLOYEE_ID FROM EMPLOYEES WHERE SALARY IN (8000, 12000) AND COMMISSION_PCT IS NOT NULL AND MANAGER_ID <> 40 AND DEPARTMENT_ID NOT IN (SELECT DEPARTMENT_ID FROM EMPLOYEES WHERE DEPARTMENT_ID IN (1, 2,
Visualize BAR SELECT Founder , sum(Revenue) FROM Manufacturers GROUP BY Founder ORDER BY Founder ASC
Visualize BAR SELECT Name, COUNT(Name) FROM Manufacturers GROUP BY Name ORDER BY COUNT(Name) ASC
Visualize BAR SELECT other_details, bin(date_address_to, weekday) FROM Student_Addresses GROUP BY other_details
Visualize BAR SELECT hire_date, SUM(department_id) FROM employees WHERE hire_date < '2002-06-21' GROUP BY hire_date ORDER BY SUM(department_id) ASC
Visualize BAR SELECT SALARY , COUNT(SALARY) FROM employees GROUP BY EMAIL ORDER BY SALARY ASC BIN EMAIL BY MONTH
Visualize BAR SELECT HIRE_DATE , EMPLOYEE_ID FROM EMPLOYEES WHERE EMPLOYEE_ID>212 AND HIRE_DATE < CAST('2002-06-21' AS DATE) GROUP BY EMPLOYEE_ID
Visualize LINE SELECT EMPLOYEE_ID , avg(commission_pct) FROM employees WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' GROUP BY EMPLOYEE_ID ORDER BY avg(commission_pct) ASC
Visualize BAR SELECT Committee , COUNT(Delegate) FROM election GROUP BY Committee ORDER BY Committee ASC
Visualize BAR SELECT HIRE_DATE , SUM(department_id) FROM employees WHERE HIRE_DATE < "2002-06-21" GROUP BY hire_date ORDER BY SUM(department_id) DESC
Visualize BAR SELECT CITY , COUNT(LOCATION_ID) FROM locations GROUP BY CITY ORDER BY COUNT(LOCATION_ID) ASC
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees GROUP BY JOB_ID ORDER BY JOB_ID ASC  SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE HIRE_DATE <= '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID ASC
Visualize LINE SELECT job_history.SALARY , HIRE_DATE FROM job_history INNER JOIN employees ON job_history.EMPLOYEE_ID = employees.EMPLOYEE_ID WHERE department_id != 40 AND salary BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NOT NULL
Visualize SCATTER SELECT First_Name, Hire_Date FROM employees WHERE First_Name LIKE 'D%' OR First_Name LIKE 'S%' AND MANAGER_ID = '001' GROUP BY hire_date BIN (10,1)
Visualize BAR SELECT Price , Count(*) FROM products WHERE Price > 60 AND Price < 120 GROUP BY Name ,Manufacturer ORDER BY Count(*) ASC
Visualize LINE  SELECT Price, Name FROM Products WHERE Price >= 60 AND Price <= 120 ORDER BY Name
Visualize BAR SELECT SUM(Job_ID) , JOB_ID FROM employees WHERE (FIRST_NAME like "D%") OR (FIRST_NAME like "S%") GROUP BY JOB_ID ORDER BY JOB_ID ASC
Visualize BAR SELECT HIRE_DATE , COUNT(*) FROM employees GROUP BY HIRE_DATE  ORDER BY COUNT(*)
SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees  WHERE FIRST_NAME LIKE 'D' OR FIRST_NAME LIKE 'S' GROUP BY HIRE_DATE  ORDER BY COUNT(HIRE_DATE) DESC
Visualize BAR SELECT product_name , count(*) FROM products GROUP BY product_name ORDER BY product_name ASC
TABLE other_details GROUP BY other_details HAVING other_details<>'' BAR SELECT count(other_details) FROM student_addresses  BAR SELECT count(other_details) FROM assessment_notes  BAR SELECT count(other_details) FROM behavior_incident  BAR SELECT count(other_details) FROM detention  */
1. SQL: SELECT EMPLOYEE_ID, JOB_ID, MIN(SALARY), MAX(SALARY) FROM employee WHERE COMMISSION_PCT IS NULL OR JOB_ID IN (SELECT JOB_ID FROM job_history WHERE DEPARTMENT_ID = 40) AND SALARY IN (SELECT MIN(SALARY) FROM job_history WHERE SALARY > 8000) AND SALARY IN (SELECT MAX(SALARY) FROM job_history WHERE SALARY < 12000)
Visualize BAR SELECT LAST_NAME , AVG(HIRE_DATE) FROM EMPLOYEES WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' AND AVG(HIRE_DATE) GROUP BY LAST_NAME BIN HIRE_DATE BY hire_date
Visualize BAR SELECT HIRE_DATE , sum(salary) FROM employees GROUP BY HIRE_DATE ORDER BY HIRE_DATE DESC
Visualize BAR SELECT DISTINCT FIRST_NAME, LAST_NAME FROM employees GROUP BY FIRST_NAME, LAST_NAME HAVING FIRST_NAME LIKE 'D' OR FIRST_NAME LIKE 'S' HAVING (FIRST_NAME LIKE 'D' OR FIRST_NAME LIKE 'S') AND SALARY > 0 AND HIRE_DATE > TO_DATE(DATE_FORMAT(TO_CHAR(SYSDATE-1,'yy'),'YYYY-MM-DD')) AND HIRE_DATE < TO
Visualize LINE SELECT FIRST_NAME , COMMISSION_PCT FROM employees WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' ORDER BY COMMISSION_PCT
/* EMPLOYEE_ID HIRE_DATE PHONE_NUMBER JOB_ID MANAGER_ID DEPARTMENT_ID SALARY COMMISSION_PCT */ SELECT EMPLOYEE_ID , DEPARTMENT_ID FROM employees WHERE FIRST_NAME = 'D' OR FIRST_NAME = 'S' GROUP BY DEPARTMENT_ID, EMPLOYEE_ID ORDER BY DEPARTMENT_ID ASC HAVING COUNT(*) > 0   SELECT EMPLOYEE_ID
Visualize BAR SELECT Job_ID , SUM(JOB_ID) FROM job_history WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' GROUP BY JOB_ID ORDER BY Total(Job_ID) ASC
Visualize BAR SELECT County_name , COUNT(County_name) FROM county GROUP BY County_name
1.Visualize LINE SELECT EMPLOYEE_ID , COUNT(Job_ID) FROM employees GROUP BY EMPLOYEE_ID AND DEPARTMENT_ID AND MANAGER_ID ORDER BY HIRE_DATE DESC 2.Visualize LINE SELECT EMPLOYEE_ID , Job_ID FROM job_history GROUP BY EMPLOYEE_ID ORDER BY HIRE_DATE DESC
Visualize BAR SELECT FIRST_NAME, HIRE_DATE , COUNT(HIRE_DATE) FROM employees GROUP BY FIRST_NAME, HIRE_DATE ORDER BY COUNT(HIRE_DATE) ASC
Visualize BAR SELECT Code , Count(*) FROM products GROUP BY Code
Visualize SCATTER SELECT FIRST_NAME , SALARY FROM employee WHERE FIRST_NAME LIKE ‘D%’ OR FIRST_NAME LIKE ‘S%’ GROUP BY FIRST_NAME ORDER BY SALARY DESC
Visualize BAR SELECT Participant_ID , Participant_Type_Code , Participant_Details FROM Participants ORDER BY Participant_ID DESC
Visualize BAR SELECT Code , max(Revenue) FROM Manufacturer GROUP BY Name
Visualize BAR SELECT EMPLOYEE_ID , (sum(salary) / job_id) FROM employees GROUP BY JOB_ID HAVING (((salary > 8000) AND (commission_pct is not null)) OR (job_id = 40) AND (salary < 12000)) ORDER BY (sum(salary) / job_id) ASC
Visualize BAR SELECT Monthly_rental , COUNT(*) FROM Student_Addresses GROUP BY Monthly_rental ORDER BY Monthly_rental DESC
Visualize BAR SELECT product_type_code ,min(product_price) FROM Products GROUP BY product_type_code ORDER BY product_type_code ASC
Visualize TABLE SELECT EMPLOYEE_ID , SUM(DEPARTMENT_ID) OVER (PARTITION BY JOB_ID ) FROM EMPLOYEES GROUP BY JOB_ID ORDER BY SUM(DEPARTMENT_ID) OVER (PARTITION BY JOB_ID ) ASC
Visualize BAR SELECT DEPARTMENT_ID , avg(JOB_ID) FROM employees WHERE EMPLOYEE_ID IN (SELECT JOB_HISTORY.EMPLOYEE_ID FROM JOB_HISTORY INNER JOIN employees ON JOB_HISTORY.EMPLOYEE_ID = employees.EMPLOYEE_ID AND JOB_HISTORY.EMPLOYEE_ID = job_history.EMPLOYEE_ID WHERE EMPLOYEE_ID IN (SELECT JOB_HISTORY.EMP
Query: SELECT EMPLOYEE_ID , SUM(SALARY) FROM employee GROUP BY EMPLOYEE_ID , JOB_ID ORDER BY SUM(SALARY) DESC BIN SUM(SALARY) BY YEAR  Query: SELECT MIN(JOB_ID) FROM job_history GROUP BY EMPLOYEE_ID , DEPARTMENT_ID HAVING EMPLOYEE_ID IN (SELECT EMPLOYEE_ID FROM job_history WHERE SUM(SALARY) BETWEEN 8000 AND
SELECT *  FROM ( 	(SELECT STUDENT_ID , ADDRESS_ID, COUNT(*) AS 'COUNT' 	FROM Student_Addresses 	GROUP BY STUDENT_ID, ADDRESS_ID) 	UNION ALL  	(SELECT STUDENT_ID , ADDRESS_ID, COUNT(*) AS 'COUNT' 	FROM Students_in_Detention 	GROUP BY STUDENT_ID, ADDRESS_ID) 	UNION ALL  	(SELECT STUDENT_ID , ADDRESS_ID, COUNT(*) AS 'COUNT
Visualize BAR SELECT EMPLOYEE_ID, TOTAL_REPORTING_MANAGERS , SUM(HIRE_DATE) FROM employees WHERE salary >=8000 AND COMMISSION_PCT IS NOT NULL AND JOB_ID NOT IN (40) GROUP BY EMPLOYEE_ID  HIRE_DATE BY HIRE_DATE BIN HIRE_DATE BY WEEKDAY
Visualize LINE SELECT hire_date , COUNT(hire_date) FROM employees GROUP BY hire_date, DEPARTMENT_ID ORDER BY hire_date ASC BIN hire_date BY YEAR
Visualize BAR SELECT Amount_Payment , AVG(Payment_Method_Code) FROM Payments  ORDER BY AVG(Payment_Method_Code) ASC

Visualize LINE SELECT Date_Claim_Made , Amount_Claimed , COUNT(Amount_Claimed) AS Claim_Count FROM Claims GROUP BY Date_Claim_Made ORDER BY Date_Claim_Made
Visualize HISTOGRAM SELECT AVG(SALARY) , EMPLOYEE_ID FROM employees WHERE HIRE_DATE <= "2002-06-21" GROUP BY EMPLOYEE_ID ORDER BY AVG(SALARY) ASC
Visualize BAR SELECT Investor, count(*) FROM entrepreneur GROUP BY Investor ORDER BY Investor
Visualize CATEGORY_BAR SELECT product_type_code , count(*) / total FROM Products , Product_Suppliers  WHERE product_type_code = 'Gift' GROUP BY product_type_code ORDER BY count(*) / total DESC
Visualize BAR SELECT Price , NAME_FROM Products WHERE Products.Manufacturer.ID = Manufacturers.Code GROUP BY Price , NAME_FROM Products ORDER BY Price DESC
Visualize BAR SELECT EMAIL , SALARY FROM employees GROUP BY EMAIL ORDER BY SALARY DESC
Visualize BAR SELECT Election_ID , Counties_Represented , AVG(Delegate) FROM election GROUP BY Committee
Visualize BAR SELECT hire_date , COUNT(manager_id) FROM employees GROUP BY hire_date BIN hire_date BY WEEKDAY
Visualize HISTOGRAM SELECT FIRST_NAME , COUNT(*) FROM employees  GROUP BY FIRST_NAME ORDER BY COUNT(*) ASC
Visualize BAR SELECT Carrier , Count(*) FROM phone GROUP BY Carrier ORDER BY Count(*) ASC
Visualize BAR SELECT (CASE   WHEN dept_num is null THEN 0   WHEN dept_num = 40 THEN 40   ELSE dept_num END) , COUNT(*) FROM employee GROUP BY (CASE   WHEN dept_num is null THEN 0   WHEN dept_num = 40 THEN 40   ELSE dept_num END) ORDER BY (CASE   WHEN dept_num is null THEN 0   WHEN dept_num = 40 THEN 40   ELSE de

Visualize BAR SELECT county_name , Population , count(*) FROM county GROUP BY county_name , Population ORDER BY Population DESC
Visualize BAR SELECT manufacturer , price , count(distinct name) FROM products WHERE price between 60 and 120 GROUP BY manufacturer , price ASC

Visualize GROUP BAR BAR SELECT product_price , product_type_code FROM Products GROUP BY product_type_code , product_price ORDER BY product_type_code
Visualize PIE SELECT customer_address , COUNT(customer_address) FROM customers WHERE customer_address = "TN" GROUP BY customer_address ORDER BY customer_address
1. Visualize BAR SELECT SALARY , MANAGER_ID FROM employees WHERE SALARY BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NULL AND DEPARTMENT_ID != 40 2. Visualize BAR SELECT EMPLOYEE_ID , HIRE_DATE FROM employees WHERE SALARY BETWEEN 8000 AND 12000 AND COMMISSION_PCT IS NULL AND DEPARTMENT_ID != 40
Visualize BAR SELECT  FIRST_NAME , SUM(EMPLOYEE_ID) FROM employees  BIN HIRE_DATE BY (MONTH,YEAR) GROUP BY (MONTH,YEAR) ORDER BY (MONTH,YEAR) ASC
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE HIRE_DATE < '2002-06-21' GROUP BY HIRE_DATE DISTINCT ASC BY weekday
Visualize HISTOGRAM SELECT SALARY , HIRE_DATE FROM employees GROUP BY SALARY ORDER BY HIRE_DATE ASC
Visualize BAR SELECT hire_date , COUNT(employee_id) FROM employees WHERE hire_date < '2002-06-21' AND Is_full_time=0 ORDER BY COUNT(employee_id) ASC
Visualize HISTOGRAM SELECT Participant_Type_Code , count(*) FROM Participants GROUP BY Participant_Type_Code ORDER BY Participant_Type_Code ASC
Visualize BAR SELECT Carrier , count(*) FROM phone GROUP BY Carrier
Visualize BAR SELECT EMPLOYEE_ID , SUM(JOB_ID) FROM job_history WHERE JOB_ID BETWEEN 1 and 99 and FIRST_NAME != 'John' and DEPARTMENT_ID = 2 GROUP BY EMPLOYEE_ID Visualize BAR SELECT EMPLOYEE_ID , AVG(salary) FROM job_history WHERE JOB_ID BETWEEN 1 and 99 and FIRST_NAME != 'John' and DEPARTMENT_ID = 2 GROUP BY E
Visualize BAR SELECT job_history.start_date , SUM(job_history.department_id) FROM job_history WHERE (DEPARTMENT_ID <> 40 OR hire_date BETWEEN 08000 AND 12000) AND hire_date != '0000-00-00' GROUP BY job_history.start_date ORDER BY job_history.start_date DESC BIN job_history.start_date BY WEEKDAY
Visualize GROUP BAR SELECT JOB_ID , COUNT(*) FROM employees WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' GROUP BY JOB_ID ORDER BY COUNT(*) ASC
Visualize BAR SELECT MANAGER_ID , AVG(HIRE_DATE) FROM employees WHERE (SALARY BETWEEN 8000 AND 12000) and (COMMISSION_PCT IS NOT NULL OR DEPARTMENT_ID != 40) GROUP BY MANAGER_ID , HIRE_DATE ORDER BY AVG(HIRE_DATE) ASC
Visualize BAR SELECT Headquarter , Revenue FROM Manufacturers ORDER BY Revenue DESC

CREATE TABLE student_student_id_rental_data AS  SELECT student_id, other_details , monthly_rental FROM student_addresses, students JOIN detentions_id ON student_id = student_id JOIN detentions_id_students_in_detention ON student_id = student_id WHERE other_details = 'Full time'  CREATE TABLE teacher_teacher_id_rental_data AS SELECT teacher_id, other_details , monthly_rental FROM teacher_addresses, teachers JOIN
Visualize BAR SELECT payment_method_code , COUNT(payment_method_code) FROM Customers GROUP BY payment_method_code ORDER BY COUNT(*) DESC
Visualize SCATTER SELECT Salary , commission_pct FROM employees WHERE SALARY BETWEEN 8000 AND 12000 AND DEPARTMENT_ID NOT IN (40) AND MANAGER_ID NOT IN (40) GROUP BY Salary ORDER BY commission_pct ASC , Visualize SCATTER SELECT Salary , commission_pct FROM employees WHERE SALARY BETWEEN 8000 AND 12000 AND DEPARTMENT_ID NOT IN (40) AND MANAGER_ID NOT IN
Table jobs_search: SELECT * FROM jobs GROUP BY JOB_ID Table employees_search: SELECT * FROM employees GROUP BY EMPLOYEE_ID Table jobs_employee: SELECT * FROM job_history Table departments_search: SELECT * FROM departments GROUP BY DEPARTMENT_ID Table jobs_department: SELECT * FROM jobs WHERE JOB_ID = DEPARTMENT_ID Table employees_search_department: SELECT * FROM employees WHERE DEPARTMENT_ID = DEPARTMENT_ID Table employees_filter: SELECT * FROM employees WHERE EMPLOY
Visualize BAR SELECT EMPLOYEE_ID , hire_date , COUNT(*) FROM employees GROUP BY hire_date ORDER BY COUNT(*)
Visualize BAR SELECT job_id, SUM(EMPLOYEE_ID) FROM employees WHERE HIRE_DATE < '2002-06-21' GROUP BY job_id ORDER BY job_id
Visualize BAR SELECT FIRST_NAME,Hire_Date , SUM(SALARY) FROM employees WHERE FIRST_NAME like 'D%' or FIRST_NAME like 'S%' GROUP BY FIRST_NAME, Hire_Date ORDER BY Hire_Date ASC BIN Hire_Date BY WEEKDAY
Visualize BAR SELECT match_num , count(*) FROM matches GROUP BY match_num ORDER BY match_num ASC
Visualize POINT SELECT order_status_code , order_id , COUNT(order_status_code) FROM customer_orders GROUP BY order_status_code ORDER BY order_status_code ASC
Visualize BAR SELECT job_id , COUNT(employee_id) FROM employees WHERE first_name LIKE 'D%') OR job_id IN (SELECT JOB_ID FROM job_history WHERE employee_id IN (SELECT employee_id FROM employees WHERE first_name LIKE 'D%' OR JOB_ID IN (SELECT JOB_ID FROM job_history WHERE employee_id IN (SELECT employee_id FROM employees WHERE first_name LIKE 'D%'))) ) GROUP BY job_id ORDER BY COUNT(employee_id) ASC BIN job_id BY YEAR
Visualize BAR SELECT HIRE_DATE , avg(MANAGER_ID) FROM employees WHERE HIRE_DATE < '2002-06-21' GROUP BY HIRE_DATE BIN HIRE_DATE BY WEEKDAY
Visualize PIE SELECT product_type_code , avg(product_price) FROM products GROUP BY product_type_code
Visualize BAR SELECT Revenue , COUNT(Revenue) FROM Manufacturers GROUP BY Revenue ORDER BY Revenue
Visualize BAR SELECT * FROM employees WHERE MANAGER_ID > 0 AND HIRE_DATE < "2002-06-21" GROUP BY HIRE_DATE BIN (YEAR(HIRE_DATE), MONTH(HIRE_DATE)) ORDER BY HIRE_DATE ASC, MANAGER_ID ASC
Visualize TABLE JOIN SELECT EMPLOYEE_ID , MANAGER_ID FROM EMPLOYEES E JOIN DEPARTMENTS D ON E.MANAGER_ID = D.DEPARTMENT_ID WHERE 8000 <= SALARY <= 12000 AND 1 = 1 AND (COMMISSION_PCT IS NOT NULL OR DEPARTMENT_ID <> 40)
Visualize BAR SELECT EMPLOYEE_ID , JOB_ID , SALARY , COMMISSION_PCT , MANAGER_ID , DEPARTMENT_ID , COUNT(*) , HIRE_DATE FROM employees GROUP BY EMPLOYEE_ID , JOB_ID , SALARY , COMMISSION_PCT , MANAGER_ID , DEPARTMENT_ID ORDER BY HIRE_DATE DESC
Visualize BAR SELECT department_id , average(hire_date) FROM employees WHERE MANAGER_ID = NULL AND HIRE_DATE <= '2002-06-21' GROUP BY department_id , AVG(hire_date) BY MONTH ORDER BY 2 ASC
Visualize PIE SELECT Name , Price FROM Products  WHERE Price between 60 and 120 GROUP BY Name
SELECT Participant_ID , COUNT(*) FROM Participants_in_Events GROUP BY Participant_ID ORDER BY COUNT(*) ASC
Database schema:   * Table Participants, columns = [*,Participant_ID, Participant_Type_Code, Participant_Details]  * Table Participants_in_Events, columns = [*,Event_ID, Participant_ID]  * Visualize BAR SELECT Participant_ID , Participant_Details FROM Participants GROUP BY Participant_ID ORDER BY Participant_ID ASC
/* Visualize BAR SELECT EMPLOYEE_ID , salary , COUNT(*) FROM employees GROUP BY EMPLOYEE_ID ORDER BY salary DESC */ /* Visualize BAR SELECT hire_date , EMPLOYEE_ID , COUNT(*) FROM employees GROUP BY hire_date , EMPLOYEE_ID */
Visualize BAR SELECT Date_Claim_Made , Amount_Claimed FROM Claims GROUP BY Date_Claim_Made BIN(Date_Claim_Made , 1) HAVING date_claim_made <= date_claim_settled
Visualize LINE SELECT Price , Code FROM Products GROUP BY Manufacturer HAVING Revenue < 20000000 ORDER BY Price ASC
Visualize BAR SELECT DATE_FORMAT(hire_date,"%w"), AVG(EMPLOYEE_ID) FROM employees GROUP BY DATE_FORMAT(hire_date,"%w") ORDER BY DATE_FORMAT(hire_date,"%w")
1st line: Visualize BAR SELECT EMPLOYEE_ID , count(*) FROM employees GROUP BY FIRST_NAME , LAST_NAME , EMAIL , PHONE_NUMBER , SALARY , COMMISSION_PCT , MANAGER_ID , DEPARTMENT_ID , JOB_ID , HIRE_DATE , END_DATE , JOB_ID , DEPARTMENT_ID ORDER BY count(*) ASC 2nd line: Visualize SQUARE SELECT employee_id,avg(department_id) FROM job_history where
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM jobs GROUP BY JOB_ID HAVING FIRST_NAME LIKE 'D%' or FIRST_NAME LIKE 'S%'
Visualize BAR SELECT Price , Name , Code FROM Products WHERE Price between 60 and 120 GROUP BY Price , Name , Code  ORDER BY Price DESC
Visualize BAR SELECT Date_Claim_Settled , count(*) FROM Settlements GROUP BY Date_Claim_Settled , WEEKDAY BIN Date_Claim_Settled BY WEEKDAY ORDER BY Y
Visualize BAR SELECT product_type_code , AVERAGE(product_price) FROM Products GROUP BY product_type_code ORDER BY AVERAGE(product_price) DESC
1) First, I’ll summarize job_history by department_id and order it by hire_date in desc. Then, I’ll do a group by (department_id) in order to see how the commission_pct changes over time. I’ll use the aggregator avg on commission_pct to summarize and I’ll compute the difference between hire_date and end_date. I’ll select only those departments where commission_pct is within the range and the department number is not 40.  Second, I’ll summarize departments
Visualize BAR SELECT Price , Name FROM Products BIN Price by Price , WEEKDAY
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees GROUP BY JOB_ID ORDER BY AVG(EMPLOYEE_ID) ASC
Visualize PIE SELECT customer_address , COUNT(customer_address) FROM Customers GROUP BY customer_address HAVING SUBSTRING(customer_address, 1, 1) = 'TN'
Visualize BAR SELECT Memory_in_G, Price FROM Phone GROUP BY Memory_in_G ORDER BY Memory_in_G DESC
Visualize BAR SELECT DISTINCT FIRST_NAME , SUM(MANAGER_ID) FROM employees GROUP BY FIRST_NAME
Visualize BAR SELECT LAST_NAME , COUNT(FIRST_NAME) FROM employees WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' GROUP BY LAST_NAME , HIRE_DATE BY SECONDS , HIRE_DATE BIN HIRE_DATE BY DAY
Visualize BAR SELECT JOB_ID , Average(SALARY) FROM jobs WHERE FIRST_NAME LIKE "D" OR FIRST_NAME LIKE "S" GROUP BY JOB_ID ORDER BY Average(SALARY) ASC

Visualize LINE SELECT Payment_Method_Code, Date_Payment_Made FROM Payments GROUP BY Date_Payment_Made, Payment_Method_Code
Visualize BAR SELECT * FROM Products GROUP BY Manufacturer ORDER BY Revenue DESC
Visualize BAR SELECT last_name , salary FROM employee GROUP BY last_name ORDER BY salary
```      visualize BAR SELECT Participant_Type_Code , count(Participant_Type_Code) FROM Participants GROUP BY Participant_Type_Code       visualize BAR SELECT Participant_ID , count(Participant_ID) FROM Participants_in_Events GROUP BY Participant_ID ```
Visualize BAR SELECT product_type_code , AVG(product_price) , Count(*) , product_suppliers.product_id FROM products GROUP BY product_type_code , AVG(product_price) DESC BIN product_type_code BY WEEKDAY , Count(*) DESC  GROUP BY product_suppliers.product_id
1) Visualize TREND SELECT EMPLOYEE_ID FROM employees WHERE FIRST_NAME LIKE 'D%' OR FIRST_NAME LIKE 'S%' AND MANAGER_ID IN (SELECT MANAGER_ID FROM departments) AND DEPARTMENT_ID IN (SELECT DEPARTMENT_ID FROM departments) AND JOB_ID IN (SELECT JOB_ID FROM job_history) GROUP BY EMPLOYEE_ID ORDER BY EMPLOYEE_ID ASC 2) Visualize BAR SELECT EMPLOYEE_ID , DEPART
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees  WHERE  (SALARY BETWEEN 8000 AND 12000 OR COMMISSION_PCT IS NULL OR DEPARTMENT_ID != 40)  AND (JOB_HISTORY IS NULL OR JOB_HISTORY.END_DATE IS NULL) GROUP BY HIRE_DATE BIN HIRE_DATE BY WEEKDAY
Visualize BAR SELECT hire_date , COUNT(*) FROM employees GROUP BY hire_date BIN hire_date BY MONTH
Visualize BAR SELECT MANAGER_ID , count(*) FROM employees GROUP BY manager_id ORDER BY count(*) DESC LIMIT 10
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE SALARY BETWEEN 8000 AND 12000 AND COMMISSION IS NULL AND DEPARTMENT_ID != 40 GROUP BY JOB_ID ORDER BY JOB_ID ASC
Visualize BAR SELECT Carrier , COUNT(*) FROM phone GROUP BY Carrier ORDER BY Carrier DESC
Visualize BAR SELECT Department_ID , HIRE_DATE , COUNT(*) FROM employees WHERE HIRE_DATE < '2002-06-21' GROUP BY DEPARTMENT_ID , HIRE_DATE ORDER BY HIRE_DATE ASC
Visualize BAR SELECT Participant_Type_Code , COUNT(Participant_Type_Code) FROM Participants GROUP BY Participant_Type_Code ORDER BY COUNT(Participant_Type_Code) DESC
Visualize XY-Line SELECT employee_id , commission_pct FROM employees WHERE hire_date < '2002-06-21' GROUP BY employee_id, manager_id, commission_pct ORDER BY employee_id
Visualize BAR SELECT hire_date , count(*) FROM employee GROUP BY trunc(hire_date)
Visualize BAR SELECT HIRE_DATE, count(*) FROM employees WHERE HIRE_DATE <= '2002-06-21' GROUP BY HIRE_DATE ORDER BY HIRE_DATE DESC
Visualize BAR SELECT Date_Payment_Made , count(*) FROM Payments GROUP BY Date_Payment_Made
Visualize BAR SELECT FIRST_NAME , COUNT(*) FROM employees GROUP BY FIRST_NAME ,(WEEKDAY(HIRE_DATE)) DISTINCT
Visualize BAR SELECT other_details , DATE_ADDRESS_FROM FROM Student_Addresses WHERE other_details <> 'NeedAddressChange' GROUP BY other_details BIN DATE_ADDRESS_FROM BY WEEKDAY ORDER BY DATE_ADDRESS_FROM ASC
Visualize BAR SELECT EMPLOYEE_ID, COUNT(EMPLOYEE_ID) AS CNT, AVG(MANAGER_ID) AS AVG , hire_date FROM employees GROUP BY EMPLOYEE_ID, hire_date
Visualize BAR SELECT COUNT(COUNTRY_ID), COUNT(COUNTRY_NAME) FROM countries GROUP BY REGION_ID
Visualize PIE SELECT LAST_NAME , SALARY FROM employees WHERE FIRST_NAME LIKE 'M%'
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE FIRST_NAME = "D" OR FIRST_NAME = "S" GROUP BY HIRE_DATE BIN HIRE_DATE BY WEEKDAY ORDER BY COUNT(HIRE_DATE) DESC
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees GROUP BY JOB_ID ORDER BY AVG(MANAGER_ID) DESC
Visualize BAR SELECT Position , avg(Draft_Pick_Number) FROM player GROUP BY Position
1. Visualize BAR SELECT DEPARTMENT_ID , AVERAGE(START_DATE) FROM jobs BIN DEPARTMENT_ID BY WEEKDAY, 2. Visualize BAR SELECT JOB_ID , AVERAGE(START_DATE) FROM job_history BIN JOB_ID BY WEEKDAY
Visualize BAR SELECT e.EMPLOYEE_ID , j.JOB_ID FROM employees AS e INNER JOIN job_history AS j ON e.EMPLOYEE_ID = j.EMPLOYEE_ID GROUP BY e.EMPLOYEE_ID ORDER BY e.EMPLOYEE_ID DESC, j.JOB_ID
Visualize LINE SELECT EMPLOYEE_ID , SALARY FROM employees WHERE COMMISSION_PCT IS NOT NULL AND JOB_ID IS NOT 40 AND DEPARTMENT_ID <> 40  BIN HIRE_DATE BY WEEKDAY AND BY MONTH
Visualize BAR SELECT job_id , SUM(EMPLOYEE_ID) FROM jobs JOIN employees ON job_id = JOB_ID JOIN job_history ON employee_id = EMPLOYEE_ID WHERE salary between 8000 and 12000 group by job_id HAVING job_id IN (select distinct job_id from job_history where salary between 8000 and 12000 and department_id !=40 ) ORDER BY SUM(EMPLOYEE_ID) ASC
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM EMPLOYEES WHERE salary BETWEEN 8000 AND 12000 AND department_id = NOT NULL BIN HIRE_DATE BY WEEKDAY GROUP BY EMPLOYEE_ID AND HIRE_DATE
Visualize BAR SELECT Position , count(*) FROM match_season GROUP BY Position
Visualize BAR SELECT [EMPLOYEE_ID, HIRE_DATE, COMMISSION_PCT], HIRE_DATE FROM employees
1. Visualize BAR SELECT department_id , count(*) FROM job_history WHERE first_name LIKE "D%" OR first_name LIKE "S%" GROUP BY department_id ORDER BY COUNT(*) ASC
Visualize BAR SELECT employee_id , count(*) FROM employees GROUP BY employee_id
Visualize BAR SELECT FIRST_NAME , SUM(HIRE_DATE) FROM employees WHERE FIRST_NAME LIKE "D%" OR FIRST_NAME LIKE "S%" GROUP BY FIRST_NAME BIN HIRE_DATE BY WEEK ORDER BY SUM(HIRE_DATE) DESC
Visualize bar SELECT FIRST_NAME , DEPARTMENT_ID FROM employee JOIN job_history ON employee.EMPLOYEE_ID=job_history.EMPLOYEE_ID  GROUP BY FIRST_NAME ORDER BY FIRST_NAME