nl_queries:
Visualize a line chart about the change of the sum of Shop_ID over Start_from bin start_from by time .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Shop_ID) FROM hiring BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Plot how many date to by grouped by date to as a bar graph
database schema:
Table Project_Staff, columns = [*,staff_id, project_id, role_code, date_from, date_to, other_details]
target dvq:
Visualize BAR SELECT date_to , COUNT(date_to) FROM Project_Staff BIN date_to BY WEEKDAY
****************************************************************************************************
nl_queries:
What are dates of birth of all the guests whose gender is "Male" , and count them by a bar chart , sort in ascending by the total number please .
database schema:
Table Guests, columns = [*,guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth]
target dvq:
Visualize BAR SELECT date_of_birth , COUNT(date_of_birth) FROM Guests WHERE gender_code = "Male"  ORDER BY COUNT(date_of_birth) ASC BIN date_of_birth BY WEEKDAY
****************************************************************************************************
nl_queries:
For those dates that have the 5 highest cloud cover rates , please bin the date into weekdays interval and compute their total cloud cover , and show total number in descending order .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , SUM(cloud_cover) FROM weather  ORDER BY SUM(cloud_cover) DESC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time , and order by the y-axis in desc .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(DEPARTMENT_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of department_id over the hire_date bin hire_date by weekday by a bar chart , sort by the the average of department id in desc .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(DEPARTMENT_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Give me the comparison about the amount of Start_from over the Start_from , and group by attribute Is_full_time and bin start_from by weekday by a bar chart , and show in asc by the Y .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , COUNT(Start_from) FROM hiring GROUP BY Is_full_time ORDER BY COUNT(Start_from) ASC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For the sum of Employee_ID , Start_from , visualize the trend .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Employee_ID) FROM hiring GROUP BY Is_full_time BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Bin all date of transactions into the YEAR interval , and sum the share count of each bin Return the result using a line chart , sort by the X from low to high .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , SUM(share_count) FROM TRANSACTIONS  ORDER BY date_of_transaction ASC BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of manager_id over the hire_date bin hire_date by time by a bar chart , and could you display y axis in ascending order ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(MANAGER_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the average of salary bin hire_date by weekday , and rank mean salary from low to high order please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Give me the trend about the average of Shop_ID over Start_from , and group by attribute Is_full_time and bin start_from by time , and list from low to high by the x-axis .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from ASC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Visualize the general trend of the average of shop id over the start from , could you sort in ascending by the X ?
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Shop_ID) FROM hiring  ORDER BY Start_from ASC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Draw a bar chart about the distribution of Start_from and the sum of Employee_ID bin start_from by weekday , show total number in descending order .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , SUM(Employee_ID) FROM hiring  ORDER BY SUM(Employee_ID) DESC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
The trend about the the number of start from of different Is_full_time over the start from
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , COUNT(Start_from) FROM hiring GROUP BY Is_full_time BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Show me about the change of the sum of Employee_ID over Start_from bin start_from by time in a line chart .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Employee_ID) FROM hiring BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Show the number of year of the maximum price and score of wines in a bar chart , and bin the year into the weekday interval , and could you order y axis from high to low order ?
database schema:
Table wine, columns = [*,No, Grape, Winery, Appelation, State, Name, Year, Price, Score, Cases, Drink]
target dvq:
Visualize BAR SELECT Year , COUNT(Year) FROM WINE  ORDER BY COUNT(Year) DESC BIN Year BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by time , and could you list by the y axis in descending please ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(MANAGER_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of hire_date and the average of department_id bin hire_date by weekday in a bar chart , I want to show in desc by the y-axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(DEPARTMENT_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the average of department_id over the hire_date bin hire_date by weekday , and display Y-axis in desc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(DEPARTMENT_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of employee_id over the hire_date bin hire_date by weekday by a bar chart , show by the Y from high to low .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(EMPLOYEE_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Bin all date of transactions into the YEAR interval , and sum the share count of each bin . What is the trend ?
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , SUM(share_count) FROM TRANSACTIONS BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
What are the payment date of the payment with amount paid higher than 300 or with payment type is 'Check , and count them by a bar chart
database schema:
Table Payments, columns = [*,payment_id, booking_id, customer_id, payment_type_code, amount_paid_in_full_yn, payment_date, amount_due, amount_paid]
target dvq:
Visualize BAR SELECT payment_date , COUNT(payment_date) FROM payments WHERE amount_paid > 300 OR payment_type_code = 'Check' BIN payment_date BY MONTH
****************************************************************************************************
nl_queries:
A bar chart for what are the number of the dates with a maximum temperature higher than 85 ? , order y axis from low to high order please .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) ASC BIN date BY YEAR
****************************************************************************************************
nl_queries:
Create a bar chart showing how many hire date across hire date , and I want to list by the y-axis in asc .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Draw a bar chart of open date versus the number of open date , and order from high to low by the total number .
database schema:
Table church, columns = [*,Church_ID, Name, Organized_by, Open_Date, Continuation_of]
target dvq:
Visualize BAR SELECT Open_Date , COUNT(Open_Date) FROM church  ORDER BY COUNT(Open_Date) DESC BIN Open_Date BY WEEKDAY
****************************************************************************************************
nl_queries:
Draw a bar chart of date versus how many date , and I want to sort Y in asc order .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather  ORDER BY COUNT(date) ASC BIN date BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the average of manager_id bin hire_date by time in a bar chart , order from high to low by the Y-axis .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(MANAGER_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Bar chart x axis date departed y axis the number of date departed
database schema:
Table Dogs, columns = [*,dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed]
target dvq:
Visualize BAR SELECT date_departed , COUNT(date_departed) FROM Dogs BIN date_departed BY DAY
****************************************************************************************************
nl_queries:
Plot how many date to by grouped by date to as a bar graph , and list Y from low to high order please .
database schema:
Table Project_Staff, columns = [*,staff_id, project_id, role_code, date_from, date_to, other_details]
target dvq:
Visualize BAR SELECT date_to , COUNT(date_to) FROM Project_Staff ORDER BY COUNT(date_to) ASC BIN date_to BY WEEKDAY
****************************************************************************************************
nl_queries:
Visualize a bar chart to show the dates that have the top 3 days with the largest max gust speeds at the day of the week level .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather  ORDER BY max_gust_speed_mph DESC LIMIT 3 BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
Show the number of documents in different starting date . Bin starting date by year interval and group by location code with a group line chart .
database schema:
Table Ref_Locations, columns = [*,Location_Code, Location_Name, Location_Description]
Table Document_Locations, columns = [*,Document_ID, Location_Code, Date_in_Location_From, Date_in_Locaton_To]
target dvq:
Visualize LINE SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations GROUP BY Location_Code BIN Date_in_Location_From BY YEAR
****************************************************************************************************
nl_queries:
Visualize a bar chart about the distribution of Start_from and the average of Employee_ID bin start_from by weekday , and show by the Y from low to high .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , AVG(Employee_ID) FROM hiring  ORDER BY AVG(Employee_ID) ASC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For the days with the 3 largest maximum gust speeds , calculate the total mean humidity of each month (bin date into month level) .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , SUM(mean_humidity) FROM weather  ORDER BY max_gust_speed_mph DESC LIMIT 3 BIN date BY MONTH
****************************************************************************************************
nl_queries:
How many completion students in each month ? Return a bar chart binning date of completion by month interval , and order in descending by the y axis .
database schema:
Table Student_Course_Enrolment, columns = [*,registration_id, student_id, course_id, date_of_enrolment, date_of_completion]
target dvq:
Visualize BAR SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment  ORDER BY COUNT(date_of_completion) DESC BIN date_of_completion BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the sum of salary bin hire_date by time , could you sort from high to low by the Y please ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by time , sort Y-axis from high to low order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(MANAGER_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Bar chart x axis start from y axis the number of start from
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , COUNT(Start_from) FROM hiring BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the sum of salary over the hire_date bin hire_date by weekday by a bar chart , sort from low to high by the sum salary .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Show the number of documents in different ending date and bin ending date by year interval with a line chart , and list by the x axis in asc .
database schema:
Table Document_Locations, columns = [*,Document_ID, Location_Code, Date_in_Location_From, Date_in_Locaton_To]
target dvq:
Visualize LINE SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations  ORDER BY Date_in_Locaton_To ASC BIN Date_in_Locaton_To BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find hire_date and the average of manager_id bin hire_date by time , and visualize them by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
What are the number of the different years in which there were cars produced that weighed less than 4000 and also cars that weighted more than 3000 ? , sort by the y-axis in ascending .
database schema:
Table cars_data, columns = [*,Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year]
target dvq:
Visualize BAR SELECT Year , COUNT(Year) FROM cars_data where weight between 3000 and 4000  ORDER BY COUNT(Year) ASC BIN Year BY WEEKDAY
****************************************************************************************************
nl_queries:
Show the average of cloud cover from each date
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , AVG(cloud_cover) FROM weather BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
What are dates of birth of all the guests whose gender is "Male" , and count them by a line chart , list date_of_birth in asc order .
database schema:
Table Guests, columns = [*,guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth]
target dvq:
Visualize LINE SELECT date_of_birth , COUNT(date_of_birth) FROM Guests WHERE gender_code = "Male"  ORDER BY date_of_birth ASC BIN date_of_birth BY YEAR
****************************************************************************************************
nl_queries:
How many parties of the time they took office , binning the took office into Year interval , and then split by the minister's name .
database schema:
Table party, columns = [*,Party_ID, Minister, Took_office, Left_office, Region_ID, Party_name]
target dvq:
Visualize BAR SELECT Took_office , COUNT(Took_office) FROM party GROUP BY Minister BIN Took_office BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by weekday , order by the y-axis in descending .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(EMPLOYEE_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
List the number of games in each season with a line chart , and list in desc by the x axis please .
database schema:
Table game, columns = [*,stadium_id, id, Season, Date, Home_team, Away_team, Score, Competition]
target dvq:
Visualize LINE SELECT Season , COUNT(Season) FROM game  ORDER BY Season DESC BIN Season BY YEAR
****************************************************************************************************
nl_queries:
On what dates were employees without the letter M in their first names hired , and count them by a bar chart , and list in asc by the y axis please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name NOT LIKE '%M%'  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
How many mills of 'Grondzeiler' type are built in each year ? Give me the trend .
database schema:
Table mill, columns = [*,architect_id, id, location, name, type, built_year, notes]
target dvq:
Visualize LINE SELECT built_year , COUNT(built_year) FROM mill WHERE TYPE = 'Grondzeiler' BIN built_year BY YEAR
****************************************************************************************************
nl_queries:
Plot the average of salary by grouped by hire date as a bar graph , and display by the y axis from high to low .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Show me a line chart of how the number of visit date change over the visit date
database schema:
Table Visits, columns = [*,Visit_ID, Tourist_Attraction_ID, Tourist_ID, Visit_Date, Visit_Details]
target dvq:
Visualize LINE SELECT Visit_Date , COUNT(Visit_Date) FROM VISITS BIN Visit_Date BY YEAR
****************************************************************************************************
nl_queries:
For the average of Employee_ID , Start_from , visualize the trend , rank in desc by the x axis .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Employee_ID) FROM hiring  ORDER BY Start_from DESC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find hire_date and the average of salary bin hire_date by weekday , and visualize them by a bar chart , list in ascending by the total number please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Stacked bar of took office and how many took office colored by Minister
database schema:
Table party, columns = [*,Party_ID, Minister, Took_office, Left_office, Region_ID, Party_name]
target dvq:
Visualize BAR SELECT Took_office , COUNT(Took_office) FROM party GROUP BY Minister BIN Took_office BY WEEKDAY
****************************************************************************************************
nl_queries:
Bar graph to show how many yearid from different yearid , I want to rank by the total number from low to high .
database schema:
Table hall_of_fame, columns = [*,player_id, yearid, votedby, ballots, needed, votes, inducted, category, needed_note]
target dvq:
Visualize BAR SELECT yearid , COUNT(yearid) FROM hall_of_fame  ORDER BY COUNT(yearid) ASC BIN yearid BY WEEKDAY
****************************************************************************************************
nl_queries:
Show sum salary from each hire date , could you show by the Y in asc please ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of employee_id over the hire_date bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Return a bar chart about the distribution of Start_from and the sum of Shop_ID , and group by attribute Is_full_time and bin start_from by weekday , show y axis from high to low order .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , SUM(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY SUM(Shop_ID) DESC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
Tell me the average of capacity of cinemas open for each year in a line chart , show x-axis from high to low order .
database schema:
Table cinema, columns = [*,Cinema_ID, Name, Openning_year, Capacity, Location]
target dvq:
Visualize LINE SELECT Openning_year , AVG(Capacity) FROM cinema  ORDER BY Openning_year DESC BIN Openning_year BY YEAR
****************************************************************************************************
nl_queries:
Return a bar chart about the distribution of Start_from and the sum of Employee_ID , and group by attribute Is_full_time and bin start_from by weekday , and could you order from high to low by the Y ?
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , SUM(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY SUM(Employee_ID) DESC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
A bar chart for what are the number of the dates of transactions with at least 100 share count or amount bigger than 100 ? , and sort by the Y from high to low .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100  ORDER BY COUNT(date_of_transaction) DESC BIN date_of_transaction BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by time , could you list by the y axis in descending please ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(MANAGER_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Visualize the general trend of the average of shop id over the start from .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Shop_ID) FROM hiring BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Visualize the general trend of sum share count over the date of transaction , sort in descending by the X-axis .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , SUM(share_count) FROM TRANSACTIONS  ORDER BY date_of_transaction DESC BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
I want a bar chart to show the average cloud cover of the dates that have the 5 highest cloud cover rates each year , and I want to sort Y-axis in asc order .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , AVG(cloud_cover) FROM weather  ORDER BY AVG(cloud_cover) ASC BIN date BY YEAR
****************************************************************************************************
nl_queries:
Stacked bar chart of the number of left office for with each Minister in each left office , list the number of left office in desc order .
database schema:
Table party, columns = [*,Party_ID, Minister, Took_office, Left_office, Region_ID, Party_name]
target dvq:
Visualize BAR SELECT Left_office , COUNT(Left_office) FROM party GROUP BY Minister ORDER BY COUNT(Left_office) DESC BIN Left_office BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose first name does not contain the letter M , display their average salary by binning the hire date into the day of week interval for visualizing a bar chart , show by the Y in descending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name NOT LIKE '%M%'  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
How many documents in different starting date ? Return a bar chart binning starting date by weekday interval , could you display in ascending by the y-axis ?
database schema:
Table Document_Locations, columns = [*,Document_ID, Location_Code, Date_in_Location_From, Date_in_Locaton_To]
target dvq:
Visualize BAR SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations  ORDER BY COUNT(Date_in_Location_From) ASC BIN Date_in_Location_From BY WEEKDAY
****************************************************************************************************
nl_queries:
A bar chart for finding the number of the latest logon date of the students whose family name is "Jaskolski" or "Langosh" , show in ascending by the Y .
database schema:
Table Course_Authors_and_Tutors, columns = [*,author_id, author_tutor_ATB, login_name, password, personal_name, middle_name, family_name, gender_mf, address_line_1]
Table Students, columns = [*,student_id, date_of_registration, date_of_latest_logon, login_name, password, personal_name, middle_name, family_name]
target dvq:
Visualize BAR SELECT date_of_latest_logon , COUNT(date_of_latest_logon) FROM Students WHERE family_name = "Jaskolski" OR family_name = "Langosh"  ORDER BY COUNT(date_of_latest_logon) ASC BIN date_of_latest_logon BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the sum of department_id bin hire_date by weekday , could you display sum department id in descending order ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(DEPARTMENT_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
A line chart shows the change of the average of Shop_ID over Start_from , and group by attribute Is_full_time and bin start_from by time
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Shop_ID) FROM hiring GROUP BY Is_full_time BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Give me the comparison about the sum of Shop_ID over the Start_from bin start_from by weekday by a bar chart , and could you show from low to high by the Y-axis ?
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , SUM(Shop_ID) FROM hiring  ORDER BY SUM(Shop_ID) ASC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
How many mills of 'Grondzeiler' type are built in each year ? Give me the trend , list x-axis from low to high order .
database schema:
Table mill, columns = [*,architect_id, id, location, name, type, built_year, notes]
target dvq:
Visualize LINE SELECT built_year , COUNT(built_year) FROM mill WHERE TYPE = 'Grondzeiler'  ORDER BY built_year ASC BIN built_year BY YEAR
****************************************************************************************************
nl_queries:
I want a bar chart to show the total cloud cover of the dates that have the 5 highest cloud cover rates each day .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , SUM(cloud_cover) FROM weather BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
For the average of Employee_ID , Start_from , visualize the trend , rank by the Start_from from low to high .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from ASC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Bin the hire date into Month interval , and then compute the average salary of employees in each month for a bar chart , note that just select those employees without the letter M in their first name , and sort the average of salary in asc order please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name NOT LIKE '%M%'  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Give me the comparison about the sum of Employee_ID over the Start_from bin start_from by weekday , could you order by the Y-axis in desc ?
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , SUM(Employee_ID) FROM hiring  ORDER BY SUM(Employee_ID) DESC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the average of employee_id bin hire_date by time , and visualize them by a bar chart , could you list in desc by the y-axis ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(EMPLOYEE_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
How many apartment bookings in each weekday ? Show me a bar chart binning booking end date by weekday .
database schema:
Table Apartment_Bookings, columns = [*,apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date]
target dvq:
Visualize BAR SELECT booking_end_date , COUNT(booking_end_date) FROM Apartment_Bookings BIN booking_end_date BY WEEKDAY
****************************************************************************************************
nl_queries:
Show the average salary by each hire date of employees , and please bin the hire date into the day of week interval for showing a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Show me mean cloud cover by date in a histogram
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , AVG(cloud_cover) FROM weather BIN date BY YEAR
****************************************************************************************************
nl_queries:
Please give me a bar chart that bins the installation date of stations into Year interval as the X-axis , and count for showing how many stations are installed each year , and sort y-axis from low to high order please .
database schema:
Table station, columns = [*,id, name, lat, long, dock_count, city, installation_date]
target dvq:
Visualize BAR SELECT installation_date , COUNT(installation_date) FROM station  ORDER BY COUNT(installation_date) ASC BIN installation_date BY YEAR
****************************************************************************************************
nl_queries:
Show how many installation date from each installation date
database schema:
Table station, columns = [*,id, name, lat, long, dock_count, city, installation_date]
target dvq:
Visualize BAR SELECT installation_date , COUNT(installation_date) FROM station BIN installation_date BY WEEKDAY
****************************************************************************************************
nl_queries:
Draw a bar chart of date versus how many date
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather BIN date BY YEAR
****************************************************************************************************
nl_queries:
Find the dates of the tests taken with result "Pass" , and count them by a line chart , could you rank in desc by the x axis ?
database schema:
Table Student_Tests_Taken, columns = [*,registration_id, date_test_taken, test_result]
target dvq:
Visualize LINE SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = "Pass"  ORDER BY date_test_taken DESC BIN date_test_taken BY DAY
****************************************************************************************************
nl_queries:
Show the number of accounts opened in each year for all accounts and group by other account details in a group line chart .
database schema:
Table Accounts, columns = [*,account_id, customer_id, date_account_opened, account_name, other_account_details]
target dvq:
Visualize LINE SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts GROUP BY other_account_details BIN date_account_opened BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by time .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
What are the number of the dates in which the mean sea level pressure was between 303 and 31 ? , display in desc by the Y-axis .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) DESC BIN date BY YEAR
****************************************************************************************************
nl_queries:
Stacked bar of took office and how many took office colored by Minister , and sort Y from low to high order .
database schema:
Table party, columns = [*,Party_ID, Minister, Took_office, Left_office, Region_ID, Party_name]
target dvq:
Visualize BAR SELECT Took_office , COUNT(Took_office) FROM party GROUP BY Minister ORDER BY COUNT(Took_office) ASC BIN Took_office BY WEEKDAY
****************************************************************************************************
nl_queries:
Find the dates of the tests taken with result "Pass" , and count them by a line chart , and order by the x-axis from low to high .
database schema:
Table Student_Tests_Taken, columns = [*,registration_id, date_test_taken, test_result]
target dvq:
Visualize LINE SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = "Pass"  ORDER BY date_test_taken ASC BIN date_test_taken BY DAY
****************************************************************************************************
nl_queries:
Draw a line chart about the change of the sum of Employee_ID over Start_from , and group by attribute Is_full_time and bin start_from by time , order X-axis in asc order .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from ASC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
How many wines with a price higher than 100 of each year ? Show a bar chart that converts year into weekday interval , and I want to rank from high to low by the total number .
database schema:
Table wine, columns = [*,No, Grape, Winery, Appelation, State, Name, Year, Price, Score, Cases, Drink]
target dvq:
Visualize BAR SELECT Year , COUNT(Year) FROM WINE WHERE Price > 100  ORDER BY COUNT(Year) DESC BIN Year BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Draw a line chart about the change of the sum of Employee_ID over Start_from bin start_from by time , and display in asc by the x-axis .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Employee_ID) FROM hiring  ORDER BY Start_from ASC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by weekday , and I want to order from low to high by the y axis .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(MANAGER_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Create a bar chart showing the number of year across year , list by the Y-axis in descending .
database schema:
Table cars_data, columns = [*,Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year]
target dvq:
Visualize BAR SELECT Year , COUNT(Year) FROM CARS_DATA  ORDER BY COUNT(Year) DESC BIN Year BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by time , and I want to order y-axis in asc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(EMPLOYEE_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
I want to see trend the number of season over season by Away_team , list by the x axis in ascending .
database schema:
Table game, columns = [*,stadium_id, id, Season, Date, Home_team, Away_team, Score, Competition]
target dvq:
Visualize LINE SELECT Season , COUNT(Season) FROM game GROUP BY Away_team ORDER BY Season ASC BIN Season BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the average of employee_id bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Show the number of documents in different starting date and bin starting date by year interval with a line chart .
database schema:
Table Document_Locations, columns = [*,Document_ID, Location_Code, Date_in_Location_From, Date_in_Locaton_To]
target dvq:
Visualize LINE SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations BIN Date_in_Location_From BY YEAR
****************************************************************************************************
nl_queries:
Draw a line chart about the change of the average of Shop_ID over Start_from bin start_from by time , and could you display by the Start_from in desc ?
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Shop_ID) FROM hiring  ORDER BY Start_from DESC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Stacked bar of date in locaton to and the number of date in locaton to colored by Location_Code , order by the Y in ascending .
database schema:
Table Ref_Locations, columns = [*,Location_Code, Location_Name, Location_Description]
Table Document_Locations, columns = [*,Document_ID, Location_Code, Date_in_Location_From, Date_in_Locaton_To]
target dvq:
Visualize BAR SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Location_Code ORDER BY COUNT(Date_in_Locaton_To) ASC BIN Date_in_Locaton_To BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the average of manager_id bin hire_date by weekday in a bar chart , and I want to order by the y-axis in asc please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(MANAGER_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
I want to see trend of the number of date in locaton to by date in locaton to
database schema:
Table Document_Locations, columns = [*,Document_ID, Location_Code, Date_in_Location_From, Date_in_Locaton_To]
target dvq:
Visualize LINE SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations BIN Date_in_Locaton_To BY YEAR
****************************************************************************************************
nl_queries:
Bin the installation date into Year interval , and then you can draw a bar chart to tell me how many stations each year .
database schema:
Table station, columns = [*,id, name, lat, long, dock_count, city, installation_date]
target dvq:
Visualize BAR SELECT installation_date , COUNT(installation_date) FROM station BIN installation_date BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the sum of department_id over the hire_date bin hire_date by weekday by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
How many parties of the time they took office , binning the took office into Weekday interval , and then split by the minister's name .
database schema:
Table party, columns = [*,Party_ID, Minister, Took_office, Left_office, Region_ID, Party_name]
target dvq:
Visualize BAR SELECT Took_office , COUNT(Took_office) FROM party GROUP BY Minister BIN Took_office BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a bar chart shows the distribution of hire_date and the sum of manager_id bin hire_date by weekday , and order Y in desc order please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(MANAGER_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Show the number of games in each season and group by home team in a group line chart . The x-axis is season .
database schema:
Table game, columns = [*,stadium_id, id, Season, Date, Home_team, Away_team, Score, Competition]
target dvq:
Visualize LINE SELECT Season , COUNT(Season) FROM game GROUP BY Home_team BIN Season BY YEAR
****************************************************************************************************
nl_queries:
count yearid for visualizing a line chart , and sort X-axis in descending order .
database schema:
Table all_star, columns = [*,player_id, year, game_num, game_id, team_id, league_id, gp, starting_pos]
Table appearances, columns = [*,year, team_id, league_id, player_id, g_all, gs, g_batting, g_defense, g_p, g_c, g_1b, g_2b, g_3b, g_ss, g_lf, g_cf, g_rf, g_of, g_dh, g_ph, g_pr]
Table manager_award, columns = [*,player_id, award_id, year, league_id, tie, notes]
Table player_award, columns = [*,player_id, award_id, year, league_id, tie, notes]
Table manager_award_vote, columns = [*,award_id, year, league_id, player_id, points_won, points_max, votes_first]
Table player_award_vote, columns = [*,award_id, year, league_id, player_id, points_won, points_max, votes_first]
Table batting, columns = [*,player_id, year, stint, team_id, league_id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g_idp]
Table batting_postseason, columns = [*,year, round, player_id, team_id, league_id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g_idp]
Table player_college, columns = [*,player_id, college_id, year]
Table fielding, columns = [*,player_id, year, stint, team_id, league_id, pos, g, gs, inn_outs, po, a, e, dp, pb, wp, sb, cs, zr]
Table fielding_outfield, columns = [*,player_id, year, stint, glf, gcf, grf]
Table fielding_postseason, columns = [*,player_id, year, team_id, league_id, round, pos, g, gs, inn_outs, po, a, e, dp, tp, pb, sb, cs]
Table hall_of_fame, columns = [*,player_id, yearid, votedby, ballots, needed, votes, inducted, category, needed_note]
Table home_game, columns = [*,year, league_id, team_id, park_id, span_first, span_last, games, openings, attendance]
Table manager, columns = [*,player_id, year, team_id, league_id, inseason, g, w, l, rank, plyr_mgr]
Table manager_half, columns = [*,player_id, year, team_id, league_id, inseason, half, g, w, l, rank]
Table pitching, columns = [*,player_id, year, stint, team_id, league_id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g_idp]
Table pitching_postseason, columns = [*,player_id, year, round, team_id, league_id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g_idp]
Table salary, columns = [*,year, team_id, league_id, player_id, salary]
Table postseason, columns = [*,year, round, team_id_winner, league_id_winner, team_id_loser, league_id_loser, wins, losses, ties]
Table team, columns = [*,year, league_id, team_id, franchise_id, div_id, rank, g, ghome, w, l, div_win, wc_win, lg_win, ws_win, r, ab, h, double, triple, hr, bb, so, sb, cs, hbp, sf, ra, er, era, cg, sho, sv, ipouts, ha, hra, bba, soa, e, dp, fp, name, park, attendance, bpf, ppf, team_id_br, team_id_lahman45, team_id_retro]
Table team_half, columns = [*,year, league_id, team_id, half, div_id, div_win, rank, g, w, l]
target dvq:
Visualize LINE SELECT yearid , COUNT(yearid) FROM hall_of_fame  ORDER BY yearid DESC BIN yearid BY YEAR
****************************************************************************************************
nl_queries:
What are the dates in which the mean sea level pressure was between 303 and 31 , and count them by a bar chart , order in ascending by the Y-axis .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) ASC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
A line chart shows the change of the amount of Start_from over Start_from , and group by attribute Is_full_time and bin start_from by time , display by the Start_from in asc .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , COUNT(Start_from) FROM hiring GROUP BY Is_full_time ORDER BY Start_from ASC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday , I want to list by the Y from high to low .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of department_id over the hire_date bin hire_date by time by a bar chart , I want to rank by the Y-axis in asc .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(DEPARTMENT_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
I want to see trend of how many date account opened by date account opened , and show by the X from low to high please .
database schema:
Table Accounts, columns = [*,account_id, customer_id, date_account_opened, account_name, other_account_details]
target dvq:
Visualize LINE SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts  ORDER BY date_account_opened ASC BIN date_account_opened BY YEAR
****************************************************************************************************
nl_queries:
Stacked bar chart of the number of date account opened for with each other_account_details in each date account opened , and display by the the number of date account opened from low to high please .
database schema:
Table Accounts, columns = [*,account_id, customer_id, date_account_opened, account_name, other_account_details]
target dvq:
Visualize BAR SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts GROUP BY other_account_details ORDER BY COUNT(date_account_opened) ASC BIN date_account_opened BY WEEKDAY
****************************************************************************************************
nl_queries:
Give me the comparison about the average of Shop_ID over the Start_from , and group by attribute Is_full_time and bin start_from by weekday by a bar chart , show in desc by the total number .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , AVG(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY AVG(Shop_ID) DESC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the amount of hire_date bin hire_date by time , and visualize them by a bar chart , and sort by the Y from low to high .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the sum of department_id over the hire_date bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Find all the distinct visit dates , and count them by a line chart
database schema:
Table Visits, columns = [*,Visit_ID, Tourist_Attraction_ID, Tourist_ID, Visit_Date, Visit_Details]
target dvq:
Visualize LINE SELECT Visit_Date , COUNT(Visit_Date) FROM VISITS BIN Visit_Date BY YEAR
****************************************************************************************************
nl_queries:
For the transaction dates if share count is smaller than 10 , bin the dates into the year interval , and count them using a line chart , and I want to show by the x axis in desc .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count < 10  ORDER BY date_of_transaction DESC BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
When are the birthdays of customer who are classified as 'Good Customer' status , and count them by a bar chart , could you order y-axis in ascending order ?
database schema:
Table Staff, columns = [*,staff_id, staff_address_id, nickname, first_name, middle_name, last_name, date_of_birth, date_joined_staff, date_left_staff]
Table Customers, columns = [*,customer_id, customer_address_id, customer_status_code, date_became_customer, date_of_birth, first_name, last_name, amount_outstanding, email_address, phone_number, cell_mobile_phone_number]
target dvq:
Visualize BAR SELECT date_of_birth , COUNT(date_of_birth) FROM Customers WHERE customer_status_code = 'Good Customer'  ORDER BY COUNT(date_of_birth) ASC BIN date_of_birth BY WEEKDAY
****************************************************************************************************
nl_queries:
Show the number of visit date from each visit date , and list in asc by the y axis .
database schema:
Table Visits, columns = [*,Visit_ID, Tourist_Attraction_ID, Tourist_ID, Visit_Date, Visit_Details]
target dvq:
Visualize BAR SELECT Visit_Date , COUNT(Visit_Date) FROM VISITS  ORDER BY COUNT(Visit_Date) ASC BIN Visit_Date BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the average of employee_id bin hire_date by weekday in a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday , order by the total number from low to high .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(DEPARTMENT_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the sum of employee_id bin hire_date by time , and rank by the y axis from low to high .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(EMPLOYEE_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the average of manager_id over the hire_date bin hire_date by weekday by a bar chart , rank by the Y in desc .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(MANAGER_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
List the number of completion students in each month and bin date of completion by month interval with a bar chart , sort Y-axis in asc order .
database schema:
Table Student_Course_Enrolment, columns = [*,registration_id, student_id, course_id, date_of_enrolment, date_of_completion]
target dvq:
Visualize BAR SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment  ORDER BY COUNT(date_of_completion) ASC BIN date_of_completion BY MONTH
****************************************************************************************************
nl_queries:
What are all the calendar dates ? Show a bar chart binning calendar date by weekday , display by the y axis from low to high .
database schema:
Table Ref_Calendar, columns = [*,Calendar_Date, Day_Number]
target dvq:
Visualize BAR SELECT Calendar_Date , COUNT(Calendar_Date) FROM Ref_calendar  ORDER BY COUNT(Calendar_Date) ASC BIN Calendar_Date BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the sum of manager_id over the hire_date bin hire_date by time by a bar chart , and list Y-axis from high to low order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(MANAGER_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the sum of department_id bin hire_date by weekday , and visualize them by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of hire_date and the average of salary bin hire_date by time in a bar chart , and rank by the y axis in descending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the average of salary over the hire_date bin hire_date by time by a bar chart , I want to order by the Y-axis from high to low .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Show the number of games in each season and group by away team in a group line chart The x-axis is season , list by the X-axis in asc .
database schema:
Table game, columns = [*,stadium_id, id, Season, Date, Home_team, Away_team, Score, Competition]
target dvq:
Visualize LINE SELECT Season , COUNT(Season) FROM game GROUP BY Away_team ORDER BY Season ASC BIN Season BY YEAR
****************************************************************************************************
nl_queries:
I want to see trend mean employee id over start from by Is_full_time , I want to show by the x-axis in asc please .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from ASC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by weekday .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
What are the dates that have an average sea level pressure between 303 and 31 , and count them by a bar chart , and rank by the y-axis in ascending please .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) ASC BIN date BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the sum of employee_id bin hire_date by time in a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by weekday , sort by the y axis from high to low .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(EMPLOYEE_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Bar chart x axis date y axis total number of cloud cover , and sort by the total number of cloud cover in ascending please .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , SUM(cloud_cover) FROM weather  ORDER BY SUM(cloud_cover) ASC BIN date BY YEAR
****************************************************************************************************
nl_queries:
On what dates were employees without the letter M in their first names hired , and count them by a bar chart , I want to list total number in descending order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name NOT LIKE '%M%'  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the amount of hire_date over the hire_date bin hire_date by weekday by a bar chart , sort by the y axis from high to low .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
A bar chart shows the number of year of the maximum price and score of wines , and bin the year into the weekday interval .
database schema:
Table wine, columns = [*,No, Grape, Winery, Appelation, State, Name, Year, Price, Score, Cases, Drink]
target dvq:
Visualize BAR SELECT Year , COUNT(Year) FROM WINE BIN Year BY WEEKDAY
****************************************************************************************************
nl_queries:
I want a bar chart to show the average cloud cover of the dates that have the 5 highest cloud cover rates each day , list Y-axis in ascending order please .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , AVG(cloud_cover) FROM weather  ORDER BY AVG(cloud_cover) ASC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
Bar chart x axis date of transaction y axis mean share count
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize BAR SELECT date_of_transaction , AVG(share_count) FROM TRANSACTIONS BIN date_of_transaction BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find hire_date and the average of employee_id bin hire_date by time , and visualize them by a bar chart , and could you show from low to high by the total number ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(EMPLOYEE_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
How many completion students in each day ? Return a bar chart binning date of completion by weekday , and I want to sort y-axis in asc order .
database schema:
Table Student_Course_Enrolment, columns = [*,registration_id, student_id, course_id, date_of_enrolment, date_of_completion]
target dvq:
Visualize BAR SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment  ORDER BY COUNT(date_of_completion) ASC BIN date_of_completion BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find hire_date and the sum of employee_id bin hire_date by time , and visualize them by a bar chart , order y-axis from low to high order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(EMPLOYEE_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Bar chart x axis date y axis total number of cloud cover , and show Y from high to low order .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , SUM(cloud_cover) FROM weather  ORDER BY SUM(cloud_cover) DESC BIN date BY YEAR
****************************************************************************************************
nl_queries:
Plot season by how many season as a line chart , and could you rank by the X from high to low please ?
database schema:
Table game, columns = [*,stadium_id, id, Season, Date, Home_team, Away_team, Score, Competition]
target dvq:
Visualize LINE SELECT Season , COUNT(Season) FROM game  ORDER BY Season DESC BIN Season BY YEAR
****************************************************************************************************
nl_queries:
Draw a bar chart about the distribution of Start_from and the sum of Shop_ID bin start_from by weekday , and could you show from low to high by the Y-axis ?
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , SUM(Shop_ID) FROM hiring  ORDER BY SUM(Shop_ID) ASC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
Bar graph to show total number of cloud cover from different date , list in desc by the total number .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , SUM(cloud_cover) FROM weather  ORDER BY SUM(cloud_cover) DESC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by weekday , and list by the total number from high to low .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(EMPLOYEE_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
count yearid for visualizing a line chart , and could you show x-axis in desc order ?
database schema:
Table all_star, columns = [*,player_id, year, game_num, game_id, team_id, league_id, gp, starting_pos]
Table appearances, columns = [*,year, team_id, league_id, player_id, g_all, gs, g_batting, g_defense, g_p, g_c, g_1b, g_2b, g_3b, g_ss, g_lf, g_cf, g_rf, g_of, g_dh, g_ph, g_pr]
Table manager_award, columns = [*,player_id, award_id, year, league_id, tie, notes]
Table player_award, columns = [*,player_id, award_id, year, league_id, tie, notes]
Table manager_award_vote, columns = [*,award_id, year, league_id, player_id, points_won, points_max, votes_first]
Table player_award_vote, columns = [*,award_id, year, league_id, player_id, points_won, points_max, votes_first]
Table batting, columns = [*,player_id, year, stint, team_id, league_id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g_idp]
Table batting_postseason, columns = [*,year, round, player_id, team_id, league_id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g_idp]
Table player_college, columns = [*,player_id, college_id, year]
Table fielding, columns = [*,player_id, year, stint, team_id, league_id, pos, g, gs, inn_outs, po, a, e, dp, pb, wp, sb, cs, zr]
Table fielding_outfield, columns = [*,player_id, year, stint, glf, gcf, grf]
Table fielding_postseason, columns = [*,player_id, year, team_id, league_id, round, pos, g, gs, inn_outs, po, a, e, dp, tp, pb, sb, cs]
Table hall_of_fame, columns = [*,player_id, yearid, votedby, ballots, needed, votes, inducted, category, needed_note]
Table home_game, columns = [*,year, league_id, team_id, park_id, span_first, span_last, games, openings, attendance]
Table manager, columns = [*,player_id, year, team_id, league_id, inseason, g, w, l, rank, plyr_mgr]
Table manager_half, columns = [*,player_id, year, team_id, league_id, inseason, half, g, w, l, rank]
Table pitching, columns = [*,player_id, year, stint, team_id, league_id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g_idp]
Table pitching_postseason, columns = [*,player_id, year, round, team_id, league_id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g_idp]
Table salary, columns = [*,year, team_id, league_id, player_id, salary]
Table postseason, columns = [*,year, round, team_id_winner, league_id_winner, team_id_loser, league_id_loser, wins, losses, ties]
Table team, columns = [*,year, league_id, team_id, franchise_id, div_id, rank, g, ghome, w, l, div_win, wc_win, lg_win, ws_win, r, ab, h, double, triple, hr, bb, so, sb, cs, hbp, sf, ra, er, era, cg, sho, sv, ipouts, ha, hra, bba, soa, e, dp, fp, name, park, attendance, bpf, ppf, team_id_br, team_id_lahman45, team_id_retro]
Table team_half, columns = [*,year, league_id, team_id, half, div_id, div_win, rank, g, w, l]
target dvq:
Visualize LINE SELECT yearid , COUNT(yearid) FROM hall_of_fame  ORDER BY yearid DESC BIN yearid BY YEAR
****************************************************************************************************
nl_queries:
Show the number of apartment bookings in each year and bin booking start date by year with a bar chart , could you sort from low to high by the y axis ?
database schema:
Table Apartment_Bookings, columns = [*,apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date]
target dvq:
Visualize BAR SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings  ORDER BY COUNT(booking_start_date) ASC BIN booking_start_date BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the amount of hire_date bin hire_date by time in a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Plot total number of shop id over start from in a line chart
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Shop_ID) FROM hiring BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Show me the trend about the amount of Start_from over Start_from bin start_from by time with a line chart , sort from low to high by the x-axis .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , COUNT(Start_from) FROM hiring  ORDER BY Start_from ASC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of hire_date and the sum of manager_id bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
List the number of dogs departed in each day with a bar chart that bins departed date by weekday , and sort in desc by the the number of date departed .
database schema:
Table Dogs, columns = [*,dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed]
target dvq:
Visualize BAR SELECT date_departed , COUNT(date_departed) FROM Dogs  ORDER BY COUNT(date_departed) DESC BIN date_departed BY WEEKDAY
****************************************************************************************************
nl_queries:
Show all dates of transactions whose type code is "SALE" , and count them by a bar chart , I want to order by the Y-axis in descending please .
database schema:
Table Ref_Transaction_Types, columns = [*,transaction_type_code, transaction_type_description]
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE transaction_type_code = "SALE"  ORDER BY COUNT(date_of_transaction) DESC BIN date_of_transaction BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the average of manager_id bin hire_date by weekday , and visualize them by a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the amount of hire_date over the hire_date bin hire_date by weekday by a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time , and could you display y-axis from high to low order ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(DEPARTMENT_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the average of employee_id over the hire_date bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Show the number of apartment bookings in each weekday and bin booking end date by weekday with a bar chart , sort from low to high by the total number .
database schema:
Table Apartment_Bookings, columns = [*,apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date]
target dvq:
Visualize BAR SELECT booking_end_date , COUNT(booking_end_date) FROM Apartment_Bookings  ORDER BY COUNT(booking_end_date) ASC BIN booking_end_date BY WEEKDAY
****************************************************************************************************
nl_queries:
Stacked bar of date in locaton to and the number of date in locaton to colored by Location_Code , rank in desc by the y axis .
database schema:
Table Ref_Locations, columns = [*,Location_Code, Location_Name, Location_Description]
Table Document_Locations, columns = [*,Document_ID, Location_Code, Date_in_Location_From, Date_in_Locaton_To]
target dvq:
Visualize BAR SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Location_Code ORDER BY COUNT(Date_in_Locaton_To) DESC BIN Date_in_Locaton_To BY WEEKDAY
****************************************************************************************************
nl_queries:
How many completion students in each day ? Return a bar chart binning date of completion by weekday , display how many date of completion in descending order .
database schema:
Table Student_Course_Enrolment, columns = [*,registration_id, student_id, course_id, date_of_enrolment, date_of_completion]
target dvq:
Visualize BAR SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment  ORDER BY COUNT(date_of_completion) DESC BIN date_of_completion BY WEEKDAY
****************************************************************************************************
nl_queries:
How many parties of the time they leave office , binning the leave office into WEEKDAY interval , display by the how many left office in descending please .
database schema:
Table party, columns = [*,Party_ID, Minister, Took_office, Left_office, Region_ID, Party_name]
target dvq:
Visualize BAR SELECT Left_office , COUNT(Left_office) FROM party  ORDER BY COUNT(Left_office) DESC BIN Left_office BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of department_id over the hire_date bin hire_date by weekday by a bar chart , rank by the Y-axis from low to high .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(DEPARTMENT_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Give me the trend about the average of Shop_ID over Start_from , and group by attribute Is_full_time and bin start_from by time .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Shop_ID) FROM hiring GROUP BY Is_full_time BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Show me how many long by long in a histogram , could you rank from low to high by the y axis ?
database schema:
Table station, columns = [*,id, name, lat, long, dock_count, city, installation_date]
target dvq:
Visualize BAR SELECT long , COUNT(long) FROM station  ORDER BY COUNT(long) ASC BIN long BY ZERO
****************************************************************************************************
nl_queries:
On which day has it neither been foggy nor rained in the zip code of 94107 , and count them by a bar chart
database schema:
Table trip, columns = [*,id, duration, start_date, start_station_name, start_station_id, end_date, end_station_name, end_station_id, bike_id, subscription_type, zip_code]
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE zip_code = 94107 AND EVENTS != "Fog" AND EVENTS != "Rain" BIN date BY YEAR
****************************************************************************************************
nl_queries:
Visualize a line chart about the change of the sum of Shop_ID over Start_from bin start_from by time , and rank x axis in desc order please .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Shop_ID) FROM hiring  ORDER BY Start_from DESC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Visualize a bar chart to show the dates that have the top 3 days with the largest max gust speeds in the month level .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather  ORDER BY max_gust_speed_mph DESC LIMIT 3 BIN date BY MONTH
****************************************************************************************************
nl_queries:
Show me about the change of the average of Employee_ID over Start_from bin start_from by time in a line chart , and rank in desc by the x axis .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Employee_ID) FROM hiring  ORDER BY Start_from DESC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
In which years cars were produced weighing no less than 3000 and no more than 4000 , and count them by a bar chart
database schema:
Table cars_data, columns = [*,Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year]
target dvq:
Visualize BAR SELECT Year , COUNT(Year) FROM cars_data where weight between 3000 and 4000 BIN Year BY WEEKDAY
****************************************************************************************************
nl_queries:
I want to see trend mean employee id over start from by Is_full_time
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Employee_ID) FROM hiring GROUP BY Is_full_time BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Give me the comparison about the amount of Start_from over the Start_from bin start_from by weekday , and I want to display y-axis in desc order .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , COUNT(Start_from) FROM hiring  ORDER BY COUNT(Start_from) DESC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
Bin the hire date of employees into the day of week interval and count them for visualizing a bar chart , and list the number of hire date from high to low order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
I want to see trend of sum employee id by start from
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Employee_ID) FROM hiring BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of hire_date and the average of salary bin hire_date by time in a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Bar chart x axis open date y axis how many open date , and order in asc by the y-axis .
database schema:
Table church, columns = [*,Church_ID, Name, Organized_by, Open_Date, Continuation_of]
target dvq:
Visualize BAR SELECT Open_Date , COUNT(Open_Date) FROM Church  ORDER BY COUNT(Open_Date) ASC BIN Open_Date BY WEEKDAY
****************************************************************************************************
nl_queries:
Bar chart of how many date of completion from each date of completion , could you order in desc by the Y please ?
database schema:
Table Student_Course_Enrolment, columns = [*,registration_id, student_id, course_id, date_of_enrolment, date_of_completion]
target dvq:
Visualize BAR SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment  ORDER BY COUNT(date_of_completion) DESC BIN date_of_completion BY MONTH
****************************************************************************************************
nl_queries:
Draw a bar chart about the distribution of Start_from and the average of Shop_ID bin start_from by weekday , and rank in ascending by the y-axis please .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , AVG(Shop_ID) FROM hiring  ORDER BY AVG(Shop_ID) ASC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the sum of department_id bin hire_date by time , and visualize them by a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday , display from low to high by the y axis please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(DEPARTMENT_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Please compare the number of the church by open date (bin into the weekday) using a bar chart , rank y axis in asc order please .
database schema:
Table church, columns = [*,Church_ID, Name, Organized_by, Open_Date, Continuation_of]
target dvq:
Visualize BAR SELECT Open_Date , COUNT(Open_Date) FROM church  ORDER BY COUNT(Open_Date) ASC BIN Open_Date BY WEEKDAY
****************************************************************************************************
nl_queries:
List the number of dogs departed in each day with a bar chart that bins departed date by weekday .
database schema:
Table Dogs, columns = [*,dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed]
target dvq:
Visualize BAR SELECT date_departed , COUNT(date_departed) FROM Dogs BIN date_departed BY WEEKDAY
****************************************************************************************************
nl_queries:
What are the dates in which the mean sea level pressure was between 30 . 3 and 31 , and count them by a bar chart
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31 BIN date BY YEAR
****************************************************************************************************
nl_queries:
For those dates that have the 5 highest cloud cover rates , please bin the date into Year interval and count their frequency .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather BIN date BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of hire_date and the average of manager_id bin hire_date by time in a bar chart , and sort by the total number in desc please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(MANAGER_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by weekday , list by the Y-axis in asc please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(EMPLOYEE_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find hire_date and the average of employee_id bin hire_date by time , and visualize them by a bar chart , and display y axis in descending order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(EMPLOYEE_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
A bar chart for what are the number of the distinct visit dates ? , and order from high to low by the Y .
database schema:
Table Visits, columns = [*,Visit_ID, Tourist_Attraction_ID, Tourist_ID, Visit_Date, Visit_Details]
target dvq:
Visualize BAR SELECT Visit_Date , COUNT(Visit_Date) FROM VISITS  ORDER BY COUNT(Visit_Date) DESC BIN Visit_Date BY WEEKDAY
****************************************************************************************************
nl_queries:
Show me about the change of the average of Employee_ID over Start_from , and group by attribute Is_full_time and bin start_from by time in a line chart .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Employee_ID) FROM hiring GROUP BY Is_full_time BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the sum of manager_id bin hire_date by weekday in a bar chart , and sort from low to high by the Y-axis .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(MANAGER_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Bar graph to show the number of date arrived from different date arrived
database schema:
Table Dogs, columns = [*,dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed]
target dvq:
Visualize BAR SELECT date_arrived , COUNT(date_arrived) FROM Dogs BIN date_arrived BY WEEKDAY
****************************************************************************************************
nl_queries:
when is the hire date for those employees whose first name does not containing the letter M , and count them by a bar chart , rank from high to low by the total number .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name NOT LIKE '%M%'  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the average of manager_id bin hire_date by weekday , rank in descending by the y axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(MANAGER_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Show the number of year of the maximum price and score of wines in a bar chart , and bin the year into the weekday interval , could you order by the Y from low to high ?
database schema:
Table wine, columns = [*,No, Grape, Winery, Appelation, State, Name, Year, Price, Score, Cases, Drink]
target dvq:
Visualize BAR SELECT Year , COUNT(Year) FROM WINE  ORDER BY COUNT(Year) ASC BIN Year BY WEEKDAY
****************************************************************************************************
nl_queries:
When are the birthdays of customer who are classified as 'Good Customer' status , and count them by a line chart , and could you list by the date_of_birth from low to high ?
database schema:
Table Staff, columns = [*,staff_id, staff_address_id, nickname, first_name, middle_name, last_name, date_of_birth, date_joined_staff, date_left_staff]
Table Customers, columns = [*,customer_id, customer_address_id, customer_status_code, date_became_customer, date_of_birth, first_name, last_name, amount_outstanding, email_address, phone_number, cell_mobile_phone_number]
target dvq:
Visualize LINE SELECT date_of_birth , COUNT(date_of_birth) FROM Customers WHERE customer_status_code = 'Good Customer'  ORDER BY date_of_birth ASC BIN date_of_birth BY YEAR
****************************************************************************************************
nl_queries:
When do all the researcher role staff start to work ? Bin the time into weekday interval and count them with a bar chart .
database schema:
Table Project_Staff, columns = [*,staff_id, project_id, role_code, date_from, date_to, other_details]
target dvq:
Visualize BAR SELECT date_from , COUNT(date_from) FROM Project_Staff BIN date_from BY WEEKDAY
****************************************************************************************************
nl_queries:
Show all dates of transactions whose type code is "SALE" , and count them by a line chart
database schema:
Table Ref_Transaction_Types, columns = [*,transaction_type_code, transaction_type_description]
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE transaction_type_code = "SALE" BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the average of manager_id bin hire_date by time in a bar chart , and display from low to high by the Y .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(MANAGER_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
I want to see trend of the number of open date by open date
database schema:
Table church, columns = [*,Church_ID, Name, Organized_by, Open_Date, Continuation_of]
Table wedding, columns = [*,Church_ID, Male_ID, Female_ID, Year]
target dvq:
Visualize LINE SELECT Open_Date , COUNT(Open_Date) FROM church BIN Open_Date BY YEAR
****************************************************************************************************
nl_queries:
A bar chart for what are the number of the distinct visit dates ? , and rank total number from low to high order .
database schema:
Table Visits, columns = [*,Visit_ID, Tourist_Attraction_ID, Tourist_ID, Visit_Date, Visit_Details]
target dvq:
Visualize BAR SELECT Visit_Date , COUNT(Visit_Date) FROM VISITS  ORDER BY COUNT(Visit_Date) ASC BIN Visit_Date BY WEEKDAY
****************************************************************************************************
nl_queries:
Show me the trend about the average of Shop_ID over Start_from , and group by attribute Is_full_time and bin start_from by time with a line chart , and sort x-axis in descending order .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from DESC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Show me about the distribution of Start_from and the average of Employee_ID bin start_from by weekday in a bar chart , and sort from high to low by the Y .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , AVG(Employee_ID) FROM hiring  ORDER BY AVG(Employee_ID) DESC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
Bar chart x axis year y axis the number of year , sort y-axis in descending order .
database schema:
Table all_star, columns = [*,player_id, year, game_num, game_id, team_id, league_id, gp, starting_pos]
Table appearances, columns = [*,year, team_id, league_id, player_id, g_all, gs, g_batting, g_defense, g_p, g_c, g_1b, g_2b, g_3b, g_ss, g_lf, g_cf, g_rf, g_of, g_dh, g_ph, g_pr]
Table manager_award, columns = [*,player_id, award_id, year, league_id, tie, notes]
Table player_award, columns = [*,player_id, award_id, year, league_id, tie, notes]
Table manager_award_vote, columns = [*,award_id, year, league_id, player_id, points_won, points_max, votes_first]
Table player_award_vote, columns = [*,award_id, year, league_id, player_id, points_won, points_max, votes_first]
Table batting, columns = [*,player_id, year, stint, team_id, league_id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g_idp]
Table batting_postseason, columns = [*,year, round, player_id, team_id, league_id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g_idp]
Table player_college, columns = [*,player_id, college_id, year]
Table fielding, columns = [*,player_id, year, stint, team_id, league_id, pos, g, gs, inn_outs, po, a, e, dp, pb, wp, sb, cs, zr]
Table fielding_outfield, columns = [*,player_id, year, stint, glf, gcf, grf]
Table fielding_postseason, columns = [*,player_id, year, team_id, league_id, round, pos, g, gs, inn_outs, po, a, e, dp, tp, pb, sb, cs]
Table home_game, columns = [*,year, league_id, team_id, park_id, span_first, span_last, games, openings, attendance]
Table manager, columns = [*,player_id, year, team_id, league_id, inseason, g, w, l, rank, plyr_mgr]
Table manager_half, columns = [*,player_id, year, team_id, league_id, inseason, half, g, w, l, rank]
Table pitching, columns = [*,player_id, year, stint, team_id, league_id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g_idp]
Table pitching_postseason, columns = [*,player_id, year, round, team_id, league_id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g_idp]
Table salary, columns = [*,year, team_id, league_id, player_id, salary]
Table postseason, columns = [*,year, round, team_id_winner, league_id_winner, team_id_loser, league_id_loser, wins, losses, ties]
Table team, columns = [*,year, league_id, team_id, franchise_id, div_id, rank, g, ghome, w, l, div_win, wc_win, lg_win, ws_win, r, ab, h, double, triple, hr, bb, so, sb, cs, hbp, sf, ra, er, era, cg, sho, sv, ipouts, ha, hra, bba, soa, e, dp, fp, name, park, attendance, bpf, ppf, team_id_br, team_id_lahman45, team_id_retro]
Table team_half, columns = [*,year, league_id, team_id, half, div_id, div_win, rank, g, w, l]
target dvq:
Visualize BAR SELECT year , COUNT(year) FROM home_game  ORDER BY COUNT(year) DESC BIN year BY WEEKDAY
****************************************************************************************************
nl_queries:
List the number of dogs arrived in each year with a bar chart , and order in ascending by the total number please .
database schema:
Table Dogs, columns = [*,dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed]
target dvq:
Visualize BAR SELECT date_arrived , COUNT(date_arrived) FROM Dogs  ORDER BY COUNT(date_arrived) ASC BIN date_arrived BY YEAR
****************************************************************************************************
nl_queries:
Show the number of games in each season and group by home team in a group line chart The x-axis is season , and display in desc by the X .
database schema:
Table game, columns = [*,stadium_id, id, Season, Date, Home_team, Away_team, Score, Competition]
target dvq:
Visualize LINE SELECT Season , COUNT(Season) FROM game GROUP BY Home_team ORDER BY Season DESC BIN Season BY YEAR
****************************************************************************************************
nl_queries:
Visualize a line chart about the change of the sum of Shop_ID over Start_from , and group by attribute Is_full_time and bin start_from by time , and display by the Start_from in descending .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from DESC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Visualize a line chart about the change of the sum of Shop_ID over Start_from , and group by attribute Is_full_time and bin start_from by time .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Shop_ID) FROM hiring GROUP BY Is_full_time BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time , show from high to low by the total number please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(DEPARTMENT_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the sum of manager_id over the hire_date bin hire_date by time , show in asc by the Y-axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(MANAGER_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the sum of salary bin hire_date by time in a bar chart , show Y-axis in asc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the sum of salary bin hire_date by weekday , and visualize them by a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by weekday , order in desc by the y axis please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(MANAGER_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the average of employee_id bin hire_date by time in a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
What are the dates in which the mean sea level pressure was between 303 and 31 , and count them by a bar chart , and order y axis in descending order please .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) DESC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
Show me the trend about the amount of Start_from over Start_from bin start_from by time with a line chart .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , COUNT(Start_from) FROM hiring BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the amount of hire_date over the hire_date bin hire_date by weekday by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the average of salary bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by weekday , and could you list y axis in desc order ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(MANAGER_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Find Start_from and the amount of Start_from bin start_from by weekday , and visualize them by a bar chart .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , COUNT(Start_from) FROM hiring BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by time , and list by the y axis from high to low please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(EMPLOYEE_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
I want to see trend of the number of date in locaton to by date in locaton to , and list by the x axis in asc .
database schema:
Table Document_Locations, columns = [*,Document_ID, Location_Code, Date_in_Location_From, Date_in_Locaton_To]
target dvq:
Visualize LINE SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations  ORDER BY Date_in_Locaton_To ASC BIN Date_in_Locaton_To BY YEAR
****************************************************************************************************
nl_queries:
Please give me a bar chart that bins the installation date of stations into the day of week interval as the X-axis , and count for showing how many stations are installed each year , sort in asc by the Y-axis .
database schema:
Table station, columns = [*,id, name, lat, long, dock_count, city, installation_date]
target dvq:
Visualize BAR SELECT installation_date , COUNT(installation_date) FROM station  ORDER BY COUNT(installation_date) ASC BIN installation_date BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of hire_date and the sum of employee_id bin hire_date by weekday in a bar chart , list by the total number in descending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(EMPLOYEE_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of salary over the hire_date bin hire_date by weekday , display in descending by the Y-axis please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
when is the hire date for those employees whose first name does not containing the letter M , and count them by a bar chart
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name NOT LIKE '%M%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by weekday , and sort in desc by the y-axis please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(EMPLOYEE_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Bin the year attribute into the Year interval and count them for a bar chart , and order by the how many year in ascending .
database schema:
Table wine, columns = [*,No, Grape, Winery, Appelation, State, Name, Year, Price, Score, Cases, Drink]
target dvq:
Visualize BAR SELECT Year , COUNT(Year) FROM WINE  ORDER BY COUNT(Year) ASC BIN Year BY WEEKDAY
****************************************************************************************************
nl_queries:
bin the yearid into the day of the week interval and count them for visualizing a bar chart , list by the y axis in descending .
database schema:
Table hall_of_fame, columns = [*,player_id, yearid, votedby, ballots, needed, votes, inducted, category, needed_note]
target dvq:
Visualize BAR SELECT yearid , COUNT(yearid) FROM hall_of_fame  ORDER BY COUNT(yearid) DESC BIN yearid BY WEEKDAY
****************************************************************************************************
nl_queries:
Create a bar chart showing the number of date departed across date departed
database schema:
Table Dogs, columns = [*,dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed]
target dvq:
Visualize BAR SELECT date_departed , COUNT(date_departed) FROM Dogs BIN date_departed BY WEEKDAY
****************************************************************************************************
nl_queries:
Bar chart of the frequency from each receipt date , bin date by weekday , order y in desc order .
database schema:
Table Documents, columns = [*,document_id, document_status_code, document_type_code, shipping_agent_code, receipt_date, receipt_number, other_details]
target dvq:
Visualize BAR SELECT receipt_date , COUNT(receipt_date) FROM Documents  ORDER BY COUNT(receipt_date) DESC BIN receipt_date BY WEEKDAY
****************************************************************************************************
nl_queries:
How many parties of the time they took office , binning the left office into Weekday interval , and then split by the minister's name , and rank by the how many left office in descending .
database schema:
Table party, columns = [*,Party_ID, Minister, Took_office, Left_office, Region_ID, Party_name]
target dvq:
Visualize BAR SELECT Left_office , COUNT(Left_office) FROM party GROUP BY Minister ORDER BY COUNT(Left_office) DESC BIN Left_office BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the sum of salary over the hire_date bin hire_date by time by a bar chart , order by the y axis in descending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Give me the comparison about the sum of Shop_ID over the Start_from bin start_from by weekday .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , SUM(Shop_ID) FROM hiring BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the average of manager_id bin hire_date by weekday in a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
List the number of enrolment students in each day and bin date of enrolment by weekday with a bar chart .
database schema:
Table Student_Course_Enrolment, columns = [*,registration_id, student_id, course_id, date_of_enrolment, date_of_completion]
target dvq:
Visualize BAR SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment BIN date_of_enrolment BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the sum of employee_id over the hire_date bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Draw a line chart about the change of the amount of Start_from over Start_from bin start_from by time , display x-axis in descending order .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , COUNT(Start_from) FROM hiring  ORDER BY Start_from DESC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Plot how many hire date by grouped by hire date as a bar graph
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
I want a bar chart to show the average cloud cover of the dates that have the 5 highest cloud cover rates each year , and rank by the y axis from high to low .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , AVG(cloud_cover) FROM weather  ORDER BY AVG(cloud_cover) DESC BIN date BY YEAR
****************************************************************************************************
nl_queries:
A bar chart for what are the number of the dates of the latest logon of the students with family name "Jaskolski" or "Langosh" ?
database schema:
Table Course_Authors_and_Tutors, columns = [*,author_id, author_tutor_ATB, login_name, password, personal_name, middle_name, family_name, gender_mf, address_line_1]
Table Students, columns = [*,student_id, date_of_registration, date_of_latest_logon, login_name, password, personal_name, middle_name, family_name]
target dvq:
Visualize BAR SELECT date_of_latest_logon , COUNT(date_of_latest_logon) FROM Students WHERE family_name = "Jaskolski" OR family_name = "Langosh" BIN date_of_latest_logon BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday , display in desc by the y-axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(DEPARTMENT_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Find the number of the dates of the tests taken with result "Pass" .
database schema:
Table Student_Tests_Taken, columns = [*,registration_id, date_test_taken, test_result]
target dvq:
Visualize LINE SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = "Pass" BIN date_test_taken BY DAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by weekday , display Y-axis in desc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(MANAGER_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Return a bar chart about the distribution of Start_from and the amount of Start_from bin start_from by weekday .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , COUNT(Start_from) FROM hiring BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of hire_date and the sum of department_id bin hire_date by time , could you rank by the total number in desc ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(DEPARTMENT_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Bar graph to show the number of date arrived from different date arrived , and display in asc by the total number .
database schema:
Table Dogs, columns = [*,dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed]
target dvq:
Visualize BAR SELECT date_arrived , COUNT(date_arrived) FROM Dogs  ORDER BY COUNT(date_arrived) ASC BIN date_arrived BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by weekday , list total number in desc order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Draw a line chart about the change of the average of Shop_ID over Start_from , and group by attribute Is_full_time and bin start_from by time , display by the Start_from from low to high .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from ASC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
What are all the calendar dates ? Show a bar chart binning calendar date by weekday .
database schema:
Table Ref_Calendar, columns = [*,Calendar_Date, Day_Number]
target dvq:
Visualize BAR SELECT Calendar_Date , COUNT(Calendar_Date) FROM Ref_calendar BIN Calendar_Date BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of hire_date and the sum of salary bin hire_date by weekday in a bar chart , could you order by the sum salary in asc ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
I want to see trend of sum employee id by start from , and list x axis from high to low order .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Employee_ID) FROM hiring  ORDER BY Start_from DESC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Bin the hire date into Month interval , and then compute the average salary of employees in each month for a bar chart , note that just select those employees without the letter M in their first name .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name NOT LIKE '%M%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Find the dates of the tests taken with result "Pass" , and count them by a line chart
database schema:
Table Student_Tests_Taken, columns = [*,registration_id, date_test_taken, test_result]
target dvq:
Visualize LINE SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = "Pass" BIN date_test_taken BY DAY
****************************************************************************************************
nl_queries:
A line chart for returning the number of the date of birth for all the guests with gender code "Male" , sort by the X in descending .
database schema:
Table Guests, columns = [*,guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth]
target dvq:
Visualize LINE SELECT date_of_birth , COUNT(date_of_birth) FROM Guests WHERE gender_code = "Male"  ORDER BY date_of_birth DESC BIN date_of_birth BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time , could you list by the Y-axis from low to high ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(DEPARTMENT_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the average of department_id bin hire_date by time , and visualize them by a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
List the number of documents for each receipt date and bin by weekday in a bar chart , sort y axis from high to low order .
database schema:
Table Documents, columns = [*,document_id, document_status_code, document_type_code, shipping_agent_code, receipt_date, receipt_number, other_details]
target dvq:
Visualize BAR SELECT receipt_date , COUNT(receipt_date) FROM Documents  ORDER BY COUNT(receipt_date) DESC BIN receipt_date BY WEEKDAY
****************************************************************************************************
nl_queries:
Return a bar chart about the distribution of Start_from and the average of Shop_ID bin start_from by weekday .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , AVG(Shop_ID) FROM hiring BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the sum of manager_id bin hire_date by time , and visualize them by a bar chart , order in descending by the y-axis .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(MANAGER_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Find the dates of the tests taken with result "Pass" , and count them by a bar chart
database schema:
Table Student_Tests_Taken, columns = [*,registration_id, date_test_taken, test_result]
target dvq:
Visualize BAR SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = "Pass" BIN date_test_taken BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the sum of department_id over the hire_date bin hire_date by weekday by a bar chart , sort by the sum department id in ascending please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(DEPARTMENT_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the average of manager_id bin hire_date by weekday , and visualize them by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the average of salary bin hire_date by time , and show by the y-axis in desc .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Plot openning year by how many openning year as a trend line , and show x-axis from low to high order .
database schema:
Table cinema, columns = [*,Cinema_ID, Name, Openning_year, Capacity, Location]
target dvq:
Visualize LINE SELECT Openning_year , COUNT(Openning_year) FROM cinema  ORDER BY Openning_year ASC BIN Openning_year BY YEAR
****************************************************************************************************
nl_queries:
What are the dates with a maximum temperature higher than 85 , and count them by a bar chart
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85 BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
How many documents in different ending date ? Return a line chart binning ending date by year interval , I want to rank X in descending order .
database schema:
Table Document_Locations, columns = [*,Document_ID, Location_Code, Date_in_Location_From, Date_in_Locaton_To]
target dvq:
Visualize LINE SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations  ORDER BY Date_in_Locaton_To DESC BIN Date_in_Locaton_To BY YEAR
****************************************************************************************************
nl_queries:
A bar chart for what are the number of the distinct visit dates ?
database schema:
Table Visits, columns = [*,Visit_ID, Tourist_Attraction_ID, Tourist_ID, Visit_Date, Visit_Details]
target dvq:
Visualize BAR SELECT Visit_Date , COUNT(Visit_Date) FROM VISITS BIN Visit_Date BY WEEKDAY
****************************************************************************************************
nl_queries:
Draw a line chart about the change of the average of Employee_ID over Start_from bin start_from by time .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Employee_ID) FROM hiring BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Return a line chart about the change of the average of Employee_ID over Start_from bin start_from by time .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Employee_ID) FROM hiring BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
What are the number of the dates that have an average sea level pressure between 303 and 31 ? , could you sort in desc by the y axis ?
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) DESC BIN date BY YEAR
****************************************************************************************************
nl_queries:
Find the dates of the tests taken with result "Pass" , and count them by a bar chart , and display y-axis in asc order .
database schema:
Table Student_Tests_Taken, columns = [*,registration_id, date_test_taken, test_result]
target dvq:
Visualize BAR SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = "Pass"  ORDER BY COUNT(date_test_taken) ASC BIN date_test_taken BY WEEKDAY
****************************************************************************************************
nl_queries:
Bin all date of transactions into the weekday interval , and sum the share count of each bin Return the result using a bar chart , order in asc by the total number of share count please .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize BAR SELECT date_of_transaction , SUM(share_count) FROM TRANSACTIONS  ORDER BY SUM(share_count) ASC BIN date_of_transaction BY WEEKDAY
****************************************************************************************************
nl_queries:
Bin the hire date into Month interval , and then compute the average salary of employees in each month for a bar chart , note that just select those employees without the letter M in their first name , display by the the average of salary from high to low .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name NOT LIKE '%M%'  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
How many accounts are opened in each day ? Bin the account open day by weekday in a bar chart , and sort by the Y-axis in asc .
database schema:
Table Accounts, columns = [*,account_id, customer_id, date_account_opened, account_name, other_account_details]
target dvq:
Visualize BAR SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts  ORDER BY COUNT(date_account_opened) ASC BIN date_account_opened BY WEEKDAY
****************************************************************************************************
nl_queries:
What are the number of the dates with a maximum temperature higher than 85 ?
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85 BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
A line chart shows the change of the sum of Employee_ID over Start_from bin start_from by time
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Employee_ID) FROM hiring BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Visualize a bar chart about the distribution of Start_from and the average of Shop_ID , and group by attribute Is_full_time and bin start_from by weekday .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , AVG(Shop_ID) FROM hiring GROUP BY Is_full_time BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
Bin the hire date of employees into Month interval and count them for visualizing a bar chart , and sort by the Y from high to low please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the sum of department_id over the hire_date bin hire_date by time by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the amount of hire_date bin hire_date by weekday , and visualize them by a bar chart , I want to list in asc by the total number .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Find the number of the dates of the tests taken with result "Pass" , order x-axis from high to low order .
database schema:
Table Student_Tests_Taken, columns = [*,registration_id, date_test_taken, test_result]
target dvq:
Visualize LINE SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = "Pass"  ORDER BY date_test_taken DESC BIN date_test_taken BY DAY
****************************************************************************************************
nl_queries:
List the number of completion students in each day and bin date of completion by weekday with a bar chart , and list in desc by the y-axis .
database schema:
Table Student_Course_Enrolment, columns = [*,registration_id, student_id, course_id, date_of_enrolment, date_of_completion]
target dvq:
Visualize BAR SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment  ORDER BY COUNT(date_of_completion) DESC BIN date_of_completion BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by weekday , could you order by the Y-axis in ascending ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(EMPLOYEE_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the average of department_id over the hire_date bin hire_date by weekday , and sort Y from low to high order please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(DEPARTMENT_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the amount of hire_date bin hire_date by time in a bar chart , and could you show in asc by the y-axis ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
What are the number of the different years in which there were cars produced that weighed less than 4000 and also cars that weighted more than 3000 ? , and show by the y axis from high to low please .
database schema:
Table cars_data, columns = [*,Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year]
target dvq:
Visualize BAR SELECT Year , COUNT(Year) FROM cars_data where weight between 3000 and 4000  ORDER BY COUNT(Year) DESC BIN Year BY WEEKDAY
****************************************************************************************************
nl_queries:
On what dates were employees without the letter M in their first names hired , and count them by a bar chart
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name NOT LIKE '%M%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
A line chart shows the change of the average of Employee_ID over Start_from bin start_from by time , show X in desc order .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Employee_ID) FROM hiring  ORDER BY Start_from DESC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Show the number of documents in different ending date Bin ending date by year interval and group by location code with a group line chart , and rank in asc by the x-axis .
database schema:
Table Ref_Locations, columns = [*,Location_Code, Location_Name, Location_Description]
Table Document_Locations, columns = [*,Document_ID, Location_Code, Date_in_Location_From, Date_in_Locaton_To]
target dvq:
Visualize LINE SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Location_Code ORDER BY Date_in_Locaton_To ASC BIN Date_in_Locaton_To BY YEAR
****************************************************************************************************
nl_queries:
Show the number of documents in different starting date Bin starting date by year interval and group by location code with a group line chart , sort x axis from low to high order .
database schema:
Table Ref_Locations, columns = [*,Location_Code, Location_Name, Location_Description]
Table Document_Locations, columns = [*,Document_ID, Location_Code, Date_in_Location_From, Date_in_Locaton_To]
target dvq:
Visualize LINE SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations GROUP BY Location_Code ORDER BY Date_in_Location_From ASC BIN Date_in_Location_From BY YEAR
****************************************************************************************************
nl_queries:
Draw a line chart about the change of the amount of Start_from over Start_from bin start_from by time .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , COUNT(Start_from) FROM hiring BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of hire_date and the average of salary bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
What is the sum of capacity of cinemas open for each year ? Return a line chart , could you show in descending by the X-axis ?
database schema:
Table cinema, columns = [*,Cinema_ID, Name, Openning_year, Capacity, Location]
target dvq:
Visualize LINE SELECT Openning_year , SUM(Capacity) FROM cinema  ORDER BY Openning_year DESC BIN Openning_year BY YEAR
****************************************************************************************************
nl_queries:
How many mills of 'Grondzeiler' type are built in each year ? Give me the trend , order in descending by the X .
database schema:
Table mill, columns = [*,architect_id, id, location, name, type, built_year, notes]
target dvq:
Visualize LINE SELECT built_year , COUNT(built_year) FROM mill WHERE TYPE = 'Grondzeiler'  ORDER BY built_year DESC BIN built_year BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the sum of salary bin hire_date by weekday , list total number of salary from low to high order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
How many completion students in each month ? Return a bar chart binning date of completion by month interval , show total number in ascending order .
database schema:
Table Student_Course_Enrolment, columns = [*,registration_id, student_id, course_id, date_of_enrolment, date_of_completion]
target dvq:
Visualize BAR SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment  ORDER BY COUNT(date_of_completion) ASC BIN date_of_completion BY MONTH
****************************************************************************************************
nl_queries:
count yearid for visualizing a line chart , and order X-axis in asc order .
database schema:
Table all_star, columns = [*,player_id, year, game_num, game_id, team_id, league_id, gp, starting_pos]
Table appearances, columns = [*,year, team_id, league_id, player_id, g_all, gs, g_batting, g_defense, g_p, g_c, g_1b, g_2b, g_3b, g_ss, g_lf, g_cf, g_rf, g_of, g_dh, g_ph, g_pr]
Table manager_award, columns = [*,player_id, award_id, year, league_id, tie, notes]
Table player_award, columns = [*,player_id, award_id, year, league_id, tie, notes]
Table manager_award_vote, columns = [*,award_id, year, league_id, player_id, points_won, points_max, votes_first]
Table player_award_vote, columns = [*,award_id, year, league_id, player_id, points_won, points_max, votes_first]
Table batting, columns = [*,player_id, year, stint, team_id, league_id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g_idp]
Table batting_postseason, columns = [*,year, round, player_id, team_id, league_id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g_idp]
Table player_college, columns = [*,player_id, college_id, year]
Table fielding, columns = [*,player_id, year, stint, team_id, league_id, pos, g, gs, inn_outs, po, a, e, dp, pb, wp, sb, cs, zr]
Table fielding_outfield, columns = [*,player_id, year, stint, glf, gcf, grf]
Table fielding_postseason, columns = [*,player_id, year, team_id, league_id, round, pos, g, gs, inn_outs, po, a, e, dp, tp, pb, sb, cs]
Table hall_of_fame, columns = [*,player_id, yearid, votedby, ballots, needed, votes, inducted, category, needed_note]
Table home_game, columns = [*,year, league_id, team_id, park_id, span_first, span_last, games, openings, attendance]
Table manager, columns = [*,player_id, year, team_id, league_id, inseason, g, w, l, rank, plyr_mgr]
Table manager_half, columns = [*,player_id, year, team_id, league_id, inseason, half, g, w, l, rank]
Table pitching, columns = [*,player_id, year, stint, team_id, league_id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g_idp]
Table pitching_postseason, columns = [*,player_id, year, round, team_id, league_id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g_idp]
Table salary, columns = [*,year, team_id, league_id, player_id, salary]
Table postseason, columns = [*,year, round, team_id_winner, league_id_winner, team_id_loser, league_id_loser, wins, losses, ties]
Table team, columns = [*,year, league_id, team_id, franchise_id, div_id, rank, g, ghome, w, l, div_win, wc_win, lg_win, ws_win, r, ab, h, double, triple, hr, bb, so, sb, cs, hbp, sf, ra, er, era, cg, sho, sv, ipouts, ha, hra, bba, soa, e, dp, fp, name, park, attendance, bpf, ppf, team_id_br, team_id_lahman45, team_id_retro]
Table team_half, columns = [*,year, league_id, team_id, half, div_id, div_win, rank, g, w, l]
target dvq:
Visualize LINE SELECT yearid , COUNT(yearid) FROM hall_of_fame  ORDER BY yearid ASC BIN yearid BY YEAR
****************************************************************************************************
nl_queries:
Visualize a line chart about the change of the amount of Start_from over Start_from , and group by attribute Is_full_time and bin start_from by time , and show by the X-axis in asc .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , COUNT(Start_from) FROM hiring GROUP BY Is_full_time ORDER BY Start_from ASC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time , I want to sort by the Y in ascending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(DEPARTMENT_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
List the number of games in each season with a line chart , and show x-axis in ascending order .
database schema:
Table game, columns = [*,stadium_id, id, Season, Date, Home_team, Away_team, Score, Competition]
target dvq:
Visualize LINE SELECT Season , COUNT(Season) FROM game  ORDER BY Season ASC BIN Season BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the sum of salary bin hire_date by weekday , and visualize them by a bar chart , and sort total number in descending order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
A bar chart for giveing me the number of the dates when the max temperature was higher than 85 , and sort in descending by the Y .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) DESC BIN date BY YEAR
****************************************************************************************************
nl_queries:
Group and count the move in date in a bar chart , and bin the X-axis into week day interval , order y-axis in desc order .
database schema:
Table Residents, columns = [*,resident_id, property_id, date_moved_in, date_moved_out, other_details]
Table Residents_Services, columns = [*,resident_id, service_id, date_moved_in, property_id, date_requested, date_provided, other_details]
Table Customer_Events, columns = [*,Customer_Event_ID, customer_id, date_moved_in, property_id, resident_id, thing_id]
Table Customer_Event_Notes, columns = [*,Customer_Event_Note_ID, Customer_Event_ID, service_type_code, resident_id, property_id, date_moved_in]
target dvq:
Visualize BAR SELECT date_moved_in , COUNT(date_moved_in) FROM customer_events  ORDER BY COUNT(date_moved_in) DESC BIN date_moved_in BY WEEKDAY
****************************************************************************************************
nl_queries:
Visualize a line chart about the change of the sum of Employee_ID over Start_from , and group by attribute Is_full_time and bin start_from by time , order in desc by the X-axis .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from DESC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the amount of hire_date bin hire_date by time in a bar chart , display by the y-axis in descending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by time , display Y in desc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the average of department_id bin hire_date by weekday in a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the amount of hire_date bin hire_date by weekday , and visualize them by a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
I want to see trend mean employee id over start from by Is_full_time , sort by the x axis from high to low .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from DESC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the average of employee_id bin hire_date by weekday , and visualize them by a bar chart , list the average of employee id in descending order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(EMPLOYEE_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
What is the date of birth of every customer whose status code is 'Good Customer' , and count them by a bar chart , and order by the Y-axis from high to low please .
database schema:
Table Staff, columns = [*,staff_id, staff_address_id, nickname, first_name, middle_name, last_name, date_of_birth, date_joined_staff, date_left_staff]
Table Customers, columns = [*,customer_id, customer_address_id, customer_status_code, date_became_customer, date_of_birth, first_name, last_name, amount_outstanding, email_address, phone_number, cell_mobile_phone_number]
target dvq:
Visualize BAR SELECT date_of_birth , COUNT(date_of_birth) FROM Customers WHERE customer_status_code = 'Good Customer'  ORDER BY COUNT(date_of_birth) DESC BIN date_of_birth BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of hire_date and the sum of salary bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the average of department_id bin hire_date by time , and visualize them by a bar chart , could you list by the y-axis in asc ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(DEPARTMENT_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of hire_date and the sum of salary bin hire_date by weekday , and order y-axis in asc order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Show me about the change of the average of Employee_ID over Start_from , and group by attribute Is_full_time and bin start_from by time in a line chart , and order by the X from high to low please .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from DESC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Give me a bar chart for the number of date moved in of each date moved in , and could you list Y-axis from low to high order ?
database schema:
Table Residents, columns = [*,resident_id, property_id, date_moved_in, date_moved_out, other_details]
Table Residents_Services, columns = [*,resident_id, service_id, date_moved_in, property_id, date_requested, date_provided, other_details]
Table Customer_Events, columns = [*,Customer_Event_ID, customer_id, date_moved_in, property_id, resident_id, thing_id]
Table Customer_Event_Notes, columns = [*,Customer_Event_Note_ID, Customer_Event_ID, service_type_code, resident_id, property_id, date_moved_in]
target dvq:
Visualize BAR SELECT date_moved_in , COUNT(date_moved_in) FROM residents  ORDER BY COUNT(date_moved_in) ASC BIN date_moved_in BY WEEKDAY
****************************************************************************************************
nl_queries:
Show the number of documents in different starting date and bin starting date by weekday interval with a bar chart , and rank y axis in desc order please .
database schema:
Table Document_Locations, columns = [*,Document_ID, Location_Code, Date_in_Location_From, Date_in_Locaton_To]
target dvq:
Visualize BAR SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations  ORDER BY COUNT(Date_in_Location_From) DESC BIN Date_in_Location_From BY WEEKDAY
****************************************************************************************************
nl_queries:
Give me a bar chart to show how many dates with a max temperature greater than or equal to 80 for each day .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f >= 80 BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the average of manager_id bin hire_date by time in a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Return a bar chart about the distribution of Start_from and the average of Employee_ID , and group by attribute Is_full_time and bin start_from by weekday , rank from high to low by the y-axis .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , AVG(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY AVG(Employee_ID) DESC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
A line chart for what are the number of the distinct visit dates ? , show Visit_Date in desc order .
database schema:
Table Visits, columns = [*,Visit_ID, Tourist_Attraction_ID, Tourist_ID, Visit_Date, Visit_Details]
target dvq:
Visualize LINE SELECT Visit_Date , COUNT(Visit_Date) FROM VISITS  ORDER BY Visit_Date DESC BIN Visit_Date BY YEAR
****************************************************************************************************
nl_queries:
What is the number of movies for each year , ordered by budget in millions ? Visualize in a bar chart .
database schema:
Table book_club, columns = [*,book_club_id, Year, Author_or_Editor, Book_Title, Publisher, Category, Result]
Table movie, columns = [*,movie_id, Title, Year, Director, Budget_million, Gross_worldwide]
target dvq:
Visualize BAR SELECT Year , COUNT(Year) FROM movie  ORDER BY budget_million BIN Year BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the sum of department_id over the hire_date bin hire_date by time , sort by the total number from low to high .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(DEPARTMENT_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by time , and I want to sort Y-axis in ascending order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(MANAGER_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the sum of manager_id bin hire_date by time , and visualize them by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of hire_date and the sum of salary bin hire_date by time , sort total number of salary from high to low order please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of hire_date and the average of manager_id bin hire_date by weekday in a bar chart , and sort in desc by the the average of manager id .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(MANAGER_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Bar chart x axis booking end date y axis the number of booking end date
database schema:
Table Apartment_Bookings, columns = [*,apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date]
target dvq:
Visualize BAR SELECT booking_end_date , COUNT(booking_end_date) FROM Apartment_Bookings BIN booking_end_date BY WEEKDAY
****************************************************************************************************
nl_queries:
Bar chart x axis date moved in y axis how many date moved in
database schema:
Table Residents, columns = [*,resident_id, property_id, date_moved_in, date_moved_out, other_details]
Table Residents_Services, columns = [*,resident_id, service_id, date_moved_in, property_id, date_requested, date_provided, other_details]
Table Customer_Events, columns = [*,Customer_Event_ID, customer_id, date_moved_in, property_id, resident_id, thing_id]
Table Customer_Event_Notes, columns = [*,Customer_Event_Note_ID, Customer_Event_ID, service_type_code, resident_id, property_id, date_moved_in]
target dvq:
Visualize BAR SELECT date_moved_in , COUNT(date_moved_in) FROM customer_events BIN date_moved_in BY YEAR
****************************************************************************************************
nl_queries:
Please give me a bar chart that bins the installation date of stations into the day of week interval as the X-axis , and count for showing how many stations are installed each year .
database schema:
Table station, columns = [*,id, name, lat, long, dock_count, city, installation_date]
target dvq:
Visualize BAR SELECT installation_date , COUNT(installation_date) FROM station BIN installation_date BY WEEKDAY
****************************************************************************************************
nl_queries:
A line chart for what are the number of the dates of transactions with at least 100 share count or amount bigger than 100 ? , and sort from high to low by the X-axis .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100  ORDER BY date_of_transaction DESC BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
Stack bar chart of how many took office vs Minister based on took office , and could you sort by the y axis from low to high ?
database schema:
Table party, columns = [*,Party_ID, Minister, Took_office, Left_office, Region_ID, Party_name]
target dvq:
Visualize BAR SELECT Took_office , COUNT(Took_office) FROM party GROUP BY Minister ORDER BY COUNT(Took_office) ASC BIN Took_office BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the average of employee_id over the hire_date bin hire_date by weekday , and display y-axis from low to high order please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(EMPLOYEE_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the average of salary over the hire_date bin hire_date by time by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Bar graph to show how many installation date from different installation date , display the number of installation date from high to low order please .
database schema:
Table station, columns = [*,id, name, lat, long, dock_count, city, installation_date]
target dvq:
Visualize BAR SELECT installation_date , COUNT(installation_date) FROM station  ORDER BY COUNT(installation_date) DESC BIN installation_date BY YEAR
****************************************************************************************************
nl_queries:
How many parties of the time they took office , binning the left office into Weekday interval , and then split by the minister's name , and display in ascending by the Y-axis .
database schema:
Table party, columns = [*,Party_ID, Minister, Took_office, Left_office, Region_ID, Party_name]
target dvq:
Visualize BAR SELECT Left_office , COUNT(Left_office) FROM party GROUP BY Minister ORDER BY COUNT(Left_office) ASC BIN Left_office BY WEEKDAY
****************************************************************************************************
nl_queries:
Show the number of the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000 , could you list from high to low by the Y ?
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000  ORDER BY COUNT(date_of_transaction) DESC BIN date_of_transaction BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the amount of hire_date bin hire_date by time in a bar chart , display in ascending by the y-axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Give me a bar chart to show how many days with a max temperature greater than or equal to 80 for each year .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f >= 80 BIN date BY YEAR
****************************************************************************************************
nl_queries:
When are the birthdays of customer who are classified as 'Good Customer' status , and count them by a line chart
database schema:
Table Staff, columns = [*,staff_id, staff_address_id, nickname, first_name, middle_name, last_name, date_of_birth, date_joined_staff, date_left_staff]
Table Customers, columns = [*,customer_id, customer_address_id, customer_status_code, date_became_customer, date_of_birth, first_name, last_name, amount_outstanding, email_address, phone_number, cell_mobile_phone_number]
target dvq:
Visualize LINE SELECT date_of_birth , COUNT(date_of_birth) FROM Customers WHERE customer_status_code = 'Good Customer' BIN date_of_birth BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of hire_date and the sum of department_id bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of hire_date and the average of salary bin hire_date by time , and rank by the Y-axis in descending please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
List the number of enrolment students in each day and bin date of enrolment by weekday with a bar chart , and could you show Y-axis in descending order ?
database schema:
Table Student_Course_Enrolment, columns = [*,registration_id, student_id, course_id, date_of_enrolment, date_of_completion]
target dvq:
Visualize BAR SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment  ORDER BY COUNT(date_of_enrolment) DESC BIN date_of_enrolment BY WEEKDAY
****************************************************************************************************
nl_queries:
Show the average of cloud cover from each date , and I want to show Y-axis from high to low order please .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , AVG(cloud_cover) FROM weather  ORDER BY AVG(cloud_cover) DESC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
Compare the total salary by each hire date (bin it into the day of week interval) of employees using a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Visualize a line chart about the change of the sum of Employee_ID over Start_from , and group by attribute Is_full_time and bin start_from by time .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Employee_ID) FROM hiring GROUP BY Is_full_time BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of department_id over the hire_date bin hire_date by time by a bar chart , and list mean department id from high to low order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(DEPARTMENT_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of hire_date and the sum of salary bin hire_date by time , and I want to display by the total number of salary in ascending .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those dates that have the 5 highest cloud cover rates , please bin the date into Year interval and compute their average cloud cover .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , AVG(cloud_cover) FROM weather BIN date BY YEAR
****************************************************************************************************
nl_queries:
Which tests have "Pass" results ? Return the dates when the tests were taken , and count them by a line chart
database schema:
Table Student_Tests_Taken, columns = [*,registration_id, date_test_taken, test_result]
target dvq:
Visualize LINE SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = "Pass" BIN date_test_taken BY DAY
****************************************************************************************************
nl_queries:
How many parties of the time they took office , binning the took office into Year interval , and then split by the minister's name , and sort Y in desc order .
database schema:
Table party, columns = [*,Party_ID, Minister, Took_office, Left_office, Region_ID, Party_name]
target dvq:
Visualize BAR SELECT Took_office , COUNT(Took_office) FROM party GROUP BY Minister ORDER BY COUNT(Took_office) DESC BIN Took_office BY YEAR
****************************************************************************************************
nl_queries:
Give me line charts of worldwide gross the average of shop id over year start from by major genres Is_full_time
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Shop_ID) FROM hiring GROUP BY Is_full_time BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Show the average salary by each hire date of employees , and please bin the hire date into the day of week interval for showing a bar chart , could you order by the Y from high to low ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Bar chart x axis start from y axis the number of start from , and could you list in asc by the total number ?
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , COUNT(Start_from) FROM hiring  ORDER BY COUNT(Start_from) ASC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
A bar chart for what are the number of the dates that have an average sea level pressure between 30 . 3 and 31 ?
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31 BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find hire_date and the sum of employee_id bin hire_date by weekday , and visualize them by a bar chart , show y axis in desc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(EMPLOYEE_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the sum of salary bin hire_date by weekday , and visualize them by a bar chart , and sort total number in asc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Find the latest logon date of the students whose family name is "Jaskolski" or "Langosh" , and count them by a bar chart , I want to sort in ascending by the y axis .
database schema:
Table Course_Authors_and_Tutors, columns = [*,author_id, author_tutor_ATB, login_name, password, personal_name, middle_name, family_name, gender_mf, address_line_1]
Table Students, columns = [*,student_id, date_of_registration, date_of_latest_logon, login_name, password, personal_name, middle_name, family_name]
target dvq:
Visualize BAR SELECT date_of_latest_logon , COUNT(date_of_latest_logon) FROM Students WHERE family_name = "Jaskolski" OR family_name = "Langosh"  ORDER BY COUNT(date_of_latest_logon) ASC BIN date_of_latest_logon BY WEEKDAY
****************************************************************************************************
nl_queries:
Return a bar chart about the distribution of Start_from and the sum of Employee_ID , and group by attribute Is_full_time and bin start_from by weekday .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , SUM(Employee_ID) FROM hiring GROUP BY Is_full_time BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
Bin all date of transactions into the YEAR interval , and sum the share count of each bin . Return the result using a line chart .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , SUM(share_count) FROM TRANSACTIONS BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by weekday , and show y axis from high to low order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Bin the installation date into the day of week interval , and then you can draw a bar chart to tell me how many stations each year , and list Y in desc order .
database schema:
Table station, columns = [*,id, name, lat, long, dock_count, city, installation_date]
target dvq:
Visualize BAR SELECT installation_date , COUNT(installation_date) FROM station  ORDER BY COUNT(installation_date) DESC BIN installation_date BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the average of salary bin hire_date by time , and visualize them by a bar chart , show Y-axis from low to high order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by weekday , show in ascending by the y-axis .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(EMPLOYEE_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Show the number of the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000 , could you display by the how many date of transaction in ascending ?
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000  ORDER BY COUNT(date_of_transaction) ASC BIN date_of_transaction BY WEEKDAY
****************************************************************************************************
nl_queries:
Give me the comparison about the average of Employee_ID over the Start_from , and group by attribute Is_full_time and bin start_from by weekday , show Y in ascending order .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , AVG(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY AVG(Employee_ID) ASC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
Show the total salary by each hire date of employees , and please bin the hire date into the day of week interval for showing a bar chart , sort by the Y in asc .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the average of employee_id over the hire_date bin hire_date by weekday , I want to rank by the total number in desc .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(EMPLOYEE_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by weekday , and could you order in descending by the y-axis ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Give me the trend about the average of Shop_ID over Start_from , and group by attribute Is_full_time and bin start_from by time , order from high to low by the Start_from please .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from DESC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose first name does not containing the letter M , display their average salary by binning the hire date into Month interval for visualizing a bar chart , and order in asc by the y axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name NOT LIKE '%M%'  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Show the number of games in each season and group by away team in a group line chart . The x-axis is season .
database schema:
Table game, columns = [*,stadium_id, id, Season, Date, Home_team, Away_team, Score, Competition]
target dvq:
Visualize LINE SELECT Season , COUNT(Season) FROM game GROUP BY Away_team BIN Season BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the sum of manager_id bin hire_date by time , and visualize them by a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
A line chart for showing the number of the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000 , display from high to low by the x-axis .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000  ORDER BY date_of_transaction DESC BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
A bar chart for what are the number of the dates that have an average sea level pressure between 30 . 3 and 31 ?
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31 BIN date BY YEAR
****************************************************************************************************
nl_queries:
Bar chart x axis date of enrolment y axis the number of date of enrolment , and list y axis from low to high order .
database schema:
Table Student_Course_Enrolment, columns = [*,registration_id, student_id, course_id, date_of_enrolment, date_of_completion]
target dvq:
Visualize BAR SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment  ORDER BY COUNT(date_of_enrolment) ASC BIN date_of_enrolment BY WEEKDAY
****************************************************************************************************
nl_queries:
Draw a line chart about the change of the amount of Start_from over Start_from , and group by attribute Is_full_time and bin start_from by time , rank x axis in asc order .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , COUNT(Start_from) FROM hiring GROUP BY Is_full_time ORDER BY Start_from ASC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
What is the average cloud cover rates of the dates (bin into weekdays interval) that had the top 5 cloud cover rates ? You can draw me a bar chart for this purpose , rank by the mean cloud cover in asc .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , AVG(cloud_cover) FROM weather  ORDER BY AVG(cloud_cover) ASC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
For those dates that have the 5 highest cloud cover rates , please bin the date into day of the week interval and compute their average cloud cover , and could you display y-axis in desc order ?
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , AVG(cloud_cover) FROM weather  ORDER BY AVG(cloud_cover) DESC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday , display mean salary in ascending order please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the sum of employee_id over the hire_date bin hire_date by weekday by a bar chart , and display from low to high by the y axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(EMPLOYEE_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Draw a line chart about the change of the sum of Shop_ID over Start_from , and group by attribute Is_full_time and bin start_from by time .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Shop_ID) FROM hiring GROUP BY Is_full_time BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Give me the comparison about the average of Shop_ID over the Start_from , and group by attribute Is_full_time and bin start_from by weekday by a bar chart .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , AVG(Shop_ID) FROM hiring GROUP BY Is_full_time BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
Give me the comparison about the sum of Shop_ID over the Start_from , and group by attribute Is_full_time and bin start_from by weekday by a bar chart .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , SUM(Shop_ID) FROM hiring GROUP BY Is_full_time BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
Bar graph to show sum share count from different date of transaction
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize BAR SELECT date_of_transaction , SUM(share_count) FROM TRANSACTIONS BIN date_of_transaction BY WEEKDAY
****************************************************************************************************
nl_queries:
How many churches open each year ? Convert the year into the weekday interval and visualize with a bar chart .
database schema:
Table church, columns = [*,Church_ID, Name, Organized_by, Open_Date, Continuation_of]
target dvq:
Visualize BAR SELECT Open_Date , COUNT(Open_Date) FROM Church BIN Open_Date BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
A stacked bar chart that computes the total number of wines with a price is bigger than 100 of each year , and group by grape . Next , Bin the year into the weekday interval .
database schema:
Table grapes, columns = [*,ID, Grape, Color]
Table wine, columns = [*,No, Grape, Winery, Appelation, State, Name, Year, Price, Score, Cases, Drink]
target dvq:
Visualize BAR SELECT Year , COUNT(Year) FROM WINE WHERE Price > 100 GROUP BY Grape ORDER BY YEAR BIN Year BY WEEKDAY
****************************************************************************************************
nl_queries:
Tell me the average of capacity of cinemas open for each year in a line chart .
database schema:
Table cinema, columns = [*,Cinema_ID, Name, Openning_year, Capacity, Location]
target dvq:
Visualize LINE SELECT Openning_year , AVG(Capacity) FROM cinema BIN Openning_year BY YEAR
****************************************************************************************************
nl_queries:
Visualize a line chart about the change of the sum of Shop_ID over Start_from bin start_from by time , show from low to high by the X-axis .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Shop_ID) FROM hiring  ORDER BY Start_from ASC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by time , list from low to high by the y axis please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(DEPARTMENT_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Show the number of apartment bookings in each weekday and bin booking end date by weekday with a bar chart , and sort y axis in descending order .
database schema:
Table Apartment_Bookings, columns = [*,apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date]
target dvq:
Visualize BAR SELECT booking_end_date , COUNT(booking_end_date) FROM Apartment_Bookings  ORDER BY COUNT(booking_end_date) DESC BIN booking_end_date BY WEEKDAY
****************************************************************************************************
nl_queries:
What are the number of dates of birth of all the guests whose gender is "Male" ? , I want to show x axis in ascending order .
database schema:
Table Guests, columns = [*,guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth]
target dvq:
Visualize LINE SELECT date_of_birth , COUNT(date_of_birth) FROM Guests WHERE gender_code = "Male"  ORDER BY date_of_birth ASC BIN date_of_birth BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the average of manager_id bin hire_date by time in a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Show the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000 , and count them by a line chart , order x-axis from low to high order .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000  ORDER BY date_of_transaction ASC BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
I want to see trend of the number of open date by open date , and list by the X-axis in asc .
database schema:
Table church, columns = [*,Church_ID, Name, Organized_by, Open_Date, Continuation_of]
Table wedding, columns = [*,Church_ID, Male_ID, Female_ID, Year]
target dvq:
Visualize LINE SELECT Open_Date , COUNT(Open_Date) FROM church  ORDER BY Open_Date ASC BIN Open_Date BY YEAR
****************************************************************************************************
nl_queries:
Compare the total salary by each hire date (bin it into the day of week interval) of employees using a bar chart , I want to show by the y-axis in descending please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Draw a line chart about the change of the amount of Start_from over Start_from , and group by attribute Is_full_time and bin start_from by time , and I want to display by the x axis in descending please .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , COUNT(Start_from) FROM hiring GROUP BY Is_full_time ORDER BY Start_from DESC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday , and order by the Y-axis in descending .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Give me a bar chart to show how many days with a max temperature greater than or equal to 80 for each year , and sort total number from high to low order .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f >= 80  ORDER BY COUNT(date) DESC BIN date BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the average of manager_id bin hire_date by weekday in a bar chart , and show by the the average of manager id from high to low .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(MANAGER_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of hire_date and the average of manager_id bin hire_date by time in a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
I want to see trend of how many receipt date by receipt date , I want to display from low to high by the X .
database schema:
Table Documents, columns = [*,document_id, document_status_code, document_type_code, shipping_agent_code, receipt_date, receipt_number, other_details]
target dvq:
Visualize LINE SELECT receipt_date , COUNT(receipt_date) FROM Documents  ORDER BY receipt_date ASC BIN receipt_date BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by time , I want to display from high to low by the y axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(EMPLOYEE_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the sum of department_id over the hire_date bin hire_date by time by a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Show all calendar dates and bin by weekday in a bar chart , could you order how many calendar date from low to high order ?
database schema:
Table Ref_Calendar, columns = [*,Calendar_Date, Day_Number]
target dvq:
Visualize BAR SELECT Calendar_Date , COUNT(Calendar_Date) FROM Ref_calendar  ORDER BY COUNT(Calendar_Date) ASC BIN Calendar_Date BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the sum of manager_id bin hire_date by weekday , and sort from high to low by the y-axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(MANAGER_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Show how many cinemas open for each year in a line chart , and rank by the x-axis in asc .
database schema:
Table cinema, columns = [*,Cinema_ID, Name, Openning_year, Capacity, Location]
target dvq:
Visualize LINE SELECT Openning_year , COUNT(Openning_year) FROM cinema  ORDER BY Openning_year ASC BIN Openning_year BY YEAR
****************************************************************************************************
nl_queries:
Visualize a bar chart about the distribution of Start_from and the sum of Employee_ID bin start_from by weekday , I want to order Y in desc order .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , SUM(Employee_ID) FROM hiring  ORDER BY SUM(Employee_ID) DESC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
How many apartment bookings in each year ? Show me a bar chart binning booking start date by year , and I want to rank in desc by the Y .
database schema:
Table Apartment_Bookings, columns = [*,apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date]
target dvq:
Visualize BAR SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings  ORDER BY COUNT(booking_start_date) DESC BIN booking_start_date BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the sum of manager_id bin hire_date by weekday , and visualize them by a bar chart , and I want to order in asc by the total number of manager id please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(MANAGER_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Show me about the change of the sum of Employee_ID over Start_from bin start_from by time in a line chart , and show in desc by the Start_from .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Employee_ID) FROM hiring  ORDER BY Start_from DESC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
What is the date of birth of every customer whose status code is 'Good Customer' , and count them by a bar chart , I want to rank by the total number from low to high .
database schema:
Table Staff, columns = [*,staff_id, staff_address_id, nickname, first_name, middle_name, last_name, date_of_birth, date_joined_staff, date_left_staff]
Table Customers, columns = [*,customer_id, customer_address_id, customer_status_code, date_became_customer, date_of_birth, first_name, last_name, amount_outstanding, email_address, phone_number, cell_mobile_phone_number]
target dvq:
Visualize BAR SELECT date_of_birth , COUNT(date_of_birth) FROM Customers WHERE customer_status_code = 'Good Customer'  ORDER BY COUNT(date_of_birth) ASC BIN date_of_birth BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the average of department_id bin hire_date by weekday in a bar chart , sort Y from low to high order please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(DEPARTMENT_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Show the number of documents in different starting date Bin starting date by year interval and group by location code with a group line chart , and order in desc by the X .
database schema:
Table Ref_Locations, columns = [*,Location_Code, Location_Name, Location_Description]
Table Document_Locations, columns = [*,Document_ID, Location_Code, Date_in_Location_From, Date_in_Locaton_To]
target dvq:
Visualize LINE SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations GROUP BY Location_Code ORDER BY Date_in_Location_From DESC BIN Date_in_Location_From BY YEAR
****************************************************************************************************
nl_queries:
What is the average cloud cover rates of the dates (bin into year interval) that had the top 5 cloud cover rates ? You can draw me a bar chart for this purpose .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , AVG(cloud_cover) FROM weather BIN date BY YEAR
****************************************************************************************************
nl_queries:
When do all the researcher role staff start to work ? Bin the time into weekday interval and count them with a bar chart , and display from high to low by the y axis .
database schema:
Table Project_Staff, columns = [*,staff_id, project_id, role_code, date_from, date_to, other_details]
target dvq:
Visualize BAR SELECT date_from , COUNT(date_from) FROM Project_Staff ORDER BY COUNT(date_from) DESC BIN date_from BY WEEKDAY
****************************************************************************************************
nl_queries:
Stacked bar chart of the number of start from for with each Is_full_time in each start from , order total number in asc order .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , COUNT(Start_from) FROM hiring GROUP BY Is_full_time ORDER BY COUNT(Start_from) ASC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday , and order by the y-axis in descending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(DEPARTMENT_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by time .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Can you draw the trend of how many date from over the date from ? , and display in ascending by the X .
database schema:
Table Project_Staff, columns = [*,staff_id, project_id, role_code, date_from, date_to, other_details]
target dvq:
Visualize LINE SELECT date_from , COUNT(date_from) FROM Project_Staff ORDER BY date_from ASC BIN date_from BY YEAR
****************************************************************************************************
nl_queries:
List the number of dogs arrived in each year with a bar chart , rank Y-axis in descending order please .
database schema:
Table Dogs, columns = [*,dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed]
target dvq:
Visualize BAR SELECT date_arrived , COUNT(date_arrived) FROM Dogs  ORDER BY COUNT(date_arrived) DESC BIN date_arrived BY YEAR
****************************************************************************************************
nl_queries:
What are the dates in which the mean sea level pressure was between 303 and 31 , and count them by a bar chart , could you sort in desc by the y axis ?
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) DESC BIN date BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time , and show in ascending by the Y-axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(DEPARTMENT_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Show how many cinemas open for each year in a line chart , show X-axis in descending order .
database schema:
Table cinema, columns = [*,Cinema_ID, Name, Openning_year, Capacity, Location]
target dvq:
Visualize LINE SELECT Openning_year , COUNT(Openning_year) FROM cinema  ORDER BY Openning_year DESC BIN Openning_year BY YEAR
****************************************************************************************************
nl_queries:
For the average of Shop_ID , Start_from , visualize the trend , and sort x-axis in descending order .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from DESC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
What are the number of dates of birth of all the guests whose gender is "Male" ? , show by the x axis in desc .
database schema:
Table Guests, columns = [*,guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth]
target dvq:
Visualize LINE SELECT date_of_birth , COUNT(date_of_birth) FROM Guests WHERE gender_code = "Male"  ORDER BY date_of_birth DESC BIN date_of_birth BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by time , and order Y from low to high order please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(DEPARTMENT_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Show the number of accounts opened in each day Bin the account open day by weekday in a bar chart , and order from low to high by the y-axis .
database schema:
Table Accounts, columns = [*,account_id, customer_id, date_account_opened, account_name, other_account_details]
target dvq:
Visualize BAR SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts  ORDER BY COUNT(date_account_opened) ASC BIN date_account_opened BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by weekday , show y axis in desc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(EMPLOYEE_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Draw a bar chart about the distribution of Start_from and the sum of Employee_ID , and group by attribute Is_full_time and bin start_from by weekday , and I want to show total number in desc order .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , SUM(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY SUM(Employee_ID) DESC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
Return a line chart about the change of the amount of Start_from over Start_from , and group by attribute Is_full_time and bin start_from by time .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , COUNT(Start_from) FROM hiring GROUP BY Is_full_time BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the sum of department_id bin hire_date by weekday in a bar chart , display by the y axis from low to high .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(DEPARTMENT_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Bar chart x axis date moved in y axis how many date moved in , could you order by the total number in descending ?
database schema:
Table Residents, columns = [*,resident_id, property_id, date_moved_in, date_moved_out, other_details]
Table Residents_Services, columns = [*,resident_id, service_id, date_moved_in, property_id, date_requested, date_provided, other_details]
Table Customer_Events, columns = [*,Customer_Event_ID, customer_id, date_moved_in, property_id, resident_id, thing_id]
Table Customer_Event_Notes, columns = [*,Customer_Event_Note_ID, Customer_Event_ID, service_type_code, resident_id, property_id, date_moved_in]
target dvq:
Visualize BAR SELECT date_moved_in , COUNT(date_moved_in) FROM customer_events  ORDER BY COUNT(date_moved_in) DESC BIN date_moved_in BY YEAR
****************************************************************************************************
nl_queries:
Show the total salary by each hire date of employees , and please bin the hire date into the day of week interval for showing a bar chart , and I want to show by the y-axis in descending please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the sum of manager_id over the hire_date bin hire_date by time by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Visualize a bar chart about the distribution of Start_from and the average of Shop_ID , and group by attribute Is_full_time and bin start_from by weekday , rank Y-axis from high to low order .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , AVG(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY AVG(Shop_ID) DESC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find hire_date and the sum of employee_id bin hire_date by weekday , and visualize them by a bar chart , display by the Y in asc .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(EMPLOYEE_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
On which day has it neither been foggy nor rained in the zip code of 94107 , and count them by a bar chart , sort by the y axis in desc .
database schema:
Table trip, columns = [*,id, duration, start_date, start_station_name, start_station_id, end_date, end_station_name, end_station_id, bike_id, subscription_type, zip_code]
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE zip_code = 94107 AND EVENTS != "Fog" AND EVENTS != "Rain"  ORDER BY COUNT(date) DESC BIN date BY YEAR
****************************************************************************************************
nl_queries:
Give me line charts of worldwide gross the number of date in location from over year date in location from by major genres Location_Code , and order X in asc order .
database schema:
Table Ref_Locations, columns = [*,Location_Code, Location_Name, Location_Description]
Table Document_Locations, columns = [*,Document_ID, Location_Code, Date_in_Location_From, Date_in_Locaton_To]
target dvq:
Visualize LINE SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations GROUP BY Location_Code ORDER BY Date_in_Location_From ASC BIN Date_in_Location_From BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by time , could you order by the Y-axis from low to high ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(MANAGER_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Plot calendar date by how many calendar date as a line chart , rank X in asc order please .
database schema:
Table Ref_Calendar, columns = [*,Calendar_Date, Day_Number]
target dvq:
Visualize LINE SELECT Calendar_Date , COUNT(Calendar_Date) FROM Ref_calendar  ORDER BY Calendar_Date ASC BIN Calendar_Date BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a bar chart shows the distribution of hire_date and the sum of salary bin hire_date by time .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
A line chart shows the change of the sum of Employee_ID over Start_from bin start_from by time , and list x axis from high to low order .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Employee_ID) FROM hiring  ORDER BY Start_from DESC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Which tests have "Pass" results ? Return the dates when the tests were taken , and count them by a line chart , and order x-axis from high to low order .
database schema:
Table Student_Tests_Taken, columns = [*,registration_id, date_test_taken, test_result]
target dvq:
Visualize LINE SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = "Pass"  ORDER BY date_test_taken DESC BIN date_test_taken BY DAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of hire_date and the average of salary bin hire_date by time , and I want to list in ascending by the Y-axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
A bar chart for what are the number of the dates with a maximum temperature higher than 85 ?
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85 BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
Visualize a bar chart about the distribution of Start_from and the average of Shop_ID bin start_from by weekday , and rank by the Y-axis in descending please .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , AVG(Shop_ID) FROM hiring  ORDER BY AVG(Shop_ID) DESC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the sum of employee_id over the hire_date bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the sum of salary bin hire_date by time in a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday , and display by the total number from low to high .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Return the date of birth for all the guests with gender code "Male" , and count them by a line chart , I want to show x axis in ascending order .
database schema:
Table Guests, columns = [*,guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth]
target dvq:
Visualize LINE SELECT date_of_birth , COUNT(date_of_birth) FROM Guests WHERE gender_code = "Male"  ORDER BY date_of_birth ASC BIN date_of_birth BY YEAR
****************************************************************************************************
nl_queries:
Stack bar chart of sum employee id vs Is_full_time based on start from
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , SUM(Employee_ID) FROM hiring GROUP BY Is_full_time BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the sum of employee_id bin hire_date by weekday in a bar chart , could you sort Y in ascending order ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(EMPLOYEE_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by time , and display by the Y-axis in desc .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
When do all the researcher role staff start to work ? Bin the time into weekday interval and count them with a bar chart , I want to list in asc by the Y-axis please .
database schema:
Table Project_Staff, columns = [*,staff_id, project_id, role_code, date_from, date_to, other_details]
target dvq:
Visualize BAR SELECT date_from , COUNT(date_from) FROM Project_Staff ORDER BY COUNT(date_from) ASC BIN date_from BY WEEKDAY
****************************************************************************************************
nl_queries:
On which day has it neither been foggy nor rained in the zip code of 94107 , and count them by a bar chart
database schema:
Table trip, columns = [*,id, duration, start_date, start_station_name, start_station_id, end_date, end_station_name, end_station_id, bike_id, subscription_type, zip_code]
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE zip_code = 94107 AND EVENTS != "Fog" AND EVENTS != "Rain" BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
Draw a bar chart about the distribution of Start_from and the average of Employee_ID , and group by attribute Is_full_time and bin start_from by weekday , and list in desc by the Y .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , AVG(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY AVG(Employee_ID) DESC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Tell me the average of capacity of cinemas open for each year in a line chart , sort in asc by the Openning_year .
database schema:
Table cinema, columns = [*,Cinema_ID, Name, Openning_year, Capacity, Location]
target dvq:
Visualize LINE SELECT Openning_year , AVG(Capacity) FROM cinema  ORDER BY Openning_year ASC BIN Openning_year BY YEAR
****************************************************************************************************
nl_queries:
Plot sum capacity over openning year in a line chart , and I want to rank by the x axis in ascending .
database schema:
Table cinema, columns = [*,Cinema_ID, Name, Openning_year, Capacity, Location]
target dvq:
Visualize LINE SELECT Openning_year , SUM(Capacity) FROM cinema  ORDER BY Openning_year ASC BIN Openning_year BY YEAR
****************************************************************************************************
nl_queries:
Give me the trend about the date_to attributes of all researchers , and bin the date_to into Year interval .
database schema:
Table Project_Staff, columns = [*,staff_id, project_id, role_code, date_from, date_to, other_details]
target dvq:
Visualize LINE SELECT date_to , COUNT(date_to) FROM Project_Staff BIN date_to BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by time , and sort by the Y from low to high .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
How many home games by each year (bin the year attr into weekdays interval) ? Give me a line chart , list X-axis from low to high order .
database schema:
Table all_star, columns = [*,player_id, year, game_num, game_id, team_id, league_id, gp, starting_pos]
Table appearances, columns = [*,year, team_id, league_id, player_id, g_all, gs, g_batting, g_defense, g_p, g_c, g_1b, g_2b, g_3b, g_ss, g_lf, g_cf, g_rf, g_of, g_dh, g_ph, g_pr]
Table manager_award, columns = [*,player_id, award_id, year, league_id, tie, notes]
Table player_award, columns = [*,player_id, award_id, year, league_id, tie, notes]
Table manager_award_vote, columns = [*,award_id, year, league_id, player_id, points_won, points_max, votes_first]
Table player_award_vote, columns = [*,award_id, year, league_id, player_id, points_won, points_max, votes_first]
Table batting, columns = [*,player_id, year, stint, team_id, league_id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g_idp]
Table batting_postseason, columns = [*,year, round, player_id, team_id, league_id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g_idp]
Table player_college, columns = [*,player_id, college_id, year]
Table fielding, columns = [*,player_id, year, stint, team_id, league_id, pos, g, gs, inn_outs, po, a, e, dp, pb, wp, sb, cs, zr]
Table fielding_outfield, columns = [*,player_id, year, stint, glf, gcf, grf]
Table fielding_postseason, columns = [*,player_id, year, team_id, league_id, round, pos, g, gs, inn_outs, po, a, e, dp, tp, pb, sb, cs]
Table home_game, columns = [*,year, league_id, team_id, park_id, span_first, span_last, games, openings, attendance]
Table manager, columns = [*,player_id, year, team_id, league_id, inseason, g, w, l, rank, plyr_mgr]
Table manager_half, columns = [*,player_id, year, team_id, league_id, inseason, half, g, w, l, rank]
Table pitching, columns = [*,player_id, year, stint, team_id, league_id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g_idp]
Table pitching_postseason, columns = [*,player_id, year, round, team_id, league_id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g_idp]
Table salary, columns = [*,year, team_id, league_id, player_id, salary]
Table postseason, columns = [*,year, round, team_id_winner, league_id_winner, team_id_loser, league_id_loser, wins, losses, ties]
Table team, columns = [*,year, league_id, team_id, franchise_id, div_id, rank, g, ghome, w, l, div_win, wc_win, lg_win, ws_win, r, ab, h, double, triple, hr, bb, so, sb, cs, hbp, sf, ra, er, era, cg, sho, sv, ipouts, ha, hra, bba, soa, e, dp, fp, name, park, attendance, bpf, ppf, team_id_br, team_id_lahman45, team_id_retro]
Table team_half, columns = [*,year, league_id, team_id, half, div_id, div_win, rank, g, w, l]
target dvq:
Visualize LINE SELECT year , COUNT(year) FROM home_game  ORDER BY year ASC BIN year BY YEAR
****************************************************************************************************
nl_queries:
How many enrolment students in each day ? Return a bar chart binning date of enrolment by weekday , and list y axis from low to high order .
database schema:
Table Student_Course_Enrolment, columns = [*,registration_id, student_id, course_id, date_of_enrolment, date_of_completion]
target dvq:
Visualize BAR SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment  ORDER BY COUNT(date_of_enrolment) ASC BIN date_of_enrolment BY WEEKDAY
****************************************************************************************************
nl_queries:
Visualize a line chart that bins the open date into the Year interval and counts them , I want to rank in ascending by the x-axis please .
database schema:
Table church, columns = [*,Church_ID, Name, Organized_by, Open_Date, Continuation_of]
Table wedding, columns = [*,Church_ID, Male_ID, Female_ID, Year]
target dvq:
Visualize LINE SELECT Open_Date , COUNT(Open_Date) FROM church  ORDER BY Open_Date ASC BIN Open_Date BY YEAR
****************************************************************************************************
nl_queries:
When do all the researcher role staff stop working ? Bin the time into weekday interval and count them with a bar chart .
database schema:
Table Project_Staff, columns = [*,staff_id, project_id, role_code, date_from, date_to, other_details]
target dvq:
Visualize BAR SELECT date_to , COUNT(date_to) FROM Project_Staff BIN date_to BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by weekday .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Show sum salary from each hire date
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Bar chart x axis date of enrolment y axis the number of date of enrolment , sort in desc by the Y-axis .
database schema:
Table Student_Course_Enrolment, columns = [*,registration_id, student_id, course_id, date_of_enrolment, date_of_completion]
target dvq:
Visualize BAR SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment  ORDER BY COUNT(date_of_enrolment) DESC BIN date_of_enrolment BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of hire_date and the average of employee_id bin hire_date by time in a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of hire_date and the average of salary bin hire_date by weekday in a bar chart , and rank in asc by the total number .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose first name does not contain the letter M , sum their salary by binning the hire date into the day of week interval for visualizing a bar chart , and list from high to low by the y axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name NOT LIKE '%M%'  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the sum of department_id over the hire_date bin hire_date by time by a bar chart , and order in desc by the y axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(DEPARTMENT_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the average of salary over the hire_date bin hire_date by time by a bar chart , I want to list in ascending by the Y-axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Draw a bar chart about the distribution of Start_from and the average of Shop_ID , and group by attribute Is_full_time and bin start_from by weekday , and I want to list by the y axis from high to low .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , AVG(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY AVG(Shop_ID) DESC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
What is the frequency of the dates (bin into weekday interval) that had the top 5 cloud cover rates ? You can draw me a bar chart for this purpose , I want to sort in descending by the the number of date .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather  ORDER BY COUNT(date) DESC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of hire_date and the average of salary bin hire_date by time .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Give me the trend about the sum of Employee_ID over Start_from , and group by attribute Is_full_time and bin start_from by time , and I want to list x axis from low to high order .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from ASC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
A bar chart for what are the number of the dates that have an average sea level pressure between 303 and 31 ? , list by the the number of date from low to high .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) ASC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
When do all the researcher role staff start to work ? Bin the time into YEAR interval and count them with a line chart .
database schema:
Table Project_Staff, columns = [*,staff_id, project_id, role_code, date_from, date_to, other_details]
target dvq:
Visualize LINE SELECT date_from , COUNT(date_from) FROM Project_Staff BIN date_from BY YEAR
****************************************************************************************************
nl_queries:
How many documents in different ending date ? Return a line chart binning ending date by year interval , could you rank by the X-axis from low to high ?
database schema:
Table Document_Locations, columns = [*,Document_ID, Location_Code, Date_in_Location_From, Date_in_Locaton_To]
target dvq:
Visualize LINE SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations  ORDER BY Date_in_Locaton_To ASC BIN Date_in_Locaton_To BY YEAR
****************************************************************************************************
nl_queries:
What is the date of birth of every customer whose status code is 'Good Customer' , and count them by a line chart , and show from low to high by the X-axis please .
database schema:
Table Staff, columns = [*,staff_id, staff_address_id, nickname, first_name, middle_name, last_name, date_of_birth, date_joined_staff, date_left_staff]
Table Customers, columns = [*,customer_id, customer_address_id, customer_status_code, date_became_customer, date_of_birth, first_name, last_name, amount_outstanding, email_address, phone_number, cell_mobile_phone_number]
target dvq:
Visualize LINE SELECT date_of_birth , COUNT(date_of_birth) FROM Customers WHERE customer_status_code = 'Good Customer'  ORDER BY date_of_birth ASC BIN date_of_birth BY YEAR
****************************************************************************************************
nl_queries:
A bar chart that computes the total number of wines with a price is bigger than 100 Next , Bin the year into the weekday interval , and I want to rank by the y axis in desc please .
database schema:
Table wine, columns = [*,No, Grape, Winery, Appelation, State, Name, Year, Price, Score, Cases, Drink]
target dvq:
Visualize BAR SELECT Year , COUNT(Year) FROM WINE WHERE Price > 100  ORDER BY COUNT(Year) DESC BIN Year BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by weekday , could you sort in asc by the total number ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(MANAGER_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
A line chart shows the trend of the amount of Start_from over Start_from bin start_from by time , and display by the x axis in ascending .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , COUNT(Start_from) FROM hiring  ORDER BY Start_from ASC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Show me about the change of the average of Employee_ID over Start_from bin start_from by time in a line chart , and display by the X from low to high .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Employee_ID) FROM hiring  ORDER BY Start_from ASC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the average of salary bin hire_date by weekday , and visualize them by a bar chart , list y axis from low to high order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Bar chart x axis date y axis the number of date
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
A bar chart that computes the total number of wines with a price is bigger than 100 . Next , Bin the year into the weekday interval .
database schema:
Table wine, columns = [*,No, Grape, Winery, Appelation, State, Name, Year, Price, Score, Cases, Drink]
target dvq:
Visualize BAR SELECT Year , COUNT(Year) FROM WINE WHERE Price > 100 BIN Year BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by time , and rank by the sum department id in descending please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(DEPARTMENT_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of salary over the hire_date bin hire_date by weekday .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday , rank in ascending by the Y .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
What are the number of the dates with a maximum temperature higher than 85 ? , I want to rank by the y-axis in asc .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) ASC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the average of employee_id bin hire_date by weekday in a bar chart , could you show Y in ascending order ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(EMPLOYEE_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Draw a bar chart about the distribution of Start_from and the amount of Start_from , and group by attribute Is_full_time and bin start_from by weekday , and could you rank from high to low by the Y ?
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , COUNT(Start_from) FROM hiring GROUP BY Is_full_time ORDER BY COUNT(Start_from) DESC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
What are the number of the dates that have an average sea level pressure between 30 . 3 and 31 ?
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31 BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
For each station , bin its longitude divided by zero as buckets , and count the frequency in each bucket , and I want to show by the Y in ascending .
database schema:
Table station, columns = [*,id, name, lat, long, dock_count, city, installation_date]
target dvq:
Visualize BAR SELECT long , COUNT(long) FROM station  ORDER BY COUNT(long) ASC BIN long BY ZERO
****************************************************************************************************
nl_queries:
A line chart shows the change of the sum of Employee_ID over Start_from bin start_from by time , sort X-axis in asc order .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Employee_ID) FROM hiring  ORDER BY Start_from ASC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Give me line charts of worldwide gross sum employee id over year start from by major genres Is_full_time , and I want to sort by the x-axis from low to high .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from ASC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Give me the number of the dates when the max temperature was higher than 85 , sort the number of date in descending order .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) DESC BIN date BY YEAR
****************************************************************************************************
nl_queries:
What are the number of the dates that have an average sea level pressure between 30 . 3 and 31 ?
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31 BIN date BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the sum of employee_id over the hire_date bin hire_date by time by a bar chart , I want to rank in desc by the sum employee id .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(EMPLOYEE_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
I want a bar chart to show the total cloud cover of the dates that have the 5 highest cloud cover rates each year , and rank in descending by the Y-axis .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , SUM(cloud_cover) FROM weather  ORDER BY SUM(cloud_cover) DESC BIN date BY YEAR
****************************************************************************************************
nl_queries:
How many churches open each year ? Convert the year into the weekday interval and visualize with a bar chart , and rank total number in desc order .
database schema:
Table church, columns = [*,Church_ID, Name, Organized_by, Open_Date, Continuation_of]
target dvq:
Visualize BAR SELECT Open_Date , COUNT(Open_Date) FROM Church  ORDER BY COUNT(Open_Date) DESC BIN Open_Date BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of manager_id over the hire_date bin hire_date by time , I want to order from high to low by the Y-axis .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(MANAGER_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by weekday , display from high to low by the total number .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(EMPLOYEE_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find hire_date and the sum of salary bin hire_date by weekday , and visualize them by a bar chart , list total number of salary from low to high order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Show the number of games in each season and group by away team in a group line chart The x-axis is season , and could you display by the Season in ascending ?
database schema:
Table game, columns = [*,stadium_id, id, Season, Date, Home_team, Away_team, Score, Competition]
target dvq:
Visualize LINE SELECT Season , COUNT(Season) FROM game GROUP BY Away_team ORDER BY Season ASC BIN Season BY YEAR
****************************************************************************************************
nl_queries:
How many dogs departed in each day ? Visualize with a bar chart that bins departed date by day interval , display the number of date departed from low to high order .
database schema:
Table Dogs, columns = [*,dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed]
target dvq:
Visualize BAR SELECT date_departed , COUNT(date_departed) FROM Dogs  ORDER BY COUNT(date_departed) ASC BIN date_departed BY DAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the amount of hire_date over the hire_date bin hire_date by time by a bar chart , and list Y in asc order please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by weekday , and I want to sort Y-axis from low to high order please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(EMPLOYEE_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the sum of department_id bin hire_date by time in a bar chart , display in desc by the sum department id .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(DEPARTMENT_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the sum of employee_id over the hire_date bin hire_date by time by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the sum of employee_id over the hire_date bin hire_date by weekday by a bar chart , order in desc by the total number .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(EMPLOYEE_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Visualize a line chart about the change of the sum of Employee_ID over Start_from , and group by attribute Is_full_time and bin start_from by time , and rank x axis in ascending order please .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from ASC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
What are the dates of transactions with at least 100 share count or amount bigger than 100 , and count them by a bar chart
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100 BIN date_of_transaction BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of hire_date and the average of salary bin hire_date by time , and sort by the the average of salary from high to low .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Give me the trend about the average of Employee_ID over Start_from , and group by attribute Is_full_time and bin start_from by time , and show by the Start_from in asc .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from ASC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Find all the distinct visit dates , and count them by a bar chart , and could you order y axis in desc order ?
database schema:
Table Visits, columns = [*,Visit_ID, Tourist_Attraction_ID, Tourist_ID, Visit_Date, Visit_Details]
target dvq:
Visualize BAR SELECT Visit_Date , COUNT(Visit_Date) FROM VISITS  ORDER BY COUNT(Visit_Date) DESC BIN Visit_Date BY WEEKDAY
****************************************************************************************************
nl_queries:
The trend about the the number of season of different Home_team over the season , and rank from high to low by the Season .
database schema:
Table game, columns = [*,stadium_id, id, Season, Date, Home_team, Away_team, Score, Competition]
target dvq:
Visualize LINE SELECT Season , COUNT(Season) FROM game GROUP BY Home_team ORDER BY Season DESC BIN Season BY YEAR
****************************************************************************************************
nl_queries:
A line chart shows the trend of the amount of Start_from over Start_from bin start_from by time , could you display Start_from in descending order ?
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , COUNT(Start_from) FROM hiring  ORDER BY Start_from DESC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of hire_date and the average of salary bin hire_date by time .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by time , could you show Y in ascending order ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(EMPLOYEE_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Bin the hire date of employees into the day of week interval and count them for visualizing a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
A bar chart for what are the number of the dates in which the mean sea level pressure was between 30 . 3 and 31 ?
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31 BIN date BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the sum of salary bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
How many apartment bookings in each weekday ? Show me a bar chart binning booking end date by weekday , could you display Y-axis in asc order ?
database schema:
Table Apartment_Bookings, columns = [*,apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date]
target dvq:
Visualize BAR SELECT booking_end_date , COUNT(booking_end_date) FROM Apartment_Bookings  ORDER BY COUNT(booking_end_date) ASC BIN booking_end_date BY WEEKDAY
****************************************************************************************************
nl_queries:
For those dates that have the 5 highest cloud cover rates , please bin the date into Year interval and count their frequency , list Y-axis from high to low order .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather  ORDER BY COUNT(date) DESC BIN date BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
A line chart shows the change of the sum of Shop_ID over Start_from bin start_from by time , display x-axis in asc order .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Shop_ID) FROM hiring  ORDER BY Start_from ASC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by weekday , show in ascending by the y axis please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(EMPLOYEE_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those dates that have the 5 highest cloud cover rates , please bin the date into Year interval and compute their average cloud cover , rank by the y axis from high to low .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , AVG(cloud_cover) FROM weather  ORDER BY AVG(cloud_cover) DESC BIN date BY YEAR
****************************************************************************************************
nl_queries:
Stacked bar of date in locaton to and the number of date in locaton to colored by Location_Code
database schema:
Table Ref_Locations, columns = [*,Location_Code, Location_Name, Location_Description]
Table Document_Locations, columns = [*,Document_ID, Location_Code, Date_in_Location_From, Date_in_Locaton_To]
target dvq:
Visualize BAR SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Location_Code BIN Date_in_Locaton_To BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by time , and could you show in descending by the Y-axis ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(EMPLOYEE_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Give me the number of the dates when the max temperature was higher than 85 , and display from low to high by the Y .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) ASC BIN date BY YEAR
****************************************************************************************************
nl_queries:
Stack bar chart of how many took office vs Minister based on took office , list by the y-axis from high to low please .
database schema:
Table party, columns = [*,Party_ID, Minister, Took_office, Left_office, Region_ID, Party_name]
target dvq:
Visualize BAR SELECT Took_office , COUNT(Took_office) FROM party GROUP BY Minister ORDER BY COUNT(Took_office) DESC BIN Took_office BY YEAR
****************************************************************************************************
nl_queries:
Stacked bar chart of total number of shop id for with each Is_full_time in each start from
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , SUM(Shop_ID) FROM hiring GROUP BY Is_full_time BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
Show the average of cloud cover from each date , and I want to rank by the y-axis in asc .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , AVG(cloud_cover) FROM weather  ORDER BY AVG(cloud_cover) ASC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
How many dogs arrived in each day ? Visualize with a bar chart that bins arrived date by weekday .
database schema:
Table Dogs, columns = [*,dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed]
target dvq:
Visualize BAR SELECT date_arrived , COUNT(date_arrived) FROM Dogs BIN date_arrived BY WEEKDAY
****************************************************************************************************
nl_queries:
Give me a bar chart that the X-axis is the date_moved_in and the Y-axis is Count them , please bin X-axis into Year interval .
database schema:
Table Residents, columns = [*,resident_id, property_id, date_moved_in, date_moved_out, other_details]
Table Residents_Services, columns = [*,resident_id, service_id, date_moved_in, property_id, date_requested, date_provided, other_details]
Table Customer_Events, columns = [*,Customer_Event_ID, customer_id, date_moved_in, property_id, resident_id, thing_id]
Table Customer_Event_Notes, columns = [*,Customer_Event_Note_ID, Customer_Event_ID, service_type_code, resident_id, property_id, date_moved_in]
target dvq:
Visualize BAR SELECT date_moved_in , COUNT(date_moved_in) FROM customer_events BIN date_moved_in BY YEAR
****************************************************************************************************
nl_queries:
Bar chart of how many date of completion from each date of completion , I want to sort by the y axis in ascending please .
database schema:
Table Student_Course_Enrolment, columns = [*,registration_id, student_id, course_id, date_of_enrolment, date_of_completion]
target dvq:
Visualize BAR SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment  ORDER BY COUNT(date_of_completion) ASC BIN date_of_completion BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Visualize the general trend of sum share count over the date of transaction .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , SUM(share_count) FROM TRANSACTIONS BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
Return me a line chart to show the frequency of the year attribute by binning into a weekday interval , I want to display X-axis from low to high order .
database schema:
Table all_star, columns = [*,player_id, year, game_num, game_id, team_id, league_id, gp, starting_pos]
Table appearances, columns = [*,year, team_id, league_id, player_id, g_all, gs, g_batting, g_defense, g_p, g_c, g_1b, g_2b, g_3b, g_ss, g_lf, g_cf, g_rf, g_of, g_dh, g_ph, g_pr]
Table manager_award, columns = [*,player_id, award_id, year, league_id, tie, notes]
Table player_award, columns = [*,player_id, award_id, year, league_id, tie, notes]
Table manager_award_vote, columns = [*,award_id, year, league_id, player_id, points_won, points_max, votes_first]
Table player_award_vote, columns = [*,award_id, year, league_id, player_id, points_won, points_max, votes_first]
Table batting, columns = [*,player_id, year, stint, team_id, league_id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g_idp]
Table batting_postseason, columns = [*,year, round, player_id, team_id, league_id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g_idp]
Table player_college, columns = [*,player_id, college_id, year]
Table fielding, columns = [*,player_id, year, stint, team_id, league_id, pos, g, gs, inn_outs, po, a, e, dp, pb, wp, sb, cs, zr]
Table fielding_outfield, columns = [*,player_id, year, stint, glf, gcf, grf]
Table fielding_postseason, columns = [*,player_id, year, team_id, league_id, round, pos, g, gs, inn_outs, po, a, e, dp, tp, pb, sb, cs]
Table home_game, columns = [*,year, league_id, team_id, park_id, span_first, span_last, games, openings, attendance]
Table manager, columns = [*,player_id, year, team_id, league_id, inseason, g, w, l, rank, plyr_mgr]
Table manager_half, columns = [*,player_id, year, team_id, league_id, inseason, half, g, w, l, rank]
Table pitching, columns = [*,player_id, year, stint, team_id, league_id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g_idp]
Table pitching_postseason, columns = [*,player_id, year, round, team_id, league_id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g_idp]
Table salary, columns = [*,year, team_id, league_id, player_id, salary]
Table postseason, columns = [*,year, round, team_id_winner, league_id_winner, team_id_loser, league_id_loser, wins, losses, ties]
Table team, columns = [*,year, league_id, team_id, franchise_id, div_id, rank, g, ghome, w, l, div_win, wc_win, lg_win, ws_win, r, ab, h, double, triple, hr, bb, so, sb, cs, hbp, sf, ra, er, era, cg, sho, sv, ipouts, ha, hra, bba, soa, e, dp, fp, name, park, attendance, bpf, ppf, team_id_br, team_id_lahman45, team_id_retro]
Table team_half, columns = [*,year, league_id, team_id, half, div_id, div_win, rank, g, w, l]
target dvq:
Visualize LINE SELECT year , COUNT(year) FROM home_game  ORDER BY year ASC BIN year BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the sum of salary over the hire_date bin hire_date by weekday by a bar chart , show total number in desc order please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Give me the trend about the sum of Shop_ID over Start_from bin start_from by time , rank x axis in desc order .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Shop_ID) FROM hiring  ORDER BY Start_from DESC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Plot date to by the number of date to as a trend line , and sort by the x-axis from high to low .
database schema:
Table Project_Staff, columns = [*,staff_id, project_id, role_code, date_from, date_to, other_details]
target dvq:
Visualize LINE SELECT date_to , COUNT(date_to) FROM Project_Staff ORDER BY date_to DESC BIN date_to BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the average of salary bin hire_date by time , and visualize them by a bar chart , order in desc by the y axis .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the average of employee_id bin hire_date by weekday in a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by weekday .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Create a bar chart showing the number of date in locaton to across date in locaton to
database schema:
Table Document_Locations, columns = [*,Document_ID, Location_Code, Date_in_Location_From, Date_in_Locaton_To]
target dvq:
Visualize BAR SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations BIN Date_in_Locaton_To BY WEEKDAY
****************************************************************************************************
nl_queries:
Give me the trend about the sum of Shop_ID over Start_from bin start_from by time .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Shop_ID) FROM hiring BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of department_id over the hire_date bin hire_date by weekday by a bar chart , and list y-axis in desc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(DEPARTMENT_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
What are the number of the distinct move in dates of the residents ?
database schema:
Table Residents, columns = [*,resident_id, property_id, date_moved_in, date_moved_out, other_details]
Table Residents_Services, columns = [*,resident_id, service_id, date_moved_in, property_id, date_requested, date_provided, other_details]
Table Customer_Events, columns = [*,Customer_Event_ID, customer_id, date_moved_in, property_id, resident_id, thing_id]
Table Customer_Event_Notes, columns = [*,Customer_Event_Note_ID, Customer_Event_ID, service_type_code, resident_id, property_id, date_moved_in]
target dvq:
Visualize BAR SELECT date_moved_in , COUNT(date_moved_in) FROM residents BIN date_moved_in BY WEEKDAY
****************************************************************************************************
nl_queries:
Show the number of documents in different ending date Bin ending date by weekday and group by location code with a stacked bar chart , could you display in descending by the y axis please ?
database schema:
Table Ref_Locations, columns = [*,Location_Code, Location_Name, Location_Description]
Table Document_Locations, columns = [*,Document_ID, Location_Code, Date_in_Location_From, Date_in_Locaton_To]
target dvq:
Visualize BAR SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Location_Code ORDER BY COUNT(Date_in_Locaton_To) DESC BIN Date_in_Locaton_To BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the average of manager_id bin hire_date by time , and sort by the y-axis in descending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(MANAGER_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a bar chart shows the distribution of hire_date and the amount of hire_date bin hire_date by weekday , and rank by the total number in descending .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Give me a bar chart that the X-axis is the date_moved_in and the Y-axis is Count them , please bin X-axis into Day of Week interval , I want to order from low to high by the how many date moved in .
database schema:
Table Residents, columns = [*,resident_id, property_id, date_moved_in, date_moved_out, other_details]
Table Residents_Services, columns = [*,resident_id, service_id, date_moved_in, property_id, date_requested, date_provided, other_details]
Table Customer_Events, columns = [*,Customer_Event_ID, customer_id, date_moved_in, property_id, resident_id, thing_id]
Table Customer_Event_Notes, columns = [*,Customer_Event_Note_ID, Customer_Event_ID, service_type_code, resident_id, property_id, date_moved_in]
target dvq:
Visualize BAR SELECT date_moved_in , COUNT(date_moved_in) FROM customer_events  ORDER BY COUNT(date_moved_in) ASC BIN date_moved_in BY WEEKDAY
****************************************************************************************************
nl_queries:
Visualize a bar chart about the distribution of Start_from and the average of Shop_ID bin start_from by weekday , display Y-axis from low to high order please .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , AVG(Shop_ID) FROM hiring  ORDER BY AVG(Shop_ID) ASC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
Return a line chart about the change of the sum of Employee_ID over Start_from bin start_from by time , and rank from low to high by the x-axis .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Employee_ID) FROM hiring  ORDER BY Start_from ASC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Show the number of documents in different starting date and bin starting date by weekday interval with a bar chart .
database schema:
Table Document_Locations, columns = [*,Document_ID, Location_Code, Date_in_Location_From, Date_in_Locaton_To]
target dvq:
Visualize BAR SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations BIN Date_in_Location_From BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the amount of hire_date bin hire_date by time , and visualize them by a bar chart , could you show in ascending by the y axis ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
A line chart shows the trend of the amount of Start_from over Start_from bin start_from by time .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , COUNT(Start_from) FROM hiring BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Stacked bar chart of the number of left office for with each Minister in each left office , and I want to list Y in asc order .
database schema:
Table party, columns = [*,Party_ID, Minister, Took_office, Left_office, Region_ID, Party_name]
target dvq:
Visualize BAR SELECT Left_office , COUNT(Left_office) FROM party GROUP BY Minister ORDER BY COUNT(Left_office) ASC BIN Left_office BY WEEKDAY
****************************************************************************************************
nl_queries:
How many parties of the time they leave office , binning the leave office into WEEKDAY interval
database schema:
Table party, columns = [*,Party_ID, Minister, Took_office, Left_office, Region_ID, Party_name]
target dvq:
Visualize BAR SELECT Left_office , COUNT(Left_office) FROM party BIN Left_office BY WEEKDAY
****************************************************************************************************
nl_queries:
Give me line charts of worldwide gross the number of date in location from over year date in location from by major genres Location_Code
database schema:
Table Ref_Locations, columns = [*,Location_Code, Location_Name, Location_Description]
Table Document_Locations, columns = [*,Document_ID, Location_Code, Date_in_Location_From, Date_in_Locaton_To]
target dvq:
Visualize LINE SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations GROUP BY Location_Code BIN Date_in_Location_From BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of hire_date and the sum of salary bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Bar chart x axis left office y axis the number of left office
database schema:
Table party, columns = [*,Party_ID, Minister, Took_office, Left_office, Region_ID, Party_name]
target dvq:
Visualize BAR SELECT Left_office , COUNT(Left_office) FROM party BIN Left_office BY WEEKDAY
****************************************************************************************************
nl_queries:
Bin all date of transactions into the YEAR interval , and sum the share count of each bin Return the result using a line chart , and I want to display from high to low by the x axis please .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , SUM(share_count) FROM TRANSACTIONS  ORDER BY date_of_transaction DESC BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
For the days with the 3 largest maximum gust speeds , show me the frequency of their corresponding date in the month level using a bar chart .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather  ORDER BY max_gust_speed_mph DESC LIMIT 3 BIN date BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by time , show y-axis from high to low order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Create a bar chart showing the number of date in locaton to across date in locaton to , could you display by the y axis from low to high ?
database schema:
Table Document_Locations, columns = [*,Document_ID, Location_Code, Date_in_Location_From, Date_in_Locaton_To]
target dvq:
Visualize BAR SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations  ORDER BY COUNT(Date_in_Locaton_To) ASC BIN Date_in_Locaton_To BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find hire_date and the average of manager_id bin hire_date by time , and visualize them by a bar chart , and could you list by the y axis in descending please ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(MANAGER_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by weekday , sort the average of manager id in desc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(MANAGER_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Draw a bar chart about the distribution of Start_from and the sum of Employee_ID bin start_from by weekday , and order Y-axis in ascending order .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , SUM(Employee_ID) FROM hiring  ORDER BY SUM(Employee_ID) ASC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
Draw a line chart about the change of the average of Employee_ID over Start_from bin start_from by time , and I want to order X-axis in asc order .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Employee_ID) FROM hiring  ORDER BY Start_from ASC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose first name does not containing the letter M , display their average salary by binning the hire date into Month interval for visualizing a bar chart , and list from high to low by the y axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name NOT LIKE '%M%'  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
On which day has it neither been foggy nor rained in the zip code of 94107 , and count them by a bar chart , and I want to order in descending by the Y-axis .
database schema:
Table trip, columns = [*,id, duration, start_date, start_station_name, start_station_id, end_date, end_station_name, end_station_id, bike_id, subscription_type, zip_code]
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE zip_code = 94107 AND EVENTS != "Fog" AND EVENTS != "Rain"  ORDER BY COUNT(date) DESC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the amount of hire_date bin hire_date by weekday , and visualize them by a bar chart , order y-axis from high to low order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Give a bar chart to show the number of employees by each hire date , note that bin the hire date into the day of week interval , could you rank by the Y in ascending please ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Plot season by how many season as a line chart , and could you sort by the x-axis in ascending ?
database schema:
Table game, columns = [*,stadium_id, id, Season, Date, Home_team, Away_team, Score, Competition]
target dvq:
Visualize LINE SELECT Season , COUNT(Season) FROM game  ORDER BY Season ASC BIN Season BY YEAR
****************************************************************************************************
nl_queries:
List the number of enrolment students in each month and bin date of enrolment by month interval with a bar chart , list y axis in desc order .
database schema:
Table Student_Course_Enrolment, columns = [*,registration_id, student_id, course_id, date_of_enrolment, date_of_completion]
target dvq:
Visualize BAR SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment  ORDER BY COUNT(date_of_enrolment) DESC BIN date_of_enrolment BY MONTH
****************************************************************************************************
nl_queries:
when is the hire date for those employees whose first name does not containing the letter M , and count them by a bar chart , show in asc by the Y-axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name NOT LIKE '%M%'  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the sum of department_id bin hire_date by weekday , and visualize them by a bar chart , and could you order in desc by the Y ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(DEPARTMENT_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Show the number of apartment bookings in each year and bin booking end date by year with a bar chart .
database schema:
Table Apartment_Bookings, columns = [*,apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date]
target dvq:
Visualize BAR SELECT booking_end_date , COUNT(booking_end_date) FROM Apartment_Bookings BIN booking_end_date BY YEAR
****************************************************************************************************
nl_queries:
Bin the installation date into the day of week interval , and then you can draw a bar chart to tell me how many stations each year , sort from low to high by the y axis please .
database schema:
Table station, columns = [*,id, name, lat, long, dock_count, city, installation_date]
target dvq:
Visualize BAR SELECT installation_date , COUNT(installation_date) FROM station  ORDER BY COUNT(installation_date) ASC BIN installation_date BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of employee_id over the hire_date bin hire_date by weekday by a bar chart , and display Y-axis in descending order please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(EMPLOYEE_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Bin all date of transactions into the YEAR interval , and sum the share count of each bin What is the trend ? , and order by the X-axis from high to low please .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , SUM(share_count) FROM TRANSACTIONS  ORDER BY date_of_transaction DESC BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
Visualize a bar chart about the distribution of Start_from and the amount of Start_from bin start_from by weekday .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , COUNT(Start_from) FROM hiring BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of hire_date and the amount of hire_date bin hire_date by time in a bar chart , sort in descending by the y-axis please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
What are the number of the dates of the latest logon of the students with family name "Jaskolski" or "Langosh" ?
database schema:
Table Course_Authors_and_Tutors, columns = [*,author_id, author_tutor_ATB, login_name, password, personal_name, middle_name, family_name, gender_mf, address_line_1]
Table Students, columns = [*,student_id, date_of_registration, date_of_latest_logon, login_name, password, personal_name, middle_name, family_name]
target dvq:
Visualize BAR SELECT date_of_latest_logon , COUNT(date_of_latest_logon) FROM Students WHERE family_name = "Jaskolski" OR family_name = "Langosh" BIN date_of_latest_logon BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the sum of salary bin hire_date by time in a bar chart , and sort total number of salary from high to low order please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
What is the frequency of the dates (bin into weekday interval) that had the top 5 cloud cover rates ? You can draw me a bar chart for this purpose , and could you sort from low to high by the y-axis ?
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather  ORDER BY COUNT(date) ASC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
A line chart shows the change of the sum of Shop_ID over Start_from , and group by attribute Is_full_time and bin start_from by time
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Shop_ID) FROM hiring GROUP BY Is_full_time BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of manager_id over the hire_date bin hire_date by weekday by a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
A line chart shows the change of the average of Employee_ID over Start_from bin start_from by time , and show by the x axis from low to high .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Employee_ID) FROM hiring  ORDER BY Start_from ASC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
A bar chart for finding the number of the dates of the tests taken with result "Pass" , list in descending by the y-axis .
database schema:
Table Student_Tests_Taken, columns = [*,registration_id, date_test_taken, test_result]
target dvq:
Visualize BAR SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = "Pass"  ORDER BY COUNT(date_test_taken) DESC BIN date_test_taken BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time , and order by the y-axis in desc .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(DEPARTMENT_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
A line chart shows the change of the average of Shop_ID over Start_from , and group by attribute Is_full_time and bin start_from by time , and rank from low to high by the Start_from .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from ASC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
In zip code 94107 , on which day neither Fog nor Rain was not observed , and count them by a bar chart
database schema:
Table trip, columns = [*,id, duration, start_date, start_station_name, start_station_id, end_date, end_station_name, end_station_id, bike_id, subscription_type, zip_code]
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE zip_code = 94107 AND EVENTS != "Fog" AND EVENTS != "Rain" BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
For those dates with a max temperature greater than or equal to 80 , I want to see the number of days for each year using a bar chart , and show in asc by the total number .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f >= 80  ORDER BY COUNT(date) ASC BIN date BY YEAR
****************************************************************************************************
nl_queries:
For those dates that have the 5 highest cloud cover rates , please bin the date into Year interval and count their frequency , and rank by the Y-axis in ascending .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather  ORDER BY COUNT(date) ASC BIN date BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by time , could you list by the Y in asc please ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
List the number of documents for each receipt date and bin by weekday in a bar chart .
database schema:
Table Documents, columns = [*,document_id, document_status_code, document_type_code, shipping_agent_code, receipt_date, receipt_number, other_details]
target dvq:
Visualize BAR SELECT receipt_date , COUNT(receipt_date) FROM Documents BIN receipt_date BY WEEKDAY
****************************************************************************************************
nl_queries:
Return a bar chart about the distribution of Start_from and the amount of Start_from bin start_from by weekday , I want to display y-axis in desc order .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , COUNT(Start_from) FROM hiring  ORDER BY COUNT(Start_from) DESC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For the amount of Start_from , Start_from , visualize the trend .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , COUNT(Start_from) FROM hiring GROUP BY Is_full_time BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a bar chart shows the distribution of hire_date and the average of manager_id bin hire_date by time , and order by the Y in asc .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(MANAGER_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by time , and could you list total number in desc order ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Show me about the distribution of Start_from and the sum of Shop_ID , and group by attribute Is_full_time and bin start_from by weekday in a bar chart , and sort y axis in asc order .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , SUM(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY SUM(Shop_ID) ASC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of manager_id over the hire_date bin hire_date by time by a bar chart , could you sort total number from high to low order please ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(MANAGER_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the average of department_id bin hire_date by time in a bar chart , and rank in ascending by the Y .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(DEPARTMENT_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Bin the hire date into Month interval , and then calculate the total salary of employees in each month for a bar chart , note that just select those employees without the letter M in their first name , and display by the y-axis from low to high please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name NOT LIKE '%M%'  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
How many parties of the time they left office , binning the left office time into Year interval , and then split by the minister's name .
database schema:
Table party, columns = [*,Party_ID, Minister, Took_office, Left_office, Region_ID, Party_name]
target dvq:
Visualize BAR SELECT Left_office , COUNT(Left_office) FROM party GROUP BY Minister BIN Left_office BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by weekday , and rank by the total number in desc .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(EMPLOYEE_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Can you draw the trend of how many date in location from over the date in location from ?
database schema:
Table Document_Locations, columns = [*,Document_ID, Location_Code, Date_in_Location_From, Date_in_Locaton_To]
target dvq:
Visualize LINE SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations BIN Date_in_Location_From BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the sum of employee_id bin hire_date by time , and visualize them by a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Plot total number of shop id over start from in a line chart , and could you order in descending by the X ?
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Shop_ID) FROM hiring  ORDER BY Start_from DESC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
A bar chart for what are the number of the dates in which the mean sea level pressure was between 303 and 31 ? , and show Y-axis in descending order please .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) DESC BIN date BY YEAR
****************************************************************************************************
nl_queries:
Give me the trend about the amount of Start_from over Start_from , and group by attribute Is_full_time and bin start_from by time , I want to list x axis from high to low order please .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , COUNT(Start_from) FROM hiring GROUP BY Is_full_time ORDER BY Start_from DESC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Show how many installation date from each installation date , list in desc by the Y-axis please .
database schema:
Table station, columns = [*,id, name, lat, long, dock_count, city, installation_date]
target dvq:
Visualize BAR SELECT installation_date , COUNT(installation_date) FROM station  ORDER BY COUNT(installation_date) DESC BIN installation_date BY WEEKDAY
****************************************************************************************************
nl_queries:
How many home games by each year (bin the year attr into weekdays interval) ? Give me a line chart .
database schema:
Table all_star, columns = [*,player_id, year, game_num, game_id, team_id, league_id, gp, starting_pos]
Table appearances, columns = [*,year, team_id, league_id, player_id, g_all, gs, g_batting, g_defense, g_p, g_c, g_1b, g_2b, g_3b, g_ss, g_lf, g_cf, g_rf, g_of, g_dh, g_ph, g_pr]
Table manager_award, columns = [*,player_id, award_id, year, league_id, tie, notes]
Table player_award, columns = [*,player_id, award_id, year, league_id, tie, notes]
Table manager_award_vote, columns = [*,award_id, year, league_id, player_id, points_won, points_max, votes_first]
Table player_award_vote, columns = [*,award_id, year, league_id, player_id, points_won, points_max, votes_first]
Table batting, columns = [*,player_id, year, stint, team_id, league_id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g_idp]
Table batting_postseason, columns = [*,year, round, player_id, team_id, league_id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g_idp]
Table player_college, columns = [*,player_id, college_id, year]
Table fielding, columns = [*,player_id, year, stint, team_id, league_id, pos, g, gs, inn_outs, po, a, e, dp, pb, wp, sb, cs, zr]
Table fielding_outfield, columns = [*,player_id, year, stint, glf, gcf, grf]
Table fielding_postseason, columns = [*,player_id, year, team_id, league_id, round, pos, g, gs, inn_outs, po, a, e, dp, tp, pb, sb, cs]
Table home_game, columns = [*,year, league_id, team_id, park_id, span_first, span_last, games, openings, attendance]
Table manager, columns = [*,player_id, year, team_id, league_id, inseason, g, w, l, rank, plyr_mgr]
Table manager_half, columns = [*,player_id, year, team_id, league_id, inseason, half, g, w, l, rank]
Table pitching, columns = [*,player_id, year, stint, team_id, league_id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g_idp]
Table pitching_postseason, columns = [*,player_id, year, round, team_id, league_id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g_idp]
Table salary, columns = [*,year, team_id, league_id, player_id, salary]
Table postseason, columns = [*,year, round, team_id_winner, league_id_winner, team_id_loser, league_id_loser, wins, losses, ties]
Table team, columns = [*,year, league_id, team_id, franchise_id, div_id, rank, g, ghome, w, l, div_win, wc_win, lg_win, ws_win, r, ab, h, double, triple, hr, bb, so, sb, cs, hbp, sf, ra, er, era, cg, sho, sv, ipouts, ha, hra, bba, soa, e, dp, fp, name, park, attendance, bpf, ppf, team_id_br, team_id_lahman45, team_id_retro]
Table team_half, columns = [*,year, league_id, team_id, half, div_id, div_win, rank, g, w, l]
target dvq:
Visualize LINE SELECT year , COUNT(year) FROM home_game BIN year BY YEAR
****************************************************************************************************
nl_queries:
Visualize the general trend of how many year over the year , show x axis from low to high order .
database schema:
Table all_star, columns = [*,player_id, year, game_num, game_id, team_id, league_id, gp, starting_pos]
Table appearances, columns = [*,year, team_id, league_id, player_id, g_all, gs, g_batting, g_defense, g_p, g_c, g_1b, g_2b, g_3b, g_ss, g_lf, g_cf, g_rf, g_of, g_dh, g_ph, g_pr]
Table manager_award, columns = [*,player_id, award_id, year, league_id, tie, notes]
Table player_award, columns = [*,player_id, award_id, year, league_id, tie, notes]
Table manager_award_vote, columns = [*,award_id, year, league_id, player_id, points_won, points_max, votes_first]
Table player_award_vote, columns = [*,award_id, year, league_id, player_id, points_won, points_max, votes_first]
Table batting, columns = [*,player_id, year, stint, team_id, league_id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g_idp]
Table batting_postseason, columns = [*,year, round, player_id, team_id, league_id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g_idp]
Table player_college, columns = [*,player_id, college_id, year]
Table fielding, columns = [*,player_id, year, stint, team_id, league_id, pos, g, gs, inn_outs, po, a, e, dp, pb, wp, sb, cs, zr]
Table fielding_outfield, columns = [*,player_id, year, stint, glf, gcf, grf]
Table fielding_postseason, columns = [*,player_id, year, team_id, league_id, round, pos, g, gs, inn_outs, po, a, e, dp, tp, pb, sb, cs]
Table home_game, columns = [*,year, league_id, team_id, park_id, span_first, span_last, games, openings, attendance]
Table manager, columns = [*,player_id, year, team_id, league_id, inseason, g, w, l, rank, plyr_mgr]
Table manager_half, columns = [*,player_id, year, team_id, league_id, inseason, half, g, w, l, rank]
Table pitching, columns = [*,player_id, year, stint, team_id, league_id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g_idp]
Table pitching_postseason, columns = [*,player_id, year, round, team_id, league_id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g_idp]
Table salary, columns = [*,year, team_id, league_id, player_id, salary]
Table postseason, columns = [*,year, round, team_id_winner, league_id_winner, team_id_loser, league_id_loser, wins, losses, ties]
Table team, columns = [*,year, league_id, team_id, franchise_id, div_id, rank, g, ghome, w, l, div_win, wc_win, lg_win, ws_win, r, ab, h, double, triple, hr, bb, so, sb, cs, hbp, sf, ra, er, era, cg, sho, sv, ipouts, ha, hra, bba, soa, e, dp, fp, name, park, attendance, bpf, ppf, team_id_br, team_id_lahman45, team_id_retro]
Table team_half, columns = [*,year, league_id, team_id, half, div_id, div_win, rank, g, w, l]
target dvq:
Visualize LINE SELECT year , COUNT(year) FROM home_game  ORDER BY year ASC BIN year BY YEAR
****************************************************************************************************
nl_queries:
count yearid for visualizing a line chart .
database schema:
Table all_star, columns = [*,player_id, year, game_num, game_id, team_id, league_id, gp, starting_pos]
Table appearances, columns = [*,year, team_id, league_id, player_id, g_all, gs, g_batting, g_defense, g_p, g_c, g_1b, g_2b, g_3b, g_ss, g_lf, g_cf, g_rf, g_of, g_dh, g_ph, g_pr]
Table manager_award, columns = [*,player_id, award_id, year, league_id, tie, notes]
Table player_award, columns = [*,player_id, award_id, year, league_id, tie, notes]
Table manager_award_vote, columns = [*,award_id, year, league_id, player_id, points_won, points_max, votes_first]
Table player_award_vote, columns = [*,award_id, year, league_id, player_id, points_won, points_max, votes_first]
Table batting, columns = [*,player_id, year, stint, team_id, league_id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g_idp]
Table batting_postseason, columns = [*,year, round, player_id, team_id, league_id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g_idp]
Table player_college, columns = [*,player_id, college_id, year]
Table fielding, columns = [*,player_id, year, stint, team_id, league_id, pos, g, gs, inn_outs, po, a, e, dp, pb, wp, sb, cs, zr]
Table fielding_outfield, columns = [*,player_id, year, stint, glf, gcf, grf]
Table fielding_postseason, columns = [*,player_id, year, team_id, league_id, round, pos, g, gs, inn_outs, po, a, e, dp, tp, pb, sb, cs]
Table hall_of_fame, columns = [*,player_id, yearid, votedby, ballots, needed, votes, inducted, category, needed_note]
Table home_game, columns = [*,year, league_id, team_id, park_id, span_first, span_last, games, openings, attendance]
Table manager, columns = [*,player_id, year, team_id, league_id, inseason, g, w, l, rank, plyr_mgr]
Table manager_half, columns = [*,player_id, year, team_id, league_id, inseason, half, g, w, l, rank]
Table pitching, columns = [*,player_id, year, stint, team_id, league_id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g_idp]
Table pitching_postseason, columns = [*,player_id, year, round, team_id, league_id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g_idp]
Table salary, columns = [*,year, team_id, league_id, player_id, salary]
Table postseason, columns = [*,year, round, team_id_winner, league_id_winner, team_id_loser, league_id_loser, wins, losses, ties]
Table team, columns = [*,year, league_id, team_id, franchise_id, div_id, rank, g, ghome, w, l, div_win, wc_win, lg_win, ws_win, r, ab, h, double, triple, hr, bb, so, sb, cs, hbp, sf, ra, er, era, cg, sho, sv, ipouts, ha, hra, bba, soa, e, dp, fp, name, park, attendance, bpf, ppf, team_id_br, team_id_lahman45, team_id_retro]
Table team_half, columns = [*,year, league_id, team_id, half, div_id, div_win, rank, g, w, l]
target dvq:
Visualize LINE SELECT yearid , COUNT(yearid) FROM hall_of_fame BIN yearid BY YEAR
****************************************************************************************************
nl_queries:
Compare the total salary by each hire date (bin it into month interval) of employees using a bar chart , I want to show by the y-axis in descending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by time , I want to order by the Y-axis in ascending please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(MANAGER_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the average of salary bin hire_date by weekday in a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the sum of salary over the hire_date bin hire_date by time by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
A bar chart for what are the number of the dates of the latest logon of the students with family name "Jaskolski" or "Langosh" ? , and sort in descending by the y-axis .
database schema:
Table Course_Authors_and_Tutors, columns = [*,author_id, author_tutor_ATB, login_name, password, personal_name, middle_name, family_name, gender_mf, address_line_1]
Table Students, columns = [*,student_id, date_of_registration, date_of_latest_logon, login_name, password, personal_name, middle_name, family_name]
target dvq:
Visualize BAR SELECT date_of_latest_logon , COUNT(date_of_latest_logon) FROM Students WHERE family_name = "Jaskolski" OR family_name = "Langosh"  ORDER BY COUNT(date_of_latest_logon) DESC BIN date_of_latest_logon BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the average of salary bin hire_date by time , and visualize them by a bar chart , show y axis in asc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Show the number of games in each season and group by home team in a group line chart The x-axis is season , list by the Season from high to low .
database schema:
Table game, columns = [*,stadium_id, id, Season, Date, Home_team, Away_team, Score, Competition]
target dvq:
Visualize LINE SELECT Season , COUNT(Season) FROM game GROUP BY Home_team ORDER BY Season DESC BIN Season BY YEAR
****************************************************************************************************
nl_queries:
Give me the comparison about the average of Employee_ID over the Start_from bin start_from by weekday , sort y axis in descending order .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , AVG(Employee_ID) FROM hiring  ORDER BY AVG(Employee_ID) DESC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
Please compare the number of the church by open date (bin into the weekday) using a bar chart .
database schema:
Table church, columns = [*,Church_ID, Name, Organized_by, Open_Date, Continuation_of]
target dvq:
Visualize BAR SELECT Open_Date , COUNT(Open_Date) FROM church BIN Open_Date BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the average of department_id bin hire_date by weekday in a bar chart , and sort from high to low by the y-axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(DEPARTMENT_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those dates that have the 5 highest cloud cover rates , please bin the date into weekdays interval and compute their total cloud cover , and show y-axis from low to high order .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , SUM(cloud_cover) FROM weather  ORDER BY SUM(cloud_cover) ASC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of employee_id over the hire_date bin hire_date by weekday by a bar chart , and order in ascending by the the average of employee id .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(EMPLOYEE_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
What is the average cloud cover rates of the dates (bin into weekdays interval) that had the top 5 cloud cover rates ? You can draw me a bar chart for this purpose , and order in descending by the Y please .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , AVG(cloud_cover) FROM weather  ORDER BY AVG(cloud_cover) DESC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of hire_date and the sum of salary bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Give me a bar chart that the X-axis is the date_moved_in and the Y-axis is Count them , please bin X-axis into Day of Week interval .
database schema:
Table Residents, columns = [*,resident_id, property_id, date_moved_in, date_moved_out, other_details]
Table Residents_Services, columns = [*,resident_id, service_id, date_moved_in, property_id, date_requested, date_provided, other_details]
Table Customer_Events, columns = [*,Customer_Event_ID, customer_id, date_moved_in, property_id, resident_id, thing_id]
Table Customer_Event_Notes, columns = [*,Customer_Event_Note_ID, Customer_Event_ID, service_type_code, resident_id, property_id, date_moved_in]
target dvq:
Visualize BAR SELECT date_moved_in , COUNT(date_moved_in) FROM customer_events BIN date_moved_in BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the average of manager_id bin hire_date by weekday , and visualize them by a bar chart , and order by the y-axis in descending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(MANAGER_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Return a bar chart about the distribution of Start_from and the amount of Start_from , and group by attribute Is_full_time and bin start_from by weekday , and show Y in descending order please .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , COUNT(Start_from) FROM hiring GROUP BY Is_full_time ORDER BY COUNT(Start_from) DESC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
Give me the comparison about the sum of Employee_ID over the Start_from bin start_from by weekday by a bar chart , order Y-axis in ascending order .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , SUM(Employee_ID) FROM hiring  ORDER BY SUM(Employee_ID) ASC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the average of department_id bin hire_date by time in a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Return a bar chart about the distribution of Start_from and the average of Shop_ID , and group by attribute Is_full_time and bin start_from by weekday , could you show Y in ascending order ?
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , AVG(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY AVG(Shop_ID) ASC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
How many cars each weekday (by bin the year into a day of the week interval) ? Show me the bar chart , and sort in asc by the Y .
database schema:
Table cars_data, columns = [*,Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year]
target dvq:
Visualize BAR SELECT Year , COUNT(Year) FROM CARS_DATA  ORDER BY COUNT(Year) ASC BIN Year BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by weekday , and could you order the average of manager id in ascending order ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(MANAGER_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the sum of department_id bin hire_date by weekday , and visualize them by a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the sum of employee_id bin hire_date by weekday in a bar chart , and could you sort from high to low by the Y-axis please ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(EMPLOYEE_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Bin the hire date of employees into the day of week interval and count them for visualizing a bar chart , and rank in asc by the total number .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Show how many cinemas open for each year in a line chart , and could you rank X from high to low order ?
database schema:
Table cinema, columns = [*,Cinema_ID, Name, Openning_year, Capacity, Location]
target dvq:
Visualize LINE SELECT Openning_year , COUNT(Openning_year) FROM cinema  ORDER BY Openning_year DESC BIN Openning_year BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the average of employee_id bin hire_date by time in a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
What are dates of birth of all the guests whose gender is "Male" , and count them by a bar chart
database schema:
Table Guests, columns = [*,guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth]
target dvq:
Visualize BAR SELECT date_of_birth , COUNT(date_of_birth) FROM Guests WHERE gender_code = "Male" BIN date_of_birth BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the average of manager_id bin hire_date by weekday , and visualize them by a bar chart , display y axis in descending order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(MANAGER_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
I want to see trend of the number of date in locaton to by date in locaton to , sort by the x axis in desc .
database schema:
Table Document_Locations, columns = [*,Document_ID, Location_Code, Date_in_Location_From, Date_in_Locaton_To]
target dvq:
Visualize LINE SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations  ORDER BY Date_in_Locaton_To DESC BIN Date_in_Locaton_To BY YEAR
****************************************************************************************************
nl_queries:
What are the number of dates of birth of all the guests whose gender is "Male" ? , list by the y-axis in descending .
database schema:
Table Guests, columns = [*,guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth]
target dvq:
Visualize BAR SELECT date_of_birth , COUNT(date_of_birth) FROM Guests WHERE gender_code = "Male"  ORDER BY COUNT(date_of_birth) DESC BIN date_of_birth BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by weekday , show by the the average of manager id from high to low .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(MANAGER_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Draw a line chart about the change of the sum of Shop_ID over Start_from , and group by attribute Is_full_time and bin start_from by time , I want to order by the x-axis from high to low .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from DESC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For the sum of Shop_ID , Start_from , visualize the trend , rank X in asc order please .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Shop_ID) FROM hiring  ORDER BY Start_from ASC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by time , show by the Y-axis from low to high .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a bar chart shows the distribution of hire_date and the average of manager_id bin hire_date by time .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the sum of manager_id bin hire_date by weekday , and visualize them by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
A bar chart shows the number of year of the maximum price and score of wines , and bin the year into the weekday interval , could you rank by the y axis in desc ?
database schema:
Table wine, columns = [*,No, Grape, Winery, Appelation, State, Name, Year, Price, Score, Cases, Drink]
target dvq:
Visualize BAR SELECT Year , COUNT(Year) FROM WINE  ORDER BY COUNT(Year) DESC BIN Year BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the sum of employee_id over the hire_date bin hire_date by weekday , and order y axis in asc order please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(EMPLOYEE_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Can you draw the trend of how many date in location from over the date in location from ? , order by the x-axis in descending .
database schema:
Table Document_Locations, columns = [*,Document_ID, Location_Code, Date_in_Location_From, Date_in_Locaton_To]
target dvq:
Visualize LINE SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations  ORDER BY Date_in_Location_From DESC BIN Date_in_Location_From BY YEAR
****************************************************************************************************
nl_queries:
Return a line chart about the change of the amount of Start_from over Start_from , and group by attribute Is_full_time and bin start_from by time , and could you sort by the x axis in desc ?
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , COUNT(Start_from) FROM hiring GROUP BY Is_full_time ORDER BY Start_from DESC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the average of employee_id bin hire_date by weekday in a bar chart , and sort total number in desc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(EMPLOYEE_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
A line chart shows the trend of the sum of Employee_ID over Start_from bin start_from by time , rank by the x axis from high to low .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Employee_ID) FROM hiring  ORDER BY Start_from DESC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
In zip code 94107 , on which day neither Fog nor Rain was not observed , and count them by a bar chart , sort by the y axis in desc .
database schema:
Table trip, columns = [*,id, duration, start_date, start_station_name, start_station_id, end_date, end_station_name, end_station_id, bike_id, subscription_type, zip_code]
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE zip_code = 94107 AND EVENTS != "Fog" AND EVENTS != "Rain"  ORDER BY COUNT(date) DESC BIN date BY YEAR
****************************************************************************************************
nl_queries:
Stacked bar chart of mean employee id for with each Is_full_time in each start from , and rank by the Y from high to low .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , AVG(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY AVG(Employee_ID) DESC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
What is the sum of capacity of cinemas open for each year ? Return a line chart , could you sort by the X-axis from high to low ?
database schema:
Table cinema, columns = [*,Cinema_ID, Name, Openning_year, Capacity, Location]
target dvq:
Visualize LINE SELECT Openning_year , SUM(Capacity) FROM cinema  ORDER BY Openning_year DESC BIN Openning_year BY YEAR
****************************************************************************************************
nl_queries:
Show the number of documents in different starting date and bin starting date by year interval with a line chart , and list x axis in descending order .
database schema:
Table Document_Locations, columns = [*,Document_ID, Location_Code, Date_in_Location_From, Date_in_Locaton_To]
target dvq:
Visualize LINE SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations  ORDER BY Date_in_Location_From DESC BIN Date_in_Location_From BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the sum of employee_id over the hire_date bin hire_date by time by a bar chart , could you list by the y axis from low to high ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(EMPLOYEE_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Show the number of documents in different ending date and bin ending date by weekday with a bar chart , and could you display by the y axis from low to high ?
database schema:
Table Document_Locations, columns = [*,Document_ID, Location_Code, Date_in_Location_From, Date_in_Locaton_To]
target dvq:
Visualize BAR SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations  ORDER BY COUNT(Date_in_Locaton_To) ASC BIN Date_in_Locaton_To BY WEEKDAY
****************************************************************************************************
nl_queries:
Visualize the general trend of how many year over the year .
database schema:
Table all_star, columns = [*,player_id, year, game_num, game_id, team_id, league_id, gp, starting_pos]
Table appearances, columns = [*,year, team_id, league_id, player_id, g_all, gs, g_batting, g_defense, g_p, g_c, g_1b, g_2b, g_3b, g_ss, g_lf, g_cf, g_rf, g_of, g_dh, g_ph, g_pr]
Table manager_award, columns = [*,player_id, award_id, year, league_id, tie, notes]
Table player_award, columns = [*,player_id, award_id, year, league_id, tie, notes]
Table manager_award_vote, columns = [*,award_id, year, league_id, player_id, points_won, points_max, votes_first]
Table player_award_vote, columns = [*,award_id, year, league_id, player_id, points_won, points_max, votes_first]
Table batting, columns = [*,player_id, year, stint, team_id, league_id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g_idp]
Table batting_postseason, columns = [*,year, round, player_id, team_id, league_id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g_idp]
Table player_college, columns = [*,player_id, college_id, year]
Table fielding, columns = [*,player_id, year, stint, team_id, league_id, pos, g, gs, inn_outs, po, a, e, dp, pb, wp, sb, cs, zr]
Table fielding_outfield, columns = [*,player_id, year, stint, glf, gcf, grf]
Table fielding_postseason, columns = [*,player_id, year, team_id, league_id, round, pos, g, gs, inn_outs, po, a, e, dp, tp, pb, sb, cs]
Table home_game, columns = [*,year, league_id, team_id, park_id, span_first, span_last, games, openings, attendance]
Table manager, columns = [*,player_id, year, team_id, league_id, inseason, g, w, l, rank, plyr_mgr]
Table manager_half, columns = [*,player_id, year, team_id, league_id, inseason, half, g, w, l, rank]
Table pitching, columns = [*,player_id, year, stint, team_id, league_id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g_idp]
Table pitching_postseason, columns = [*,player_id, year, round, team_id, league_id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g_idp]
Table salary, columns = [*,year, team_id, league_id, player_id, salary]
Table postseason, columns = [*,year, round, team_id_winner, league_id_winner, team_id_loser, league_id_loser, wins, losses, ties]
Table team, columns = [*,year, league_id, team_id, franchise_id, div_id, rank, g, ghome, w, l, div_win, wc_win, lg_win, ws_win, r, ab, h, double, triple, hr, bb, so, sb, cs, hbp, sf, ra, er, era, cg, sho, sv, ipouts, ha, hra, bba, soa, e, dp, fp, name, park, attendance, bpf, ppf, team_id_br, team_id_lahman45, team_id_retro]
Table team_half, columns = [*,year, league_id, team_id, half, div_id, div_win, rank, g, w, l]
target dvq:
Visualize LINE SELECT year , COUNT(year) FROM home_game BIN year BY YEAR
****************************************************************************************************
nl_queries:
Give me the trend about the date_from attributes of all researchers , and bin the date into Year interval , rank by the x axis in desc .
database schema:
Table Project_Staff, columns = [*,staff_id, project_id, role_code, date_from, date_to, other_details]
target dvq:
Visualize LINE SELECT date_from , COUNT(date_from) FROM Project_Staff ORDER BY date_from DESC BIN date_from BY YEAR
****************************************************************************************************
nl_queries:
Return a bar chart about the distribution of Start_from and the average of Shop_ID , and group by attribute Is_full_time and bin start_from by weekday , sort by the y axis in desc .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , AVG(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY AVG(Shop_ID) DESC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
I want a bar chart to show the frequency of the dates that have the 5 highest cloud cover rates each year .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather BIN date BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the sum of manager_id over the hire_date bin hire_date by time by a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Visualize a line chart about the change of the amount of Start_from over Start_from , and group by attribute Is_full_time and bin start_from by time , display x-axis from high to low order .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , COUNT(Start_from) FROM hiring GROUP BY Is_full_time ORDER BY Start_from DESC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For the average of Employee_ID , Start_from , visualize the trend .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Employee_ID) FROM hiring GROUP BY Is_full_time BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the average of department_id bin hire_date by time , and visualize them by a bar chart , could you rank from high to low by the total number ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(DEPARTMENT_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Bar chart x axis booking end date y axis the number of booking end date , list y axis in desc order .
database schema:
Table Apartment_Bookings, columns = [*,apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date]
target dvq:
Visualize BAR SELECT booking_end_date , COUNT(booking_end_date) FROM Apartment_Bookings  ORDER BY COUNT(booking_end_date) DESC BIN booking_end_date BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the sum of manager_id over the hire_date bin hire_date by time , and sort in descending by the total number .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(MANAGER_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Return a bar chart about the distribution of Start_from and the average of Employee_ID , and group by attribute Is_full_time and bin start_from by weekday .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , AVG(Employee_ID) FROM hiring GROUP BY Is_full_time BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the sum of employee_id bin hire_date by time , and visualize them by a bar chart , rank total number from low to high order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(EMPLOYEE_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Give me the comparison about the average of Employee_ID over the Start_from , and group by attribute Is_full_time and bin start_from by weekday by a bar chart , and sort in ascending by the the average of employee id .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , AVG(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY AVG(Employee_ID) ASC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the sum of employee_id over the hire_date bin hire_date by time , and could you list by the y axis from low to high ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(EMPLOYEE_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Show me about the change of the sum of Shop_ID over Start_from , and group by attribute Is_full_time and bin start_from by time in a line chart , and I want to order by the X-axis in ascending .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from ASC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
A bar chart shows the distribution of Start_from and the average of Shop_ID bin start_from by weekday .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , AVG(Shop_ID) FROM hiring BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the average of employee_id bin hire_date by time , and visualize them by a bar chart , and could you show by the Y from low to high ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(EMPLOYEE_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Show me the number of booking start date by booking start date in a histogram , and sort by the how many booking start date from high to low please .
database schema:
Table Apartment_Bookings, columns = [*,apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date]
target dvq:
Visualize BAR SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings  ORDER BY COUNT(booking_start_date) DESC BIN booking_start_date BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday , and sort by the sum department id in ascending please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(DEPARTMENT_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the amount of hire_date over the hire_date bin hire_date by time by a bar chart , and display by the y axis in descending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the sum of manager_id over the hire_date bin hire_date by weekday , and order from low to high by the y-axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(MANAGER_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday , I want to display from low to high by the mean salary .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Draw a bar chart about the distribution of Start_from and the sum of Employee_ID , and group by attribute Is_full_time and bin start_from by weekday , I want to rank in ascending by the sum employee id .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , SUM(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY SUM(Employee_ID) ASC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time , and list y axis in desc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(DEPARTMENT_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of hire_date and the average of salary bin hire_date by time in a bar chart , and order total number from low to high order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday , list by the y-axis in desc .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the amount of hire_date bin hire_date by time , and visualize them by a bar chart , sort by the how many hire date in descending please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by time , display in desc by the sum department id .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(DEPARTMENT_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the amount of hire_date bin hire_date by time in a bar chart , show by the y axis in desc .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
How many mills of 'Grondzeiler' type are built in each year ? Give me the trend , rank from low to high by the x-axis .
database schema:
Table mill, columns = [*,architect_id, id, location, name, type, built_year, notes]
target dvq:
Visualize LINE SELECT built_year , COUNT(built_year) FROM mill WHERE TYPE = 'Grondzeiler'  ORDER BY built_year ASC BIN built_year BY YEAR
****************************************************************************************************
nl_queries:
Show the number of documents for each receipt date and bin by year with a line chart , sort by the x-axis in desc please .
database schema:
Table Documents, columns = [*,document_id, document_status_code, document_type_code, shipping_agent_code, receipt_date, receipt_number, other_details]
target dvq:
Visualize LINE SELECT receipt_date , COUNT(receipt_date) FROM Documents  ORDER BY receipt_date DESC BIN receipt_date BY YEAR
****************************************************************************************************
nl_queries:
Find Start_from and the sum of Shop_ID bin start_from by weekday , and visualize them by a bar chart .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , SUM(Shop_ID) FROM hiring BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of manager_id over the hire_date bin hire_date by weekday , order by the y-axis in descending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(MANAGER_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
How many accounts are opened in each year ? Show a group line chart that group by other account details .
database schema:
Table Accounts, columns = [*,account_id, customer_id, date_account_opened, account_name, other_account_details]
target dvq:
Visualize LINE SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts GROUP BY other_account_details BIN date_account_opened BY YEAR
****************************************************************************************************
nl_queries:
Group and count the move in date in a bar chart , and I want to bin the X into Year interval , and I want to sort y-axis from high to low order .
database schema:
Table Residents, columns = [*,resident_id, property_id, date_moved_in, date_moved_out, other_details]
Table Residents_Services, columns = [*,resident_id, service_id, date_moved_in, property_id, date_requested, date_provided, other_details]
Table Customer_Events, columns = [*,Customer_Event_ID, customer_id, date_moved_in, property_id, resident_id, thing_id]
Table Customer_Event_Notes, columns = [*,Customer_Event_Note_ID, Customer_Event_ID, service_type_code, resident_id, property_id, date_moved_in]
target dvq:
Visualize BAR SELECT date_moved_in , COUNT(date_moved_in) FROM customer_events  ORDER BY COUNT(date_moved_in) DESC BIN date_moved_in BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a bar chart shows the distribution of hire_date and the sum of salary bin hire_date by time , show in descending by the Y .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
What are the number of books for each year , ordered by year descending ? Return a bar chart .
database schema:
Table book_club, columns = [*,book_club_id, Year, Author_or_Editor, Book_Title, Publisher, Category, Result]
Table movie, columns = [*,movie_id, Title, Year, Director, Budget_million, Gross_worldwide]
target dvq:
Visualize BAR SELECT Year , COUNT(Year) FROM book_club  ORDER BY YEAR DESC BIN Year BY YEAR
****************************************************************************************************
nl_queries:
Give me line charts of worldwide gross the average of shop id over year start from by major genres Is_full_time , and order from high to low by the Start_from please .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from DESC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of department_id over the hire_date bin hire_date by time by a bar chart , sort from high to low by the total number .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(DEPARTMENT_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Show the number of accounts opened in each day . Bin the account open day by weekday in a bar chart .
database schema:
Table Accounts, columns = [*,account_id, customer_id, date_account_opened, account_name, other_account_details]
target dvq:
Visualize BAR SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts BIN date_account_opened BY WEEKDAY
****************************************************************************************************
nl_queries:
In which years cars were produced weighing no less than 3000 and no more than 4000 , and count them by a bar chart , sort in ascending by the y axis .
database schema:
Table cars_data, columns = [*,Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year]
target dvq:
Visualize BAR SELECT Year , COUNT(Year) FROM cars_data where weight between 3000 and 4000  ORDER BY COUNT(Year) ASC BIN Year BY WEEKDAY
****************************************************************************************************
nl_queries:
Group and count the move in date in a bar chart , and I want to bin the X into Year interval , and rank by the the number of date moved in in asc .
database schema:
Table Residents, columns = [*,resident_id, property_id, date_moved_in, date_moved_out, other_details]
Table Residents_Services, columns = [*,resident_id, service_id, date_moved_in, property_id, date_requested, date_provided, other_details]
Table Customer_Events, columns = [*,Customer_Event_ID, customer_id, date_moved_in, property_id, resident_id, thing_id]
Table Customer_Event_Notes, columns = [*,Customer_Event_Note_ID, Customer_Event_ID, service_type_code, resident_id, property_id, date_moved_in]
target dvq:
Visualize BAR SELECT date_moved_in , COUNT(date_moved_in) FROM customer_events  ORDER BY COUNT(date_moved_in) ASC BIN date_moved_in BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of manager_id over the hire_date bin hire_date by time , show by the y-axis in asc .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(MANAGER_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the sum of department_id over the hire_date bin hire_date by time by a bar chart , and I want to order by the y-axis from low to high .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(DEPARTMENT_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Show the number of date arrived from each date arrived , display in ascending by the y-axis .
database schema:
Table Dogs, columns = [*,dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed]
target dvq:
Visualize BAR SELECT date_arrived , COUNT(date_arrived) FROM Dogs  ORDER BY COUNT(date_arrived) ASC BIN date_arrived BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the sum of department_id over the hire_date bin hire_date by weekday by a bar chart , sort sum department id in ascending order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(DEPARTMENT_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Find Start_from and the amount of Start_from , and group by attribute Is_full_time and bin start_from by weekday , and visualize them by a bar chart , I want to show by the y axis in asc please .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , COUNT(Start_from) FROM hiring GROUP BY Is_full_time ORDER BY COUNT(Start_from) ASC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
Compare the total salary by each hire date (bin it into month interval) of employees using a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of manager_id over the hire_date bin hire_date by time .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Give me the trend about the sum of Employee_ID over Start_from , and group by attribute Is_full_time and bin start_from by time .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Employee_ID) FROM hiring GROUP BY Is_full_time BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Create a bar chart showing the number of date departed across date departed , and I want to show in ascending by the y-axis .
database schema:
Table Dogs, columns = [*,dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed]
target dvq:
Visualize BAR SELECT date_departed , COUNT(date_departed) FROM Dogs  ORDER BY COUNT(date_departed) ASC BIN date_departed BY WEEKDAY
****************************************************************************************************
nl_queries:
Bin all date of transactions into the YEAR interval , and calculate the average the share count for each bin . Visualize the result using a trend line .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , AVG(share_count) FROM TRANSACTIONS BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of hire_date and the sum of manager_id bin hire_date by weekday in a bar chart , and sort y axis in ascending order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(MANAGER_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of hire_date and the amount of hire_date bin hire_date by time in a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
What are the number of the dates with a maximum temperature higher than 85 ?
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85 BIN date BY YEAR
****************************************************************************************************
nl_queries:
How many apartment bookings in each year ? Show me a bar chart binning booking end date by year , rank in ascending by the Y .
database schema:
Table Apartment_Bookings, columns = [*,apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date]
target dvq:
Visualize BAR SELECT booking_end_date , COUNT(booking_end_date) FROM Apartment_Bookings  ORDER BY COUNT(booking_end_date) ASC BIN booking_end_date BY YEAR
****************************************************************************************************
nl_queries:
The trend about the the number of season of different Home_team over the season , and I want to show in ascending by the x-axis .
database schema:
Table game, columns = [*,stadium_id, id, Season, Date, Home_team, Away_team, Score, Competition]
target dvq:
Visualize LINE SELECT Season , COUNT(Season) FROM game GROUP BY Home_team ORDER BY Season ASC BIN Season BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the average of employee_id bin hire_date by time , and visualize them by a bar chart , show in ascending by the Y .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(EMPLOYEE_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
What are the number of the distinct visit dates ? , and show Y from low to high order .
database schema:
Table Visits, columns = [*,Visit_ID, Tourist_Attraction_ID, Tourist_ID, Visit_Date, Visit_Details]
target dvq:
Visualize BAR SELECT Visit_Date , COUNT(Visit_Date) FROM VISITS  ORDER BY COUNT(Visit_Date) ASC BIN Visit_Date BY WEEKDAY
****************************************************************************************************
nl_queries:
A line chart for finding the number of the dates of the tests taken with result "Pass" , display x-axis from high to low order .
database schema:
Table Student_Tests_Taken, columns = [*,registration_id, date_test_taken, test_result]
target dvq:
Visualize LINE SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = "Pass"  ORDER BY date_test_taken DESC BIN date_test_taken BY DAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the sum of salary bin hire_date by weekday , and visualize them by a bar chart , and I want to list in ascending by the Y please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by weekday , and I want to order in ascending by the Y .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(EMPLOYEE_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
In zip code 94107 , on which day neither Fog nor Rain was not observed , and count them by a bar chart
database schema:
Table trip, columns = [*,id, duration, start_date, start_station_name, start_station_id, end_date, end_station_name, end_station_id, bike_id, subscription_type, zip_code]
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE zip_code = 94107 AND EVENTS != "Fog" AND EVENTS != "Rain" BIN date BY YEAR
****************************************************************************************************
nl_queries:
Visualize the general trend of how many year over the year , and display X-axis in descending order .
database schema:
Table all_star, columns = [*,player_id, year, game_num, game_id, team_id, league_id, gp, starting_pos]
Table appearances, columns = [*,year, team_id, league_id, player_id, g_all, gs, g_batting, g_defense, g_p, g_c, g_1b, g_2b, g_3b, g_ss, g_lf, g_cf, g_rf, g_of, g_dh, g_ph, g_pr]
Table manager_award, columns = [*,player_id, award_id, year, league_id, tie, notes]
Table player_award, columns = [*,player_id, award_id, year, league_id, tie, notes]
Table manager_award_vote, columns = [*,award_id, year, league_id, player_id, points_won, points_max, votes_first]
Table player_award_vote, columns = [*,award_id, year, league_id, player_id, points_won, points_max, votes_first]
Table batting, columns = [*,player_id, year, stint, team_id, league_id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g_idp]
Table batting_postseason, columns = [*,year, round, player_id, team_id, league_id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g_idp]
Table player_college, columns = [*,player_id, college_id, year]
Table fielding, columns = [*,player_id, year, stint, team_id, league_id, pos, g, gs, inn_outs, po, a, e, dp, pb, wp, sb, cs, zr]
Table fielding_outfield, columns = [*,player_id, year, stint, glf, gcf, grf]
Table fielding_postseason, columns = [*,player_id, year, team_id, league_id, round, pos, g, gs, inn_outs, po, a, e, dp, tp, pb, sb, cs]
Table home_game, columns = [*,year, league_id, team_id, park_id, span_first, span_last, games, openings, attendance]
Table manager, columns = [*,player_id, year, team_id, league_id, inseason, g, w, l, rank, plyr_mgr]
Table manager_half, columns = [*,player_id, year, team_id, league_id, inseason, half, g, w, l, rank]
Table pitching, columns = [*,player_id, year, stint, team_id, league_id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g_idp]
Table pitching_postseason, columns = [*,player_id, year, round, team_id, league_id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g_idp]
Table salary, columns = [*,year, team_id, league_id, player_id, salary]
Table postseason, columns = [*,year, round, team_id_winner, league_id_winner, team_id_loser, league_id_loser, wins, losses, ties]
Table team, columns = [*,year, league_id, team_id, franchise_id, div_id, rank, g, ghome, w, l, div_win, wc_win, lg_win, ws_win, r, ab, h, double, triple, hr, bb, so, sb, cs, hbp, sf, ra, er, era, cg, sho, sv, ipouts, ha, hra, bba, soa, e, dp, fp, name, park, attendance, bpf, ppf, team_id_br, team_id_lahman45, team_id_retro]
Table team_half, columns = [*,year, league_id, team_id, half, div_id, div_win, rank, g, w, l]
target dvq:
Visualize LINE SELECT year , COUNT(year) FROM home_game  ORDER BY year DESC BIN year BY YEAR
****************************************************************************************************
nl_queries:
Give me the trend about the sum of Shop_ID over Start_from bin start_from by time , and rank X in asc order please .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Shop_ID) FROM hiring  ORDER BY Start_from ASC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the average of department_id bin hire_date by time in a bar chart , and rank mean department id in descending order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(DEPARTMENT_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Show sum salary from each hire date , I want to show by the y-axis in descending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Visualize a line chart about the change of the amount of Start_from over Start_from , and group by attribute Is_full_time and bin start_from by time .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , COUNT(Start_from) FROM hiring GROUP BY Is_full_time BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Give me a bar chart that the X-axis is the date_moved_in and the Y-axis is Count them , please bin X-axis into Day of Week interval , list from high to low by the how many date moved in .
database schema:
Table Residents, columns = [*,resident_id, property_id, date_moved_in, date_moved_out, other_details]
Table Residents_Services, columns = [*,resident_id, service_id, date_moved_in, property_id, date_requested, date_provided, other_details]
Table Customer_Events, columns = [*,Customer_Event_ID, customer_id, date_moved_in, property_id, resident_id, thing_id]
Table Customer_Event_Notes, columns = [*,Customer_Event_Note_ID, Customer_Event_ID, service_type_code, resident_id, property_id, date_moved_in]
target dvq:
Visualize BAR SELECT date_moved_in , COUNT(date_moved_in) FROM customer_events  ORDER BY COUNT(date_moved_in) DESC BIN date_moved_in BY WEEKDAY
****************************************************************************************************
nl_queries:
What are the number of the dates of transactions with at least 100 share count or amount bigger than 100 ? , and could you display by the date_of_transaction in ascending ?
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100  ORDER BY date_of_transaction ASC BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
Show total number of shop id from each start from , and could you show from low to high by the Y-axis ?
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , SUM(Shop_ID) FROM hiring  ORDER BY SUM(Shop_ID) ASC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the sum of manager_id bin hire_date by weekday , and visualize them by a bar chart , could you list y axis in desc order ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(MANAGER_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the sum of employee_id over the hire_date bin hire_date by time by a bar chart , and could you display by the total number in desc ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(EMPLOYEE_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Stacked bar chart of total number of shop id for with each Is_full_time in each start from , show by the total number in descending please .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , SUM(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY SUM(Shop_ID) DESC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of manager_id over the hire_date bin hire_date by time by a bar chart , and order in descending by the y-axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(MANAGER_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
What are all the calendar dates ? Show a bar chart binning calendar date by weekday , could you display total number in desc order ?
database schema:
Table Ref_Calendar, columns = [*,Calendar_Date, Day_Number]
target dvq:
Visualize BAR SELECT Calendar_Date , COUNT(Calendar_Date) FROM Ref_calendar  ORDER BY COUNT(Calendar_Date) DESC BIN Calendar_Date BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday , and I want to display by the Y-axis in descending .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(DEPARTMENT_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
What is the frequency of the dates (bin into year interval) that had the top 5 cloud cover rates ? You can draw me a bar chart for this purpose , I want to sort Y in descending order .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather  ORDER BY COUNT(date) DESC BIN date BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the sum of manager_id over the hire_date bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
How many cars each weekday (by bin the year into a day of the week interval) ? Show me the bar chart , and display by the Y in descending .
database schema:
Table cars_data, columns = [*,Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year]
target dvq:
Visualize BAR SELECT Year , COUNT(Year) FROM CARS_DATA  ORDER BY COUNT(Year) DESC BIN Year BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the average of employee_id bin hire_date by weekday , and visualize them by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Show me about the distribution of Start_from and the amount of Start_from bin start_from by weekday in a bar chart , and sort from high to low by the Y .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , COUNT(Start_from) FROM hiring  ORDER BY COUNT(Start_from) DESC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the sum of employee_id bin hire_date by time , and visualize them by a bar chart , display by the y axis in descending please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(EMPLOYEE_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Show the number of the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000 , show in ascending by the X-axis .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000  ORDER BY date_of_transaction ASC BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of hire_date and the sum of salary bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by time , and list by the sum department id from high to low .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(DEPARTMENT_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
What are the number of the dates in which the mean sea level pressure was between 30 . 3 and 31 ?
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31 BIN date BY YEAR
****************************************************************************************************
nl_queries:
Draw a bar chart about the distribution of Start_from and the average of Employee_ID bin start_from by weekday .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , AVG(Employee_ID) FROM hiring BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by time , and display Y-axis in asc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(EMPLOYEE_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Find all the distinct visit dates , and count them by a bar chart , and rank total number from low to high order .
database schema:
Table Visits, columns = [*,Visit_ID, Tourist_Attraction_ID, Tourist_ID, Visit_Date, Visit_Details]
target dvq:
Visualize BAR SELECT Visit_Date , COUNT(Visit_Date) FROM VISITS  ORDER BY COUNT(Visit_Date) ASC BIN Visit_Date BY WEEKDAY
****************************************************************************************************
nl_queries:
For the average of Shop_ID , Start_from , visualize the trend , and list Start_from in descending order .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Shop_ID) FROM hiring  ORDER BY Start_from DESC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of hire_date and the sum of manager_id bin hire_date by weekday in a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For the top 3 days with the largest max gust speeds , please bin the date into the of the week and then compute the average of mean humidity to visualize a bar chart .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , AVG(mean_humidity) FROM weather  ORDER BY max_gust_speed_mph DESC LIMIT 3 BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the sum of manager_id bin hire_date by weekday in a bar chart , rank by the y-axis in descending .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(MANAGER_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the average of manager_id bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
A line chart for returning the number of the date of birth for all the guests with gender code "Male" , I want to show x axis in ascending order .
database schema:
Table Guests, columns = [*,guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth]
target dvq:
Visualize LINE SELECT date_of_birth , COUNT(date_of_birth) FROM Guests WHERE gender_code = "Male"  ORDER BY date_of_birth ASC BIN date_of_birth BY YEAR
****************************************************************************************************
nl_queries:
Create a bar chart showing the number of date departed across date departed , and sort in descending by the total number .
database schema:
Table Dogs, columns = [*,dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed]
target dvq:
Visualize BAR SELECT date_departed , COUNT(date_departed) FROM Dogs  ORDER BY COUNT(date_departed) DESC BIN date_departed BY WEEKDAY
****************************************************************************************************
nl_queries:
Show the number of games in each season and group by home team in a group line chart The x-axis is season , I want to show in ascending by the x-axis .
database schema:
Table game, columns = [*,stadium_id, id, Season, Date, Home_team, Away_team, Score, Competition]
target dvq:
Visualize LINE SELECT Season , COUNT(Season) FROM game GROUP BY Home_team ORDER BY Season ASC BIN Season BY YEAR
****************************************************************************************************
nl_queries:
Draw a line chart about the change of the average of Employee_ID over Start_from , and group by attribute Is_full_time and bin start_from by time .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Employee_ID) FROM hiring GROUP BY Is_full_time BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the average of salary bin hire_date by weekday , and visualize them by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
I want a bar chart to show the frequency of the dates that have the 5 highest cloud cover rates each year , and list Y-axis from high to low order .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather  ORDER BY COUNT(date) DESC BIN date BY YEAR
****************************************************************************************************
nl_queries:
Draw a line chart about the change of the average of Employee_ID over Start_from , and group by attribute Is_full_time and bin start_from by time , I want to sort Start_from in descending order .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from DESC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
How many dogs arrived in each day ? Visualize with a bar chart that bins arrived date by weekday , list by the Y-axis in ascending .
database schema:
Table Dogs, columns = [*,dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed]
target dvq:
Visualize BAR SELECT date_arrived , COUNT(date_arrived) FROM Dogs  ORDER BY COUNT(date_arrived) ASC BIN date_arrived BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of hire_date and the sum of salary bin hire_date by time , and I want to show by the Y in descending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Plot date to by the number of date to as a trend line
database schema:
Table Project_Staff, columns = [*,staff_id, project_id, role_code, date_from, date_to, other_details]
target dvq:
Visualize LINE SELECT date_to , COUNT(date_to) FROM Project_Staff BIN date_to BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Bar chart x axis date moved in y axis how many date moved in
database schema:
Table Residents, columns = [*,resident_id, property_id, date_moved_in, date_moved_out, other_details]
Table Residents_Services, columns = [*,resident_id, service_id, date_moved_in, property_id, date_requested, date_provided, other_details]
Table Customer_Events, columns = [*,Customer_Event_ID, customer_id, date_moved_in, property_id, resident_id, thing_id]
Table Customer_Event_Notes, columns = [*,Customer_Event_Note_ID, Customer_Event_ID, service_type_code, resident_id, property_id, date_moved_in]
target dvq:
Visualize BAR SELECT date_moved_in , COUNT(date_moved_in) FROM customer_events BIN date_moved_in BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a bar chart shows the distribution of hire_date and the amount of hire_date bin hire_date by weekday , rank by the y axis in ascending please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
How many apartment bookings in each weekday ? Show me a bar chart binning booking end date by weekday , list Y-axis in desc order .
database schema:
Table Apartment_Bookings, columns = [*,apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date]
target dvq:
Visualize BAR SELECT booking_end_date , COUNT(booking_end_date) FROM Apartment_Bookings  ORDER BY COUNT(booking_end_date) DESC BIN booking_end_date BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the sum of department_id bin hire_date by time in a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the average of manager_id bin hire_date by weekday , and visualize them by a bar chart , I want to order from low to high by the y axis .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(MANAGER_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday , and order by the y-axis from high to low .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
A line chart shows the change of the average of Employee_ID over Start_from bin start_from by time
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Employee_ID) FROM hiring BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
How many completion students in each month ? Return a bar chart binning date of completion by month interval .
database schema:
Table Student_Course_Enrolment, columns = [*,registration_id, student_id, course_id, date_of_enrolment, date_of_completion]
target dvq:
Visualize BAR SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment BIN date_of_completion BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the sum of salary bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
How many dogs arrived in each day ? Visualize with a bar chart that bins arrived date by weekday , rank in descending by the y-axis .
database schema:
Table Dogs, columns = [*,dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed]
target dvq:
Visualize BAR SELECT date_arrived , COUNT(date_arrived) FROM Dogs  ORDER BY COUNT(date_arrived) DESC BIN date_arrived BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by weekday , and I want to order in ascending by the Y .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(EMPLOYEE_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the amount of hire_date over the hire_date bin hire_date by time by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by weekday , display in descending by the Y please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(EMPLOYEE_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Bar chart x axis year y axis the number of year
database schema:
Table all_star, columns = [*,player_id, year, game_num, game_id, team_id, league_id, gp, starting_pos]
Table appearances, columns = [*,year, team_id, league_id, player_id, g_all, gs, g_batting, g_defense, g_p, g_c, g_1b, g_2b, g_3b, g_ss, g_lf, g_cf, g_rf, g_of, g_dh, g_ph, g_pr]
Table manager_award, columns = [*,player_id, award_id, year, league_id, tie, notes]
Table player_award, columns = [*,player_id, award_id, year, league_id, tie, notes]
Table manager_award_vote, columns = [*,award_id, year, league_id, player_id, points_won, points_max, votes_first]
Table player_award_vote, columns = [*,award_id, year, league_id, player_id, points_won, points_max, votes_first]
Table batting, columns = [*,player_id, year, stint, team_id, league_id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g_idp]
Table batting_postseason, columns = [*,year, round, player_id, team_id, league_id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g_idp]
Table player_college, columns = [*,player_id, college_id, year]
Table fielding, columns = [*,player_id, year, stint, team_id, league_id, pos, g, gs, inn_outs, po, a, e, dp, pb, wp, sb, cs, zr]
Table fielding_outfield, columns = [*,player_id, year, stint, glf, gcf, grf]
Table fielding_postseason, columns = [*,player_id, year, team_id, league_id, round, pos, g, gs, inn_outs, po, a, e, dp, tp, pb, sb, cs]
Table home_game, columns = [*,year, league_id, team_id, park_id, span_first, span_last, games, openings, attendance]
Table manager, columns = [*,player_id, year, team_id, league_id, inseason, g, w, l, rank, plyr_mgr]
Table manager_half, columns = [*,player_id, year, team_id, league_id, inseason, half, g, w, l, rank]
Table pitching, columns = [*,player_id, year, stint, team_id, league_id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g_idp]
Table pitching_postseason, columns = [*,player_id, year, round, team_id, league_id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g_idp]
Table salary, columns = [*,year, team_id, league_id, player_id, salary]
Table postseason, columns = [*,year, round, team_id_winner, league_id_winner, team_id_loser, league_id_loser, wins, losses, ties]
Table team, columns = [*,year, league_id, team_id, franchise_id, div_id, rank, g, ghome, w, l, div_win, wc_win, lg_win, ws_win, r, ab, h, double, triple, hr, bb, so, sb, cs, hbp, sf, ra, er, era, cg, sho, sv, ipouts, ha, hra, bba, soa, e, dp, fp, name, park, attendance, bpf, ppf, team_id_br, team_id_lahman45, team_id_retro]
Table team_half, columns = [*,year, league_id, team_id, half, div_id, div_win, rank, g, w, l]
target dvq:
Visualize BAR SELECT year , COUNT(year) FROM home_game BIN year BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find hire_date and the average of department_id bin hire_date by time , and visualize them by a bar chart , could you display y-axis from high to low order ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(DEPARTMENT_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find hire_date and the amount of hire_date bin hire_date by weekday , and visualize them by a bar chart , and could you show in descending by the how many hire date ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Draw a bar chart about the distribution of Start_from and the sum of Shop_ID , and group by attribute Is_full_time and bin start_from by weekday , sort in descending by the total number .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , SUM(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY SUM(Shop_ID) DESC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of salary over the hire_date bin hire_date by time .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the average of department_id bin hire_date by time in a bar chart , sort in asc by the mean department id .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(DEPARTMENT_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Show all dates of transactions whose type code is "SALE" , and count them by a line chart , show from low to high by the x-axis .
database schema:
Table Ref_Transaction_Types, columns = [*,transaction_type_code, transaction_type_description]
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE transaction_type_code = "SALE"  ORDER BY date_of_transaction ASC BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the sum of department_id over the hire_date bin hire_date by weekday by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Give me the comparison about the sum of Employee_ID over the Start_from bin start_from by weekday by a bar chart , and I want to sort from high to low by the Y .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , SUM(Employee_ID) FROM hiring  ORDER BY SUM(Employee_ID) DESC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
What are the payment date of the payment with amount paid higher than 300 or with payment type is 'Check , and count them by a bar chart , order in desc by the y axis .
database schema:
Table Payments, columns = [*,payment_id, booking_id, customer_id, payment_type_code, amount_paid_in_full_yn, payment_date, amount_due, amount_paid]
target dvq:
Visualize BAR SELECT payment_date , COUNT(payment_date) FROM payments WHERE amount_paid > 300 OR payment_type_code = 'Check'  ORDER BY COUNT(payment_date) DESC BIN payment_date BY MONTH
****************************************************************************************************
nl_queries:
Find the number of the latest logon date of the students whose family name is "Jaskolski" or "Langosh" .
database schema:
Table Course_Authors_and_Tutors, columns = [*,author_id, author_tutor_ATB, login_name, password, personal_name, middle_name, family_name, gender_mf, address_line_1]
Table Students, columns = [*,student_id, date_of_registration, date_of_latest_logon, login_name, password, personal_name, middle_name, family_name]
target dvq:
Visualize BAR SELECT date_of_latest_logon , COUNT(date_of_latest_logon) FROM Students WHERE family_name = "Jaskolski" OR family_name = "Langosh" BIN date_of_latest_logon BY WEEKDAY
****************************************************************************************************
nl_queries:
How many documents in different starting date ? Return a line chart binning starting date by year interval .
database schema:
Table Document_Locations, columns = [*,Document_ID, Location_Code, Date_in_Location_From, Date_in_Locaton_To]
target dvq:
Visualize LINE SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations BIN Date_in_Location_From BY YEAR
****************************************************************************************************
nl_queries:
How many accounts are opened in each day ? Bin the account open day by weekday in a bar chart .
database schema:
Table Accounts, columns = [*,account_id, customer_id, date_account_opened, account_name, other_account_details]
target dvq:
Visualize BAR SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts BIN date_account_opened BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the amount of hire_date bin hire_date by weekday in a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Give me the trend about the sum of Shop_ID over Start_from , and group by attribute Is_full_time and bin start_from by time , and sort x axis from high to low order .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from DESC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Plot date of transaction by mean share count as a trend line
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , AVG(share_count) FROM TRANSACTIONS BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
Show me the trend about the average of Shop_ID over Start_from bin start_from by time with a line chart , could you rank X from low to high order ?
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Shop_ID) FROM hiring  ORDER BY Start_from ASC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Bar graph to show how many yearid from different yearid
database schema:
Table hall_of_fame, columns = [*,player_id, yearid, votedby, ballots, needed, votes, inducted, category, needed_note]
target dvq:
Visualize BAR SELECT yearid , COUNT(yearid) FROM hall_of_fame BIN yearid BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the average of salary bin hire_date by weekday , and sort in descending by the mean salary please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
What is the date of birth of every customer whose status code is 'Good Customer' , and count them by a line chart , rank in desc by the X-axis .
database schema:
Table Staff, columns = [*,staff_id, staff_address_id, nickname, first_name, middle_name, last_name, date_of_birth, date_joined_staff, date_left_staff]
Table Customers, columns = [*,customer_id, customer_address_id, customer_status_code, date_became_customer, date_of_birth, first_name, last_name, amount_outstanding, email_address, phone_number, cell_mobile_phone_number]
target dvq:
Visualize LINE SELECT date_of_birth , COUNT(date_of_birth) FROM Customers WHERE customer_status_code = 'Good Customer'  ORDER BY date_of_birth DESC BIN date_of_birth BY YEAR
****************************************************************************************************
nl_queries:
Find Start_from and the sum of Shop_ID bin start_from by weekday , and visualize them by a bar chart , and list in asc by the Y-axis .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , SUM(Shop_ID) FROM hiring  ORDER BY SUM(Shop_ID) ASC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of hire_date and the average of manager_id bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday , I want to show from low to high by the Y .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(DEPARTMENT_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
What are the number of the dates in which the mean sea level pressure was between 303 and 31 ? , and could you show total number in ascending order ?
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) ASC BIN date BY YEAR
****************************************************************************************************
nl_queries:
Give me the dates when the max temperature was higher than 85 , and count them by a bar chart
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85 BIN date BY YEAR
****************************************************************************************************
nl_queries:
Stack bar chart of sum employee id vs Is_full_time based on start from , sort in descending by the Y .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , SUM(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY SUM(Employee_ID) DESC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of hire_date and the sum of salary bin hire_date by time , and show by the total number in asc .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Visualize a bar chart about the distribution of Start_from and the sum of Shop_ID bin start_from by weekday , and sort Y in descending order .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , SUM(Shop_ID) FROM hiring  ORDER BY SUM(Shop_ID) DESC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
A bar chart for returning the number of the date of birth for all the guests with gender code "Male" .
database schema:
Table Guests, columns = [*,guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth]
target dvq:
Visualize BAR SELECT date_of_birth , COUNT(date_of_birth) FROM Guests WHERE gender_code = "Male" BIN date_of_birth BY WEEKDAY
****************************************************************************************************
nl_queries:
How many enrolment students in each day ? Return a bar chart binning date of enrolment by weekday , rank the number of date of enrolment from high to low order .
database schema:
Table Student_Course_Enrolment, columns = [*,registration_id, student_id, course_id, date_of_enrolment, date_of_completion]
target dvq:
Visualize BAR SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment  ORDER BY COUNT(date_of_enrolment) DESC BIN date_of_enrolment BY WEEKDAY
****************************************************************************************************
nl_queries:
Show the number of accounts opened in each year for all accounts in a line chart .
database schema:
Table Accounts, columns = [*,account_id, customer_id, date_account_opened, account_name, other_account_details]
target dvq:
Visualize LINE SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts BIN date_account_opened BY YEAR
****************************************************************************************************
nl_queries:
What are all the calendar dates ? Give me a line chart binning calendar dates by year , rank from low to high by the x-axis please .
database schema:
Table Ref_Calendar, columns = [*,Calendar_Date, Day_Number]
target dvq:
Visualize LINE SELECT Calendar_Date , COUNT(Calendar_Date) FROM Ref_calendar  ORDER BY Calendar_Date ASC BIN Calendar_Date BY YEAR
****************************************************************************************************
nl_queries:
A bar chart for what are the number of the dates that have an average sea level pressure between 303 and 31 ? , and sort in asc by the how many date please .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) ASC BIN date BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by time .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Find Start_from and the average of Shop_ID , and group by attribute Is_full_time and bin start_from by weekday , and visualize them by a bar chart , could you sort in desc by the the average of shop id ?
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , AVG(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY AVG(Shop_ID) DESC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of hire_date and the sum of salary bin hire_date by time .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Give me the comparison about the sum of Shop_ID over the Start_from , and group by attribute Is_full_time and bin start_from by weekday .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , SUM(Shop_ID) FROM hiring GROUP BY Is_full_time BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of hire_date and the average of salary bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of salary over the hire_date bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Bar chart x axis date y axis the number of date , could you display by the total number from high to low ?
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather  ORDER BY COUNT(date) DESC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
Bar chart x axis date departed y axis the number of date departed , show Y in asc order please .
database schema:
Table Dogs, columns = [*,dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed]
target dvq:
Visualize BAR SELECT date_departed , COUNT(date_departed) FROM Dogs  ORDER BY COUNT(date_departed) ASC BIN date_departed BY DAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the average of employee_id bin hire_date by time in a bar chart , sort by the y axis in ascending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(EMPLOYEE_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Bin the installation date into Year interval , and then you can draw a bar chart to tell me how many stations each year , order in ascending by the the number of installation date .
database schema:
Table station, columns = [*,id, name, lat, long, dock_count, city, installation_date]
target dvq:
Visualize BAR SELECT installation_date , COUNT(installation_date) FROM station  ORDER BY COUNT(installation_date) ASC BIN installation_date BY YEAR
****************************************************************************************************
nl_queries:
Plot how many hire date by grouped by hire date as a bar graph , rank in asc by the total number .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Show the total salary by each hire date of employees , and please bin the hire date into the Month interval for showing a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Draw a line chart about the change of the sum of Shop_ID over Start_from bin start_from by time , and I want to rank in asc by the x-axis .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Shop_ID) FROM hiring  ORDER BY Start_from ASC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Return a line chart about the change of the amount of Start_from over Start_from bin start_from by time , and sort from low to high by the x-axis .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , COUNT(Start_from) FROM hiring  ORDER BY Start_from ASC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
I want a bar chart to show the total cloud cover of the dates that have the 5 highest cloud cover rates each year .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , SUM(cloud_cover) FROM weather BIN date BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by weekday , and rank by the total number in descending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(EMPLOYEE_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Find the dates of the tests taken with result "Pass" , and count them by a bar chart , and list in descending by the y-axis .
database schema:
Table Student_Tests_Taken, columns = [*,registration_id, date_test_taken, test_result]
target dvq:
Visualize BAR SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = "Pass"  ORDER BY COUNT(date_test_taken) DESC BIN date_test_taken BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the average of manager_id over the hire_date bin hire_date by weekday by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Visualize a line chart about the change of the amount of Start_from over Start_from bin start_from by time , and display in asc by the X .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , COUNT(Start_from) FROM hiring  ORDER BY Start_from ASC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by time , and could you display in descending by the the average of employee id please ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(EMPLOYEE_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Give me the comparison about the average of Employee_ID over the Start_from , and group by attribute Is_full_time and bin start_from by weekday , could you order by the y axis in desc ?
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , AVG(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY AVG(Employee_ID) DESC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
Bin all date of transactions into the YEAR interval , and calculate the average the share count for each bin Visualize the result using a trend line , show by the X-axis from high to low .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , AVG(share_count) FROM TRANSACTIONS  ORDER BY date_of_transaction DESC BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
Give me a bar chart for the number of year of each year , and rank total number in desc order .
database schema:
Table wine, columns = [*,No, Grape, Winery, Appelation, State, Name, Year, Price, Score, Cases, Drink]
target dvq:
Visualize BAR SELECT Year , COUNT(Year) FROM WINE  ORDER BY COUNT(Year) DESC BIN Year BY WEEKDAY
****************************************************************************************************
nl_queries:
Show the number of accounts opened in each day Bin the account open day by weekday and group by other account details in a stacked bar chart , I want to show the number of date account opened in descending order .
database schema:
Table Accounts, columns = [*,account_id, customer_id, date_account_opened, account_name, other_account_details]
target dvq:
Visualize BAR SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts GROUP BY other_account_details ORDER BY COUNT(date_account_opened) DESC BIN date_account_opened BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose first name does not containing the letter M , display their total salary by binning the hire date into Month interval for visualizing a bar chart , and display in descending by the Y-axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name NOT LIKE '%M%'  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
How many apartment bookings in each year ? Show me a bar chart binning booking start date by year .
database schema:
Table Apartment_Bookings, columns = [*,apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date]
target dvq:
Visualize BAR SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings BIN booking_start_date BY YEAR
****************************************************************************************************
nl_queries:
Return the date of birth for all the guests with gender code "Male" , and count them by a line chart
database schema:
Table Guests, columns = [*,guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth]
target dvq:
Visualize LINE SELECT date_of_birth , COUNT(date_of_birth) FROM Guests WHERE gender_code = "Male" BIN date_of_birth BY YEAR
****************************************************************************************************
nl_queries:
List the number of dogs arrived in each day with a bar chart that bins arrived date by weekday , and list by the Y-axis in ascending .
database schema:
Table Dogs, columns = [*,dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed]
target dvq:
Visualize BAR SELECT date_arrived , COUNT(date_arrived) FROM Dogs  ORDER BY COUNT(date_arrived) ASC BIN date_arrived BY WEEKDAY
****************************************************************************************************
nl_queries:
What are the distinct visit dates , and count them by a line chart , I want to display X-axis in asc order .
database schema:
Table Visits, columns = [*,Visit_ID, Tourist_Attraction_ID, Tourist_ID, Visit_Date, Visit_Details]
target dvq:
Visualize LINE SELECT Visit_Date , COUNT(Visit_Date) FROM VISITS  ORDER BY Visit_Date ASC BIN Visit_Date BY YEAR
****************************************************************************************************
nl_queries:
For those dates that have the 5 highest cloud cover rates , please bin the date into day of the week interval and compute their average cloud cover , and display y-axis in ascending order .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , AVG(cloud_cover) FROM weather  ORDER BY AVG(cloud_cover) ASC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by weekday , and I want to order in descending by the y axis .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For the average of Employee_ID , Start_from , visualize the trend .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Employee_ID) FROM hiring BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Plot the average of salary by grouped by hire date as a bar graph , sort in asc by the y axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by weekday .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of hire_date and the sum of salary bin hire_date by weekday , I want to display by the Y-axis in desc .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the amount of hire_date over the hire_date bin hire_date by weekday by a bar chart , I want to show y axis in desc order please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Plot season by how many season as a line chart , list in desc by the x axis please .
database schema:
Table game, columns = [*,stadium_id, id, Season, Date, Home_team, Away_team, Score, Competition]
target dvq:
Visualize LINE SELECT Season , COUNT(Season) FROM game  ORDER BY Season DESC BIN Season BY YEAR
****************************************************************************************************
nl_queries:
A line chart for finding the number of the dates of the tests taken with result "Pass" , order X in asc order .
database schema:
Table Student_Tests_Taken, columns = [*,registration_id, date_test_taken, test_result]
target dvq:
Visualize LINE SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = "Pass"  ORDER BY date_test_taken ASC BIN date_test_taken BY DAY
****************************************************************************************************
nl_queries:
Show me about the change of the sum of Employee_ID over Start_from bin start_from by time in a line chart , and sort Start_from in ascending order .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Employee_ID) FROM hiring  ORDER BY Start_from ASC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the average of salary bin hire_date by weekday , and visualize them by a bar chart , and show y axis in descending order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Plot openning year by how many openning year as a trend line , could you rank X from high to low order ?
database schema:
Table cinema, columns = [*,Cinema_ID, Name, Openning_year, Capacity, Location]
target dvq:
Visualize LINE SELECT Openning_year , COUNT(Openning_year) FROM cinema  ORDER BY Openning_year DESC BIN Openning_year BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of hire_date and the sum of salary bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Return a bar chart about the distribution of Start_from and the average of Shop_ID bin start_from by weekday , sort by the total number in ascending .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , AVG(Shop_ID) FROM hiring  ORDER BY AVG(Shop_ID) ASC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
Return a line chart about the change of the average of Shop_ID over Start_from bin start_from by time , order by the X from high to low .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Shop_ID) FROM hiring  ORDER BY Start_from DESC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Draw a bar chart about the distribution of Start_from and the amount of Start_from , and group by attribute Is_full_time and bin start_from by weekday , rank total number in asc order .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , COUNT(Start_from) FROM hiring GROUP BY Is_full_time ORDER BY COUNT(Start_from) ASC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
Show me about the change of the amount of Start_from over Start_from bin start_from by time in a line chart .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , COUNT(Start_from) FROM hiring BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by time , list by the Y-axis in asc please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(EMPLOYEE_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Compare the average salary by each hire date (bin it into month interval) of employees using a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Draw a line chart about the change of the average of Shop_ID over Start_from bin start_from by time , show x-axis in asc order .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Shop_ID) FROM hiring  ORDER BY Start_from ASC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Plot how many date of transaction over date of transaction in a line chart , I want to order X from low to high order please .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS  ORDER BY date_of_transaction ASC BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
How many accounts are opened in each year ? Show a group line chart that group by other account details , and could you order by the x axis in desc ?
database schema:
Table Accounts, columns = [*,account_id, customer_id, date_account_opened, account_name, other_account_details]
target dvq:
Visualize LINE SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts GROUP BY other_account_details ORDER BY date_account_opened DESC BIN date_account_opened BY YEAR
****************************************************************************************************
nl_queries:
I want a bar chart to show the frequency of the dates that have the 5 highest cloud cover rates each day .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
For the sum of Employee_ID , Start_from , visualize the trend , and I want to list by the X in asc .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from ASC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the sum of employee_id bin hire_date by time , and visualize them by a bar chart , order in desc by the Y .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(EMPLOYEE_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Show the number of apartment bookings in each weekday and bin booking start date by weekday with a bar chart , and I want to show in desc by the Y .
database schema:
Table Apartment_Bookings, columns = [*,apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date]
target dvq:
Visualize BAR SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings  ORDER BY COUNT(booking_start_date) DESC BIN booking_start_date BY WEEKDAY
****************************************************************************************************
nl_queries:
Show the number of documents in different ending date . Bin ending date by weekday and group by location code with a stacked bar chart .
database schema:
Table Ref_Locations, columns = [*,Location_Code, Location_Name, Location_Description]
Table Document_Locations, columns = [*,Document_ID, Location_Code, Date_in_Location_From, Date_in_Locaton_To]
target dvq:
Visualize BAR SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Location_Code BIN Date_in_Locaton_To BY WEEKDAY
****************************************************************************************************
nl_queries:
For those days with the 3 largest maximum gust speeds , can you plot a bar chart to compare the total mean temperature of each day of the weeks ?
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , SUM(mean_temperature_f) FROM weather  ORDER BY max_gust_speed_mph DESC LIMIT 3 BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
Show me about the distribution of Start_from and the sum of Employee_ID , and group by attribute Is_full_time and bin start_from by weekday in a bar chart , and order total number from low to high order please .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , SUM(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY SUM(Employee_ID) ASC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
Show the number of accounts opened in each year for all accounts in a line chart , list by the X-axis from low to high .
database schema:
Table Accounts, columns = [*,account_id, customer_id, date_account_opened, account_name, other_account_details]
target dvq:
Visualize LINE SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts  ORDER BY date_account_opened ASC BIN date_account_opened BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of salary over the hire_date bin hire_date by time , and rank by the Y-axis in descending please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of hire_date and the sum of manager_id bin hire_date by time , list Y-axis in asc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(MANAGER_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by time .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by time , rank in descending by the y-axis .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(EMPLOYEE_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by weekday , sort from low to high by the Y-axis .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(MANAGER_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time , and could you display in ascending by the y-axis ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(DEPARTMENT_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Can you draw the trend of how many date from over the date from ?
database schema:
Table Project_Staff, columns = [*,staff_id, project_id, role_code, date_from, date_to, other_details]
target dvq:
Visualize LINE SELECT date_from , COUNT(date_from) FROM Project_Staff BIN date_from BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the average of department_id bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For the days with the 3 largest maximum gust speeds , show me the frequency of their corresponding date in the weekdays level using a bar chart .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather  ORDER BY max_gust_speed_mph DESC LIMIT 3 BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
Can you draw the trend of the number of start from over the start from ?
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , COUNT(Start_from) FROM hiring BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the sum of employee_id bin hire_date by weekday in a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
List the number of dogs departed in each day with a bar chart that bins departed date by weekday , could you show total number in ascending order ?
database schema:
Table Dogs, columns = [*,dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed]
target dvq:
Visualize BAR SELECT date_departed , COUNT(date_departed) FROM Dogs  ORDER BY COUNT(date_departed) ASC BIN date_departed BY WEEKDAY
****************************************************************************************************
nl_queries:
Visualize a bar chart about the distribution of Start_from and the amount of Start_from bin start_from by weekday , show by the y axis in descending please .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , COUNT(Start_from) FROM hiring  ORDER BY COUNT(Start_from) DESC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
I want a bar chart to show the total cloud cover of the dates that have the 5 highest cloud cover rates each day , list by the y-axis in ascending .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , SUM(cloud_cover) FROM weather  ORDER BY SUM(cloud_cover) ASC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
Stack bar chart of sum employee id vs Is_full_time based on start from , and I want to rank in ascending by the sum employee id .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , SUM(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY SUM(Employee_ID) ASC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
Return a line chart about the change of the average of Shop_ID over Start_from bin start_from by time .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Shop_ID) FROM hiring BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
What are the payment date of the payment with amount paid higher than 300 or with payment type is 'Check , and count them by a bar chart , show in descending by the y axis .
database schema:
Table Payments, columns = [*,payment_id, booking_id, customer_id, payment_type_code, amount_paid_in_full_yn, payment_date, amount_due, amount_paid]
target dvq:
Visualize BAR SELECT payment_date , COUNT(payment_date) FROM payments WHERE amount_paid > 300 OR payment_type_code = 'Check'  ORDER BY COUNT(payment_date) DESC BIN payment_date BY WEEKDAY
****************************************************************************************************
nl_queries:
Bar chart x axis booking end date y axis the number of booking end date , and could you sort by the total number in asc ?
database schema:
Table Apartment_Bookings, columns = [*,apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date]
target dvq:
Visualize BAR SELECT booking_end_date , COUNT(booking_end_date) FROM Apartment_Bookings  ORDER BY COUNT(booking_end_date) ASC BIN booking_end_date BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the sum of employee_id bin hire_date by weekday , and visualize them by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Bar chart of how many date of completion from each date of completion , and show total number in ascending order .
database schema:
Table Student_Course_Enrolment, columns = [*,registration_id, student_id, course_id, date_of_enrolment, date_of_completion]
target dvq:
Visualize BAR SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment  ORDER BY COUNT(date_of_completion) ASC BIN date_of_completion BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of manager_id over the hire_date bin hire_date by weekday , and I want to show from low to high by the Y-axis please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(MANAGER_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the average of employee_id bin hire_date by time , and visualize them by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
I want a bar chart to show the total cloud cover of the dates that have the 5 highest cloud cover rates each year , and I want to display in asc by the total number .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , SUM(cloud_cover) FROM weather  ORDER BY SUM(cloud_cover) ASC BIN date BY YEAR
****************************************************************************************************
nl_queries:
What are the number of dates of birth of all the guests whose gender is "Male" ?
database schema:
Table Guests, columns = [*,guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth]
target dvq:
Visualize BAR SELECT date_of_birth , COUNT(date_of_birth) FROM Guests WHERE gender_code = "Male" BIN date_of_birth BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find hire_date and the sum of salary bin hire_date by weekday , and visualize them by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of hire_date and the average of manager_id bin hire_date by weekday in a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Return a bar chart about the distribution of Start_from and the sum of Employee_ID , and group by attribute Is_full_time and bin start_from by weekday , I want to display by the y axis in ascending .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , SUM(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY SUM(Employee_ID) ASC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the average of department_id bin hire_date by time , and visualize them by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the sum of manager_id over the hire_date bin hire_date by time by a bar chart , I want to show by the total number of manager id from high to low .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(MANAGER_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
What are the number of the dates that have an average sea level pressure between 303 and 31 ? , and sort the number of date in descending order .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) DESC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of hire_date and the sum of salary bin hire_date by time in a bar chart , sort from high to low by the y axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Give me the trend about the average of Employee_ID over Start_from bin start_from by time .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Employee_ID) FROM hiring BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Plot total number of salary by grouped by hire date as a bar graph , could you display in ascending by the Y-axis ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by weekday , could you sort from high to low by the Y-axis please ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(EMPLOYEE_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Return a line chart about the change of the sum of Employee_ID over Start_from bin start_from by time .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Employee_ID) FROM hiring BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Give me a bar chart that the X-axis is the date_moved_in and the Y-axis is Count them , please bin X-axis into Year interval , rank by the y axis from high to low please .
database schema:
Table Residents, columns = [*,resident_id, property_id, date_moved_in, date_moved_out, other_details]
Table Residents_Services, columns = [*,resident_id, service_id, date_moved_in, property_id, date_requested, date_provided, other_details]
Table Customer_Events, columns = [*,Customer_Event_ID, customer_id, date_moved_in, property_id, resident_id, thing_id]
Table Customer_Event_Notes, columns = [*,Customer_Event_Note_ID, Customer_Event_ID, service_type_code, resident_id, property_id, date_moved_in]
target dvq:
Visualize BAR SELECT date_moved_in , COUNT(date_moved_in) FROM customer_events  ORDER BY COUNT(date_moved_in) DESC BIN date_moved_in BY YEAR
****************************************************************************************************
nl_queries:
I want to see trend the number of season over season by Away_team , and could you order X in asc order ?
database schema:
Table game, columns = [*,stadium_id, id, Season, Date, Home_team, Away_team, Score, Competition]
target dvq:
Visualize LINE SELECT Season , COUNT(Season) FROM game GROUP BY Away_team ORDER BY Season ASC BIN Season BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the amount of hire_date bin hire_date by time , and visualize them by a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Bin all date of transactions into the YEAR interval , and give the average of the share count for each bin What is the trend ? , display by the x-axis in asc please .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , AVG(share_count) FROM TRANSACTIONS  ORDER BY date_of_transaction ASC BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
Give me a bar chart to show how many days with a max temperature greater than or equal to 80 for each year , and could you list total number in ascending order ?
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f >= 80  ORDER BY COUNT(date) ASC BIN date BY YEAR
****************************************************************************************************
nl_queries:
A line chart shows the change of the amount of Start_from over Start_from , and group by attribute Is_full_time and bin start_from by time , and I want to display by the x axis in descending please .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , COUNT(Start_from) FROM hiring GROUP BY Is_full_time ORDER BY Start_from DESC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by time , could you list by the total number in desc ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(DEPARTMENT_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
How many churches open each year ? Convert the year into the weekday interval and visualize with a bar chart , and display in ascending by the Y-axis .
database schema:
Table church, columns = [*,Church_ID, Name, Organized_by, Open_Date, Continuation_of]
target dvq:
Visualize BAR SELECT Open_Date , COUNT(Open_Date) FROM Church  ORDER BY COUNT(Open_Date) ASC BIN Open_Date BY WEEKDAY
****************************************************************************************************
nl_queries:
Draw a line chart about the change of the average of Employee_ID over Start_from , and group by attribute Is_full_time and bin start_from by time , and show by the Start_from in asc .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from ASC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Give me the comparison about the sum of Employee_ID over the Start_from , and group by attribute Is_full_time and bin start_from by weekday , and could you show in asc by the y axis ?
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , SUM(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY SUM(Employee_ID) ASC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
How many enrolment students in each month ? Return a bar chart binning date of enrolment by month interval , order in desc by the Y-axis .
database schema:
Table Student_Course_Enrolment, columns = [*,registration_id, student_id, course_id, date_of_enrolment, date_of_completion]
target dvq:
Visualize BAR SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment  ORDER BY COUNT(date_of_enrolment) DESC BIN date_of_enrolment BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday , and list in ascending by the mean salary .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Give me line charts of worldwide gross how many date in locaton to over year date in locaton to by major genres Location_Code , and sort in desc by the Date_in_Locaton_To please .
database schema:
Table Ref_Locations, columns = [*,Location_Code, Location_Name, Location_Description]
Table Document_Locations, columns = [*,Document_ID, Location_Code, Date_in_Location_From, Date_in_Locaton_To]
target dvq:
Visualize LINE SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Location_Code ORDER BY Date_in_Locaton_To DESC BIN Date_in_Locaton_To BY YEAR
****************************************************************************************************
nl_queries:
A bar chart for showing the number of the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000 .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000 BIN date_of_transaction BY WEEKDAY
****************************************************************************************************
nl_queries:
Give me the trend about the sum of Employee_ID over Start_from , and group by attribute Is_full_time and bin start_from by time , and could you display by the X in desc ?
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from DESC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Show the average salary by each hire date of employees , and please bin the hire date into the Month interval for showing a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Visualize a bar chart about the distribution of Start_from and the sum of Employee_ID bin start_from by weekday .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , SUM(Employee_ID) FROM hiring BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by time , and could you display by the y-axis from high to low ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(EMPLOYEE_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the average of salary bin hire_date by time in a bar chart , display by the y-axis in ascending .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Stacked bar chart of the number of left office for with each Minister in each left office
database schema:
Table party, columns = [*,Party_ID, Minister, Took_office, Left_office, Region_ID, Party_name]
target dvq:
Visualize BAR SELECT Left_office , COUNT(Left_office) FROM party GROUP BY Minister BIN Left_office BY YEAR
****************************************************************************************************
nl_queries:
Visualize a line chart about the change of the sum of Employee_ID over Start_from bin start_from by time , display in asc by the x-axis .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Employee_ID) FROM hiring  ORDER BY Start_from ASC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Draw a bar chart about the distribution of Start_from and the average of Employee_ID , and group by attribute Is_full_time and bin start_from by weekday .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , AVG(Employee_ID) FROM hiring GROUP BY Is_full_time BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
Bin the hire date into the day of week interval , and then calculate the average salary of employees in each day for a bar chart , note that just select those employees without the letter M in their first name , display the average of salary from high to low order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name NOT LIKE '%M%'  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the average of salary bin hire_date by weekday , and visualize them by a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Show me about the distribution of Start_from and the average of Employee_ID bin start_from by weekday in a bar chart , and I want to order by the mean employee id from low to high .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , AVG(Employee_ID) FROM hiring  ORDER BY AVG(Employee_ID) ASC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
In zip code 94107 , on which day neither Fog nor Rain was not observed , and count them by a bar chart , order total number in ascending order please .
database schema:
Table trip, columns = [*,id, duration, start_date, start_station_name, start_station_id, end_date, end_station_name, end_station_id, bike_id, subscription_type, zip_code]
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE zip_code = 94107 AND EVENTS != "Fog" AND EVENTS != "Rain"  ORDER BY COUNT(date) ASC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of salary over the hire_date bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
What are the dates in which the mean sea level pressure was between 30 . 3 and 31 , and count them by a bar chart
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31 BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the sum of employee_id over the hire_date bin hire_date by weekday by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the sum of salary over the hire_date bin hire_date by weekday by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of hire_date and the average of employee_id bin hire_date by time in a bar chart , display in ascending by the y axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(EMPLOYEE_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Show the number of documents in different ending date and bin ending date by weekday with a bar chart .
database schema:
Table Document_Locations, columns = [*,Document_ID, Location_Code, Date_in_Location_From, Date_in_Locaton_To]
target dvq:
Visualize BAR SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations BIN Date_in_Locaton_To BY WEEKDAY
****************************************************************************************************
nl_queries:
Which tests have "Pass" results ? Return the dates when the tests were taken , and count them by a bar chart
database schema:
Table Student_Tests_Taken, columns = [*,registration_id, date_test_taken, test_result]
target dvq:
Visualize BAR SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = "Pass" BIN date_test_taken BY WEEKDAY
****************************************************************************************************
nl_queries:
Bin all date of transactions into the weekday interval , and compute the average of the share count for each bin Return the result using a bar chart , show in ascending by the total number please .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize BAR SELECT date_of_transaction , AVG(share_count) FROM TRANSACTIONS  ORDER BY AVG(share_count) ASC BIN date_of_transaction BY WEEKDAY
****************************************************************************************************
nl_queries:
Visualize a bar chart about the distribution of Start_from and the sum of Employee_ID bin start_from by weekday , and show by the total number in ascending .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , SUM(Employee_ID) FROM hiring  ORDER BY SUM(Employee_ID) ASC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the average of salary over the hire_date bin hire_date by time , order by the y-axis from high to low .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a bar chart shows the distribution of hire_date and the average of manager_id bin hire_date by time , list total number from high to low order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(MANAGER_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of salary over the hire_date bin hire_date by time , and show y axis in asc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Bar chart x axis left office y axis the number of left office , order by the total number in descending .
database schema:
Table party, columns = [*,Party_ID, Minister, Took_office, Left_office, Region_ID, Party_name]
target dvq:
Visualize BAR SELECT Left_office , COUNT(Left_office) FROM party  ORDER BY COUNT(Left_office) DESC BIN Left_office BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by weekday , rank y axis from low to high order please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(MANAGER_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Show how many installation date from each installation date , and rank by the Y in ascending .
database schema:
Table station, columns = [*,id, name, lat, long, dock_count, city, installation_date]
target dvq:
Visualize BAR SELECT installation_date , COUNT(installation_date) FROM station  ORDER BY COUNT(installation_date) ASC BIN installation_date BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the sum of salary over the hire_date bin hire_date by weekday by a bar chart , rank sum salary from low to high order please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a bar chart shows the distribution of hire_date and the average of department_id bin hire_date by time .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
How many accounts are opened in each day ? Bin the account open day by weekday in a bar chart , I want to rank by the y axis in desc .
database schema:
Table Accounts, columns = [*,account_id, customer_id, date_account_opened, account_name, other_account_details]
target dvq:
Visualize BAR SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts  ORDER BY COUNT(date_account_opened) DESC BIN date_account_opened BY WEEKDAY
****************************************************************************************************
nl_queries:
Bin the hire date of employees into Month interval and count them for visualizing a bar chart , list by the how many hire date from low to high .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of hire_date and the average of employee_id bin hire_date by time in a bar chart , could you show in descending by the Y-axis ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(EMPLOYEE_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
A bar chart for finding the number of the dates of the tests taken with result "Pass" .
database schema:
Table Student_Tests_Taken, columns = [*,registration_id, date_test_taken, test_result]
target dvq:
Visualize BAR SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = "Pass" BIN date_test_taken BY WEEKDAY
****************************************************************************************************
nl_queries:
Return a line chart about the change of the sum of Shop_ID over Start_from , and group by attribute Is_full_time and bin start_from by time , I want to order x axis in ascending order please .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from ASC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
How many enrolment students in each month ? Return a bar chart binning date of enrolment by month interval .
database schema:
Table Student_Course_Enrolment, columns = [*,registration_id, student_id, course_id, date_of_enrolment, date_of_completion]
target dvq:
Visualize BAR SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment BIN date_of_enrolment BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by time .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Can you draw the trend of the average of capacity over the openning year ? , and show by the X in ascending .
database schema:
Table cinema, columns = [*,Cinema_ID, Name, Openning_year, Capacity, Location]
target dvq:
Visualize LINE SELECT Openning_year , AVG(Capacity) FROM cinema  ORDER BY Openning_year ASC BIN Openning_year BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the sum of salary bin hire_date by weekday , list total number of salary from high to low order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by weekday , order Y in desc order please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(MANAGER_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the sum of employee_id bin hire_date by weekday , and visualize them by a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the average of salary bin hire_date by time , and visualize them by a bar chart , display Y in desc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
What are the dates with a maximum temperature higher than 85 , and count them by a bar chart , sort by the the number of date in descending please .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) DESC BIN date BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by weekday , and display by the total number of manager id in ascending .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(MANAGER_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
The trend about the the number of season of different Home_team over the season , order from high to low by the x-axis please .
database schema:
Table game, columns = [*,stadium_id, id, Season, Date, Home_team, Away_team, Score, Competition]
target dvq:
Visualize LINE SELECT Season , COUNT(Season) FROM game GROUP BY Home_team ORDER BY Season DESC BIN Season BY YEAR
****************************************************************************************************
nl_queries:
A line chart shows the change of the amount of Start_from over Start_from , and group by attribute Is_full_time and bin start_from by time
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , COUNT(Start_from) FROM hiring GROUP BY Is_full_time BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose first name does not contain the letter M , sum their salary by binning the hire date into the day of week interval for visualizing a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name NOT LIKE '%M%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
I want to see trend of the number of open date by open date , display by the Open_Date from high to low .
database schema:
Table church, columns = [*,Church_ID, Name, Organized_by, Open_Date, Continuation_of]
Table wedding, columns = [*,Church_ID, Male_ID, Female_ID, Year]
target dvq:
Visualize LINE SELECT Open_Date , COUNT(Open_Date) FROM church  ORDER BY Open_Date DESC BIN Open_Date BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the amount of hire_date over the hire_date bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Bar graph to show the number of took office from different took office
database schema:
Table party, columns = [*,Party_ID, Minister, Took_office, Left_office, Region_ID, Party_name]
target dvq:
Visualize BAR SELECT Took_office , COUNT(Took_office) FROM party BIN Took_office BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of hire_date and the average of salary bin hire_date by time , and could you rank from low to high by the Y-axis ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Tell me the average of capacity of cinemas open for each year in a line chart , rank Openning_year from low to high order .
database schema:
Table cinema, columns = [*,Cinema_ID, Name, Openning_year, Capacity, Location]
target dvq:
Visualize LINE SELECT Openning_year , AVG(Capacity) FROM cinema  ORDER BY Openning_year ASC BIN Openning_year BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the sum of manager_id over the hire_date bin hire_date by weekday , and I want to list in desc by the y axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(MANAGER_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by time , show Y-axis in ascending order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(DEPARTMENT_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Can you draw the trend of the average of capacity over the openning year ? , rank in desc by the Openning_year .
database schema:
Table cinema, columns = [*,Cinema_ID, Name, Openning_year, Capacity, Location]
target dvq:
Visualize LINE SELECT Openning_year , AVG(Capacity) FROM cinema  ORDER BY Openning_year DESC BIN Openning_year BY YEAR
****************************************************************************************************
nl_queries:
Show sum employee id from each start from , and I want to sort from high to low by the Y .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , SUM(Employee_ID) FROM hiring  ORDER BY SUM(Employee_ID) DESC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
When are the birthdays of customer who are classified as 'Good Customer' status , and count them by a bar chart
database schema:
Table Staff, columns = [*,staff_id, staff_address_id, nickname, first_name, middle_name, last_name, date_of_birth, date_joined_staff, date_left_staff]
Table Customers, columns = [*,customer_id, customer_address_id, customer_status_code, date_became_customer, date_of_birth, first_name, last_name, amount_outstanding, email_address, phone_number, cell_mobile_phone_number]
target dvq:
Visualize BAR SELECT date_of_birth , COUNT(date_of_birth) FROM Customers WHERE customer_status_code = 'Good Customer' BIN date_of_birth BY WEEKDAY
****************************************************************************************************
nl_queries:
Show the number of accounts opened in each day . Bin the account open day by weekday and group by other account details in a stacked bar chart .
database schema:
Table Accounts, columns = [*,account_id, customer_id, date_account_opened, account_name, other_account_details]
target dvq:
Visualize BAR SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts GROUP BY other_account_details BIN date_account_opened BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the average of department_id over the hire_date bin hire_date by weekday by a bar chart , sort by the y axis from low to high please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(DEPARTMENT_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of department_id over the hire_date bin hire_date by weekday by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Show the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000 , and count them by a bar chart , and sort y-axis in descending order .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000  ORDER BY COUNT(date_of_transaction) DESC BIN date_of_transaction BY WEEKDAY
****************************************************************************************************
nl_queries:
Show me the trend about the average of Employee_ID over Start_from , and group by attribute Is_full_time and bin start_from by time with a line chart , and sort by the x axis in asc .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from ASC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Bar graph to show how many year from different year , and rank y-axis from low to high order .
database schema:
Table wine, columns = [*,No, Grape, Winery, Appelation, State, Name, Year, Price, Score, Cases, Drink]
target dvq:
Visualize BAR SELECT Year , COUNT(Year) FROM WINE  ORDER BY COUNT(Year) ASC BIN Year BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by time , list total number in desc order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Show me the number of booking start date by booking start date in a histogram
database schema:
Table Apartment_Bookings, columns = [*,apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date]
target dvq:
Visualize BAR SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings BIN booking_start_date BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the sum of department_id bin hire_date by weekday , and visualize them by a bar chart , and could you rank in asc by the total number ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(DEPARTMENT_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
How many home games by each weekday (bin the year attr into weekdays interval) ? Give me a bar chart .
database schema:
Table all_star, columns = [*,player_id, year, game_num, game_id, team_id, league_id, gp, starting_pos]
Table appearances, columns = [*,year, team_id, league_id, player_id, g_all, gs, g_batting, g_defense, g_p, g_c, g_1b, g_2b, g_3b, g_ss, g_lf, g_cf, g_rf, g_of, g_dh, g_ph, g_pr]
Table manager_award, columns = [*,player_id, award_id, year, league_id, tie, notes]
Table player_award, columns = [*,player_id, award_id, year, league_id, tie, notes]
Table manager_award_vote, columns = [*,award_id, year, league_id, player_id, points_won, points_max, votes_first]
Table player_award_vote, columns = [*,award_id, year, league_id, player_id, points_won, points_max, votes_first]
Table batting, columns = [*,player_id, year, stint, team_id, league_id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g_idp]
Table batting_postseason, columns = [*,year, round, player_id, team_id, league_id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g_idp]
Table player_college, columns = [*,player_id, college_id, year]
Table fielding, columns = [*,player_id, year, stint, team_id, league_id, pos, g, gs, inn_outs, po, a, e, dp, pb, wp, sb, cs, zr]
Table fielding_outfield, columns = [*,player_id, year, stint, glf, gcf, grf]
Table fielding_postseason, columns = [*,player_id, year, team_id, league_id, round, pos, g, gs, inn_outs, po, a, e, dp, tp, pb, sb, cs]
Table home_game, columns = [*,year, league_id, team_id, park_id, span_first, span_last, games, openings, attendance]
Table manager, columns = [*,player_id, year, team_id, league_id, inseason, g, w, l, rank, plyr_mgr]
Table manager_half, columns = [*,player_id, year, team_id, league_id, inseason, half, g, w, l, rank]
Table pitching, columns = [*,player_id, year, stint, team_id, league_id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g_idp]
Table pitching_postseason, columns = [*,player_id, year, round, team_id, league_id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g_idp]
Table salary, columns = [*,year, team_id, league_id, player_id, salary]
Table postseason, columns = [*,year, round, team_id_winner, league_id_winner, team_id_loser, league_id_loser, wins, losses, ties]
Table team, columns = [*,year, league_id, team_id, franchise_id, div_id, rank, g, ghome, w, l, div_win, wc_win, lg_win, ws_win, r, ab, h, double, triple, hr, bb, so, sb, cs, hbp, sf, ra, er, era, cg, sho, sv, ipouts, ha, hra, bba, soa, e, dp, fp, name, park, attendance, bpf, ppf, team_id_br, team_id_lahman45, team_id_retro]
Table team_half, columns = [*,year, league_id, team_id, half, div_id, div_win, rank, g, w, l]
target dvq:
Visualize BAR SELECT year , COUNT(year) FROM home_game BIN year BY WEEKDAY
****************************************************************************************************
nl_queries:
Find Start_from and the amount of Start_from bin start_from by weekday , and visualize them by a bar chart , could you show in descending by the Y ?
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , COUNT(Start_from) FROM hiring  ORDER BY COUNT(Start_from) DESC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
Bar graph to show how many year from different year , sort the number of year in desc order .
database schema:
Table wine, columns = [*,No, Grape, Winery, Appelation, State, Name, Year, Price, Score, Cases, Drink]
target dvq:
Visualize BAR SELECT Year , COUNT(Year) FROM WINE  ORDER BY COUNT(Year) DESC BIN Year BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of hire_date and the sum of salary bin hire_date by time , and order by the y-axis from low to high please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
I want a bar chart to show the average cloud cover of the dates that have the 5 highest cloud cover rates each year .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , AVG(cloud_cover) FROM weather BIN date BY YEAR
****************************************************************************************************
nl_queries:
For those dates that have the 5 highest cloud cover rates , please bin the date into the day of week interval and count their frequency , could you sort in descending by the Y-axis ?
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather  ORDER BY COUNT(date) DESC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
Can you draw the trend of how many date from over the date from ? , I want to rank in desc by the X-axis .
database schema:
Table Project_Staff, columns = [*,staff_id, project_id, role_code, date_from, date_to, other_details]
target dvq:
Visualize LINE SELECT date_from , COUNT(date_from) FROM Project_Staff ORDER BY date_from DESC BIN date_from BY YEAR
****************************************************************************************************
nl_queries:
Show the number of date arrived from each date arrived
database schema:
Table Dogs, columns = [*,dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed]
target dvq:
Visualize BAR SELECT date_arrived , COUNT(date_arrived) FROM Dogs BIN date_arrived BY YEAR
****************************************************************************************************
nl_queries:
When are the birthdays of customer who are classified as 'Good Customer' status , and count them by a bar chart , I want to list from high to low by the Y-axis .
database schema:
Table Staff, columns = [*,staff_id, staff_address_id, nickname, first_name, middle_name, last_name, date_of_birth, date_joined_staff, date_left_staff]
Table Customers, columns = [*,customer_id, customer_address_id, customer_status_code, date_became_customer, date_of_birth, first_name, last_name, amount_outstanding, email_address, phone_number, cell_mobile_phone_number]
target dvq:
Visualize BAR SELECT date_of_birth , COUNT(date_of_birth) FROM Customers WHERE customer_status_code = 'Good Customer'  ORDER BY COUNT(date_of_birth) DESC BIN date_of_birth BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
What are the number of the distinct visit dates ? , order by the x axis in descending .
database schema:
Table Visits, columns = [*,Visit_ID, Tourist_Attraction_ID, Tourist_ID, Visit_Date, Visit_Details]
target dvq:
Visualize LINE SELECT Visit_Date , COUNT(Visit_Date) FROM VISITS  ORDER BY Visit_Date DESC BIN Visit_Date BY YEAR
****************************************************************************************************
nl_queries:
Give me line charts of worldwide gross how many date account opened over year date account opened by major genres other_account_details , and I want to sort by the X from low to high .
database schema:
Table Accounts, columns = [*,account_id, customer_id, date_account_opened, account_name, other_account_details]
target dvq:
Visualize LINE SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts GROUP BY other_account_details ORDER BY date_account_opened ASC BIN date_account_opened BY YEAR
****************************************************************************************************
nl_queries:
Give me the trend about the sum of Shop_ID over Start_from , and group by attribute Is_full_time and bin start_from by time , and rank x axis from low to high order .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from ASC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
How many dogs arrived in each year ? Visualize with a bar chart , and display in ascending by the y-axis .
database schema:
Table Dogs, columns = [*,dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed]
target dvq:
Visualize BAR SELECT date_arrived , COUNT(date_arrived) FROM Dogs  ORDER BY COUNT(date_arrived) ASC BIN date_arrived BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the sum of salary bin hire_date by time , and could you sort from high to low by the Y please ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by time .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by time , and could you order by the y axis in descending ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Plot openning year by how many openning year as a trend line
database schema:
Table cinema, columns = [*,Cinema_ID, Name, Openning_year, Capacity, Location]
target dvq:
Visualize LINE SELECT Openning_year , COUNT(Openning_year) FROM cinema BIN Openning_year BY YEAR
****************************************************************************************************
nl_queries:
List the number of dogs arrived in each day with a bar chart that bins arrived date by weekday .
database schema:
Table Dogs, columns = [*,dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed]
target dvq:
Visualize BAR SELECT date_arrived , COUNT(date_arrived) FROM Dogs BIN date_arrived BY WEEKDAY
****************************************************************************************************
nl_queries:
What is the date of birth of every customer whose status code is 'Good Customer' , and count them by a line chart
database schema:
Table Staff, columns = [*,staff_id, staff_address_id, nickname, first_name, middle_name, last_name, date_of_birth, date_joined_staff, date_left_staff]
Table Customers, columns = [*,customer_id, customer_address_id, customer_status_code, date_became_customer, date_of_birth, first_name, last_name, amount_outstanding, email_address, phone_number, cell_mobile_phone_number]
target dvq:
Visualize LINE SELECT date_of_birth , COUNT(date_of_birth) FROM Customers WHERE customer_status_code = 'Good Customer' BIN date_of_birth BY YEAR
****************************************************************************************************
nl_queries:
How many dogs departed in each day ? Visualize with a bar chart that bins departed date by day interval , and display Y in descending order .
database schema:
Table Dogs, columns = [*,dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed]
target dvq:
Visualize BAR SELECT date_departed , COUNT(date_departed) FROM Dogs  ORDER BY COUNT(date_departed) DESC BIN date_departed BY DAY
****************************************************************************************************
nl_queries:
Draw a bar chart of date versus how many date , and could you display by the Y-axis in desc ?
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather  ORDER BY COUNT(date) DESC BIN date BY YEAR
****************************************************************************************************
nl_queries:
A bar chart for what are the number of the dates in which the mean sea level pressure was between 30 . 3 and 31 ?
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31 BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Show the number of games in each season and group by away team in a group line chart The x-axis is season , and list Season in descending order .
database schema:
Table game, columns = [*,stadium_id, id, Season, Date, Home_team, Away_team, Score, Competition]
target dvq:
Visualize LINE SELECT Season , COUNT(Season) FROM game GROUP BY Away_team ORDER BY Season DESC BIN Season BY YEAR
****************************************************************************************************
nl_queries:
A bar chart for finding the number of the latest logon date of the students whose family name is "Jaskolski" or "Langosh" .
database schema:
Table Course_Authors_and_Tutors, columns = [*,author_id, author_tutor_ATB, login_name, password, personal_name, middle_name, family_name, gender_mf, address_line_1]
Table Students, columns = [*,student_id, date_of_registration, date_of_latest_logon, login_name, password, personal_name, middle_name, family_name]
target dvq:
Visualize BAR SELECT date_of_latest_logon , COUNT(date_of_latest_logon) FROM Students WHERE family_name = "Jaskolski" OR family_name = "Langosh" BIN date_of_latest_logon BY WEEKDAY
****************************************************************************************************
nl_queries:
Find Start_from and the average of Shop_ID , and group by attribute Is_full_time and bin start_from by weekday , and visualize them by a bar chart , I want to order in asc by the Y .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , AVG(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY AVG(Shop_ID) ASC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For the average of Shop_ID , Start_from , visualize the trend , sort in asc by the x-axis .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from ASC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of hire_date and the sum of salary bin hire_date by weekday , and rank from low to high by the total number .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
A bar chart for what are the number of the dates in which the mean sea level pressure was between 303 and 31 ? , display Y-axis from low to high order .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) ASC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
Plot how many date of transaction over date of transaction in a line chart
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by time , and sort by the y axis in ascending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(EMPLOYEE_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Draw a bar chart about the distribution of Start_from and the sum of Shop_ID , and group by attribute Is_full_time and bin start_from by weekday .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , SUM(Shop_ID) FROM hiring GROUP BY Is_full_time BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
How many apartment bookings in each year ? Show me a bar chart binning booking start date by year , rank in ascending by the how many booking start date .
database schema:
Table Apartment_Bookings, columns = [*,apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date]
target dvq:
Visualize BAR SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings  ORDER BY COUNT(booking_start_date) ASC BIN booking_start_date BY YEAR
****************************************************************************************************
nl_queries:
I want to see trend of how many receipt date by receipt date
database schema:
Table Documents, columns = [*,document_id, document_status_code, document_type_code, shipping_agent_code, receipt_date, receipt_number, other_details]
target dvq:
Visualize LINE SELECT receipt_date , COUNT(receipt_date) FROM Documents BIN receipt_date BY YEAR
****************************************************************************************************
nl_queries:
bin the yearid into the day of the week interval and count them for visualizing a bar chart , rank by the y axis from low to high .
database schema:
Table hall_of_fame, columns = [*,player_id, yearid, votedby, ballots, needed, votes, inducted, category, needed_note]
target dvq:
Visualize BAR SELECT yearid , COUNT(yearid) FROM hall_of_fame  ORDER BY COUNT(yearid) ASC BIN yearid BY WEEKDAY
****************************************************************************************************
nl_queries:
Bar graph to show total number of cloud cover from different date
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , SUM(cloud_cover) FROM weather BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of hire_date and the sum of salary bin hire_date by weekday .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the amount of hire_date bin hire_date by weekday , and visualize them by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Tell me the average of capacity of cinemas open for each year in a line chart , and sort in desc by the X-axis .
database schema:
Table cinema, columns = [*,Cinema_ID, Name, Openning_year, Capacity, Location]
target dvq:
Visualize LINE SELECT Openning_year , AVG(Capacity) FROM cinema  ORDER BY Openning_year DESC BIN Openning_year BY YEAR
****************************************************************************************************
nl_queries:
Show the number of the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000 , and list by the date_of_transaction in desc .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000  ORDER BY date_of_transaction DESC BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
How many enrolment students in each month ? Return a bar chart binning date of enrolment by month interval , and I want to order in asc by the y-axis .
database schema:
Table Student_Course_Enrolment, columns = [*,registration_id, student_id, course_id, date_of_enrolment, date_of_completion]
target dvq:
Visualize BAR SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment  ORDER BY COUNT(date_of_enrolment) ASC BIN date_of_enrolment BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of hire_date and the amount of hire_date bin hire_date by weekday in a bar chart , and could you display the number of hire date in desc order ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the sum of department_id bin hire_date by time , and visualize them by a bar chart , and I want to order by the total number of department id from high to low .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(DEPARTMENT_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
What are the dates that have an average sea level pressure between 303 and 31 , and count them by a bar chart , and I want to display by the the number of date from low to high .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) ASC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of hire_date and the average of salary bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Bar chart of how many date of completion from each date of completion
database schema:
Table Student_Course_Enrolment, columns = [*,registration_id, student_id, course_id, date_of_enrolment, date_of_completion]
target dvq:
Visualize BAR SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment BIN date_of_completion BY WEEKDAY
****************************************************************************************************
nl_queries:
A line chart shows the change of the sum of Shop_ID over Start_from , and group by attribute Is_full_time and bin start_from by time , list in asc by the x-axis please .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from ASC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Bin all date of transactions into the weekday interval , and sum the share count of each bin Return the result using a bar chart , list in descending by the y axis please .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize BAR SELECT date_of_transaction , SUM(share_count) FROM TRANSACTIONS  ORDER BY SUM(share_count) DESC BIN date_of_transaction BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the sum of employee_id bin hire_date by weekday , and visualize them by a bar chart , and sort in desc by the y-axis .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(EMPLOYEE_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Draw a line chart about the change of the average of Shop_ID over Start_from , and group by attribute Is_full_time and bin start_from by time .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Shop_ID) FROM hiring GROUP BY Is_full_time BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the sum of employee_id over the hire_date bin hire_date by time , and order by the sum employee id in descending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(EMPLOYEE_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
List the number of dogs departed in each day with a bar chart that bins departed date by day interval , display in descending by the Y please .
database schema:
Table Dogs, columns = [*,dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed]
target dvq:
Visualize BAR SELECT date_departed , COUNT(date_departed) FROM Dogs  ORDER BY COUNT(date_departed) DESC BIN date_departed BY DAY
****************************************************************************************************
nl_queries:
Show me how many long by long in a histogram
database schema:
Table station, columns = [*,id, name, lat, long, dock_count, city, installation_date]
target dvq:
Visualize BAR SELECT long , COUNT(long) FROM station BIN long BY ZERO
****************************************************************************************************
nl_queries:
Show me the trend about the average of Employee_ID over Start_from , and group by attribute Is_full_time and bin start_from by time with a line chart .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Employee_ID) FROM hiring GROUP BY Is_full_time BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
How many apartment bookings in each weekday ? Show me a bar chart binning booking start date by weekday .
database schema:
Table Apartment_Bookings, columns = [*,apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date]
target dvq:
Visualize BAR SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings BIN booking_start_date BY WEEKDAY
****************************************************************************************************
nl_queries:
For the average of Shop_ID , Start_from , visualize the trend , could you sort in ascending by the X ?
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Shop_ID) FROM hiring  ORDER BY Start_from ASC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of hire_date and the average of manager_id bin hire_date by time in a bar chart , could you list from low to high by the the average of manager id please ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(MANAGER_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Bar chart x axis date y axis the number of date , and list in asc by the y-axis .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather  ORDER BY COUNT(date) ASC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
How many parties of the time they leave office , binning the leave office into WEEKDAY interval , show by the y-axis in ascending .
database schema:
Table party, columns = [*,Party_ID, Minister, Took_office, Left_office, Region_ID, Party_name]
target dvq:
Visualize BAR SELECT Left_office , COUNT(Left_office) FROM party  ORDER BY COUNT(Left_office) ASC BIN Left_office BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the sum of salary bin hire_date by time , show from low to high by the total number .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Show the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000 , and count them by a line chart
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000 BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of hire_date and the sum of salary bin hire_date by weekday , rank sum salary from low to high order please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Plot season by how many season as a line chart , and display by the X-axis in asc .
database schema:
Table game, columns = [*,stadium_id, id, Season, Date, Home_team, Away_team, Score, Competition]
target dvq:
Visualize LINE SELECT Season , COUNT(Season) FROM game  ORDER BY Season ASC BIN Season BY YEAR
****************************************************************************************************
nl_queries:
Plot date of transaction by mean share count as a trend line , and sort by the date_of_transaction in ascending please .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , AVG(share_count) FROM TRANSACTIONS  ORDER BY date_of_transaction ASC BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday , show by the Y from low to high .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(DEPARTMENT_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Give me the trend about the average of Employee_ID over Start_from , and group by attribute Is_full_time and bin start_from by time .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Employee_ID) FROM hiring GROUP BY Is_full_time BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the sum of manager_id bin hire_date by time , and visualize them by a bar chart , and I want to show by the total number of manager id from high to low .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(MANAGER_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Bin the year attribute into the Year interval and count them for a bar chart , and rank total number in desc order .
database schema:
Table wine, columns = [*,No, Grape, Winery, Appelation, State, Name, Year, Price, Score, Cases, Drink]
target dvq:
Visualize BAR SELECT Year , COUNT(Year) FROM WINE  ORDER BY COUNT(Year) DESC BIN Year BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find hire_date and the average of salary bin hire_date by weekday , and visualize them by a bar chart , and rank by the y-axis from high to low please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by time .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Bar chart x axis date departed y axis the number of date departed , and list by the Y from high to low .
database schema:
Table Dogs, columns = [*,dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed]
target dvq:
Visualize BAR SELECT date_departed , COUNT(date_departed) FROM Dogs  ORDER BY COUNT(date_departed) DESC BIN date_departed BY DAY
****************************************************************************************************
nl_queries:
Bar chart x axis date of transaction y axis mean share count , and show by the Y in descending .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize BAR SELECT date_of_transaction , AVG(share_count) FROM TRANSACTIONS  ORDER BY AVG(share_count) DESC BIN date_of_transaction BY WEEKDAY
****************************************************************************************************
nl_queries:
Draw a bar chart about the distribution of Start_from and the average of Shop_ID bin start_from by weekday .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , AVG(Shop_ID) FROM hiring BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the sum of employee_id over the hire_date bin hire_date by time by a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Visualize a line chart about the change of the amount of Start_from over Start_from bin start_from by time , order X-axis in descending order .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , COUNT(Start_from) FROM hiring  ORDER BY Start_from DESC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of hire_date and the sum of salary bin hire_date by weekday , and order in desc by the y-axis please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of hire_date and the sum of salary bin hire_date by weekday , could you order from low to high by the y axis ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the sum of employee_id bin hire_date by time in a bar chart , and rank total number from low to high order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(EMPLOYEE_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
How many wines with a price higher than 100 of each year ? Show a bar chart that converts year into weekday interval .
database schema:
Table wine, columns = [*,No, Grape, Winery, Appelation, State, Name, Year, Price, Score, Cases, Drink]
target dvq:
Visualize BAR SELECT Year , COUNT(Year) FROM WINE WHERE Price > 100 BIN Year BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose first name does not contain the letter M , display their average salary by binning the hire date into the day of week interval for visualizing a bar chart , and could you list the average of salary in asc order ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name NOT LIKE '%M%'  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by weekday , and could you order in descending by the y-axis ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Find all the distinct visit dates , and count them by a bar chart
database schema:
Table Visits, columns = [*,Visit_ID, Tourist_Attraction_ID, Tourist_ID, Visit_Date, Visit_Details]
target dvq:
Visualize BAR SELECT Visit_Date , COUNT(Visit_Date) FROM VISITS BIN Visit_Date BY WEEKDAY
****************************************************************************************************
nl_queries:
List the number of games in each season with a line chart , and could you sort in ascending by the x-axis ?
database schema:
Table game, columns = [*,stadium_id, id, Season, Date, Home_team, Away_team, Score, Competition]
target dvq:
Visualize LINE SELECT Season , COUNT(Season) FROM game  ORDER BY Season ASC BIN Season BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the sum of employee_id bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of employee_id over the hire_date bin hire_date by weekday by a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the sum of salary bin hire_date by time , could you order Y-axis in asc order please ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Can you draw the trend of the number of start from over the start from ? , show by the X from low to high .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , COUNT(Start_from) FROM hiring  ORDER BY Start_from ASC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the average of employee_id bin hire_date by time in a bar chart , and show by the total number in desc .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(EMPLOYEE_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Visualize a bar chart about the distribution of Start_from and the average of Shop_ID , and group by attribute Is_full_time and bin start_from by weekday , and I want to show by the y-axis from low to high please .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , AVG(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY AVG(Shop_ID) ASC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
Visualize a bar chart about the distribution of Start_from and the sum of Employee_ID , and group by attribute Is_full_time and bin start_from by weekday .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , SUM(Employee_ID) FROM hiring GROUP BY Is_full_time BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of salary over the hire_date bin hire_date by time , show by the y-axis in ascending please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of department_id over the hire_date bin hire_date by weekday , display by the total number in desc .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(DEPARTMENT_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Bar chart of how many date of enrolment from each date of enrolment , and could you list by the Y-axis in asc ?
database schema:
Table Student_Course_Enrolment, columns = [*,registration_id, student_id, course_id, date_of_enrolment, date_of_completion]
target dvq:
Visualize BAR SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment  ORDER BY COUNT(date_of_enrolment) ASC BIN date_of_enrolment BY MONTH
****************************************************************************************************
nl_queries:
Give me the comparison about the average of Shop_ID over the Start_from bin start_from by weekday by a bar chart , and I want to sort y-axis in descending order .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , AVG(Shop_ID) FROM hiring  ORDER BY AVG(Shop_ID) DESC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose first name does not containing the letter M , display their average salary by binning the hire date into Month interval for visualizing a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name NOT LIKE '%M%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
What are the number of the dates with a maximum temperature higher than 85 ? , and sort by the the number of date in desc .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) DESC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
Return a line chart about the change of the average of Shop_ID over Start_from bin start_from by time , could you rank X from low to high order ?
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Shop_ID) FROM hiring  ORDER BY Start_from ASC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a bar chart shows the distribution of hire_date and the average of department_id bin hire_date by time , and could you list by the y-axis in asc ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(DEPARTMENT_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the average of department_id bin hire_date by weekday , and visualize them by a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Give me the comparison about the average of Employee_ID over the Start_from , and group by attribute Is_full_time and bin start_from by weekday .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , AVG(Employee_ID) FROM hiring GROUP BY Is_full_time BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
A bar chart for giveing me the number of the dates when the max temperature was higher than 85 , and could you show by the y axis in desc ?
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) DESC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of hire_date and the sum of salary bin hire_date by time , I want to show total number from high to low order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Bin all date of transactions into the YEAR interval , and calculate the average the share count for each bin Visualize the result using a trend line , order date_of_transaction from low to high order .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , AVG(share_count) FROM TRANSACTIONS  ORDER BY date_of_transaction ASC BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Show me about the change of the sum of Shop_ID over Start_from , and group by attribute Is_full_time and bin start_from by time in a line chart .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Shop_ID) FROM hiring GROUP BY Is_full_time BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
A bar chart for what are the number of the dates in which the mean sea level pressure was between 303 and 31 ? , show y axis in descending order please .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) DESC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of hire_date and the average of department_id bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Give me line charts of worldwide gross how many date in locaton to over year date in locaton to by major genres Location_Code , show x axis in asc order please .
database schema:
Table Ref_Locations, columns = [*,Location_Code, Location_Name, Location_Description]
Table Document_Locations, columns = [*,Document_ID, Location_Code, Date_in_Location_From, Date_in_Locaton_To]
target dvq:
Visualize LINE SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Location_Code ORDER BY Date_in_Locaton_To ASC BIN Date_in_Locaton_To BY YEAR
****************************************************************************************************
nl_queries:
What are the number of the dates of transactions with at least 100 share count or amount bigger than 100 ? , order by the Y in ascending .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100  ORDER BY COUNT(date_of_transaction) ASC BIN date_of_transaction BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the average of department_id bin hire_date by weekday , and visualize them by a bar chart , could you show in ascending by the total number ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(DEPARTMENT_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by time , and list y axis in desc order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(EMPLOYEE_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of manager_id over the hire_date bin hire_date by time by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Give me line charts of worldwide gross how many date account opened over year date account opened by major genres other_account_details
database schema:
Table Accounts, columns = [*,account_id, customer_id, date_account_opened, account_name, other_account_details]
target dvq:
Visualize LINE SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts GROUP BY other_account_details BIN date_account_opened BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the sum of manager_id bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those dates with a max temperature greater than or equal to 80 , I want to know the number of days on the day of the week interval using a bar chart , could you show from high to low by the Y ?
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f >= 80  ORDER BY COUNT(date) DESC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
Plot date of transaction by mean share count as a trend line , and I want to show from high to low by the x-axis .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , AVG(share_count) FROM TRANSACTIONS  ORDER BY date_of_transaction DESC BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
Give me a bar chart for the number of year of each year , order by the how many year in ascending .
database schema:
Table wine, columns = [*,No, Grape, Winery, Appelation, State, Name, Year, Price, Score, Cases, Drink]
target dvq:
Visualize BAR SELECT Year , COUNT(Year) FROM WINE  ORDER BY COUNT(Year) ASC BIN Year BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of department_id over the hire_date bin hire_date by weekday by a bar chart , and sort in asc by the the average of department id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(DEPARTMENT_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the sum of salary over the hire_date bin hire_date by weekday , sort total number of salary in descending order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
How many mills of 'Grondzeiler' type are built in each year ? Give me the trend , list in descending by the X-axis .
database schema:
Table mill, columns = [*,architect_id, id, location, name, type, built_year, notes]
target dvq:
Visualize LINE SELECT built_year , COUNT(built_year) FROM mill WHERE TYPE = 'Grondzeiler'  ORDER BY built_year DESC BIN built_year BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by time , I want to display y-axis from high to low order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
How many home games by each year (bin the year attr into weekdays interval) ? Give me a line chart , and display X-axis in descending order .
database schema:
Table all_star, columns = [*,player_id, year, game_num, game_id, team_id, league_id, gp, starting_pos]
Table appearances, columns = [*,year, team_id, league_id, player_id, g_all, gs, g_batting, g_defense, g_p, g_c, g_1b, g_2b, g_3b, g_ss, g_lf, g_cf, g_rf, g_of, g_dh, g_ph, g_pr]
Table manager_award, columns = [*,player_id, award_id, year, league_id, tie, notes]
Table player_award, columns = [*,player_id, award_id, year, league_id, tie, notes]
Table manager_award_vote, columns = [*,award_id, year, league_id, player_id, points_won, points_max, votes_first]
Table player_award_vote, columns = [*,award_id, year, league_id, player_id, points_won, points_max, votes_first]
Table batting, columns = [*,player_id, year, stint, team_id, league_id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g_idp]
Table batting_postseason, columns = [*,year, round, player_id, team_id, league_id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g_idp]
Table player_college, columns = [*,player_id, college_id, year]
Table fielding, columns = [*,player_id, year, stint, team_id, league_id, pos, g, gs, inn_outs, po, a, e, dp, pb, wp, sb, cs, zr]
Table fielding_outfield, columns = [*,player_id, year, stint, glf, gcf, grf]
Table fielding_postseason, columns = [*,player_id, year, team_id, league_id, round, pos, g, gs, inn_outs, po, a, e, dp, tp, pb, sb, cs]
Table home_game, columns = [*,year, league_id, team_id, park_id, span_first, span_last, games, openings, attendance]
Table manager, columns = [*,player_id, year, team_id, league_id, inseason, g, w, l, rank, plyr_mgr]
Table manager_half, columns = [*,player_id, year, team_id, league_id, inseason, half, g, w, l, rank]
Table pitching, columns = [*,player_id, year, stint, team_id, league_id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g_idp]
Table pitching_postseason, columns = [*,player_id, year, round, team_id, league_id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g_idp]
Table salary, columns = [*,year, team_id, league_id, player_id, salary]
Table postseason, columns = [*,year, round, team_id_winner, league_id_winner, team_id_loser, league_id_loser, wins, losses, ties]
Table team, columns = [*,year, league_id, team_id, franchise_id, div_id, rank, g, ghome, w, l, div_win, wc_win, lg_win, ws_win, r, ab, h, double, triple, hr, bb, so, sb, cs, hbp, sf, ra, er, era, cg, sho, sv, ipouts, ha, hra, bba, soa, e, dp, fp, name, park, attendance, bpf, ppf, team_id_br, team_id_lahman45, team_id_retro]
Table team_half, columns = [*,year, league_id, team_id, half, div_id, div_win, rank, g, w, l]
target dvq:
Visualize LINE SELECT year , COUNT(year) FROM home_game  ORDER BY year DESC BIN year BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the sum of manager_id over the hire_date bin hire_date by weekday by a bar chart , I want to sort by the Y-axis in asc .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(MANAGER_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the average of manager_id bin hire_date by time , and visualize them by a bar chart , and could you list from low to high by the the average of manager id please ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(MANAGER_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Give me a bar chart to show how many dates with a max temperature greater than or equal to 80 for each day , and list by the the number of date from low to high .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f >= 80  ORDER BY COUNT(date) ASC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by time .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of hire_date and the sum of salary bin hire_date by time in a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Which tests have "Pass" results ? Return the dates when the tests were taken , and count them by a bar chart , and order y-axis in ascending order .
database schema:
Table Student_Tests_Taken, columns = [*,registration_id, date_test_taken, test_result]
target dvq:
Visualize BAR SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = "Pass"  ORDER BY COUNT(date_test_taken) ASC BIN date_test_taken BY WEEKDAY
****************************************************************************************************
nl_queries:
How many home games by each weekday (bin the year attr into weekdays interval) ? Give me a bar chart , could you sort by the Y-axis in descending please ?
database schema:
Table all_star, columns = [*,player_id, year, game_num, game_id, team_id, league_id, gp, starting_pos]
Table appearances, columns = [*,year, team_id, league_id, player_id, g_all, gs, g_batting, g_defense, g_p, g_c, g_1b, g_2b, g_3b, g_ss, g_lf, g_cf, g_rf, g_of, g_dh, g_ph, g_pr]
Table manager_award, columns = [*,player_id, award_id, year, league_id, tie, notes]
Table player_award, columns = [*,player_id, award_id, year, league_id, tie, notes]
Table manager_award_vote, columns = [*,award_id, year, league_id, player_id, points_won, points_max, votes_first]
Table player_award_vote, columns = [*,award_id, year, league_id, player_id, points_won, points_max, votes_first]
Table batting, columns = [*,player_id, year, stint, team_id, league_id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g_idp]
Table batting_postseason, columns = [*,year, round, player_id, team_id, league_id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g_idp]
Table player_college, columns = [*,player_id, college_id, year]
Table fielding, columns = [*,player_id, year, stint, team_id, league_id, pos, g, gs, inn_outs, po, a, e, dp, pb, wp, sb, cs, zr]
Table fielding_outfield, columns = [*,player_id, year, stint, glf, gcf, grf]
Table fielding_postseason, columns = [*,player_id, year, team_id, league_id, round, pos, g, gs, inn_outs, po, a, e, dp, tp, pb, sb, cs]
Table home_game, columns = [*,year, league_id, team_id, park_id, span_first, span_last, games, openings, attendance]
Table manager, columns = [*,player_id, year, team_id, league_id, inseason, g, w, l, rank, plyr_mgr]
Table manager_half, columns = [*,player_id, year, team_id, league_id, inseason, half, g, w, l, rank]
Table pitching, columns = [*,player_id, year, stint, team_id, league_id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g_idp]
Table pitching_postseason, columns = [*,player_id, year, round, team_id, league_id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g_idp]
Table salary, columns = [*,year, team_id, league_id, player_id, salary]
Table postseason, columns = [*,year, round, team_id_winner, league_id_winner, team_id_loser, league_id_loser, wins, losses, ties]
Table team, columns = [*,year, league_id, team_id, franchise_id, div_id, rank, g, ghome, w, l, div_win, wc_win, lg_win, ws_win, r, ab, h, double, triple, hr, bb, so, sb, cs, hbp, sf, ra, er, era, cg, sho, sv, ipouts, ha, hra, bba, soa, e, dp, fp, name, park, attendance, bpf, ppf, team_id_br, team_id_lahman45, team_id_retro]
Table team_half, columns = [*,year, league_id, team_id, half, div_id, div_win, rank, g, w, l]
target dvq:
Visualize BAR SELECT year , COUNT(year) FROM home_game  ORDER BY COUNT(year) DESC BIN year BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the sum of department_id over the hire_date bin hire_date by weekday by a bar chart , list by the y axis in desc .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(DEPARTMENT_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of salary over the hire_date bin hire_date by weekday , I want to order by the Y-axis in ascending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Find all the distinct visit dates , and count them by a line chart , I want to order x axis in desc order .
database schema:
Table Visits, columns = [*,Visit_ID, Tourist_Attraction_ID, Tourist_ID, Visit_Date, Visit_Details]
target dvq:
Visualize LINE SELECT Visit_Date , COUNT(Visit_Date) FROM VISITS  ORDER BY Visit_Date DESC BIN Visit_Date BY YEAR
****************************************************************************************************
nl_queries:
What is the date of birth of every customer whose status code is 'Good Customer' , and count them by a line chart , list X-axis in descending order please .
database schema:
Table Staff, columns = [*,staff_id, staff_address_id, nickname, first_name, middle_name, last_name, date_of_birth, date_joined_staff, date_left_staff]
Table Customers, columns = [*,customer_id, customer_address_id, customer_status_code, date_became_customer, date_of_birth, first_name, last_name, amount_outstanding, email_address, phone_number, cell_mobile_phone_number]
target dvq:
Visualize LINE SELECT date_of_birth , COUNT(date_of_birth) FROM Customers WHERE customer_status_code = 'Good Customer'  ORDER BY date_of_birth DESC BIN date_of_birth BY YEAR
****************************************************************************************************
nl_queries:
Give me the comparison about the amount of Start_from over the Start_from , and group by attribute Is_full_time and bin start_from by weekday , rank by the Y-axis in asc .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , COUNT(Start_from) FROM hiring GROUP BY Is_full_time ORDER BY COUNT(Start_from) ASC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the average of manager_id bin hire_date by time , and visualize them by a bar chart , and show in descending by the y-axis please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(MANAGER_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of hire_date and the average of manager_id bin hire_date by time , and could you display y axis in ascending order ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(MANAGER_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of hire_date and the sum of salary bin hire_date by time , and I want to rank from high to low by the total number .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of hire_date and the average of salary bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
I want a bar chart to show the frequency of the dates that have the 5 highest cloud cover rates each day , and list in asc by the y axis .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather  ORDER BY COUNT(date) ASC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
Please compare the number of the church by open date (bin into the weekday) using a bar chart , and order total number from high to low order .
database schema:
Table church, columns = [*,Church_ID, Name, Organized_by, Open_Date, Continuation_of]
target dvq:
Visualize BAR SELECT Open_Date , COUNT(Open_Date) FROM church  ORDER BY COUNT(Open_Date) DESC BIN Open_Date BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of hire_date and the sum of salary bin hire_date by weekday , and display sum salary in desc order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For the days with the 3 largest maximum gust speeds , calculate the average mean humidity of each month (bin date into month level) .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , AVG(mean_humidity) FROM weather  ORDER BY max_gust_speed_mph DESC LIMIT 3 BIN date BY MONTH
****************************************************************************************************
nl_queries:
Bar chart x axis calendar date y axis the number of calendar date , and display by the y axis from low to high .
database schema:
Table Ref_Calendar, columns = [*,Calendar_Date, Day_Number]
target dvq:
Visualize BAR SELECT Calendar_Date , COUNT(Calendar_Date) FROM Ref_calendar  ORDER BY COUNT(Calendar_Date) ASC BIN Calendar_Date BY WEEKDAY
****************************************************************************************************
nl_queries:
Show the number of date account opened from each date account opened , and I want to rank by the y axis in desc .
database schema:
Table Accounts, columns = [*,account_id, customer_id, date_account_opened, account_name, other_account_details]
target dvq:
Visualize BAR SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts  ORDER BY COUNT(date_account_opened) DESC BIN date_account_opened BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of hire_date and the average of salary bin hire_date by time , order total number from low to high order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
What are the different years in which there were cars produced that weighed less than 4000 and also cars that weighted more than 3000 , and count them by a bar chart
database schema:
Table cars_data, columns = [*,Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year]
target dvq:
Visualize BAR SELECT Year , COUNT(Year) FROM cars_data where weight between 3000 and 4000 BIN Year BY WEEKDAY
****************************************************************************************************
nl_queries:
Show the number of accounts opened in each day Bin the account open day by weekday in a bar chart , and could you display Y-axis in descending order ?
database schema:
Table Accounts, columns = [*,account_id, customer_id, date_account_opened, account_name, other_account_details]
target dvq:
Visualize BAR SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts  ORDER BY COUNT(date_account_opened) DESC BIN date_account_opened BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by weekday , could you sort in asc by the total number ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(MANAGER_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of hire_date and the average of salary bin hire_date by time , sort by the Y-axis in descending .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Show the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000 , and count them by a bar chart , and could you show y-axis in asc order ?
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000  ORDER BY COUNT(date_of_transaction) ASC BIN date_of_transaction BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the average of department_id over the hire_date bin hire_date by weekday by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
A bar chart for showing the number of the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000 , list Y in descending order .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000  ORDER BY COUNT(date_of_transaction) DESC BIN date_of_transaction BY WEEKDAY
****************************************************************************************************
nl_queries:
A line chart shows the change of the sum of Employee_ID over Start_from , and group by attribute Is_full_time and bin start_from by time , and sort by the Start_from from low to high .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from ASC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Give me the comparison about the average of Employee_ID over the Start_from , and group by attribute Is_full_time and bin start_from by weekday by a bar chart .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , AVG(Employee_ID) FROM hiring GROUP BY Is_full_time BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
Draw a line chart about the change of the amount of Start_from over Start_from , and group by attribute Is_full_time and bin start_from by time .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , COUNT(Start_from) FROM hiring GROUP BY Is_full_time BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
A bar chart for what are the number of the different years in which there were cars produced that weighed less than 4000 and also cars that weighted more than 3000 ? , and order Y in desc order .
database schema:
Table cars_data, columns = [*,Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year]
target dvq:
Visualize BAR SELECT Year , COUNT(Year) FROM cars_data where weight between 3000 and 4000  ORDER BY COUNT(Year) DESC BIN Year BY WEEKDAY
****************************************************************************************************
nl_queries:
When do all the researcher role staff start to work ? Bin the time into YEAR interval and count them with a line chart , and order from low to high by the date_from please .
database schema:
Table Project_Staff, columns = [*,staff_id, project_id, role_code, date_from, date_to, other_details]
target dvq:
Visualize LINE SELECT date_from , COUNT(date_from) FROM Project_Staff ORDER BY date_from ASC BIN date_from BY YEAR
****************************************************************************************************
nl_queries:
A line chart shows the trend of the sum of Employee_ID over Start_from bin start_from by time .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Employee_ID) FROM hiring BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Return a bar chart about the distribution of Start_from and the sum of Employee_ID bin start_from by weekday .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , SUM(Employee_ID) FROM hiring BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
A line chart shows the trend of the sum of Employee_ID over Start_from bin start_from by time , I want to sort by the x-axis from low to high .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Employee_ID) FROM hiring  ORDER BY Start_from ASC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Bar graph to show the number of booking end date from different booking end date
database schema:
Table Apartment_Bookings, columns = [*,apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date]
target dvq:
Visualize BAR SELECT booking_end_date , COUNT(booking_end_date) FROM Apartment_Bookings BIN booking_end_date BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Bar graph to show how many installation date from different installation date
database schema:
Table station, columns = [*,id, name, lat, long, dock_count, city, installation_date]
target dvq:
Visualize BAR SELECT installation_date , COUNT(installation_date) FROM station BIN installation_date BY YEAR
****************************************************************************************************
nl_queries:
Plot openning year by how many openning year as a trend line , display by the x axis in ascending please .
database schema:
Table cinema, columns = [*,Cinema_ID, Name, Openning_year, Capacity, Location]
target dvq:
Visualize LINE SELECT Openning_year , COUNT(Openning_year) FROM cinema  ORDER BY Openning_year ASC BIN Openning_year BY YEAR
****************************************************************************************************
nl_queries:
Compare the average salary by each hire date (bin it into the day of week interval) of employees using a bar chart , and could you order by the Y from high to low ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the sum of salary bin hire_date by weekday in a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Give me the comparison about the sum of Shop_ID over the Start_from , and group by attribute Is_full_time and bin start_from by weekday , sort in ascending by the Y .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , SUM(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY SUM(Shop_ID) ASC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the average of manager_id bin hire_date by weekday , and visualize them by a bar chart , sort the average of manager id in asc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(MANAGER_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the sum of department_id bin hire_date by time in a bar chart , and I want to display by the total number of department id in desc .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(DEPARTMENT_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
What are the payment date of the payment with amount paid higher than 300 or with payment type is 'Check , and count them by a bar chart
database schema:
Table Payments, columns = [*,payment_id, booking_id, customer_id, payment_type_code, amount_paid_in_full_yn, payment_date, amount_due, amount_paid]
target dvq:
Visualize BAR SELECT payment_date , COUNT(payment_date) FROM payments WHERE amount_paid > 300 OR payment_type_code = 'Check' BIN payment_date BY WEEKDAY
****************************************************************************************************
nl_queries:
Show me a line chart of how the number of visit date change over the visit date , and show Visit_Date in desc order .
database schema:
Table Visits, columns = [*,Visit_ID, Tourist_Attraction_ID, Tourist_ID, Visit_Date, Visit_Details]
target dvq:
Visualize LINE SELECT Visit_Date , COUNT(Visit_Date) FROM VISITS  ORDER BY Visit_Date DESC BIN Visit_Date BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of hire_date and the sum of salary bin hire_date by time , sort total number of salary from high to low order please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
I want a bar chart to show the frequency of the dates that have the 5 highest cloud cover rates each year , display how many date in asc order please .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather  ORDER BY COUNT(date) ASC BIN date BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the average of department_id bin hire_date by weekday , I want to display y axis in desc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(DEPARTMENT_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Show the number of date account opened from each date account opened , and rank by the y-axis in asc .
database schema:
Table Accounts, columns = [*,account_id, customer_id, date_account_opened, account_name, other_account_details]
target dvq:
Visualize BAR SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts  ORDER BY COUNT(date_account_opened) ASC BIN date_account_opened BY WEEKDAY
****************************************************************************************************
nl_queries:
Give me line charts of worldwide gross sum employee id over year start from by major genres Is_full_time , rank in desc by the X-axis .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from DESC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
A bar chart for what are the number of the dates that have an average sea level pressure between 303 and 31 ? , and rank in descending by the y axis please .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) DESC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
On what dates were employees without the letter M in their first names hired , and count them by a bar chart
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name NOT LIKE '%M%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Compare the average salary by each hire date (bin it into month interval) of employees using a bar chart , list from high to low by the mean salary .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by weekday , display by the the average of manager id in ascending please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(MANAGER_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
What is the total cloud cover rates of the dates (bin into year interval) that had the top 5 cloud cover rates ? You can draw me a bar chart for this purpose .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , SUM(cloud_cover) FROM weather BIN date BY YEAR
****************************************************************************************************
nl_queries:
Return a line chart about the change of the amount of Start_from over Start_from bin start_from by time .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , COUNT(Start_from) FROM hiring BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the sum of manager_id bin hire_date by time , and visualize them by a bar chart , display in ascending by the Y-axis please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(MANAGER_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by time .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the average of salary bin hire_date by time in a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the average of department_id bin hire_date by time in a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Show the number of year of the maximum price and score of wines in a bar chart , and bin the year into the weekday interval .
database schema:
Table wine, columns = [*,No, Grape, Winery, Appelation, State, Name, Year, Price, Score, Cases, Drink]
target dvq:
Visualize BAR SELECT Year , COUNT(Year) FROM WINE BIN Year BY WEEKDAY
****************************************************************************************************
nl_queries:
Give me the comparison about the amount of Start_from over the Start_from , and group by attribute Is_full_time and bin start_from by weekday by a bar chart , and show by the Y in descending .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , COUNT(Start_from) FROM hiring GROUP BY Is_full_time ORDER BY COUNT(Start_from) DESC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
I want to see trend of the number of yearid by yearid , show x axis in desc order .
database schema:
Table all_star, columns = [*,player_id, year, game_num, game_id, team_id, league_id, gp, starting_pos]
Table appearances, columns = [*,year, team_id, league_id, player_id, g_all, gs, g_batting, g_defense, g_p, g_c, g_1b, g_2b, g_3b, g_ss, g_lf, g_cf, g_rf, g_of, g_dh, g_ph, g_pr]
Table manager_award, columns = [*,player_id, award_id, year, league_id, tie, notes]
Table player_award, columns = [*,player_id, award_id, year, league_id, tie, notes]
Table manager_award_vote, columns = [*,award_id, year, league_id, player_id, points_won, points_max, votes_first]
Table player_award_vote, columns = [*,award_id, year, league_id, player_id, points_won, points_max, votes_first]
Table batting, columns = [*,player_id, year, stint, team_id, league_id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g_idp]
Table batting_postseason, columns = [*,year, round, player_id, team_id, league_id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g_idp]
Table player_college, columns = [*,player_id, college_id, year]
Table fielding, columns = [*,player_id, year, stint, team_id, league_id, pos, g, gs, inn_outs, po, a, e, dp, pb, wp, sb, cs, zr]
Table fielding_outfield, columns = [*,player_id, year, stint, glf, gcf, grf]
Table fielding_postseason, columns = [*,player_id, year, team_id, league_id, round, pos, g, gs, inn_outs, po, a, e, dp, tp, pb, sb, cs]
Table hall_of_fame, columns = [*,player_id, yearid, votedby, ballots, needed, votes, inducted, category, needed_note]
Table home_game, columns = [*,year, league_id, team_id, park_id, span_first, span_last, games, openings, attendance]
Table manager, columns = [*,player_id, year, team_id, league_id, inseason, g, w, l, rank, plyr_mgr]
Table manager_half, columns = [*,player_id, year, team_id, league_id, inseason, half, g, w, l, rank]
Table pitching, columns = [*,player_id, year, stint, team_id, league_id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g_idp]
Table pitching_postseason, columns = [*,player_id, year, round, team_id, league_id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g_idp]
Table salary, columns = [*,year, team_id, league_id, player_id, salary]
Table postseason, columns = [*,year, round, team_id_winner, league_id_winner, team_id_loser, league_id_loser, wins, losses, ties]
Table team, columns = [*,year, league_id, team_id, franchise_id, div_id, rank, g, ghome, w, l, div_win, wc_win, lg_win, ws_win, r, ab, h, double, triple, hr, bb, so, sb, cs, hbp, sf, ra, er, era, cg, sho, sv, ipouts, ha, hra, bba, soa, e, dp, fp, name, park, attendance, bpf, ppf, team_id_br, team_id_lahman45, team_id_retro]
Table team_half, columns = [*,year, league_id, team_id, half, div_id, div_win, rank, g, w, l]
target dvq:
Visualize LINE SELECT yearid , COUNT(yearid) FROM hall_of_fame  ORDER BY yearid DESC BIN yearid BY YEAR
****************************************************************************************************
nl_queries:
How many documents in different ending date ? Return a bar chart binning ending date by weekday , order y-axis from low to high order .
database schema:
Table Document_Locations, columns = [*,Document_ID, Location_Code, Date_in_Location_From, Date_in_Locaton_To]
target dvq:
Visualize BAR SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations  ORDER BY COUNT(Date_in_Locaton_To) ASC BIN Date_in_Locaton_To BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the sum of salary bin hire_date by weekday in a bar chart , display total number of salary in ascending order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Give me the dates when the max temperature was higher than 85 , and count them by a bar chart , and I want to show the number of date from low to high order .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) ASC BIN date BY YEAR
****************************************************************************************************
nl_queries:
Plot how many date of transaction over date of transaction in a line chart , and list X-axis from high to low order .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS  ORDER BY date_of_transaction DESC BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
Find the number of the dates of the tests taken with result "Pass" , and I want to rank x axis in asc order .
database schema:
Table Student_Tests_Taken, columns = [*,registration_id, date_test_taken, test_result]
target dvq:
Visualize LINE SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = "Pass"  ORDER BY date_test_taken ASC BIN date_test_taken BY DAY
****************************************************************************************************
nl_queries:
Show me a bar chart that bin all date of transactions into the weekday interval and the y-axis is their total number , and order by the y-axis in desc .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS  ORDER BY COUNT(date_of_transaction) DESC BIN date_of_transaction BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the average of department_id bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For each station , bin its longitude divided by zero as buckets , and count the frequency in each bucket , order in desc by the y axis .
database schema:
Table station, columns = [*,id, name, lat, long, dock_count, city, installation_date]
target dvq:
Visualize BAR SELECT long , COUNT(long) FROM station  ORDER BY COUNT(long) DESC BIN long BY ZERO
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by time , and show Y-axis in desc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(DEPARTMENT_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the average of manager_id bin hire_date by time , sort from low to high by the the average of manager id .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(MANAGER_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
I want a bar chart to show the total cloud cover of the dates that have the 5 highest cloud cover rates each day , and order total number from high to low order .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , SUM(cloud_cover) FROM weather  ORDER BY SUM(cloud_cover) DESC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
What are the number of the dates that have an average sea level pressure between 303 and 31 ? , I want to rank y-axis in asc order please .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) ASC BIN date BY YEAR
****************************************************************************************************
nl_queries:
Visualize a bar chart that bin the open date into a day of the week interval and count them .
database schema:
Table church, columns = [*,Church_ID, Name, Organized_by, Open_Date, Continuation_of]
target dvq:
Visualize BAR SELECT Open_Date , COUNT(Open_Date) FROM church BIN Open_Date BY WEEKDAY
****************************************************************************************************
nl_queries:
Show me mean cloud cover by date in a histogram , and list by the Y in desc .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , AVG(cloud_cover) FROM weather  ORDER BY AVG(cloud_cover) DESC BIN date BY YEAR
****************************************************************************************************
nl_queries:
Return the date of birth for all the guests with gender code "Male" , and count them by a bar chart , list in ascending by the y axis .
database schema:
Table Guests, columns = [*,guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth]
target dvq:
Visualize BAR SELECT date_of_birth , COUNT(date_of_birth) FROM Guests WHERE gender_code = "Male"  ORDER BY COUNT(date_of_birth) ASC BIN date_of_birth BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by time , I want to list by the sum department id in ascending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(DEPARTMENT_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Give me line charts of worldwide gross total number of shop id over year start from by major genres Is_full_time
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Shop_ID) FROM hiring GROUP BY Is_full_time BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Give me the number of the dates when the max temperature was higher than 85 , and I want to order from low to high by the y-axis .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) ASC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by weekday , list from high to low by the Y-axis .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(MANAGER_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
A line chart for showing the number of the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000 , and display x-axis from low to high order .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000  ORDER BY date_of_transaction ASC BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
Group and count the move in date in a bar chart , and bin the X-axis into week day interval .
database schema:
Table Residents, columns = [*,resident_id, property_id, date_moved_in, date_moved_out, other_details]
Table Residents_Services, columns = [*,resident_id, service_id, date_moved_in, property_id, date_requested, date_provided, other_details]
Table Customer_Events, columns = [*,Customer_Event_ID, customer_id, date_moved_in, property_id, resident_id, thing_id]
Table Customer_Event_Notes, columns = [*,Customer_Event_Note_ID, Customer_Event_ID, service_type_code, resident_id, property_id, date_moved_in]
target dvq:
Visualize BAR SELECT date_moved_in , COUNT(date_moved_in) FROM customer_events BIN date_moved_in BY WEEKDAY
****************************************************************************************************
nl_queries:
Show me the trend about the amount of Start_from over Start_from bin start_from by time with a line chart , and rank in desc by the Start_from .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , COUNT(Start_from) FROM hiring  ORDER BY Start_from DESC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Visualize the general trend of the average of shop id over the start from , rank in desc by the x axis .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Shop_ID) FROM hiring  ORDER BY Start_from DESC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Bar chart x axis date of transaction y axis mean share count , and could you list by the Y in asc ?
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize BAR SELECT date_of_transaction , AVG(share_count) FROM TRANSACTIONS  ORDER BY AVG(share_count) ASC BIN date_of_transaction BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the sum of employee_id bin hire_date by time , and visualize them by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Give me the trend about the average of Shop_ID over Start_from bin start_from by time , list Start_from in descending order .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Shop_ID) FROM hiring  ORDER BY Start_from DESC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the sum of manager_id bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by time , and order by the total number in desc .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(MANAGER_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
What is the total cloud cover rates of the dates (bin into day of the week interval) that had the top 5 cloud cover rates ? You can show me a bar chart .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , SUM(cloud_cover) FROM weather BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
Can you draw the trend of how many date in location from over the date in location from ? , and list by the x-axis from low to high .
database schema:
Table Document_Locations, columns = [*,Document_ID, Location_Code, Date_in_Location_From, Date_in_Locaton_To]
target dvq:
Visualize LINE SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations  ORDER BY Date_in_Location_From ASC BIN Date_in_Location_From BY YEAR
****************************************************************************************************
nl_queries:
Can you draw the trend of the number of start from over the start from ? , display x-axis in descending order .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , COUNT(Start_from) FROM hiring  ORDER BY Start_from DESC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Bar chart x axis open date y axis how many open date , rank total number in desc order .
database schema:
Table church, columns = [*,Church_ID, Name, Organized_by, Open_Date, Continuation_of]
target dvq:
Visualize BAR SELECT Open_Date , COUNT(Open_Date) FROM Church  ORDER BY COUNT(Open_Date) DESC BIN Open_Date BY WEEKDAY
****************************************************************************************************
nl_queries:
Show the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000 , and count them by a bar chart
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000 BIN date_of_transaction BY WEEKDAY
****************************************************************************************************
nl_queries:
Plot start from by the average of employee id as a line chart , and could you display in ascending by the Start_from ?
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Employee_ID) FROM hiring  ORDER BY Start_from ASC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For those dates with a max temperature greater than or equal to 80 , I want to know the number of days on the day of the week interval using a bar chart .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f >= 80 BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
What are the number of the dates with a maximum temperature higher than 85 ? , I want to show the number of date from low to high order .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) ASC BIN date BY YEAR
****************************************************************************************************
nl_queries:
What are the dates that have an average sea level pressure between 30 . 3 and 31 , and count them by a bar chart
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31 BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday , and sort in descending by the mean salary please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
A bar chart for what are the number of the distinct move in dates of the residents ? , order total number in asc order .
database schema:
Table Residents, columns = [*,resident_id, property_id, date_moved_in, date_moved_out, other_details]
Table Residents_Services, columns = [*,resident_id, service_id, date_moved_in, property_id, date_requested, date_provided, other_details]
Table Customer_Events, columns = [*,Customer_Event_ID, customer_id, date_moved_in, property_id, resident_id, thing_id]
Table Customer_Event_Notes, columns = [*,Customer_Event_Note_ID, Customer_Event_ID, service_type_code, resident_id, property_id, date_moved_in]
target dvq:
Visualize BAR SELECT date_moved_in , COUNT(date_moved_in) FROM residents  ORDER BY COUNT(date_moved_in) ASC BIN date_moved_in BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Stacked bar chart of how many date in location from for with each Location_Code in each date in location from , and order by the y axis in descending .
database schema:
Table Ref_Locations, columns = [*,Location_Code, Location_Name, Location_Description]
Table Document_Locations, columns = [*,Document_ID, Location_Code, Date_in_Location_From, Date_in_Locaton_To]
target dvq:
Visualize BAR SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations GROUP BY Location_Code ORDER BY COUNT(Date_in_Location_From) DESC BIN Date_in_Location_From BY WEEKDAY
****************************************************************************************************
nl_queries:
I want to see trend of how many date account opened by date account opened , order by the date_account_opened in descending .
database schema:
Table Accounts, columns = [*,account_id, customer_id, date_account_opened, account_name, other_account_details]
target dvq:
Visualize LINE SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts  ORDER BY date_account_opened DESC BIN date_account_opened BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of hire_date and the average of department_id bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Show the total salary by each hire date of employees , and please bin the hire date into the Month interval for showing a bar chart , sort Y from low to high order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For the sum of Employee_ID , Start_from , visualize the trend , could you show in descending by the X ?
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from DESC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of hire_date and the sum of salary bin hire_date by time .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Can you draw the trend of the average of capacity over the openning year ? , and sort by the x axis in desc .
database schema:
Table cinema, columns = [*,Cinema_ID, Name, Openning_year, Capacity, Location]
target dvq:
Visualize LINE SELECT Openning_year , AVG(Capacity) FROM cinema  ORDER BY Openning_year DESC BIN Openning_year BY YEAR
****************************************************************************************************
nl_queries:
Visualize a bar chart about the distribution of Start_from and the average of Employee_ID bin start_from by weekday .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , AVG(Employee_ID) FROM hiring BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
Show the number of accounts opened in each day Bin the account open day by weekday and group by other account details in a stacked bar chart , and order in ascending by the total number .
database schema:
Table Accounts, columns = [*,account_id, customer_id, date_account_opened, account_name, other_account_details]
target dvq:
Visualize BAR SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts GROUP BY other_account_details ORDER BY COUNT(date_account_opened) ASC BIN date_account_opened BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of employee_id over the hire_date bin hire_date by weekday by a bar chart , could you sort by the y axis from low to high please ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(EMPLOYEE_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by weekday , could you show total number from low to high order ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Show the average salary by each hire date of employees , and please bin the hire date into the Month interval for showing a bar chart , rank by the Y-axis from low to high .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by weekday , I want to sort in descending by the total number .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(EMPLOYEE_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
What is the sum of capacity of cinemas open for each year ? Return a line chart , could you display from low to high by the x axis please ?
database schema:
Table cinema, columns = [*,Cinema_ID, Name, Openning_year, Capacity, Location]
target dvq:
Visualize LINE SELECT Openning_year , SUM(Capacity) FROM cinema  ORDER BY Openning_year ASC BIN Openning_year BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the amount of hire_date bin hire_date by time , and visualize them by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by time , could you rank by the Y in asc ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(EMPLOYEE_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Bar graph to show total number of cloud cover from different date , and show by the Y from low to high .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , SUM(cloud_cover) FROM weather  ORDER BY SUM(cloud_cover) ASC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
I want to see trend the number of season over season by Away_team
database schema:
Table game, columns = [*,stadium_id, id, Season, Date, Home_team, Away_team, Score, Competition]
target dvq:
Visualize LINE SELECT Season , COUNT(Season) FROM game GROUP BY Away_team BIN Season BY YEAR
****************************************************************************************************
nl_queries:
Plot the average of salary by grouped by hire date as a bar graph
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
List the number of enrolment students in each month and bin date of enrolment by month interval with a bar chart , and sort by the y axis from low to high .
database schema:
Table Student_Course_Enrolment, columns = [*,registration_id, student_id, course_id, date_of_enrolment, date_of_completion]
target dvq:
Visualize BAR SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment  ORDER BY COUNT(date_of_enrolment) ASC BIN date_of_enrolment BY MONTH
****************************************************************************************************
nl_queries:
Show me the trend about the sum of Shop_ID over Start_from bin start_from by time with a line chart , I want to display by the x-axis from low to high please .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Shop_ID) FROM hiring  ORDER BY Start_from ASC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of hire_date and the sum of employee_id bin hire_date by weekday in a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Return a line chart about the change of the sum of Shop_ID over Start_from , and group by attribute Is_full_time and bin start_from by time .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Shop_ID) FROM hiring GROUP BY Is_full_time BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
I want a bar chart to show the average cloud cover of the dates that have the 5 highest cloud cover rates each day .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , AVG(cloud_cover) FROM weather BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday , and display from low to high by the y axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Bar graph to show how many yearid from different yearid , list in descending by the Y-axis .
database schema:
Table hall_of_fame, columns = [*,player_id, yearid, votedby, ballots, needed, votes, inducted, category, needed_note]
target dvq:
Visualize BAR SELECT yearid , COUNT(yearid) FROM hall_of_fame  ORDER BY COUNT(yearid) DESC BIN yearid BY WEEKDAY
****************************************************************************************************
nl_queries:
Give me the comparison about the sum of Shop_ID over the Start_from bin start_from by weekday by a bar chart , and list from high to low by the y-axis .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , SUM(Shop_ID) FROM hiring  ORDER BY SUM(Shop_ID) DESC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
Bin all date of transactions into the weekday interval , and compute the average of the share count for each bin Return the result using a bar chart , and show by the Y in descending .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize BAR SELECT date_of_transaction , AVG(share_count) FROM TRANSACTIONS  ORDER BY AVG(share_count) DESC BIN date_of_transaction BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the amount of hire_date bin hire_date by time , and display by the y axis in descending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Give me a bar chart to show how many dates with a max temperature greater than or equal to 80 for each day , and could you show from high to low by the Y ?
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f >= 80  ORDER BY COUNT(date) DESC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
For the transaction dates if share count is smaller than 10 , bin the dates into the year interval , and count them using a line chart , order X from low to high order .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count < 10  ORDER BY date_of_transaction ASC BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by weekday , could you list by the Y-axis from low to high ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Return a line chart about the change of the sum of Employee_ID over Start_from , and group by attribute Is_full_time and bin start_from by time , and could you display by the X in desc ?
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from DESC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Please give me a bar chart that bins the installation date of stations into Year interval as the X-axis , and count for showing how many stations are installed each year .
database schema:
Table station, columns = [*,id, name, lat, long, dock_count, city, installation_date]
target dvq:
Visualize BAR SELECT installation_date , COUNT(installation_date) FROM station BIN installation_date BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of department_id over the hire_date bin hire_date by time by a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Find the number of the dates of the tests taken with result "Pass" , and sort in descending by the Y .
database schema:
Table Student_Tests_Taken, columns = [*,registration_id, date_test_taken, test_result]
target dvq:
Visualize BAR SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = "Pass"  ORDER BY COUNT(date_test_taken) DESC BIN date_test_taken BY WEEKDAY
****************************************************************************************************
nl_queries:
For those days with the 3 largest maximum gust speeds , can you plot a bar chart to compare the total mean humidity of each day of the weeks ?
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , SUM(mean_humidity) FROM weather  ORDER BY max_gust_speed_mph DESC LIMIT 3 BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
Show the number of apartment bookings in each year and bin booking end date by year with a bar chart , and could you list in desc by the how many booking end date ?
database schema:
Table Apartment_Bookings, columns = [*,apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date]
target dvq:
Visualize BAR SELECT booking_end_date , COUNT(booking_end_date) FROM Apartment_Bookings  ORDER BY COUNT(booking_end_date) DESC BIN booking_end_date BY YEAR
****************************************************************************************************
nl_queries:
Find Start_from and the amount of Start_from , and group by attribute Is_full_time and bin start_from by weekday , and visualize them by a bar chart .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , COUNT(Start_from) FROM hiring GROUP BY Is_full_time BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
Compare the total salary by each hire date (bin it into month interval) of employees using a bar chart , and show in ascending by the total number .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Give me the dates when the max temperature was higher than 85 , and count them by a bar chart , and could you list y axis in ascending order please ?
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) ASC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
Draw a bar chart about the distribution of Start_from and the average of Shop_ID , and group by attribute Is_full_time and bin start_from by weekday , and display y axis from low to high order .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , AVG(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY AVG(Shop_ID) ASC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
Give me a bar chart for the average of salary of each hire date , and sort Y-axis in ascending order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of hire_date and the sum of salary bin hire_date by time , order by the total number of salary in ascending please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Show all calendar dates and bin by year in a line chart .
database schema:
Table Ref_Calendar, columns = [*,Calendar_Date, Day_Number]
target dvq:
Visualize LINE SELECT Calendar_Date , COUNT(Calendar_Date) FROM Ref_calendar BIN Calendar_Date BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by time , could you sort y axis in ascending order ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
What are the dates with a maximum temperature higher than 85 , and count them by a bar chart , display from low to high by the Y .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) ASC BIN date BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Return a bar chart about the distribution of Start_from and the amount of Start_from bin start_from by weekday , and list in asc by the y axis .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , COUNT(Start_from) FROM hiring  ORDER BY COUNT(Start_from) ASC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the sum of employee_id bin hire_date by weekday in a bar chart , sort by the Y-axis in desc .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(EMPLOYEE_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Return a line chart about the change of the average of Employee_ID over Start_from bin start_from by time , could you display in ascending by the Start_from ?
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Employee_ID) FROM hiring  ORDER BY Start_from ASC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
When do all the researcher role staff start to work ? Bin the time into YEAR interval and count them with a line chart , and rank X from high to low order .
database schema:
Table Project_Staff, columns = [*,staff_id, project_id, role_code, date_from, date_to, other_details]
target dvq:
Visualize LINE SELECT date_from , COUNT(date_from) FROM Project_Staff ORDER BY date_from DESC BIN date_from BY YEAR
****************************************************************************************************
nl_queries:
Give me the comparison about the average of Shop_ID over the Start_from bin start_from by weekday by a bar chart .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , AVG(Shop_ID) FROM hiring BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of department_id over the hire_date bin hire_date by time by a bar chart , sort from low to high by the Y-axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(DEPARTMENT_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by weekday , I want to rank by the mean employee id in asc .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(EMPLOYEE_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday , and could you display by the sum department id in ascending ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(DEPARTMENT_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
When are the birthdays of customer who are classified as 'Good Customer' status , and count them by a line chart , and list from high to low by the X-axis please .
database schema:
Table Staff, columns = [*,staff_id, staff_address_id, nickname, first_name, middle_name, last_name, date_of_birth, date_joined_staff, date_left_staff]
Table Customers, columns = [*,customer_id, customer_address_id, customer_status_code, date_became_customer, date_of_birth, first_name, last_name, amount_outstanding, email_address, phone_number, cell_mobile_phone_number]
target dvq:
Visualize LINE SELECT date_of_birth , COUNT(date_of_birth) FROM Customers WHERE customer_status_code = 'Good Customer'  ORDER BY date_of_birth DESC BIN date_of_birth BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the sum of department_id over the hire_date bin hire_date by time by a bar chart , and rank by the Y from low to high .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(DEPARTMENT_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
What are the number of the distinct visit dates ? , show by the Y in descending .
database schema:
Table Visits, columns = [*,Visit_ID, Tourist_Attraction_ID, Tourist_ID, Visit_Date, Visit_Details]
target dvq:
Visualize BAR SELECT Visit_Date , COUNT(Visit_Date) FROM VISITS  ORDER BY COUNT(Visit_Date) DESC BIN Visit_Date BY WEEKDAY
****************************************************************************************************
nl_queries:
Bar chart x axis start from y axis the average of employee id , I want to rank from high to low by the total number .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , AVG(Employee_ID) FROM hiring  ORDER BY AVG(Employee_ID) DESC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by time , could you list by the y axis from low to high ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(EMPLOYEE_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the sum of department_id bin hire_date by time in a bar chart , I want to list by the sum department id in ascending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(DEPARTMENT_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
List the number of completion students in each month and bin date of completion by month interval with a bar chart , display from high to low by the Y-axis .
database schema:
Table Student_Course_Enrolment, columns = [*,registration_id, student_id, course_id, date_of_enrolment, date_of_completion]
target dvq:
Visualize BAR SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment  ORDER BY COUNT(date_of_completion) DESC BIN date_of_completion BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the sum of department_id bin hire_date by weekday in a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday , and display by the y-axis from high to low .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(DEPARTMENT_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Show me about the change of the average of Shop_ID over Start_from , and group by attribute Is_full_time and bin start_from by time in a line chart , and order by the Start_from from low to high .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from ASC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Show me about the change of the average of Employee_ID over Start_from bin start_from by time in a line chart .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Employee_ID) FROM hiring BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Give me the number of the dates when the max temperature was higher than 85 .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85 BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
A bar chart for giveing me the number of the dates when the max temperature was higher than 85 .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85 BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
Draw a line chart about the change of the amount of Start_from over Start_from bin start_from by time , could you show by the X-axis in ascending ?
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , COUNT(Start_from) FROM hiring  ORDER BY Start_from ASC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Show the number of documents in different ending date and bin ending date by weekday with a bar chart , and rank by the total number in descending .
database schema:
Table Document_Locations, columns = [*,Document_ID, Location_Code, Date_in_Location_From, Date_in_Locaton_To]
target dvq:
Visualize BAR SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations  ORDER BY COUNT(Date_in_Locaton_To) DESC BIN Date_in_Locaton_To BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Bar chart x axis start from y axis the average of employee id
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , AVG(Employee_ID) FROM hiring BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
What are the number of the dates in which the mean sea level pressure was between 303 and 31 ? , and list by the total number in asc .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) ASC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by time , and rank by the Y in asc .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(MANAGER_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
A bar chart for what are the number of the dates of the latest logon of the students with family name "Jaskolski" or "Langosh" ? , and order total number in asc order .
database schema:
Table Course_Authors_and_Tutors, columns = [*,author_id, author_tutor_ATB, login_name, password, personal_name, middle_name, family_name, gender_mf, address_line_1]
Table Students, columns = [*,student_id, date_of_registration, date_of_latest_logon, login_name, password, personal_name, middle_name, family_name]
target dvq:
Visualize BAR SELECT date_of_latest_logon , COUNT(date_of_latest_logon) FROM Students WHERE family_name = "Jaskolski" OR family_name = "Langosh"  ORDER BY COUNT(date_of_latest_logon) ASC BIN date_of_latest_logon BY WEEKDAY
****************************************************************************************************
nl_queries:
A bar chart shows the distribution of Start_from and the average of Employee_ID , and group by attribute Is_full_time and bin start_from by weekday .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , AVG(Employee_ID) FROM hiring GROUP BY Is_full_time BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by time , order by the Y in descending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(MANAGER_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Show me the trend about the average of Shop_ID over Start_from bin start_from by time with a line chart .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Shop_ID) FROM hiring BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of hire_date and the sum of salary bin hire_date by weekday .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Show the number of the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000 .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000 BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
Show the number of movies for each year in a bar chart and ordered by budget .
database schema:
Table book_club, columns = [*,book_club_id, Year, Author_or_Editor, Book_Title, Publisher, Category, Result]
Table movie, columns = [*,movie_id, Title, Year, Director, Budget_million, Gross_worldwide]
target dvq:
Visualize BAR SELECT Year , COUNT(Year) FROM movie  ORDER BY budget_million BIN Year BY YEAR
****************************************************************************************************
nl_queries:
Can you draw the trend of the average of capacity over the openning year ? , display X from low to high order .
database schema:
Table cinema, columns = [*,Cinema_ID, Name, Openning_year, Capacity, Location]
target dvq:
Visualize LINE SELECT Openning_year , AVG(Capacity) FROM cinema  ORDER BY Openning_year ASC BIN Openning_year BY YEAR
****************************************************************************************************
nl_queries:
Return the number of the date of birth for all the guests with gender code "Male" , and could you display by the x axis in asc ?
database schema:
Table Guests, columns = [*,guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth]
target dvq:
Visualize LINE SELECT date_of_birth , COUNT(date_of_birth) FROM Guests WHERE gender_code = "Male"  ORDER BY date_of_birth ASC BIN date_of_birth BY YEAR
****************************************************************************************************
nl_queries:
How many accounts are opened in each year ? Show a line chart , and list by the X-axis from low to high .
database schema:
Table Accounts, columns = [*,account_id, customer_id, date_account_opened, account_name, other_account_details]
target dvq:
Visualize LINE SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts  ORDER BY date_account_opened ASC BIN date_account_opened BY YEAR
****************************************************************************************************
nl_queries:
Show the number of visit date from each visit date
database schema:
Table Visits, columns = [*,Visit_ID, Tourist_Attraction_ID, Tourist_ID, Visit_Date, Visit_Details]
target dvq:
Visualize BAR SELECT Visit_Date , COUNT(Visit_Date) FROM VISITS BIN Visit_Date BY WEEKDAY
****************************************************************************************************
nl_queries:
Give me the comparison about the sum of Employee_ID over the Start_from , and group by attribute Is_full_time and bin start_from by weekday .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , SUM(Employee_ID) FROM hiring GROUP BY Is_full_time BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
A bar chart for what are the number of the distinct move in dates of the residents ? , and sort by the total number in descending .
database schema:
Table Residents, columns = [*,resident_id, property_id, date_moved_in, date_moved_out, other_details]
Table Residents_Services, columns = [*,resident_id, service_id, date_moved_in, property_id, date_requested, date_provided, other_details]
Table Customer_Events, columns = [*,Customer_Event_ID, customer_id, date_moved_in, property_id, resident_id, thing_id]
Table Customer_Event_Notes, columns = [*,Customer_Event_Note_ID, Customer_Event_ID, service_type_code, resident_id, property_id, date_moved_in]
target dvq:
Visualize BAR SELECT date_moved_in , COUNT(date_moved_in) FROM residents  ORDER BY COUNT(date_moved_in) DESC BIN date_moved_in BY WEEKDAY
****************************************************************************************************
nl_queries:
Bin the hire date into Month interval , and then calculate the total salary of employees in each month for a bar chart , note that just select those employees without the letter M in their first name , and could you show by the Y-axis in descending please ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name NOT LIKE '%M%'  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
How many documents in different starting date ? Return a line chart binning starting date by year interval , order in descending by the Date_in_Location_From please .
database schema:
Table Document_Locations, columns = [*,Document_ID, Location_Code, Date_in_Location_From, Date_in_Locaton_To]
target dvq:
Visualize LINE SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations  ORDER BY Date_in_Location_From DESC BIN Date_in_Location_From BY YEAR
****************************************************************************************************
nl_queries:
What are the number of the dates of the latest logon of the students with family name "Jaskolski" or "Langosh" ? , and sort by the Y from low to high .
database schema:
Table Course_Authors_and_Tutors, columns = [*,author_id, author_tutor_ATB, login_name, password, personal_name, middle_name, family_name, gender_mf, address_line_1]
Table Students, columns = [*,student_id, date_of_registration, date_of_latest_logon, login_name, password, personal_name, middle_name, family_name]
target dvq:
Visualize BAR SELECT date_of_latest_logon , COUNT(date_of_latest_logon) FROM Students WHERE family_name = "Jaskolski" OR family_name = "Langosh"  ORDER BY COUNT(date_of_latest_logon) ASC BIN date_of_latest_logon BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of hire_date and the average of department_id bin hire_date by weekday in a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Stacked bar chart of the number of date account opened for with each other_account_details in each date account opened , display by the total number in descending please .
database schema:
Table Accounts, columns = [*,account_id, customer_id, date_account_opened, account_name, other_account_details]
target dvq:
Visualize BAR SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts GROUP BY other_account_details ORDER BY COUNT(date_account_opened) DESC BIN date_account_opened BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a bar chart shows the distribution of hire_date and the average of employee_id bin hire_date by time , and order Y-axis in asc order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(EMPLOYEE_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
How many accounts are opened in each year ? Show a line chart , order in desc by the X .
database schema:
Table Accounts, columns = [*,account_id, customer_id, date_account_opened, account_name, other_account_details]
target dvq:
Visualize LINE SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts  ORDER BY date_account_opened DESC BIN date_account_opened BY YEAR
****************************************************************************************************
nl_queries:
Show me about the distribution of Start_from and the sum of Shop_ID , and group by attribute Is_full_time and bin start_from by weekday in a bar chart , show by the total number in descending please .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , SUM(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY SUM(Shop_ID) DESC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
Show me the trend about the average of Shop_ID over Start_from , and group by attribute Is_full_time and bin start_from by time with a line chart , and list from low to high by the x-axis .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from ASC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
A line chart shows the trend of the average of Shop_ID over Start_from bin start_from by time , and could you display by the Start_from in desc ?
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Shop_ID) FROM hiring  ORDER BY Start_from DESC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Plot sum capacity over openning year in a line chart
database schema:
Table cinema, columns = [*,Cinema_ID, Name, Openning_year, Capacity, Location]
target dvq:
Visualize LINE SELECT Openning_year , SUM(Capacity) FROM cinema BIN Openning_year BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by weekday , could you order in asc by the Y-axis ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of hire_date and the average of salary bin hire_date by time , and could you sort by the Y in ascending ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
List the number of enrolment students in each day and bin date of enrolment by weekday with a bar chart , I want to show in asc by the total number .
database schema:
Table Student_Course_Enrolment, columns = [*,registration_id, student_id, course_id, date_of_enrolment, date_of_completion]
target dvq:
Visualize BAR SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment  ORDER BY COUNT(date_of_enrolment) ASC BIN date_of_enrolment BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the average of employee_id bin hire_date by time in a bar chart , and list from low to high by the y axis please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(EMPLOYEE_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For the days with the 3 largest maximum gust speeds , calculate the total average temperature of each month (bin date into month level) .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , SUM(mean_temperature_f) FROM weather  ORDER BY max_gust_speed_mph DESC LIMIT 3 BIN date BY MONTH
****************************************************************************************************
nl_queries:
When are the birthdays of customer who are classified as 'Good Customer' status , and count them by a line chart , list from high to low by the X-axis please .
database schema:
Table Staff, columns = [*,staff_id, staff_address_id, nickname, first_name, middle_name, last_name, date_of_birth, date_joined_staff, date_left_staff]
Table Customers, columns = [*,customer_id, customer_address_id, customer_status_code, date_became_customer, date_of_birth, first_name, last_name, amount_outstanding, email_address, phone_number, cell_mobile_phone_number]
target dvq:
Visualize LINE SELECT date_of_birth , COUNT(date_of_birth) FROM Customers WHERE customer_status_code = 'Good Customer'  ORDER BY date_of_birth DESC BIN date_of_birth BY YEAR
****************************************************************************************************
nl_queries:
What are the dates of transactions with at least 100 share count or amount bigger than 100 , and count them by a line chart , and I want to display by the x-axis in desc please .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100  ORDER BY date_of_transaction DESC BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by time , and I want to display y axis from low to high order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(EMPLOYEE_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
What are the number of the different years in which there were cars produced that weighed less than 4000 and also cars that weighted more than 3000 ?
database schema:
Table cars_data, columns = [*,Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year]
target dvq:
Visualize BAR SELECT Year , COUNT(Year) FROM cars_data where weight between 3000 and 4000 BIN Year BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the average of manager_id bin hire_date by weekday , could you rank from low to high by the y axis ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(MANAGER_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
count yearid for visualizing a line chart , and sort X in asc order .
database schema:
Table all_star, columns = [*,player_id, year, game_num, game_id, team_id, league_id, gp, starting_pos]
Table appearances, columns = [*,year, team_id, league_id, player_id, g_all, gs, g_batting, g_defense, g_p, g_c, g_1b, g_2b, g_3b, g_ss, g_lf, g_cf, g_rf, g_of, g_dh, g_ph, g_pr]
Table manager_award, columns = [*,player_id, award_id, year, league_id, tie, notes]
Table player_award, columns = [*,player_id, award_id, year, league_id, tie, notes]
Table manager_award_vote, columns = [*,award_id, year, league_id, player_id, points_won, points_max, votes_first]
Table player_award_vote, columns = [*,award_id, year, league_id, player_id, points_won, points_max, votes_first]
Table batting, columns = [*,player_id, year, stint, team_id, league_id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g_idp]
Table batting_postseason, columns = [*,year, round, player_id, team_id, league_id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g_idp]
Table player_college, columns = [*,player_id, college_id, year]
Table fielding, columns = [*,player_id, year, stint, team_id, league_id, pos, g, gs, inn_outs, po, a, e, dp, pb, wp, sb, cs, zr]
Table fielding_outfield, columns = [*,player_id, year, stint, glf, gcf, grf]
Table fielding_postseason, columns = [*,player_id, year, team_id, league_id, round, pos, g, gs, inn_outs, po, a, e, dp, tp, pb, sb, cs]
Table hall_of_fame, columns = [*,player_id, yearid, votedby, ballots, needed, votes, inducted, category, needed_note]
Table home_game, columns = [*,year, league_id, team_id, park_id, span_first, span_last, games, openings, attendance]
Table manager, columns = [*,player_id, year, team_id, league_id, inseason, g, w, l, rank, plyr_mgr]
Table manager_half, columns = [*,player_id, year, team_id, league_id, inseason, half, g, w, l, rank]
Table pitching, columns = [*,player_id, year, stint, team_id, league_id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g_idp]
Table pitching_postseason, columns = [*,player_id, year, round, team_id, league_id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g_idp]
Table salary, columns = [*,year, team_id, league_id, player_id, salary]
Table postseason, columns = [*,year, round, team_id_winner, league_id_winner, team_id_loser, league_id_loser, wins, losses, ties]
Table team, columns = [*,year, league_id, team_id, franchise_id, div_id, rank, g, ghome, w, l, div_win, wc_win, lg_win, ws_win, r, ab, h, double, triple, hr, bb, so, sb, cs, hbp, sf, ra, er, era, cg, sho, sv, ipouts, ha, hra, bba, soa, e, dp, fp, name, park, attendance, bpf, ppf, team_id_br, team_id_lahman45, team_id_retro]
Table team_half, columns = [*,year, league_id, team_id, half, div_id, div_win, rank, g, w, l]
target dvq:
Visualize LINE SELECT yearid , COUNT(yearid) FROM hall_of_fame  ORDER BY yearid ASC BIN yearid BY YEAR
****************************************************************************************************
nl_queries:
Stacked bar chart of mean employee id for with each Is_full_time in each start from , and show y axis in ascending order please .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , AVG(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY AVG(Employee_ID) ASC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
Return the date of birth for all the guests with gender code "Male" , and count them by a bar chart
database schema:
Table Guests, columns = [*,guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth]
target dvq:
Visualize BAR SELECT date_of_birth , COUNT(date_of_birth) FROM Guests WHERE gender_code = "Male" BIN date_of_birth BY WEEKDAY
****************************************************************************************************
nl_queries:
Visualize a line chart that bins the open date into the Year interval and counts them .
database schema:
Table church, columns = [*,Church_ID, Name, Organized_by, Open_Date, Continuation_of]
Table wedding, columns = [*,Church_ID, Male_ID, Female_ID, Year]
target dvq:
Visualize LINE SELECT Open_Date , COUNT(Open_Date) FROM church BIN Open_Date BY YEAR
****************************************************************************************************
nl_queries:
Draw a bar chart about the distribution of Start_from and the average of Employee_ID bin start_from by weekday , and rank from high to low by the Y-axis .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , AVG(Employee_ID) FROM hiring  ORDER BY AVG(Employee_ID) DESC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
What are the dates of the latest logon of the students with family name "Jaskolski" or "Langosh" , and count them by a bar chart , list in descending by the y-axis .
database schema:
Table Course_Authors_and_Tutors, columns = [*,author_id, author_tutor_ATB, login_name, password, personal_name, middle_name, family_name, gender_mf, address_line_1]
Table Students, columns = [*,student_id, date_of_registration, date_of_latest_logon, login_name, password, personal_name, middle_name, family_name]
target dvq:
Visualize BAR SELECT date_of_latest_logon , COUNT(date_of_latest_logon) FROM Students WHERE family_name = "Jaskolski" OR family_name = "Langosh"  ORDER BY COUNT(date_of_latest_logon) DESC BIN date_of_latest_logon BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the average of manager_id over the hire_date bin hire_date by weekday by a bar chart , and show by the y axis in ascending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(MANAGER_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Return a line chart about the change of the amount of Start_from over Start_from , and group by attribute Is_full_time and bin start_from by time , and could you rank by the Start_from from low to high ?
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , COUNT(Start_from) FROM hiring GROUP BY Is_full_time ORDER BY Start_from ASC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of manager_id over the hire_date bin hire_date by time by a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Bar chart x axis date in location from y axis the number of date in location from , and order by the total number in desc please .
database schema:
Table Document_Locations, columns = [*,Document_ID, Location_Code, Date_in_Location_From, Date_in_Locaton_To]
target dvq:
Visualize BAR SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations  ORDER BY COUNT(Date_in_Location_From) DESC BIN Date_in_Location_From BY WEEKDAY
****************************************************************************************************
nl_queries:
What are the dates of transactions with at least 100 share count or amount bigger than 100 , and count them by a bar chart , and order in desc by the the number of date of transaction .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100  ORDER BY COUNT(date_of_transaction) DESC BIN date_of_transaction BY WEEKDAY
****************************************************************************************************
nl_queries:
Show the total salary by each hire date of employees , and please bin the hire date into the day of week interval for showing a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Plot sum capacity over openning year in a line chart , I want to display by the X in descending .
database schema:
Table cinema, columns = [*,Cinema_ID, Name, Openning_year, Capacity, Location]
target dvq:
Visualize LINE SELECT Openning_year , SUM(Capacity) FROM cinema  ORDER BY Openning_year DESC BIN Openning_year BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of hire_date and the average of salary bin hire_date by weekday in a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Give me a line chart , that bins all date of transactions into the weekday interval , and the count for each bin , order in desc by the date_of_transaction .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS  ORDER BY date_of_transaction DESC BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
Show all calendar dates and bin by weekday in a bar chart .
database schema:
Table Ref_Calendar, columns = [*,Calendar_Date, Day_Number]
target dvq:
Visualize BAR SELECT Calendar_Date , COUNT(Calendar_Date) FROM Ref_calendar BIN Calendar_Date BY WEEKDAY
****************************************************************************************************
nl_queries:
For each station , bin its longitude divided by zero as buckets , and count the frequency in each bucket .
database schema:
Table station, columns = [*,id, name, lat, long, dock_count, city, installation_date]
target dvq:
Visualize BAR SELECT long , COUNT(long) FROM station BIN long BY ZERO
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by weekday , sort from high to low by the y-axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(MANAGER_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Return a bar chart about the distribution of Start_from and the average of Employee_ID , and group by attribute Is_full_time and bin start_from by weekday , and sort in ascending by the y-axis please .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , AVG(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY AVG(Employee_ID) ASC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by time , sort by the y-axis in ascending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(MANAGER_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
What is the average cloud cover rates of the dates (bin into weekdays interval) that had the top 5 cloud cover rates ? You can draw me a bar chart for this purpose .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , AVG(cloud_cover) FROM weather BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
A bar chart shows the distribution of Start_from and the average of Shop_ID bin start_from by weekday , list by the Y-axis in asc .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , AVG(Shop_ID) FROM hiring  ORDER BY AVG(Shop_ID) ASC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
Show me about the distribution of Start_from and the amount of Start_from bin start_from by weekday in a bar chart .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , COUNT(Start_from) FROM hiring BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the sum of salary over the hire_date bin hire_date by weekday by a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Give me a bar chart for how many date of transaction of each date of transaction , and order by the y-axis in desc .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS  ORDER BY COUNT(date_of_transaction) DESC BIN date_of_transaction BY WEEKDAY
****************************************************************************************************
nl_queries:
A line chart for showing the number of the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000 .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000 BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
A bar chart for finding the number of the latest logon date of the students whose family name is "Jaskolski" or "Langosh" , and I want to show y axis in descending order .
database schema:
Table Course_Authors_and_Tutors, columns = [*,author_id, author_tutor_ATB, login_name, password, personal_name, middle_name, family_name, gender_mf, address_line_1]
Table Students, columns = [*,student_id, date_of_registration, date_of_latest_logon, login_name, password, personal_name, middle_name, family_name]
target dvq:
Visualize BAR SELECT date_of_latest_logon , COUNT(date_of_latest_logon) FROM Students WHERE family_name = "Jaskolski" OR family_name = "Langosh"  ORDER BY COUNT(date_of_latest_logon) DESC BIN date_of_latest_logon BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the sum of salary bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the sum of manager_id bin hire_date by weekday , display by the y axis in asc .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(MANAGER_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Draw a bar chart about the distribution of Start_from and the sum of Shop_ID bin start_from by weekday , display y axis from high to low order .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , SUM(Shop_ID) FROM hiring  ORDER BY SUM(Shop_ID) DESC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
Show the number of documents in different ending date Bin ending date by year interval and group by location code with a group line chart , show by the X from low to high .
database schema:
Table Ref_Locations, columns = [*,Location_Code, Location_Name, Location_Description]
Table Document_Locations, columns = [*,Document_ID, Location_Code, Date_in_Location_From, Date_in_Locaton_To]
target dvq:
Visualize LINE SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Location_Code ORDER BY Date_in_Locaton_To ASC BIN Date_in_Locaton_To BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the sum of manager_id over the hire_date bin hire_date by time by a bar chart , order from low to high by the total number .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(MANAGER_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
when is the hire date for those employees whose first name does not containing the letter M , and count them by a bar chart , I want to display in ascending by the Y-axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name NOT LIKE '%M%'  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Show the number of apartment bookings in each weekday and bin booking start date by weekday with a bar chart , show how many booking start date in ascending order .
database schema:
Table Apartment_Bookings, columns = [*,apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date]
target dvq:
Visualize BAR SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings  ORDER BY COUNT(booking_start_date) ASC BIN booking_start_date BY WEEKDAY
****************************************************************************************************
nl_queries:
Bar graph to show how many installation date from different installation date , and rank total number in asc order please .
database schema:
Table station, columns = [*,id, name, lat, long, dock_count, city, installation_date]
target dvq:
Visualize BAR SELECT installation_date , COUNT(installation_date) FROM station  ORDER BY COUNT(installation_date) ASC BIN installation_date BY YEAR
****************************************************************************************************
nl_queries:
Give me the dates when the max temperature was higher than 85 , and count them by a bar chart , and display in descending by the y-axis .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) DESC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
Give me the dates when the max temperature was higher than 85 , and count them by a bar chart , sort by the the number of date in descending please .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) DESC BIN date BY YEAR
****************************************************************************************************
nl_queries:
Bin the hire date into Month interval , and then calculate the total salary of employees in each month for a bar chart , note that just select those employees without the letter M in their first name .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name NOT LIKE '%M%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
What is the total cloud cover rates of the dates (bin into year interval) that had the top 5 cloud cover rates ? You can draw me a bar chart for this purpose , rank in descending by the Y-axis .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , SUM(cloud_cover) FROM weather  ORDER BY SUM(cloud_cover) DESC BIN date BY YEAR
****************************************************************************************************
nl_queries:
Give me the comparison about the average of Employee_ID over the Start_from bin start_from by weekday .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , AVG(Employee_ID) FROM hiring BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
How many documents in different ending date ? Return a bar chart binning ending date by weekday , and rank by the total number in descending .
database schema:
Table Document_Locations, columns = [*,Document_ID, Location_Code, Date_in_Location_From, Date_in_Locaton_To]
target dvq:
Visualize BAR SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations  ORDER BY COUNT(Date_in_Locaton_To) DESC BIN Date_in_Locaton_To BY WEEKDAY
****************************************************************************************************
nl_queries:
Show how many cinemas open for each year in a line chart .
database schema:
Table cinema, columns = [*,Cinema_ID, Name, Openning_year, Capacity, Location]
target dvq:
Visualize LINE SELECT Openning_year , COUNT(Openning_year) FROM cinema BIN Openning_year BY YEAR
****************************************************************************************************
nl_queries:
List the number of enrolment students in each month and bin date of enrolment by month interval with a bar chart .
database schema:
Table Student_Course_Enrolment, columns = [*,registration_id, student_id, course_id, date_of_enrolment, date_of_completion]
target dvq:
Visualize BAR SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment BIN date_of_enrolment BY MONTH
****************************************************************************************************
nl_queries:
What are the distinct visit dates , and count them by a bar chart , list in descending by the y-axis .
database schema:
Table Visits, columns = [*,Visit_ID, Tourist_Attraction_ID, Tourist_ID, Visit_Date, Visit_Details]
target dvq:
Visualize BAR SELECT Visit_Date , COUNT(Visit_Date) FROM VISITS  ORDER BY COUNT(Visit_Date) DESC BIN Visit_Date BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of hire_date and the sum of salary bin hire_date by time , could you list by the total number in asc ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
How many parties of the time they took office , binning the took office into Year interval , and then split by the minister's name , rank by the the number of took office from low to high .
database schema:
Table party, columns = [*,Party_ID, Minister, Took_office, Left_office, Region_ID, Party_name]
target dvq:
Visualize BAR SELECT Took_office , COUNT(Took_office) FROM party GROUP BY Minister ORDER BY COUNT(Took_office) ASC BIN Took_office BY YEAR
****************************************************************************************************
nl_queries:
Give me the dates when the max temperature was higher than 85 , and count them by a bar chart
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85 BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
Return a bar chart about the distribution of Start_from and the sum of Employee_ID bin start_from by weekday , and display in asc by the total number .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , SUM(Employee_ID) FROM hiring  ORDER BY SUM(Employee_ID) ASC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
Draw a line chart about the change of the average of Shop_ID over Start_from bin start_from by time .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Shop_ID) FROM hiring BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by weekday , could you list y axis in desc order ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(MANAGER_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Show me about the distribution of Start_from and the sum of Shop_ID , and group by attribute Is_full_time and bin start_from by weekday in a bar chart .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , SUM(Shop_ID) FROM hiring GROUP BY Is_full_time BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
Visualize a line chart about the change of the sum of Shop_ID over Start_from , and group by attribute Is_full_time and bin start_from by time , display by the x-axis in asc .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from ASC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Show all calendar dates and bin by weekday in a bar chart , I want to rank y axis in desc order .
database schema:
Table Ref_Calendar, columns = [*,Calendar_Date, Day_Number]
target dvq:
Visualize BAR SELECT Calendar_Date , COUNT(Calendar_Date) FROM Ref_calendar  ORDER BY COUNT(Calendar_Date) DESC BIN Calendar_Date BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the average of employee_id bin hire_date by time , and visualize them by a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Draw a bar chart about the distribution of Start_from and the average of Shop_ID , and group by attribute Is_full_time and bin start_from by weekday .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , AVG(Shop_ID) FROM hiring GROUP BY Is_full_time BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the sum of manager_id bin hire_date by weekday in a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
A bar chart for what are the number of the dates with a maximum temperature higher than 85 ? , show by the Y-axis in desc please .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) DESC BIN date BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday , rank Y-axis in desc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(DEPARTMENT_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
What are the number of the distinct visit dates ?
database schema:
Table Visits, columns = [*,Visit_ID, Tourist_Attraction_ID, Tourist_ID, Visit_Date, Visit_Details]
target dvq:
Visualize BAR SELECT Visit_Date , COUNT(Visit_Date) FROM VISITS BIN Visit_Date BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the sum of manager_id bin hire_date by weekday , and visualize them by a bar chart , I want to sort by the total number in desc .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(MANAGER_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the amount of hire_date bin hire_date by time in a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
In zip code 94107 , on which day neither Fog nor Rain was not observed , and count them by a bar chart , and display y axis from low to high order .
database schema:
Table trip, columns = [*,id, duration, start_date, start_station_name, start_station_id, end_date, end_station_name, end_station_id, bike_id, subscription_type, zip_code]
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE zip_code = 94107 AND EVENTS != "Fog" AND EVENTS != "Rain"  ORDER BY COUNT(date) ASC BIN date BY YEAR
****************************************************************************************************
nl_queries:
How many parties of the time they left office , binning the left office time into Year interval , and then split by the minister's name , I want to display in ascending by the Y .
database schema:
Table party, columns = [*,Party_ID, Minister, Took_office, Left_office, Region_ID, Party_name]
target dvq:
Visualize BAR SELECT Left_office , COUNT(Left_office) FROM party GROUP BY Minister ORDER BY COUNT(Left_office) ASC BIN Left_office BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of hire_date and the sum of manager_id bin hire_date by weekday in a bar chart , and list in desc by the total number of manager id please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(MANAGER_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Show the number of documents in different ending date Bin ending date by year interval and group by location code with a group line chart , display by the X-axis from high to low please .
database schema:
Table Ref_Locations, columns = [*,Location_Code, Location_Name, Location_Description]
Table Document_Locations, columns = [*,Document_ID, Location_Code, Date_in_Location_From, Date_in_Locaton_To]
target dvq:
Visualize LINE SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Location_Code ORDER BY Date_in_Locaton_To DESC BIN Date_in_Locaton_To BY YEAR
****************************************************************************************************
nl_queries:
For those dates that have the 5 highest cloud cover rates , please bin the date into Year interval and compute their average cloud cover , I want to order Y from low to high order please .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , AVG(cloud_cover) FROM weather  ORDER BY AVG(cloud_cover) ASC BIN date BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by weekday .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
A line chart shows the change of the sum of Shop_ID over Start_from bin start_from by time
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Shop_ID) FROM hiring BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the average of salary over the hire_date bin hire_date by time , I want to display from low to high by the Y-axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Stacked bar chart of mean employee id for with each Is_full_time in each start from
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , AVG(Employee_ID) FROM hiring GROUP BY Is_full_time BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
Bin all date of transactions into the weekday interval , and the total number of each bin , and then show me the trend , display by the date_of_transaction in desc .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS  ORDER BY date_of_transaction DESC BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of department_id over the hire_date bin hire_date by weekday , show in ascending by the y axis please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(DEPARTMENT_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
A line chart shows the change of the average of Employee_ID over Start_from , and group by attribute Is_full_time and bin start_from by time , and could you rank by the X from low to high ?
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from ASC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Show the number of opening years for three churches that opened most recently in a bar chart . Bin the year into the weekday interval .
database schema:
Table church, columns = [*,Church_ID, Name, Organized_by, Open_Date, Continuation_of]
target dvq:
Visualize BAR SELECT Open_Date , COUNT(Open_Date) FROM church  ORDER BY open_date DESC LIMIT 3 BIN Open_Date BY WEEKDAY
****************************************************************************************************
nl_queries:
List the number of documents for each receipt date and bin by year with a line chart .
database schema:
Table Documents, columns = [*,document_id, document_status_code, document_type_code, shipping_agent_code, receipt_date, receipt_number, other_details]
target dvq:
Visualize LINE SELECT receipt_date , COUNT(receipt_date) FROM Documents BIN receipt_date BY YEAR
****************************************************************************************************
nl_queries:
Show me the trend about the sum of Shop_ID over Start_from bin start_from by time with a line chart , and show X from high to low order please .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Shop_ID) FROM hiring  ORDER BY Start_from DESC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
How many enrolment students in each day ? Return a bar chart binning date of enrolment by weekday .
database schema:
Table Student_Course_Enrolment, columns = [*,registration_id, student_id, course_id, date_of_enrolment, date_of_completion]
target dvq:
Visualize BAR SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment BIN date_of_enrolment BY WEEKDAY
****************************************************************************************************
nl_queries:
What is the date of birth of every customer whose status code is 'Good Customer' , and count them by a line chart , could you display by the X in ascending please ?
database schema:
Table Staff, columns = [*,staff_id, staff_address_id, nickname, first_name, middle_name, last_name, date_of_birth, date_joined_staff, date_left_staff]
Table Customers, columns = [*,customer_id, customer_address_id, customer_status_code, date_became_customer, date_of_birth, first_name, last_name, amount_outstanding, email_address, phone_number, cell_mobile_phone_number]
target dvq:
Visualize LINE SELECT date_of_birth , COUNT(date_of_birth) FROM Customers WHERE customer_status_code = 'Good Customer'  ORDER BY date_of_birth ASC BIN date_of_birth BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of hire_date and the amount of hire_date bin hire_date by time in a bar chart , and show by the total number in ascending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Show the number of documents in different ending date Bin ending date by year interval and group by location code with a group line chart , I want to display by the Date_in_Locaton_To from high to low .
database schema:
Table Ref_Locations, columns = [*,Location_Code, Location_Name, Location_Description]
Table Document_Locations, columns = [*,Document_ID, Location_Code, Date_in_Location_From, Date_in_Locaton_To]
target dvq:
Visualize LINE SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Location_Code ORDER BY Date_in_Locaton_To DESC BIN Date_in_Locaton_To BY YEAR
****************************************************************************************************
nl_queries:
Draw a bar chart about the distribution of Start_from and the sum of Shop_ID bin start_from by weekday .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , SUM(Shop_ID) FROM hiring BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the average of employee_id bin hire_date by time , and display Y in desc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(EMPLOYEE_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Bin all date of transactions into the weekday interval , and the total number of each bin , and then show me the trend , and list in asc by the X .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS  ORDER BY date_of_transaction ASC BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
What are the number of the dates of transactions with at least 100 share count or amount bigger than 100 ?
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100 BIN date_of_transaction BY WEEKDAY
****************************************************************************************************
nl_queries:
What are the number of the dates of transactions with at least 100 share count or amount bigger than 100 ? , could you order date_of_transaction from high to low order please ?
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100  ORDER BY date_of_transaction DESC BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
Return a bar chart about the distribution of Start_from and the average of Employee_ID bin start_from by weekday , and show in asc by the Y-axis .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , AVG(Employee_ID) FROM hiring  ORDER BY AVG(Employee_ID) ASC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
Bar chart x axis date in location from y axis the number of date in location from , and sort by the y axis in asc .
database schema:
Table Document_Locations, columns = [*,Document_ID, Location_Code, Date_in_Location_From, Date_in_Locaton_To]
target dvq:
Visualize BAR SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations  ORDER BY COUNT(Date_in_Location_From) ASC BIN Date_in_Location_From BY WEEKDAY
****************************************************************************************************
nl_queries:
How many accounts are opened in each year ? Show a group line chart that group by other account details , and could you display X-axis in ascending order ?
database schema:
Table Accounts, columns = [*,account_id, customer_id, date_account_opened, account_name, other_account_details]
target dvq:
Visualize LINE SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts GROUP BY other_account_details ORDER BY date_account_opened ASC BIN date_account_opened BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by time , rank Y in descending order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(EMPLOYEE_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of hire_date and the average of manager_id bin hire_date by time , and sort by the total number in desc please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(MANAGER_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the sum of manager_id bin hire_date by time , and I want to sort by the Y-axis from high to low .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(MANAGER_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Give a bar chart to show the number of employees by each hire date , note that bin the hire date into the day of week interval .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Please give me a bar chart that bins the installation date of stations into the day of week interval as the X-axis , and count for showing how many stations are installed each year , display by the Y-axis in descending .
database schema:
Table station, columns = [*,id, name, lat, long, dock_count, city, installation_date]
target dvq:
Visualize BAR SELECT installation_date , COUNT(installation_date) FROM station  ORDER BY COUNT(installation_date) DESC BIN installation_date BY WEEKDAY
****************************************************************************************************
nl_queries:
Give me a bar chart for the number of date moved in of each date moved in
database schema:
Table Residents, columns = [*,resident_id, property_id, date_moved_in, date_moved_out, other_details]
Table Residents_Services, columns = [*,resident_id, service_id, date_moved_in, property_id, date_requested, date_provided, other_details]
Table Customer_Events, columns = [*,Customer_Event_ID, customer_id, date_moved_in, property_id, resident_id, thing_id]
Table Customer_Event_Notes, columns = [*,Customer_Event_Note_ID, Customer_Event_ID, service_type_code, resident_id, property_id, date_moved_in]
target dvq:
Visualize BAR SELECT date_moved_in , COUNT(date_moved_in) FROM residents BIN date_moved_in BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of hire_date and the average of manager_id bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Draw a bar chart about the distribution of Start_from and the sum of Employee_ID bin start_from by weekday .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , SUM(Employee_ID) FROM hiring BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the amount of hire_date bin hire_date by weekday in a bar chart , order how many hire date from low to high order please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find hire_date and the average of employee_id bin hire_date by time , and visualize them by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the amount of hire_date bin hire_date by weekday , and visualize them by a bar chart , and I want to order in descending by the y axis .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For the average of Shop_ID , Start_from , visualize the trend .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Shop_ID) FROM hiring GROUP BY Is_full_time BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of department_id over the hire_date bin hire_date by time by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Return a bar chart about the distribution of Start_from and the average of Employee_ID bin start_from by weekday .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , AVG(Employee_ID) FROM hiring BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
Return the number of the date of birth for all the guests with gender code "Male" .
database schema:
Table Guests, columns = [*,guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth]
target dvq:
Visualize BAR SELECT date_of_birth , COUNT(date_of_birth) FROM Guests WHERE gender_code = "Male" BIN date_of_birth BY WEEKDAY
****************************************************************************************************
nl_queries:
when is the hire date for those employees whose first name does not containing the letter M , and count them by a bar chart
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name NOT LIKE '%M%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday , and list in ascending by the y axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(DEPARTMENT_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
I want to see trend the number of season over season by Away_team , and list Season in descending order .
database schema:
Table game, columns = [*,stadium_id, id, Season, Date, Home_team, Away_team, Score, Competition]
target dvq:
Visualize LINE SELECT Season , COUNT(Season) FROM game GROUP BY Away_team ORDER BY Season DESC BIN Season BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by weekday , and show by the Y in desc .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(EMPLOYEE_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the average of employee_id bin hire_date by time , and could you display in asc by the y axis ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(EMPLOYEE_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
A line chart shows the trend of the average of Shop_ID over Start_from bin start_from by time , and could you rank X from low to high order ?
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Shop_ID) FROM hiring  ORDER BY Start_from ASC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a bar chart shows the distribution of hire_date and the sum of salary bin hire_date by time , could you order total number in asc order ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Return me a bar chart to show the frequency of the year attribute by binning into a weekday interval , order by the the number of year in desc please .
database schema:
Table all_star, columns = [*,player_id, year, game_num, game_id, team_id, league_id, gp, starting_pos]
Table appearances, columns = [*,year, team_id, league_id, player_id, g_all, gs, g_batting, g_defense, g_p, g_c, g_1b, g_2b, g_3b, g_ss, g_lf, g_cf, g_rf, g_of, g_dh, g_ph, g_pr]
Table manager_award, columns = [*,player_id, award_id, year, league_id, tie, notes]
Table player_award, columns = [*,player_id, award_id, year, league_id, tie, notes]
Table manager_award_vote, columns = [*,award_id, year, league_id, player_id, points_won, points_max, votes_first]
Table player_award_vote, columns = [*,award_id, year, league_id, player_id, points_won, points_max, votes_first]
Table batting, columns = [*,player_id, year, stint, team_id, league_id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g_idp]
Table batting_postseason, columns = [*,year, round, player_id, team_id, league_id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g_idp]
Table player_college, columns = [*,player_id, college_id, year]
Table fielding, columns = [*,player_id, year, stint, team_id, league_id, pos, g, gs, inn_outs, po, a, e, dp, pb, wp, sb, cs, zr]
Table fielding_outfield, columns = [*,player_id, year, stint, glf, gcf, grf]
Table fielding_postseason, columns = [*,player_id, year, team_id, league_id, round, pos, g, gs, inn_outs, po, a, e, dp, tp, pb, sb, cs]
Table home_game, columns = [*,year, league_id, team_id, park_id, span_first, span_last, games, openings, attendance]
Table manager, columns = [*,player_id, year, team_id, league_id, inseason, g, w, l, rank, plyr_mgr]
Table manager_half, columns = [*,player_id, year, team_id, league_id, inseason, half, g, w, l, rank]
Table pitching, columns = [*,player_id, year, stint, team_id, league_id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g_idp]
Table pitching_postseason, columns = [*,player_id, year, round, team_id, league_id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g_idp]
Table salary, columns = [*,year, team_id, league_id, player_id, salary]
Table postseason, columns = [*,year, round, team_id_winner, league_id_winner, team_id_loser, league_id_loser, wins, losses, ties]
Table team, columns = [*,year, league_id, team_id, franchise_id, div_id, rank, g, ghome, w, l, div_win, wc_win, lg_win, ws_win, r, ab, h, double, triple, hr, bb, so, sb, cs, hbp, sf, ra, er, era, cg, sho, sv, ipouts, ha, hra, bba, soa, e, dp, fp, name, park, attendance, bpf, ppf, team_id_br, team_id_lahman45, team_id_retro]
Table team_half, columns = [*,year, league_id, team_id, half, div_id, div_win, rank, g, w, l]
target dvq:
Visualize BAR SELECT year , COUNT(year) FROM home_game  ORDER BY COUNT(year) DESC BIN year BY WEEKDAY
****************************************************************************************************
nl_queries:
Show me the trend about the average of Shop_ID over Start_from , and group by attribute Is_full_time and bin start_from by time with a line chart .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Shop_ID) FROM hiring GROUP BY Is_full_time BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Show the number of documents in different starting date Bin starting date by year interval and group by location code with a group line chart , and display x-axis in asc order .
database schema:
Table Ref_Locations, columns = [*,Location_Code, Location_Name, Location_Description]
Table Document_Locations, columns = [*,Document_ID, Location_Code, Date_in_Location_From, Date_in_Locaton_To]
target dvq:
Visualize LINE SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations GROUP BY Location_Code ORDER BY Date_in_Location_From ASC BIN Date_in_Location_From BY YEAR
****************************************************************************************************
nl_queries:
Create a bar chart showing how many hire date across hire date , and I want to list by the Y in descending please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the average of employee_id bin hire_date by time , and visualize them by a bar chart , and could you rank y-axis from high to low order please ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(EMPLOYEE_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Return me a bar chart to show the frequency of the year attribute by binning into a weekday interval , and I want to display Y-axis in asc order .
database schema:
Table all_star, columns = [*,player_id, year, game_num, game_id, team_id, league_id, gp, starting_pos]
Table appearances, columns = [*,year, team_id, league_id, player_id, g_all, gs, g_batting, g_defense, g_p, g_c, g_1b, g_2b, g_3b, g_ss, g_lf, g_cf, g_rf, g_of, g_dh, g_ph, g_pr]
Table manager_award, columns = [*,player_id, award_id, year, league_id, tie, notes]
Table player_award, columns = [*,player_id, award_id, year, league_id, tie, notes]
Table manager_award_vote, columns = [*,award_id, year, league_id, player_id, points_won, points_max, votes_first]
Table player_award_vote, columns = [*,award_id, year, league_id, player_id, points_won, points_max, votes_first]
Table batting, columns = [*,player_id, year, stint, team_id, league_id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g_idp]
Table batting_postseason, columns = [*,year, round, player_id, team_id, league_id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g_idp]
Table player_college, columns = [*,player_id, college_id, year]
Table fielding, columns = [*,player_id, year, stint, team_id, league_id, pos, g, gs, inn_outs, po, a, e, dp, pb, wp, sb, cs, zr]
Table fielding_outfield, columns = [*,player_id, year, stint, glf, gcf, grf]
Table fielding_postseason, columns = [*,player_id, year, team_id, league_id, round, pos, g, gs, inn_outs, po, a, e, dp, tp, pb, sb, cs]
Table home_game, columns = [*,year, league_id, team_id, park_id, span_first, span_last, games, openings, attendance]
Table manager, columns = [*,player_id, year, team_id, league_id, inseason, g, w, l, rank, plyr_mgr]
Table manager_half, columns = [*,player_id, year, team_id, league_id, inseason, half, g, w, l, rank]
Table pitching, columns = [*,player_id, year, stint, team_id, league_id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g_idp]
Table pitching_postseason, columns = [*,player_id, year, round, team_id, league_id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g_idp]
Table salary, columns = [*,year, team_id, league_id, player_id, salary]
Table postseason, columns = [*,year, round, team_id_winner, league_id_winner, team_id_loser, league_id_loser, wins, losses, ties]
Table team, columns = [*,year, league_id, team_id, franchise_id, div_id, rank, g, ghome, w, l, div_win, wc_win, lg_win, ws_win, r, ab, h, double, triple, hr, bb, so, sb, cs, hbp, sf, ra, er, era, cg, sho, sv, ipouts, ha, hra, bba, soa, e, dp, fp, name, park, attendance, bpf, ppf, team_id_br, team_id_lahman45, team_id_retro]
Table team_half, columns = [*,year, league_id, team_id, half, div_id, div_win, rank, g, w, l]
target dvq:
Visualize BAR SELECT year , COUNT(year) FROM home_game  ORDER BY COUNT(year) ASC BIN year BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the average of employee_id bin hire_date by weekday in a bar chart , and rank by the total number in desc .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(EMPLOYEE_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Visualize a bar chart about the distribution of Start_from and the sum of Shop_ID bin start_from by weekday .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , SUM(Shop_ID) FROM hiring BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
What are the dates that have an average sea level pressure between 303 and 31 , and count them by a bar chart , show y-axis from high to low order .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) DESC BIN date BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a bar chart shows the distribution of hire_date and the sum of department_id bin hire_date by weekday , rank in asc by the total number please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(DEPARTMENT_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday , rank in descending by the y axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(DEPARTMENT_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Group and count the move in date in a bar chart , and I want to bin the X into Year interval .
database schema:
Table Residents, columns = [*,resident_id, property_id, date_moved_in, date_moved_out, other_details]
Table Residents_Services, columns = [*,resident_id, service_id, date_moved_in, property_id, date_requested, date_provided, other_details]
Table Customer_Events, columns = [*,Customer_Event_ID, customer_id, date_moved_in, property_id, resident_id, thing_id]
Table Customer_Event_Notes, columns = [*,Customer_Event_Note_ID, Customer_Event_ID, service_type_code, resident_id, property_id, date_moved_in]
target dvq:
Visualize BAR SELECT date_moved_in , COUNT(date_moved_in) FROM customer_events BIN date_moved_in BY YEAR
****************************************************************************************************
nl_queries:
Draw a line chart about the change of the sum of Employee_ID over Start_from , and group by attribute Is_full_time and bin start_from by time , could you rank by the x axis in desc ?
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from DESC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
What are the distinct visit dates , and count them by a bar chart
database schema:
Table Visits, columns = [*,Visit_ID, Tourist_Attraction_ID, Tourist_ID, Visit_Date, Visit_Details]
target dvq:
Visualize BAR SELECT Visit_Date , COUNT(Visit_Date) FROM VISITS BIN Visit_Date BY WEEKDAY
****************************************************************************************************
nl_queries:
Show the number of documents in different starting date Bin starting date by weekday and group by location code with a stacked bar chart , display from low to high by the Y .
database schema:
Table Ref_Locations, columns = [*,Location_Code, Location_Name, Location_Description]
Table Document_Locations, columns = [*,Document_ID, Location_Code, Date_in_Location_From, Date_in_Locaton_To]
target dvq:
Visualize BAR SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations GROUP BY Location_Code ORDER BY COUNT(Date_in_Location_From) ASC BIN Date_in_Location_From BY WEEKDAY
****************************************************************************************************
nl_queries:
Give me the trend about the date_to attributes of all researchers , and bin the date_to into Year interval , display by the x-axis from low to high .
database schema:
Table Project_Staff, columns = [*,staff_id, project_id, role_code, date_from, date_to, other_details]
target dvq:
Visualize LINE SELECT date_to , COUNT(date_to) FROM Project_Staff ORDER BY date_to ASC BIN date_to BY YEAR
****************************************************************************************************
nl_queries:
Bar chart x axis open date y axis how many open date
database schema:
Table church, columns = [*,Church_ID, Name, Organized_by, Open_Date, Continuation_of]
target dvq:
Visualize BAR SELECT Open_Date , COUNT(Open_Date) FROM Church BIN Open_Date BY WEEKDAY
****************************************************************************************************
nl_queries:
I want to see trend the number of season over season by Away_team , order in descending by the X .
database schema:
Table game, columns = [*,stadium_id, id, Season, Date, Home_team, Away_team, Score, Competition]
target dvq:
Visualize LINE SELECT Season , COUNT(Season) FROM game GROUP BY Away_team ORDER BY Season DESC BIN Season BY YEAR
****************************************************************************************************
nl_queries:
Bar chart of how many date of completion from each date of completion , and could you sort from high to low by the how many date of completion ?
database schema:
Table Student_Course_Enrolment, columns = [*,registration_id, student_id, course_id, date_of_enrolment, date_of_completion]
target dvq:
Visualize BAR SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment  ORDER BY COUNT(date_of_completion) DESC BIN date_of_completion BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by weekday .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Draw a line chart about the change of the sum of Employee_ID over Start_from , and group by attribute Is_full_time and bin start_from by time .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Employee_ID) FROM hiring GROUP BY Is_full_time BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of hire_date and the sum of salary bin hire_date by time , order by the Y-axis from high to low .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
List the number of completion students in each day and bin date of completion by weekday with a bar chart .
database schema:
Table Student_Course_Enrolment, columns = [*,registration_id, student_id, course_id, date_of_enrolment, date_of_completion]
target dvq:
Visualize BAR SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment BIN date_of_completion BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the average of department_id bin hire_date by time , and visualize them by a bar chart , and could you show by the Y-axis from low to high please ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(DEPARTMENT_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by time , and list in descending by the y axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(EMPLOYEE_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Find the latest logon date of the students whose family name is "Jaskolski" or "Langosh" , and count them by a bar chart
database schema:
Table Course_Authors_and_Tutors, columns = [*,author_id, author_tutor_ATB, login_name, password, personal_name, middle_name, family_name, gender_mf, address_line_1]
Table Students, columns = [*,student_id, date_of_registration, date_of_latest_logon, login_name, password, personal_name, middle_name, family_name]
target dvq:
Visualize BAR SELECT date_of_latest_logon , COUNT(date_of_latest_logon) FROM Students WHERE family_name = "Jaskolski" OR family_name = "Langosh" BIN date_of_latest_logon BY WEEKDAY
****************************************************************************************************
nl_queries:
What are the number of dates of birth of all the guests whose gender is "Male" ?
database schema:
Table Guests, columns = [*,guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth]
target dvq:
Visualize LINE SELECT date_of_birth , COUNT(date_of_birth) FROM Guests WHERE gender_code = "Male" BIN date_of_birth BY YEAR
****************************************************************************************************
nl_queries:
Plot start from by the average of employee id as a line chart , and sort from high to low by the x-axis .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Employee_ID) FROM hiring  ORDER BY Start_from DESC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Give me the trend about the amount of Start_from over Start_from , and group by attribute Is_full_time and bin start_from by time .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , COUNT(Start_from) FROM hiring GROUP BY Is_full_time BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
What are the distinct visit dates , and count them by a bar chart , sort in asc by the Y-axis .
database schema:
Table Visits, columns = [*,Visit_ID, Tourist_Attraction_ID, Tourist_ID, Visit_Date, Visit_Details]
target dvq:
Visualize BAR SELECT Visit_Date , COUNT(Visit_Date) FROM VISITS  ORDER BY COUNT(Visit_Date) ASC BIN Visit_Date BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the sum of salary over the hire_date bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Stack bar chart of how many took office vs Minister based on took office
database schema:
Table party, columns = [*,Party_ID, Minister, Took_office, Left_office, Region_ID, Party_name]
target dvq:
Visualize BAR SELECT Took_office , COUNT(Took_office) FROM party GROUP BY Minister BIN Took_office BY YEAR
****************************************************************************************************
nl_queries:
Show me the trend about the sum of Shop_ID over Start_from bin start_from by time with a line chart .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Shop_ID) FROM hiring BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
What are the number of the distinct move in dates of the residents ? , could you show in ascending by the total number ?
database schema:
Table Residents, columns = [*,resident_id, property_id, date_moved_in, date_moved_out, other_details]
Table Residents_Services, columns = [*,resident_id, service_id, date_moved_in, property_id, date_requested, date_provided, other_details]
Table Customer_Events, columns = [*,Customer_Event_ID, customer_id, date_moved_in, property_id, resident_id, thing_id]
Table Customer_Event_Notes, columns = [*,Customer_Event_Note_ID, Customer_Event_ID, service_type_code, resident_id, property_id, date_moved_in]
target dvq:
Visualize BAR SELECT date_moved_in , COUNT(date_moved_in) FROM residents  ORDER BY COUNT(date_moved_in) ASC BIN date_moved_in BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the sum of employee_id over the hire_date bin hire_date by time , and list by the sum employee id in ascending please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(EMPLOYEE_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the sum of employee_id over the hire_date bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
How many apartment bookings in each year ? Show me a bar chart binning booking end date by year , I want to rank in descending by the how many booking end date .
database schema:
Table Apartment_Bookings, columns = [*,apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date]
target dvq:
Visualize BAR SELECT booking_end_date , COUNT(booking_end_date) FROM Apartment_Bookings  ORDER BY COUNT(booking_end_date) DESC BIN booking_end_date BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by weekday .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Give me the comparison about the sum of Shop_ID over the Start_from bin start_from by weekday , and could you show from low to high by the Y-axis ?
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , SUM(Shop_ID) FROM hiring  ORDER BY SUM(Shop_ID) ASC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
Give me line charts of worldwide gross total number of shop id over year start from by major genres Is_full_time , I want to list by the x-axis from low to high .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from ASC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Give me the trend about the average of Employee_ID over Start_from bin start_from by time , show from low to high by the X .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Employee_ID) FROM hiring  ORDER BY Start_from ASC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
What are all the calendar dates ? Give me a line chart binning calendar dates by year , and list X-axis in desc order .
database schema:
Table Ref_Calendar, columns = [*,Calendar_Date, Day_Number]
target dvq:
Visualize LINE SELECT Calendar_Date , COUNT(Calendar_Date) FROM Ref_calendar  ORDER BY Calendar_Date DESC BIN Calendar_Date BY YEAR
****************************************************************************************************
nl_queries:
Draw a line chart about the change of the sum of Employee_ID over Start_from bin start_from by time .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Employee_ID) FROM hiring BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For those dates that have the 5 highest cloud cover rates , please bin the date into Year interval and compute their total cloud cover .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , SUM(cloud_cover) FROM weather BIN date BY YEAR
****************************************************************************************************
nl_queries:
Plot how many hire date by grouped by hire date as a bar graph , and could you display y-axis in desc order ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
What are the dates of transactions with at least 100 share count or amount bigger than 100 , and count them by a bar chart , and I want to display Y-axis in ascending order .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100  ORDER BY COUNT(date_of_transaction) ASC BIN date_of_transaction BY WEEKDAY
****************************************************************************************************
nl_queries:
Bar chart x axis start from y axis the average of employee id , and display total number in ascending order .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , AVG(Employee_ID) FROM hiring  ORDER BY AVG(Employee_ID) ASC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the sum of salary bin hire_date by weekday , and visualize them by a bar chart , sort in desc by the y-axis please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Visualize a bar chart about the distribution of Start_from and the average of Employee_ID bin start_from by weekday , list y axis in descending order .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , AVG(Employee_ID) FROM hiring  ORDER BY AVG(Employee_ID) DESC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the sum of salary bin hire_date by weekday , and visualize them by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the sum of manager_id over the hire_date bin hire_date by weekday by a bar chart , and rank in desc by the total number please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(MANAGER_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by time , order by the Y in descending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(MANAGER_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Create a bar chart showing the number of year across year , order by the y-axis from low to high .
database schema:
Table cars_data, columns = [*,Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year]
target dvq:
Visualize BAR SELECT Year , COUNT(Year) FROM CARS_DATA  ORDER BY COUNT(Year) ASC BIN Year BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the sum of salary bin hire_date by time in a bar chart , I want to show in asc by the Y-axis please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
I want a bar chart to show the frequency of the dates that have the 5 highest cloud cover rates each day , and could you sort in descending by the Y-axis ?
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather  ORDER BY COUNT(date) DESC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
List the number of dogs departed in each day with a bar chart that bins departed date by day interval .
database schema:
Table Dogs, columns = [*,dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed]
target dvq:
Visualize BAR SELECT date_departed , COUNT(date_departed) FROM Dogs BIN date_departed BY DAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the average of department_id bin hire_date by time in a bar chart , and could you order from high to low by the Y please ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(DEPARTMENT_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
What is the sum of capacity of cinemas open for each year ? Return a line chart , and could you display by the x-axis in ascending ?
database schema:
Table cinema, columns = [*,Cinema_ID, Name, Openning_year, Capacity, Location]
target dvq:
Visualize LINE SELECT Openning_year , SUM(Capacity) FROM cinema  ORDER BY Openning_year ASC BIN Openning_year BY YEAR
****************************************************************************************************
nl_queries:
What are the dates that have an average sea level pressure between 30 . 3 and 31 , and count them by a bar chart
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31 BIN date BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the sum of department_id bin hire_date by time in a bar chart , order from low to high by the Y .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(DEPARTMENT_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Give me a bar chart for how many date of transaction of each date of transaction , and display by the the number of date of transaction in ascending .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS  ORDER BY COUNT(date_of_transaction) ASC BIN date_of_transaction BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the sum of salary bin hire_date by time in a bar chart , rank in desc by the Y .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
How many apartment bookings in each year ? Show me a bar chart binning booking end date by year .
database schema:
Table Apartment_Bookings, columns = [*,apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date]
target dvq:
Visualize BAR SELECT booking_end_date , COUNT(booking_end_date) FROM Apartment_Bookings BIN booking_end_date BY YEAR
****************************************************************************************************
nl_queries:
How many apartment bookings in each weekday ? Show me a bar chart binning booking start date by weekday , and order total number in ascending order .
database schema:
Table Apartment_Bookings, columns = [*,apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date]
target dvq:
Visualize BAR SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings  ORDER BY COUNT(booking_start_date) ASC BIN booking_start_date BY WEEKDAY
****************************************************************************************************
nl_queries:
Stacked bar chart of the average of shop id for with each Is_full_time in each start from , display y axis from low to high order .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , AVG(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY AVG(Shop_ID) ASC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of hire_date and the sum of salary bin hire_date by weekday , I want to display in desc by the total number .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the sum of department_id over the hire_date bin hire_date by weekday by a bar chart , and display in desc by the y-axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(DEPARTMENT_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Visualize a bar chart about the distribution of Start_from and the average of Shop_ID bin start_from by weekday .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , AVG(Shop_ID) FROM hiring BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
Stacked bar chart of the number of left office for with each Minister in each left office , could you sort by the Y in descending please ?
database schema:
Table party, columns = [*,Party_ID, Minister, Took_office, Left_office, Region_ID, Party_name]
target dvq:
Visualize BAR SELECT Left_office , COUNT(Left_office) FROM party GROUP BY Minister ORDER BY COUNT(Left_office) DESC BIN Left_office BY WEEKDAY
****************************************************************************************************
nl_queries:
A bar chart for finding the number of the dates of the tests taken with result "Pass" , and order total number from low to high order .
database schema:
Table Student_Tests_Taken, columns = [*,registration_id, date_test_taken, test_result]
target dvq:
Visualize BAR SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = "Pass"  ORDER BY COUNT(date_test_taken) ASC BIN date_test_taken BY WEEKDAY
****************************************************************************************************
nl_queries:
Give me the trend about the average of Shop_ID over Start_from bin start_from by time .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Shop_ID) FROM hiring BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Show the number of visit date from each visit date , list total number in descending order please .
database schema:
Table Visits, columns = [*,Visit_ID, Tourist_Attraction_ID, Tourist_ID, Visit_Date, Visit_Details]
target dvq:
Visualize BAR SELECT Visit_Date , COUNT(Visit_Date) FROM VISITS  ORDER BY COUNT(Visit_Date) DESC BIN Visit_Date BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by weekday , order from low to high by the total number .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(MANAGER_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the sum of salary over the hire_date bin hire_date by weekday by a bar chart , display sum salary in desc order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the average of department_id over the hire_date bin hire_date by weekday by a bar chart , sort from high to low by the y-axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(DEPARTMENT_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
The trend about the the number of season of different Home_team over the season
database schema:
Table game, columns = [*,stadium_id, id, Season, Date, Home_team, Away_team, Score, Competition]
target dvq:
Visualize LINE SELECT Season , COUNT(Season) FROM game GROUP BY Home_team BIN Season BY YEAR
****************************************************************************************************
nl_queries:
Stacked bar chart of the average of shop id for with each Is_full_time in each start from
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , AVG(Shop_ID) FROM hiring GROUP BY Is_full_time BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
Show me about the change of the amount of Start_from over Start_from bin start_from by time in a line chart , and could you show by the X-axis in ascending ?
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , COUNT(Start_from) FROM hiring  ORDER BY Start_from ASC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by weekday .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Give me a bar chart for the number of date moved in of each date moved in , and list y axis from high to low order .
database schema:
Table Residents, columns = [*,resident_id, property_id, date_moved_in, date_moved_out, other_details]
Table Residents_Services, columns = [*,resident_id, service_id, date_moved_in, property_id, date_requested, date_provided, other_details]
Table Customer_Events, columns = [*,Customer_Event_ID, customer_id, date_moved_in, property_id, resident_id, thing_id]
Table Customer_Event_Notes, columns = [*,Customer_Event_Note_ID, Customer_Event_ID, service_type_code, resident_id, property_id, date_moved_in]
target dvq:
Visualize BAR SELECT date_moved_in , COUNT(date_moved_in) FROM residents  ORDER BY COUNT(date_moved_in) DESC BIN date_moved_in BY WEEKDAY
****************************************************************************************************
nl_queries:
Return a bar chart about the distribution of Start_from and the sum of Shop_ID , and group by attribute Is_full_time and bin start_from by weekday , I want to display y-axis in ascending order .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , SUM(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY SUM(Shop_ID) ASC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
When do all the researcher role staff stop working ? Bin the time into YEAR interval and count them with a line chart , and could you show by the X in desc ?
database schema:
Table Project_Staff, columns = [*,staff_id, project_id, role_code, date_from, date_to, other_details]
target dvq:
Visualize LINE SELECT date_to , COUNT(date_to) FROM Project_Staff ORDER BY date_to DESC BIN date_to BY YEAR
****************************************************************************************************
nl_queries:
Show the total salary by each hire date of employees , and please bin the hire date into the Month interval for showing a bar chart , show in descending by the Y .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For the top 3 days with the largest max gust speeds , please bin the date into day of the week and then sum the mean humidity to visualize a bar chart .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , SUM(mean_humidity) FROM weather  ORDER BY max_gust_speed_mph DESC LIMIT 3 BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
Plot how many booking start date by grouped by booking start date as a bar graph
database schema:
Table Apartment_Bookings, columns = [*,apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date]
target dvq:
Visualize BAR SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings BIN booking_start_date BY WEEKDAY
****************************************************************************************************
nl_queries:
Show me about the change of the average of Employee_ID over Start_from , and group by attribute Is_full_time and bin start_from by time in a line chart , and display in ascending by the X .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from ASC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Return a line chart about the change of the sum of Employee_ID over Start_from , and group by attribute Is_full_time and bin start_from by time .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Employee_ID) FROM hiring GROUP BY Is_full_time BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Draw a line chart about the change of the average of Shop_ID over Start_from , and group by attribute Is_full_time and bin start_from by time , I want to list Start_from in desc order please .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from DESC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
How many dogs departed in each day ? Visualize with a bar chart that bins departed date by weekday , and sort in descending by the total number .
database schema:
Table Dogs, columns = [*,dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed]
target dvq:
Visualize BAR SELECT date_departed , COUNT(date_departed) FROM Dogs  ORDER BY COUNT(date_departed) DESC BIN date_departed BY WEEKDAY
****************************************************************************************************
nl_queries:
What are the dates of transactions with at least 100 share count or amount bigger than 100 , and count them by a line chart , and could you rank by the X from low to high ?
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100  ORDER BY date_of_transaction ASC BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
Give me line charts of worldwide gross how many date in locaton to over year date in locaton to by major genres Location_Code
database schema:
Table Ref_Locations, columns = [*,Location_Code, Location_Name, Location_Description]
Table Document_Locations, columns = [*,Document_ID, Location_Code, Date_in_Location_From, Date_in_Locaton_To]
target dvq:
Visualize LINE SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Location_Code BIN Date_in_Locaton_To BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the sum of manager_id over the hire_date bin hire_date by time , and could you list by the total number in asc ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(MANAGER_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Which tests have "Pass" results ? Return the dates when the tests were taken , and count them by a line chart , and I want to display by the X-axis in asc .
database schema:
Table Student_Tests_Taken, columns = [*,registration_id, date_test_taken, test_result]
target dvq:
Visualize LINE SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = "Pass"  ORDER BY date_test_taken ASC BIN date_test_taken BY DAY
****************************************************************************************************
nl_queries:
How many dogs arrived in each year ? Visualize with a bar chart , list y axis in descending order .
database schema:
Table Dogs, columns = [*,dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed]
target dvq:
Visualize BAR SELECT date_arrived , COUNT(date_arrived) FROM Dogs  ORDER BY COUNT(date_arrived) DESC BIN date_arrived BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by weekday , and sort from low to high by the Y .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(EMPLOYEE_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
What is the average cloud cover rates of the dates (bin into year interval) that had the top 5 cloud cover rates ? You can draw me a bar chart for this purpose , and order by the the average of cloud cover in descending please .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , AVG(cloud_cover) FROM weather  ORDER BY AVG(cloud_cover) DESC BIN date BY YEAR
****************************************************************************************************
nl_queries:
What are the distinct move in dates of the residents , and count them by a bar chart , and list by the Y in desc .
database schema:
Table Residents, columns = [*,resident_id, property_id, date_moved_in, date_moved_out, other_details]
Table Residents_Services, columns = [*,resident_id, service_id, date_moved_in, property_id, date_requested, date_provided, other_details]
Table Customer_Events, columns = [*,Customer_Event_ID, customer_id, date_moved_in, property_id, resident_id, thing_id]
Table Customer_Event_Notes, columns = [*,Customer_Event_Note_ID, Customer_Event_ID, service_type_code, resident_id, property_id, date_moved_in]
target dvq:
Visualize BAR SELECT date_moved_in , COUNT(date_moved_in) FROM residents  ORDER BY COUNT(date_moved_in) DESC BIN date_moved_in BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of hire_date and the average of salary bin hire_date by time , and order by the y-axis from high to low .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by time , sort by the y-axis in ascending please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(MANAGER_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the sum of employee_id bin hire_date by time , and visualize them by a bar chart , and sort y axis in asc order please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(EMPLOYEE_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the sum of salary bin hire_date by time , and visualize them by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find hire_date and the sum of manager_id bin hire_date by weekday , and visualize them by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
A line chart shows the change of the sum of Shop_ID over Start_from bin start_from by time , and could you order in descending by the X ?
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Shop_ID) FROM hiring  ORDER BY Start_from DESC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Bar graph to show the number of date arrived from different date arrived , sort the number of date arrived from high to low order .
database schema:
Table Dogs, columns = [*,dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed]
target dvq:
Visualize BAR SELECT date_arrived , COUNT(date_arrived) FROM Dogs  ORDER BY COUNT(date_arrived) DESC BIN date_arrived BY WEEKDAY
****************************************************************************************************
nl_queries:
A line chart for what are the number of the distinct visit dates ?
database schema:
Table Visits, columns = [*,Visit_ID, Tourist_Attraction_ID, Tourist_ID, Visit_Date, Visit_Details]
target dvq:
Visualize LINE SELECT Visit_Date , COUNT(Visit_Date) FROM VISITS BIN Visit_Date BY YEAR
****************************************************************************************************
nl_queries:
For the sum of Shop_ID , Start_from , visualize the trend .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Shop_ID) FROM hiring BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
What is the total cloud cover rates of the dates (bin into day of the week interval) that had the top 5 cloud cover rates ? You can show me a bar chart , could you show Y-axis in desc order ?
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , SUM(cloud_cover) FROM weather  ORDER BY SUM(cloud_cover) DESC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the amount of hire_date bin hire_date by time , and visualize them by a bar chart , and show by the y axis in desc .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose first name does not containing the letter M , display their total salary by binning the hire date into Month interval for visualizing a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name NOT LIKE '%M%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For the transaction dates if share count is smaller than 10 , bin the dates into the year interval , and count them using a line chart , and list in ascending by the x axis please .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count < 10  ORDER BY date_of_transaction ASC BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of hire_date and the average of salary bin hire_date by time , I want to rank in descending by the Y-axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by time , could you order in ascending by the y-axis ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(EMPLOYEE_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Give me line charts of worldwide gross how many date account opened over year date account opened by major genres other_account_details , list in descending by the x axis please .
database schema:
Table Accounts, columns = [*,account_id, customer_id, date_account_opened, account_name, other_account_details]
target dvq:
Visualize LINE SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts GROUP BY other_account_details ORDER BY date_account_opened DESC BIN date_account_opened BY YEAR
****************************************************************************************************
nl_queries:
What are the dates with a maximum temperature higher than 85 , and count them by a bar chart , list in asc by the y axis .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) ASC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of salary over the hire_date bin hire_date by weekday , list by the mean salary in desc .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Return the number of the date of birth for all the guests with gender code "Male" , sort Y in ascending order please .
database schema:
Table Guests, columns = [*,guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth]
target dvq:
Visualize BAR SELECT date_of_birth , COUNT(date_of_birth) FROM Guests WHERE gender_code = "Male"  ORDER BY COUNT(date_of_birth) ASC BIN date_of_birth BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of salary over the hire_date bin hire_date by time , and I want to sort y-axis in desc order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
How many parties of the time they took office , binning the took office into Weekday interval , and then split by the minister's name , list in ascending by the how many took office .
database schema:
Table party, columns = [*,Party_ID, Minister, Took_office, Left_office, Region_ID, Party_name]
target dvq:
Visualize BAR SELECT Took_office , COUNT(Took_office) FROM party GROUP BY Minister ORDER BY COUNT(Took_office) ASC BIN Took_office BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the sum of department_id over the hire_date bin hire_date by time .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Give me the comparison about the sum of Shop_ID over the Start_from , and group by attribute Is_full_time and bin start_from by weekday by a bar chart , and list by the Y from high to low .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , SUM(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY SUM(Shop_ID) DESC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the average of salary bin hire_date by weekday , and visualize them by a bar chart , display in descending by the Y-axis please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those dates with a max temperature greater than or equal to 80 , I want to see the number of days for each year using a bar chart .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f >= 80 BIN date BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by time , list from low to high by the y-axis .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(MANAGER_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Give me the trend about the amount of Start_from over Start_from , and group by attribute Is_full_time and bin start_from by time , and sort by the X-axis in ascending .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , COUNT(Start_from) FROM hiring GROUP BY Is_full_time ORDER BY Start_from ASC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the sum of employee_id bin hire_date by weekday , show in desc by the total number .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(EMPLOYEE_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Give me the trend about the sum of Shop_ID over Start_from , and group by attribute Is_full_time and bin start_from by time .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Shop_ID) FROM hiring GROUP BY Is_full_time BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Create a bar chart showing the number of year across year
database schema:
Table cars_data, columns = [*,Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year]
target dvq:
Visualize BAR SELECT Year , COUNT(Year) FROM CARS_DATA BIN Year BY WEEKDAY
****************************************************************************************************
nl_queries:
What are the dates with a maximum temperature higher than 85 , and count them by a bar chart
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85 BIN date BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of manager_id over the hire_date bin hire_date by time , show in descending by the y-axis please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(MANAGER_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
How many accounts are opened in each day ? Bin the account open day by weekday and group by other account details in a stacked bar chart , and rank by the y axis in ascending .
database schema:
Table Accounts, columns = [*,account_id, customer_id, date_account_opened, account_name, other_account_details]
target dvq:
Visualize BAR SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts GROUP BY other_account_details ORDER BY COUNT(date_account_opened) ASC BIN date_account_opened BY WEEKDAY
****************************************************************************************************
nl_queries:
Create a bar chart showing how many hire date across hire date
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
What are the number of the dates that have an average sea level pressure between 303 and 31 ? , and show y axis in ascending order .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) ASC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find hire_date and the average of salary bin hire_date by weekday , and visualize them by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Draw a line chart about the change of the sum of Shop_ID over Start_from , and group by attribute Is_full_time and bin start_from by time , and I want to list in ascending by the x-axis .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from ASC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Visualize the general trend of sum share count over the date of transaction , list x-axis in ascending order .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , SUM(share_count) FROM TRANSACTIONS  ORDER BY date_of_transaction ASC BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
The trend about the the number of season of different Home_team over the season , display by the X from low to high .
database schema:
Table game, columns = [*,stadium_id, id, Season, Date, Home_team, Away_team, Score, Competition]
target dvq:
Visualize LINE SELECT Season , COUNT(Season) FROM game GROUP BY Home_team ORDER BY Season ASC BIN Season BY YEAR
****************************************************************************************************
nl_queries:
Give me the trend about the average of Employee_ID over Start_from , and group by attribute Is_full_time and bin start_from by time , and display by the x-axis from high to low .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from DESC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of manager_id over the hire_date bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find hire_date and the amount of hire_date bin hire_date by weekday , and visualize them by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the sum of manager_id bin hire_date by time , and could you display by the Y in ascending ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(MANAGER_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a bar chart shows the distribution of hire_date and the sum of department_id bin hire_date by weekday .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Bin the hire date into the day of week interval , and then calculate the average salary of employees in each day for a bar chart , note that just select those employees without the letter M in their first name , and could you list Y in ascending order ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name NOT LIKE '%M%'  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Bar chart x axis calendar date y axis the number of calendar date
database schema:
Table Ref_Calendar, columns = [*,Calendar_Date, Day_Number]
target dvq:
Visualize BAR SELECT Calendar_Date , COUNT(Calendar_Date) FROM Ref_calendar BIN Calendar_Date BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the sum of employee_id bin hire_date by weekday , and visualize them by a bar chart , and I want to display in asc by the y axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(EMPLOYEE_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Compare the average salary by each hire date (bin it into the day of week interval) of employees using a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by time , I want to show y-axis in ascending order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(DEPARTMENT_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Plot date to by the number of date to as a trend line , I want to show by the X in asc .
database schema:
Table Project_Staff, columns = [*,staff_id, project_id, role_code, date_from, date_to, other_details]
target dvq:
Visualize LINE SELECT date_to , COUNT(date_to) FROM Project_Staff ORDER BY date_to ASC BIN date_to BY YEAR
****************************************************************************************************
nl_queries:
Bar graph to show how many year from different year
database schema:
Table wine, columns = [*,No, Grape, Winery, Appelation, State, Name, Year, Price, Score, Cases, Drink]
target dvq:
Visualize BAR SELECT Year , COUNT(Year) FROM WINE BIN Year BY WEEKDAY
****************************************************************************************************
nl_queries:
On what dates were employees without the letter M in their first names hired , and count them by a bar chart , rank in ascending by the y-axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name NOT LIKE '%M%'  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the average of department_id bin hire_date by weekday in a bar chart , list by the the average of department id in desc .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(DEPARTMENT_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
I want to see trend of how many receipt date by receipt date , and order by the X in desc please .
database schema:
Table Documents, columns = [*,document_id, document_status_code, document_type_code, shipping_agent_code, receipt_date, receipt_number, other_details]
target dvq:
Visualize LINE SELECT receipt_date , COUNT(receipt_date) FROM Documents  ORDER BY receipt_date DESC BIN receipt_date BY YEAR
****************************************************************************************************
nl_queries:
What are the number of the distinct visit dates ?
database schema:
Table Visits, columns = [*,Visit_ID, Tourist_Attraction_ID, Tourist_ID, Visit_Date, Visit_Details]
target dvq:
Visualize LINE SELECT Visit_Date , COUNT(Visit_Date) FROM VISITS BIN Visit_Date BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the amount of hire_date bin hire_date by time , list by the Y from low to high please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Bin all date of transactions into the YEAR interval , and sum the share count of each bin What is the trend ? , and list in asc by the x axis please .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , SUM(share_count) FROM TRANSACTIONS  ORDER BY date_of_transaction ASC BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
What are the different years in which there were cars produced that weighed less than 4000 and also cars that weighted more than 3000 , and count them by a bar chart , sort in ascending by the y axis .
database schema:
Table cars_data, columns = [*,Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year]
target dvq:
Visualize BAR SELECT Year , COUNT(Year) FROM cars_data where weight between 3000 and 4000  ORDER BY COUNT(Year) ASC BIN Year BY WEEKDAY
****************************************************************************************************
nl_queries:
Return the number of the date of birth for all the guests with gender code "Male" , could you rank in desc by the Y ?
database schema:
Table Guests, columns = [*,guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth]
target dvq:
Visualize BAR SELECT date_of_birth , COUNT(date_of_birth) FROM Guests WHERE gender_code = "Male"  ORDER BY COUNT(date_of_birth) DESC BIN date_of_birth BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of employee_id over the hire_date bin hire_date by weekday by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Show all calendar dates and bin by year in a line chart , and order by the x-axis in desc .
database schema:
Table Ref_Calendar, columns = [*,Calendar_Date, Day_Number]
target dvq:
Visualize LINE SELECT Calendar_Date , COUNT(Calendar_Date) FROM Ref_calendar  ORDER BY Calendar_Date DESC BIN Calendar_Date BY YEAR
****************************************************************************************************
nl_queries:
Return the date of birth for all the guests with gender code "Male" , and count them by a line chart , and display from high to low by the X .
database schema:
Table Guests, columns = [*,guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth]
target dvq:
Visualize LINE SELECT date_of_birth , COUNT(date_of_birth) FROM Guests WHERE gender_code = "Male"  ORDER BY date_of_birth DESC BIN date_of_birth BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the sum of employee_id bin hire_date by weekday , list by the Y in ascending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(EMPLOYEE_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Show me about the change of the average of Shop_ID over Start_from , and group by attribute Is_full_time and bin start_from by time in a line chart , and could you list in descending by the Start_from please ?
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from DESC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Please show the trend of the number of the church by open date (bin into the year) using a line chart .
database schema:
Table church, columns = [*,Church_ID, Name, Organized_by, Open_Date, Continuation_of]
Table wedding, columns = [*,Church_ID, Male_ID, Female_ID, Year]
target dvq:
Visualize LINE SELECT Open_Date , COUNT(Open_Date) FROM church BIN Open_Date BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday , I want to rank by the y axis in desc .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(DEPARTMENT_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Bin the hire date into the day of week interval , and then calculate the total salary of employees in each day for a bar chart , note that just select those employees without the letter M in their first name , I want to list Y from low to high order please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name NOT LIKE '%M%'  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the sum of manager_id over the hire_date bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Give me a line chart , that bins all date of transactions into the weekday interval , and the count for each bin , and list in asc by the X .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS  ORDER BY date_of_transaction ASC BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
Show the number of documents in different starting date Bin starting date by weekday and group by location code with a stacked bar chart , show by the y-axis in desc .
database schema:
Table Ref_Locations, columns = [*,Location_Code, Location_Name, Location_Description]
Table Document_Locations, columns = [*,Document_ID, Location_Code, Date_in_Location_From, Date_in_Locaton_To]
target dvq:
Visualize BAR SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations GROUP BY Location_Code ORDER BY COUNT(Date_in_Location_From) DESC BIN Date_in_Location_From BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the sum of employee_id over the hire_date bin hire_date by time , and list Y-axis in descending order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(EMPLOYEE_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
What is the frequency of the dates (bin into year interval) that had the top 5 cloud cover rates ? You can draw me a bar chart for this purpose .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather BIN date BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the average of manager_id bin hire_date by weekday in a bar chart , and I want to order in asc by the y axis .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(MANAGER_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
A bar chart for returning the number of the date of birth for all the guests with gender code "Male" , and rank from low to high by the y axis .
database schema:
Table Guests, columns = [*,guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth]
target dvq:
Visualize BAR SELECT date_of_birth , COUNT(date_of_birth) FROM Guests WHERE gender_code = "Male"  ORDER BY COUNT(date_of_birth) ASC BIN date_of_birth BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the average of manager_id bin hire_date by time in a bar chart , I want to show by the Y in asc please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(MANAGER_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Plot season by how many season as a line chart
database schema:
Table game, columns = [*,stadium_id, id, Season, Date, Home_team, Away_team, Score, Competition]
target dvq:
Visualize LINE SELECT Season , COUNT(Season) FROM game BIN Season BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by time , order in ascending by the Y .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(EMPLOYEE_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Show all dates of transactions whose type code is "SALE" , and count them by a bar chart
database schema:
Table Ref_Transaction_Types, columns = [*,transaction_type_code, transaction_type_description]
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE transaction_type_code = "SALE" BIN date_of_transaction BY WEEKDAY
****************************************************************************************************
nl_queries:
Show me about the change of the amount of Start_from over Start_from bin start_from by time in a line chart , and list by the X-axis in descending .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , COUNT(Start_from) FROM hiring  ORDER BY Start_from DESC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
What are the different years in which there were cars produced that weighed less than 4000 and also cars that weighted more than 3000 , and count them by a bar chart , order how many year in desc order .
database schema:
Table cars_data, columns = [*,Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year]
target dvq:
Visualize BAR SELECT Year , COUNT(Year) FROM cars_data where weight between 3000 and 4000  ORDER BY COUNT(Year) DESC BIN Year BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the average of employee_id bin hire_date by weekday , and display y-axis in desc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(EMPLOYEE_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of employee_id over the hire_date bin hire_date by time , and show in ascending by the Y .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(EMPLOYEE_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the sum of department_id over the hire_date bin hire_date by time , and could you display by the sum department id in ascending ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(DEPARTMENT_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the sum of employee_id over the hire_date bin hire_date by time , sort from high to low by the y axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(EMPLOYEE_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Stacked bar chart of the average of shop id for with each Is_full_time in each start from , sort by the y axis in desc .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , AVG(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY AVG(Shop_ID) DESC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For the top 3 days with the largest max gust speeds , please bin the date into the day of the week and then sum the mean temperature for a bar chart .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , SUM(mean_temperature_f) FROM weather  ORDER BY max_gust_speed_mph DESC LIMIT 3 BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
How many dogs arrived in each year ? Visualize with a bar chart .
database schema:
Table Dogs, columns = [*,dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed]
target dvq:
Visualize BAR SELECT date_arrived , COUNT(date_arrived) FROM Dogs BIN date_arrived BY YEAR
****************************************************************************************************
nl_queries:
A bar chart for what are the number of the distinct move in dates of the residents ?
database schema:
Table Residents, columns = [*,resident_id, property_id, date_moved_in, date_moved_out, other_details]
Table Residents_Services, columns = [*,resident_id, service_id, date_moved_in, property_id, date_requested, date_provided, other_details]
Table Customer_Events, columns = [*,Customer_Event_ID, customer_id, date_moved_in, property_id, resident_id, thing_id]
Table Customer_Event_Notes, columns = [*,Customer_Event_Note_ID, Customer_Event_ID, service_type_code, resident_id, property_id, date_moved_in]
target dvq:
Visualize BAR SELECT date_moved_in , COUNT(date_moved_in) FROM residents BIN date_moved_in BY WEEKDAY
****************************************************************************************************
nl_queries:
I want to see trend of the number of yearid by yearid , and display from low to high by the X-axis .
database schema:
Table all_star, columns = [*,player_id, year, game_num, game_id, team_id, league_id, gp, starting_pos]
Table appearances, columns = [*,year, team_id, league_id, player_id, g_all, gs, g_batting, g_defense, g_p, g_c, g_1b, g_2b, g_3b, g_ss, g_lf, g_cf, g_rf, g_of, g_dh, g_ph, g_pr]
Table manager_award, columns = [*,player_id, award_id, year, league_id, tie, notes]
Table player_award, columns = [*,player_id, award_id, year, league_id, tie, notes]
Table manager_award_vote, columns = [*,award_id, year, league_id, player_id, points_won, points_max, votes_first]
Table player_award_vote, columns = [*,award_id, year, league_id, player_id, points_won, points_max, votes_first]
Table batting, columns = [*,player_id, year, stint, team_id, league_id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g_idp]
Table batting_postseason, columns = [*,year, round, player_id, team_id, league_id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g_idp]
Table player_college, columns = [*,player_id, college_id, year]
Table fielding, columns = [*,player_id, year, stint, team_id, league_id, pos, g, gs, inn_outs, po, a, e, dp, pb, wp, sb, cs, zr]
Table fielding_outfield, columns = [*,player_id, year, stint, glf, gcf, grf]
Table fielding_postseason, columns = [*,player_id, year, team_id, league_id, round, pos, g, gs, inn_outs, po, a, e, dp, tp, pb, sb, cs]
Table hall_of_fame, columns = [*,player_id, yearid, votedby, ballots, needed, votes, inducted, category, needed_note]
Table home_game, columns = [*,year, league_id, team_id, park_id, span_first, span_last, games, openings, attendance]
Table manager, columns = [*,player_id, year, team_id, league_id, inseason, g, w, l, rank, plyr_mgr]
Table manager_half, columns = [*,player_id, year, team_id, league_id, inseason, half, g, w, l, rank]
Table pitching, columns = [*,player_id, year, stint, team_id, league_id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g_idp]
Table pitching_postseason, columns = [*,player_id, year, round, team_id, league_id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g_idp]
Table salary, columns = [*,year, team_id, league_id, player_id, salary]
Table postseason, columns = [*,year, round, team_id_winner, league_id_winner, team_id_loser, league_id_loser, wins, losses, ties]
Table team, columns = [*,year, league_id, team_id, franchise_id, div_id, rank, g, ghome, w, l, div_win, wc_win, lg_win, ws_win, r, ab, h, double, triple, hr, bb, so, sb, cs, hbp, sf, ra, er, era, cg, sho, sv, ipouts, ha, hra, bba, soa, e, dp, fp, name, park, attendance, bpf, ppf, team_id_br, team_id_lahman45, team_id_retro]
Table team_half, columns = [*,year, league_id, team_id, half, div_id, div_win, rank, g, w, l]
target dvq:
Visualize LINE SELECT yearid , COUNT(yearid) FROM hall_of_fame  ORDER BY yearid ASC BIN yearid BY YEAR
****************************************************************************************************
nl_queries:
Give me the trend about the date_to attributes of all researchers , and bin the date_to into Year interval , I want to rank in descending by the X .
database schema:
Table Project_Staff, columns = [*,staff_id, project_id, role_code, date_from, date_to, other_details]
target dvq:
Visualize LINE SELECT date_to , COUNT(date_to) FROM Project_Staff ORDER BY date_to DESC BIN date_to BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the sum of salary bin hire_date by weekday in a bar chart , and could you list from high to low by the Y-axis ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Stacked bar chart of the number of date account opened for with each other_account_details in each date account opened
database schema:
Table Accounts, columns = [*,account_id, customer_id, date_account_opened, account_name, other_account_details]
target dvq:
Visualize BAR SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts GROUP BY other_account_details BIN date_account_opened BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of hire_date and the sum of salary bin hire_date by weekday , and show total number in descending order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
A line chart for what are the number of the dates of transactions with at least 100 share count or amount bigger than 100 ? , and display by the date_of_transaction in asc .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100  ORDER BY date_of_transaction ASC BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the sum of employee_id bin hire_date by time in a bar chart , and list Y-axis in descending order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(EMPLOYEE_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Give me the comparison about the sum of Shop_ID over the Start_from bin start_from by weekday by a bar chart .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , SUM(Shop_ID) FROM hiring BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the average of salary bin hire_date by weekday in a bar chart , and sort in desc by the Y please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Give me the comparison about the sum of Employee_ID over the Start_from bin start_from by weekday .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , SUM(Employee_ID) FROM hiring BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time , and could you sort by the the average of department id in asc ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(DEPARTMENT_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the sum of department_id over the hire_date bin hire_date by time , sort in descending by the y-axis .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(DEPARTMENT_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
A line chart for returning the number of the date of birth for all the guests with gender code "Male" .
database schema:
Table Guests, columns = [*,guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth]
target dvq:
Visualize LINE SELECT date_of_birth , COUNT(date_of_birth) FROM Guests WHERE gender_code = "Male" BIN date_of_birth BY YEAR
****************************************************************************************************
nl_queries:
Return me a bar chart to show the frequency of the year attribute by binning into a weekday interval .
database schema:
Table all_star, columns = [*,player_id, year, game_num, game_id, team_id, league_id, gp, starting_pos]
Table appearances, columns = [*,year, team_id, league_id, player_id, g_all, gs, g_batting, g_defense, g_p, g_c, g_1b, g_2b, g_3b, g_ss, g_lf, g_cf, g_rf, g_of, g_dh, g_ph, g_pr]
Table manager_award, columns = [*,player_id, award_id, year, league_id, tie, notes]
Table player_award, columns = [*,player_id, award_id, year, league_id, tie, notes]
Table manager_award_vote, columns = [*,award_id, year, league_id, player_id, points_won, points_max, votes_first]
Table player_award_vote, columns = [*,award_id, year, league_id, player_id, points_won, points_max, votes_first]
Table batting, columns = [*,player_id, year, stint, team_id, league_id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g_idp]
Table batting_postseason, columns = [*,year, round, player_id, team_id, league_id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g_idp]
Table player_college, columns = [*,player_id, college_id, year]
Table fielding, columns = [*,player_id, year, stint, team_id, league_id, pos, g, gs, inn_outs, po, a, e, dp, pb, wp, sb, cs, zr]
Table fielding_outfield, columns = [*,player_id, year, stint, glf, gcf, grf]
Table fielding_postseason, columns = [*,player_id, year, team_id, league_id, round, pos, g, gs, inn_outs, po, a, e, dp, tp, pb, sb, cs]
Table home_game, columns = [*,year, league_id, team_id, park_id, span_first, span_last, games, openings, attendance]
Table manager, columns = [*,player_id, year, team_id, league_id, inseason, g, w, l, rank, plyr_mgr]
Table manager_half, columns = [*,player_id, year, team_id, league_id, inseason, half, g, w, l, rank]
Table pitching, columns = [*,player_id, year, stint, team_id, league_id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g_idp]
Table pitching_postseason, columns = [*,player_id, year, round, team_id, league_id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g_idp]
Table salary, columns = [*,year, team_id, league_id, player_id, salary]
Table postseason, columns = [*,year, round, team_id_winner, league_id_winner, team_id_loser, league_id_loser, wins, losses, ties]
Table team, columns = [*,year, league_id, team_id, franchise_id, div_id, rank, g, ghome, w, l, div_win, wc_win, lg_win, ws_win, r, ab, h, double, triple, hr, bb, so, sb, cs, hbp, sf, ra, er, era, cg, sho, sv, ipouts, ha, hra, bba, soa, e, dp, fp, name, park, attendance, bpf, ppf, team_id_br, team_id_lahman45, team_id_retro]
Table team_half, columns = [*,year, league_id, team_id, half, div_id, div_win, rank, g, w, l]
target dvq:
Visualize BAR SELECT year , COUNT(year) FROM home_game BIN year BY WEEKDAY
****************************************************************************************************
nl_queries:
Compare the average salary by each hire date (bin it into month interval) of employees using a bar chart , and sort Y-axis in ascending order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a bar chart shows the distribution of hire_date and the average of employee_id bin hire_date by time .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Show the number of documents in different ending date Bin ending date by weekday and group by location code with a stacked bar chart , order by the Y in ascending .
database schema:
Table Ref_Locations, columns = [*,Location_Code, Location_Name, Location_Description]
Table Document_Locations, columns = [*,Document_ID, Location_Code, Date_in_Location_From, Date_in_Locaton_To]
target dvq:
Visualize BAR SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Location_Code ORDER BY COUNT(Date_in_Locaton_To) ASC BIN Date_in_Locaton_To BY WEEKDAY
****************************************************************************************************
nl_queries:
For the sum of Shop_ID , Start_from , visualize the trend , I want to show in desc by the x-axis .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Shop_ID) FROM hiring  ORDER BY Start_from DESC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For those dates that have the 5 highest cloud cover rates , please bin the date into Year interval and compute their total cloud cover , and order in desc by the total number .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , SUM(cloud_cover) FROM weather  ORDER BY SUM(cloud_cover) DESC BIN date BY YEAR
****************************************************************************************************
nl_queries:
Give me the comparison about the amount of Start_from over the Start_from , and group by attribute Is_full_time and bin start_from by weekday , rank by the total number in desc .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , COUNT(Start_from) FROM hiring GROUP BY Is_full_time ORDER BY COUNT(Start_from) DESC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
Visualize a bar chart about the distribution of Start_from and the sum of Employee_ID , and group by attribute Is_full_time and bin start_from by weekday , rank by the total number from high to low please .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , SUM(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY SUM(Employee_ID) DESC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the sum of department_id bin hire_date by weekday , and order y-axis in ascending order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(DEPARTMENT_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
What are the dates that have an average sea level pressure between 303 and 31 , and count them by a bar chart , sort the number of date in descending order .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) DESC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
Give me the comparison about the amount of Start_from over the Start_from , and group by attribute Is_full_time and bin start_from by weekday .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , COUNT(Start_from) FROM hiring GROUP BY Is_full_time BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the amount of hire_date over the hire_date bin hire_date by time , and rank in asc by the total number please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the average of department_id bin hire_date by weekday , and sort by the y axis from low to high please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(DEPARTMENT_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
What are the number of the distinct move in dates of the residents ? , and sort by the total number in descending .
database schema:
Table Residents, columns = [*,resident_id, property_id, date_moved_in, date_moved_out, other_details]
Table Residents_Services, columns = [*,resident_id, service_id, date_moved_in, property_id, date_requested, date_provided, other_details]
Table Customer_Events, columns = [*,Customer_Event_ID, customer_id, date_moved_in, property_id, resident_id, thing_id]
Table Customer_Event_Notes, columns = [*,Customer_Event_Note_ID, Customer_Event_ID, service_type_code, resident_id, property_id, date_moved_in]
target dvq:
Visualize BAR SELECT date_moved_in , COUNT(date_moved_in) FROM residents  ORDER BY COUNT(date_moved_in) DESC BIN date_moved_in BY WEEKDAY
****************************************************************************************************
nl_queries:
A bar chart shows the distribution of Start_from and the average of Shop_ID bin start_from by weekday , and I want to order by the total number in descending .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , AVG(Shop_ID) FROM hiring  ORDER BY AVG(Shop_ID) DESC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the sum of manager_id over the hire_date bin hire_date by time by a bar chart , and show in ascending by the y-axis please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(MANAGER_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Bar chart x axis date moved in y axis how many date moved in , order from high to low by the Y-axis .
database schema:
Table Residents, columns = [*,resident_id, property_id, date_moved_in, date_moved_out, other_details]
Table Residents_Services, columns = [*,resident_id, service_id, date_moved_in, property_id, date_requested, date_provided, other_details]
Table Customer_Events, columns = [*,Customer_Event_ID, customer_id, date_moved_in, property_id, resident_id, thing_id]
Table Customer_Event_Notes, columns = [*,Customer_Event_Note_ID, Customer_Event_ID, service_type_code, resident_id, property_id, date_moved_in]
target dvq:
Visualize BAR SELECT date_moved_in , COUNT(date_moved_in) FROM customer_events  ORDER BY COUNT(date_moved_in) DESC BIN date_moved_in BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of hire_date and the amount of hire_date bin hire_date by weekday in a bar chart , order by the Y from low to high .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
A bar chart for what are the number of the dates with a maximum temperature higher than 85 ? , and show total number in descending order .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) DESC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
A line chart for finding the number of the dates of the tests taken with result "Pass" .
database schema:
Table Student_Tests_Taken, columns = [*,registration_id, date_test_taken, test_result]
target dvq:
Visualize LINE SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = "Pass" BIN date_test_taken BY DAY
****************************************************************************************************
nl_queries:
Return a bar chart about the distribution of Start_from and the average of Employee_ID bin start_from by weekday , and list total number in desc order .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , AVG(Employee_ID) FROM hiring  ORDER BY AVG(Employee_ID) DESC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
A bar chart for what are the number of the different years in which there were cars produced that weighed less than 4000 and also cars that weighted more than 3000 ?
database schema:
Table cars_data, columns = [*,Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year]
target dvq:
Visualize BAR SELECT Year , COUNT(Year) FROM cars_data where weight between 3000 and 4000 BIN Year BY WEEKDAY
****************************************************************************************************
nl_queries:
Return a bar chart about the distribution of Start_from and the sum of Shop_ID , and group by attribute Is_full_time and bin start_from by weekday .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , SUM(Shop_ID) FROM hiring GROUP BY Is_full_time BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
Compare the average salary by each hire date (bin it into the day of week interval) of employees using a bar chart , and list by the Y-axis in asc .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Show the number of documents in different starting date . Bin starting date by weekday and group by location code with a stacked bar chart .
database schema:
Table Ref_Locations, columns = [*,Location_Code, Location_Name, Location_Description]
Table Document_Locations, columns = [*,Document_ID, Location_Code, Date_in_Location_From, Date_in_Locaton_To]
target dvq:
Visualize BAR SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations GROUP BY Location_Code BIN Date_in_Location_From BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the sum of manager_id over the hire_date bin hire_date by time .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Plot calendar date by how many calendar date as a line chart
database schema:
Table Ref_Calendar, columns = [*,Calendar_Date, Day_Number]
target dvq:
Visualize LINE SELECT Calendar_Date , COUNT(Calendar_Date) FROM Ref_calendar BIN Calendar_Date BY YEAR
****************************************************************************************************
nl_queries:
For the amount of Start_from , Start_from , visualize the trend , and I want to list x axis from high to low order please .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , COUNT(Start_from) FROM hiring GROUP BY Is_full_time ORDER BY Start_from DESC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by time , and order by the Y in asc .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(MANAGER_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For the transaction dates if share count is smaller than 10 , bin the dates into the year interval , and count them using a line chart .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count < 10 BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a bar chart shows the distribution of hire_date and the average of employee_id bin hire_date by time , and rank in descending by the y-axis .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(EMPLOYEE_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
How many documents in different ending date ? Return a line chart binning ending date by year interval .
database schema:
Table Document_Locations, columns = [*,Document_ID, Location_Code, Date_in_Location_From, Date_in_Locaton_To]
target dvq:
Visualize LINE SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations BIN Date_in_Locaton_To BY YEAR
****************************************************************************************************
nl_queries:
Bar chart x axis date y axis total number of cloud cover
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , SUM(cloud_cover) FROM weather BIN date BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday , display by the total number from low to high .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of hire_date and the average of department_id bin hire_date by weekday , and I want to sort Y in descending order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(DEPARTMENT_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
I want to see trend of the number of yearid by yearid , and I want to show in desc by the X .
database schema:
Table all_star, columns = [*,player_id, year, game_num, game_id, team_id, league_id, gp, starting_pos]
Table appearances, columns = [*,year, team_id, league_id, player_id, g_all, gs, g_batting, g_defense, g_p, g_c, g_1b, g_2b, g_3b, g_ss, g_lf, g_cf, g_rf, g_of, g_dh, g_ph, g_pr]
Table manager_award, columns = [*,player_id, award_id, year, league_id, tie, notes]
Table player_award, columns = [*,player_id, award_id, year, league_id, tie, notes]
Table manager_award_vote, columns = [*,award_id, year, league_id, player_id, points_won, points_max, votes_first]
Table player_award_vote, columns = [*,award_id, year, league_id, player_id, points_won, points_max, votes_first]
Table batting, columns = [*,player_id, year, stint, team_id, league_id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g_idp]
Table batting_postseason, columns = [*,year, round, player_id, team_id, league_id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g_idp]
Table player_college, columns = [*,player_id, college_id, year]
Table fielding, columns = [*,player_id, year, stint, team_id, league_id, pos, g, gs, inn_outs, po, a, e, dp, pb, wp, sb, cs, zr]
Table fielding_outfield, columns = [*,player_id, year, stint, glf, gcf, grf]
Table fielding_postseason, columns = [*,player_id, year, team_id, league_id, round, pos, g, gs, inn_outs, po, a, e, dp, tp, pb, sb, cs]
Table hall_of_fame, columns = [*,player_id, yearid, votedby, ballots, needed, votes, inducted, category, needed_note]
Table home_game, columns = [*,year, league_id, team_id, park_id, span_first, span_last, games, openings, attendance]
Table manager, columns = [*,player_id, year, team_id, league_id, inseason, g, w, l, rank, plyr_mgr]
Table manager_half, columns = [*,player_id, year, team_id, league_id, inseason, half, g, w, l, rank]
Table pitching, columns = [*,player_id, year, stint, team_id, league_id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g_idp]
Table pitching_postseason, columns = [*,player_id, year, round, team_id, league_id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g_idp]
Table salary, columns = [*,year, team_id, league_id, player_id, salary]
Table postseason, columns = [*,year, round, team_id_winner, league_id_winner, team_id_loser, league_id_loser, wins, losses, ties]
Table team, columns = [*,year, league_id, team_id, franchise_id, div_id, rank, g, ghome, w, l, div_win, wc_win, lg_win, ws_win, r, ab, h, double, triple, hr, bb, so, sb, cs, hbp, sf, ra, er, era, cg, sho, sv, ipouts, ha, hra, bba, soa, e, dp, fp, name, park, attendance, bpf, ppf, team_id_br, team_id_lahman45, team_id_retro]
Table team_half, columns = [*,year, league_id, team_id, half, div_id, div_win, rank, g, w, l]
target dvq:
Visualize LINE SELECT yearid , COUNT(yearid) FROM hall_of_fame  ORDER BY yearid DESC BIN yearid BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the amount of hire_date over the hire_date bin hire_date by weekday , could you list by the Y in descending ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the sum of manager_id over the hire_date bin hire_date by time , and I want to order in desc by the total number .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(MANAGER_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
A bar chart for what are the number of the different years in which there were cars produced that weighed less than 4000 and also cars that weighted more than 3000 ? , and sort by the y-axis in ascending .
database schema:
Table cars_data, columns = [*,Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year]
target dvq:
Visualize BAR SELECT Year , COUNT(Year) FROM cars_data where weight between 3000 and 4000  ORDER BY COUNT(Year) ASC BIN Year BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday , and I want to show from low to high by the Y .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(DEPARTMENT_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the average of department_id bin hire_date by time , and visualize them by a bar chart , and display by the y-axis from high to low .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(DEPARTMENT_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the amount of hire_date bin hire_date by weekday in a bar chart , and rank from high to low by the Y please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose first name does not containing the letter M , display their total salary by binning the hire date into Month interval for visualizing a bar chart , and sort in asc by the total number please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name NOT LIKE '%M%'  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
How many home games by each weekday (bin the year attr into weekdays interval) ? Give me a bar chart , and rank by the Y-axis from low to high .
database schema:
Table all_star, columns = [*,player_id, year, game_num, game_id, team_id, league_id, gp, starting_pos]
Table appearances, columns = [*,year, team_id, league_id, player_id, g_all, gs, g_batting, g_defense, g_p, g_c, g_1b, g_2b, g_3b, g_ss, g_lf, g_cf, g_rf, g_of, g_dh, g_ph, g_pr]
Table manager_award, columns = [*,player_id, award_id, year, league_id, tie, notes]
Table player_award, columns = [*,player_id, award_id, year, league_id, tie, notes]
Table manager_award_vote, columns = [*,award_id, year, league_id, player_id, points_won, points_max, votes_first]
Table player_award_vote, columns = [*,award_id, year, league_id, player_id, points_won, points_max, votes_first]
Table batting, columns = [*,player_id, year, stint, team_id, league_id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g_idp]
Table batting_postseason, columns = [*,year, round, player_id, team_id, league_id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g_idp]
Table player_college, columns = [*,player_id, college_id, year]
Table fielding, columns = [*,player_id, year, stint, team_id, league_id, pos, g, gs, inn_outs, po, a, e, dp, pb, wp, sb, cs, zr]
Table fielding_outfield, columns = [*,player_id, year, stint, glf, gcf, grf]
Table fielding_postseason, columns = [*,player_id, year, team_id, league_id, round, pos, g, gs, inn_outs, po, a, e, dp, tp, pb, sb, cs]
Table home_game, columns = [*,year, league_id, team_id, park_id, span_first, span_last, games, openings, attendance]
Table manager, columns = [*,player_id, year, team_id, league_id, inseason, g, w, l, rank, plyr_mgr]
Table manager_half, columns = [*,player_id, year, team_id, league_id, inseason, half, g, w, l, rank]
Table pitching, columns = [*,player_id, year, stint, team_id, league_id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g_idp]
Table pitching_postseason, columns = [*,player_id, year, round, team_id, league_id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g_idp]
Table salary, columns = [*,year, team_id, league_id, player_id, salary]
Table postseason, columns = [*,year, round, team_id_winner, league_id_winner, team_id_loser, league_id_loser, wins, losses, ties]
Table team, columns = [*,year, league_id, team_id, franchise_id, div_id, rank, g, ghome, w, l, div_win, wc_win, lg_win, ws_win, r, ab, h, double, triple, hr, bb, so, sb, cs, hbp, sf, ra, er, era, cg, sho, sv, ipouts, ha, hra, bba, soa, e, dp, fp, name, park, attendance, bpf, ppf, team_id_br, team_id_lahman45, team_id_retro]
Table team_half, columns = [*,year, league_id, team_id, half, div_id, div_win, rank, g, w, l]
target dvq:
Visualize BAR SELECT year , COUNT(year) FROM home_game  ORDER BY COUNT(year) ASC BIN year BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the amount of hire_date over the hire_date bin hire_date by weekday by a bar chart , rank by the y axis in ascending please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
What are the dates of the latest logon of the students with family name "Jaskolski" or "Langosh" , and count them by a bar chart , and I want to order in asc by the total number .
database schema:
Table Course_Authors_and_Tutors, columns = [*,author_id, author_tutor_ATB, login_name, password, personal_name, middle_name, family_name, gender_mf, address_line_1]
Table Students, columns = [*,student_id, date_of_registration, date_of_latest_logon, login_name, password, personal_name, middle_name, family_name]
target dvq:
Visualize BAR SELECT date_of_latest_logon , COUNT(date_of_latest_logon) FROM Students WHERE family_name = "Jaskolski" OR family_name = "Langosh"  ORDER BY COUNT(date_of_latest_logon) ASC BIN date_of_latest_logon BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the sum of employee_id bin hire_date by time , and rank y axis from high to low order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(EMPLOYEE_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Return a bar chart about the distribution of Start_from and the amount of Start_from , and group by attribute Is_full_time and bin start_from by weekday , I want to order total number in asc order please .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , COUNT(Start_from) FROM hiring GROUP BY Is_full_time ORDER BY COUNT(Start_from) ASC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
Give me the comparison about the average of Employee_ID over the Start_from , and group by attribute Is_full_time and bin start_from by weekday by a bar chart , I want to sort in desc by the Y .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , AVG(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY AVG(Employee_ID) DESC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the average of department_id bin hire_date by weekday in a bar chart , and I want to rank by the y axis in asc .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(DEPARTMENT_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
A bar chart for giveing me the number of the dates when the max temperature was higher than 85 .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85 BIN date BY YEAR
****************************************************************************************************
nl_queries:
Give me the trend about the average of Shop_ID over Start_from bin start_from by time , show x-axis in asc order .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Shop_ID) FROM hiring  ORDER BY Start_from ASC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Plot how many date from by grouped by date from as a bar graph , and I want to list in descending by the total number .
database schema:
Table Project_Staff, columns = [*,staff_id, project_id, role_code, date_from, date_to, other_details]
target dvq:
Visualize BAR SELECT date_from , COUNT(date_from) FROM Project_Staff ORDER BY COUNT(date_from) DESC BIN date_from BY WEEKDAY
****************************************************************************************************
nl_queries:
On what dates were employees without the letter M in their first names hired , and count them by a bar chart , and list y axis from high to low order please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name NOT LIKE '%M%'  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Give me line charts of worldwide gross sum employee id over year start from by major genres Is_full_time
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Employee_ID) FROM hiring GROUP BY Is_full_time BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Plot calendar date by how many calendar date as a line chart , list x-axis in descending order please .
database schema:
Table Ref_Calendar, columns = [*,Calendar_Date, Day_Number]
target dvq:
Visualize LINE SELECT Calendar_Date , COUNT(Calendar_Date) FROM Ref_calendar  ORDER BY Calendar_Date DESC BIN Calendar_Date BY YEAR
****************************************************************************************************
nl_queries:
Show the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000 , and count them by a line chart , and I want to order by the X-axis in descending .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000  ORDER BY date_of_transaction DESC BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
Give a bar chart to show the number of employees by each hire date , note that bin the hire date into the day of week interval , I want to show Y-axis in descending order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Bin all date of transactions into the YEAR interval , and give the average of the share count for each bin What is the trend ? , sort x-axis in desc order .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , AVG(share_count) FROM TRANSACTIONS  ORDER BY date_of_transaction DESC BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
Bar graph to show the number of booking end date from different booking end date , and could you show in asc by the Y ?
database schema:
Table Apartment_Bookings, columns = [*,apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date]
target dvq:
Visualize BAR SELECT booking_end_date , COUNT(booking_end_date) FROM Apartment_Bookings  ORDER BY COUNT(booking_end_date) ASC BIN booking_end_date BY YEAR
****************************************************************************************************
nl_queries:
In which years cars were produced weighing no less than 3000 and no more than 4000 , and count them by a bar chart , and order by the Y in desc .
database schema:
Table cars_data, columns = [*,Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year]
target dvq:
Visualize BAR SELECT Year , COUNT(Year) FROM cars_data where weight between 3000 and 4000  ORDER BY COUNT(Year) DESC BIN Year BY WEEKDAY
****************************************************************************************************
nl_queries:
Show the number of games in each season and group by away team in a group line chart The x-axis is season , could you display in desc by the X-axis ?
database schema:
Table game, columns = [*,stadium_id, id, Season, Date, Home_team, Away_team, Score, Competition]
target dvq:
Visualize LINE SELECT Season , COUNT(Season) FROM game GROUP BY Away_team ORDER BY Season DESC BIN Season BY YEAR
****************************************************************************************************
nl_queries:
Show the number of accounts opened in each year for all accounts and group by other account details in a group line chart , could you display X-axis in ascending order ?
database schema:
Table Accounts, columns = [*,account_id, customer_id, date_account_opened, account_name, other_account_details]
target dvq:
Visualize LINE SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts GROUP BY other_account_details ORDER BY date_account_opened ASC BIN date_account_opened BY YEAR
****************************************************************************************************
nl_queries:
Return me a line chart to show the frequency of the year attribute by binning into a weekday interval , list by the x-axis in desc .
database schema:
Table all_star, columns = [*,player_id, year, game_num, game_id, team_id, league_id, gp, starting_pos]
Table appearances, columns = [*,year, team_id, league_id, player_id, g_all, gs, g_batting, g_defense, g_p, g_c, g_1b, g_2b, g_3b, g_ss, g_lf, g_cf, g_rf, g_of, g_dh, g_ph, g_pr]
Table manager_award, columns = [*,player_id, award_id, year, league_id, tie, notes]
Table player_award, columns = [*,player_id, award_id, year, league_id, tie, notes]
Table manager_award_vote, columns = [*,award_id, year, league_id, player_id, points_won, points_max, votes_first]
Table player_award_vote, columns = [*,award_id, year, league_id, player_id, points_won, points_max, votes_first]
Table batting, columns = [*,player_id, year, stint, team_id, league_id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g_idp]
Table batting_postseason, columns = [*,year, round, player_id, team_id, league_id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g_idp]
Table player_college, columns = [*,player_id, college_id, year]
Table fielding, columns = [*,player_id, year, stint, team_id, league_id, pos, g, gs, inn_outs, po, a, e, dp, pb, wp, sb, cs, zr]
Table fielding_outfield, columns = [*,player_id, year, stint, glf, gcf, grf]
Table fielding_postseason, columns = [*,player_id, year, team_id, league_id, round, pos, g, gs, inn_outs, po, a, e, dp, tp, pb, sb, cs]
Table home_game, columns = [*,year, league_id, team_id, park_id, span_first, span_last, games, openings, attendance]
Table manager, columns = [*,player_id, year, team_id, league_id, inseason, g, w, l, rank, plyr_mgr]
Table manager_half, columns = [*,player_id, year, team_id, league_id, inseason, half, g, w, l, rank]
Table pitching, columns = [*,player_id, year, stint, team_id, league_id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g_idp]
Table pitching_postseason, columns = [*,player_id, year, round, team_id, league_id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g_idp]
Table salary, columns = [*,year, team_id, league_id, player_id, salary]
Table postseason, columns = [*,year, round, team_id_winner, league_id_winner, team_id_loser, league_id_loser, wins, losses, ties]
Table team, columns = [*,year, league_id, team_id, franchise_id, div_id, rank, g, ghome, w, l, div_win, wc_win, lg_win, ws_win, r, ab, h, double, triple, hr, bb, so, sb, cs, hbp, sf, ra, er, era, cg, sho, sv, ipouts, ha, hra, bba, soa, e, dp, fp, name, park, attendance, bpf, ppf, team_id_br, team_id_lahman45, team_id_retro]
Table team_half, columns = [*,year, league_id, team_id, half, div_id, div_win, rank, g, w, l]
target dvq:
Visualize LINE SELECT year , COUNT(year) FROM home_game  ORDER BY year DESC BIN year BY YEAR
****************************************************************************************************
nl_queries:
Show me about the distribution of Start_from and the sum of Employee_ID , and group by attribute Is_full_time and bin start_from by weekday in a bar chart .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , SUM(Employee_ID) FROM hiring GROUP BY Is_full_time BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
Show me the number of booking start date by booking start date in a histogram , and order by the total number from low to high .
database schema:
Table Apartment_Bookings, columns = [*,apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date]
target dvq:
Visualize BAR SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings  ORDER BY COUNT(booking_start_date) ASC BIN booking_start_date BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by time , list Y-axis from high to low order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(MANAGER_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by weekday , and could you show Y in ascending order ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(EMPLOYEE_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the average of employee_id bin hire_date by time in a bar chart , display from high to low by the y-axis please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(EMPLOYEE_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the sum of department_id bin hire_date by weekday , and visualize them by a bar chart , and list sum department id in ascending order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(DEPARTMENT_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of hire_date and the average of salary bin hire_date by time , order by the y axis in ascending .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the average of department_id bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of manager_id over the hire_date bin hire_date by time by a bar chart , and could you list in asc by the y-axis ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(MANAGER_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Return a bar chart about the distribution of Start_from and the amount of Start_from , and group by attribute Is_full_time and bin start_from by weekday .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , COUNT(Start_from) FROM hiring GROUP BY Is_full_time BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
Find the number of the latest logon date of the students whose family name is "Jaskolski" or "Langosh" , and sort in descending by the Y please .
database schema:
Table Course_Authors_and_Tutors, columns = [*,author_id, author_tutor_ATB, login_name, password, personal_name, middle_name, family_name, gender_mf, address_line_1]
Table Students, columns = [*,student_id, date_of_registration, date_of_latest_logon, login_name, password, personal_name, middle_name, family_name]
target dvq:
Visualize BAR SELECT date_of_latest_logon , COUNT(date_of_latest_logon) FROM Students WHERE family_name = "Jaskolski" OR family_name = "Langosh"  ORDER BY COUNT(date_of_latest_logon) DESC BIN date_of_latest_logon BY WEEKDAY
****************************************************************************************************
nl_queries:
Show the number of documents in different starting date and bin starting date by weekday interval with a bar chart , list in ascending by the Y-axis .
database schema:
Table Document_Locations, columns = [*,Document_ID, Location_Code, Date_in_Location_From, Date_in_Locaton_To]
target dvq:
Visualize BAR SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations  ORDER BY COUNT(Date_in_Location_From) ASC BIN Date_in_Location_From BY WEEKDAY
****************************************************************************************************
nl_queries:
What are the distinct move in dates of the residents , and count them by a bar chart
database schema:
Table Residents, columns = [*,resident_id, property_id, date_moved_in, date_moved_out, other_details]
Table Residents_Services, columns = [*,resident_id, service_id, date_moved_in, property_id, date_requested, date_provided, other_details]
Table Customer_Events, columns = [*,Customer_Event_ID, customer_id, date_moved_in, property_id, resident_id, thing_id]
Table Customer_Event_Notes, columns = [*,Customer_Event_Note_ID, Customer_Event_ID, service_type_code, resident_id, property_id, date_moved_in]
target dvq:
Visualize BAR SELECT date_moved_in , COUNT(date_moved_in) FROM residents BIN date_moved_in BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of manager_id over the hire_date bin hire_date by weekday by a bar chart , rank the average of manager id in desc order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(MANAGER_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
When do all the researcher role staff stop working ? Bin the time into YEAR interval and count them with a line chart , and rank X in asc order .
database schema:
Table Project_Staff, columns = [*,staff_id, project_id, role_code, date_from, date_to, other_details]
target dvq:
Visualize LINE SELECT date_to , COUNT(date_to) FROM Project_Staff ORDER BY date_to ASC BIN date_to BY YEAR
****************************************************************************************************
nl_queries:
Stacked bar chart of how many date in location from for with each Location_Code in each date in location from , could you order by the the number of date in location from in ascending ?
database schema:
Table Ref_Locations, columns = [*,Location_Code, Location_Name, Location_Description]
Table Document_Locations, columns = [*,Document_ID, Location_Code, Date_in_Location_From, Date_in_Locaton_To]
target dvq:
Visualize BAR SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations GROUP BY Location_Code ORDER BY COUNT(Date_in_Location_From) ASC BIN Date_in_Location_From BY WEEKDAY
****************************************************************************************************
nl_queries:
Show me a bar chart that bin all date of transactions into the weekday interval and the y-axis is their total number .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS BIN date_of_transaction BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find hire_date and the average of department_id bin hire_date by time , and visualize them by a bar chart , and show y-axis from low to high order please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(DEPARTMENT_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by weekday .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
What are the dates of the latest logon of the students with family name "Jaskolski" or "Langosh" , and count them by a bar chart
database schema:
Table Course_Authors_and_Tutors, columns = [*,author_id, author_tutor_ATB, login_name, password, personal_name, middle_name, family_name, gender_mf, address_line_1]
Table Students, columns = [*,student_id, date_of_registration, date_of_latest_logon, login_name, password, personal_name, middle_name, family_name]
target dvq:
Visualize BAR SELECT date_of_latest_logon , COUNT(date_of_latest_logon) FROM Students WHERE family_name = "Jaskolski" OR family_name = "Langosh" BIN date_of_latest_logon BY WEEKDAY
****************************************************************************************************
nl_queries:
Show the average salary by each hire date of employees , and please bin the hire date into the day of week interval for showing a bar chart , could you display Y from low to high order please ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Find all the distinct visit dates , and count them by a line chart , could you order by the X from low to high ?
database schema:
Table Visits, columns = [*,Visit_ID, Tourist_Attraction_ID, Tourist_ID, Visit_Date, Visit_Details]
target dvq:
Visualize LINE SELECT Visit_Date , COUNT(Visit_Date) FROM VISITS  ORDER BY Visit_Date ASC BIN Visit_Date BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday , order from high to low by the total number .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Compare the total salary by each hire date (bin it into the day of week interval) of employees using a bar chart , display from low to high by the y-axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Give me the number of the dates when the max temperature was higher than 85 , and display from high to low by the Y .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) DESC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
Show me about the distribution of Start_from and the average of Employee_ID bin start_from by weekday in a bar chart .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , AVG(Employee_ID) FROM hiring BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
Bar chart x axis left office y axis the number of left office , show total number from low to high order .
database schema:
Table party, columns = [*,Party_ID, Minister, Took_office, Left_office, Region_ID, Party_name]
target dvq:
Visualize BAR SELECT Left_office , COUNT(Left_office) FROM party  ORDER BY COUNT(Left_office) ASC BIN Left_office BY WEEKDAY
****************************************************************************************************
nl_queries:
Stacked bar chart of the number of left office for with each Minister in each left office
database schema:
Table party, columns = [*,Party_ID, Minister, Took_office, Left_office, Region_ID, Party_name]
target dvq:
Visualize BAR SELECT Left_office , COUNT(Left_office) FROM party GROUP BY Minister BIN Left_office BY WEEKDAY
****************************************************************************************************
nl_queries:
Visualize a line chart about the change of the sum of Employee_ID over Start_from bin start_from by time , show in desc by the Start_from .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Employee_ID) FROM hiring  ORDER BY Start_from DESC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of hire_date and the sum of employee_id bin hire_date by weekday in a bar chart , rank by the Y from low to high please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(EMPLOYEE_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Bar chart of the frequency from each receipt date , and bin the date in weekday interval , and then show y axis in asc order .
database schema:
Table Documents, columns = [*,document_id, document_status_code, document_type_code, shipping_agent_code, receipt_date, receipt_number, other_details]
target dvq:
Visualize BAR SELECT receipt_date , COUNT(receipt_date) FROM Documents  ORDER BY COUNT(receipt_date) ASC BIN receipt_date BY WEEKDAY
****************************************************************************************************
nl_queries:
What are the dates with a maximum temperature higher than 85 , and count them by a bar chart , and display from high to low by the Y .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) DESC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
Find the latest logon date of the students whose family name is "Jaskolski" or "Langosh" , and count them by a bar chart , and could you show from high to low by the Y ?
database schema:
Table Course_Authors_and_Tutors, columns = [*,author_id, author_tutor_ATB, login_name, password, personal_name, middle_name, family_name, gender_mf, address_line_1]
Table Students, columns = [*,student_id, date_of_registration, date_of_latest_logon, login_name, password, personal_name, middle_name, family_name]
target dvq:
Visualize BAR SELECT date_of_latest_logon , COUNT(date_of_latest_logon) FROM Students WHERE family_name = "Jaskolski" OR family_name = "Langosh"  ORDER BY COUNT(date_of_latest_logon) DESC BIN date_of_latest_logon BY WEEKDAY
****************************************************************************************************
nl_queries:
Return a bar chart about the distribution of Start_from and the sum of Employee_ID bin start_from by weekday , and could you order by the Y-axis in desc ?
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , SUM(Employee_ID) FROM hiring  ORDER BY SUM(Employee_ID) DESC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of hire_date and the sum of salary bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday , I want to sort from high to low by the sum department id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(DEPARTMENT_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
The trend about the the number of start from of different Is_full_time over the start from , list in asc by the x axis please .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , COUNT(Start_from) FROM hiring GROUP BY Is_full_time ORDER BY Start_from ASC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by time , sort Y-axis from high to low order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(MANAGER_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of hire_date and the average of department_id bin hire_date by weekday , I want to order y axis in ascending order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(DEPARTMENT_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by weekday , and sort by the Y in desc .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(EMPLOYEE_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
How many parties of the time they took office , binning the took office into WEEKDAY interval , could you rank y-axis in ascending order ?
database schema:
Table party, columns = [*,Party_ID, Minister, Took_office, Left_office, Region_ID, Party_name]
target dvq:
Visualize BAR SELECT Took_office , COUNT(Took_office) FROM party  ORDER BY COUNT(Took_office) ASC BIN Took_office BY WEEKDAY
****************************************************************************************************
nl_queries:
A bar chart for giveing me the number of the dates when the max temperature was higher than 85 , sort Y in asc order .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) ASC BIN date BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of hire_date and the average of salary bin hire_date by weekday in a bar chart , and display in descending by the Y-axis please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
What are the distinct visit dates , and count them by a line chart , and I want to order x axis in desc order .
database schema:
Table Visits, columns = [*,Visit_ID, Tourist_Attraction_ID, Tourist_ID, Visit_Date, Visit_Details]
target dvq:
Visualize LINE SELECT Visit_Date , COUNT(Visit_Date) FROM VISITS  ORDER BY Visit_Date DESC BIN Visit_Date BY YEAR
****************************************************************************************************
nl_queries:
Show me about the distribution of Start_from and the amount of Start_from bin start_from by weekday in a bar chart , list in asc by the y axis .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , COUNT(Start_from) FROM hiring  ORDER BY COUNT(Start_from) ASC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
How many accounts are opened in each day ? Bin the account open day by weekday and group by other account details in a stacked bar chart .
database schema:
Table Accounts, columns = [*,account_id, customer_id, date_account_opened, account_name, other_account_details]
target dvq:
Visualize BAR SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts GROUP BY other_account_details BIN date_account_opened BY WEEKDAY
****************************************************************************************************
nl_queries:
Give me line charts of worldwide gross how many date in locaton to over year date in locaton to by major genres Location_Code , and I want to show by the X-axis from low to high .
database schema:
Table Ref_Locations, columns = [*,Location_Code, Location_Name, Location_Description]
Table Document_Locations, columns = [*,Document_ID, Location_Code, Date_in_Location_From, Date_in_Locaton_To]
target dvq:
Visualize LINE SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Location_Code ORDER BY Date_in_Locaton_To ASC BIN Date_in_Locaton_To BY YEAR
****************************************************************************************************
nl_queries:
How many dogs departed in each day ? Visualize with a bar chart that bins departed date by day interval .
database schema:
Table Dogs, columns = [*,dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed]
target dvq:
Visualize BAR SELECT date_departed , COUNT(date_departed) FROM Dogs BIN date_departed BY DAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of manager_id over the hire_date bin hire_date by time , list in asc by the Y-axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(MANAGER_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Show the number of the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000 .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000 BIN date_of_transaction BY WEEKDAY
****************************************************************************************************
nl_queries:
Show sum employee id from each start from
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , SUM(Employee_ID) FROM hiring BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of hire_date and the sum of salary bin hire_date by time , and could you display by the y axis from low to high ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
List the number of dogs departed in each day with a bar chart that bins departed date by day interval , and list the number of date departed in asc order .
database schema:
Table Dogs, columns = [*,dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed]
target dvq:
Visualize BAR SELECT date_departed , COUNT(date_departed) FROM Dogs  ORDER BY COUNT(date_departed) ASC BIN date_departed BY DAY
****************************************************************************************************
nl_queries:
A line chart shows the change of the average of Shop_ID over Start_from , and group by attribute Is_full_time and bin start_from by time , and order x axis from high to low order .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from DESC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
A bar chart shows the distribution of Start_from and the average of Employee_ID , and group by attribute Is_full_time and bin start_from by weekday , and I want to list from high to low by the y-axis .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , AVG(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY AVG(Employee_ID) DESC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the average of salary bin hire_date by time , I want to sort in asc by the Y-axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Please show the trend of the number of the church by open date (bin into the year) using a line chart , and display by the x-axis in descending please .
database schema:
Table church, columns = [*,Church_ID, Name, Organized_by, Open_Date, Continuation_of]
Table wedding, columns = [*,Church_ID, Male_ID, Female_ID, Year]
target dvq:
Visualize LINE SELECT Open_Date , COUNT(Open_Date) FROM church  ORDER BY Open_Date DESC BIN Open_Date BY YEAR
****************************************************************************************************
nl_queries:
Return the number of the date of birth for all the guests with gender code "Male" .
database schema:
Table Guests, columns = [*,guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth]
target dvq:
Visualize LINE SELECT date_of_birth , COUNT(date_of_birth) FROM Guests WHERE gender_code = "Male" BIN date_of_birth BY YEAR
****************************************************************************************************
nl_queries:
A bar chart for what are the number of the dates of transactions with at least 100 share count or amount bigger than 100 ? , I want to display Y-axis in ascending order .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100  ORDER BY COUNT(date_of_transaction) ASC BIN date_of_transaction BY WEEKDAY
****************************************************************************************************
nl_queries:
What are the number of dates of birth of all the guests whose gender is "Male" ? , and sort Y in ascending order please .
database schema:
Table Guests, columns = [*,guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth]
target dvq:
Visualize BAR SELECT date_of_birth , COUNT(date_of_birth) FROM Guests WHERE gender_code = "Male"  ORDER BY COUNT(date_of_birth) ASC BIN date_of_birth BY WEEKDAY
****************************************************************************************************
nl_queries:
How many apartment bookings in each weekday ? Show me a bar chart binning booking start date by weekday , could you order by the how many booking start date in descending ?
database schema:
Table Apartment_Bookings, columns = [*,apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date]
target dvq:
Visualize BAR SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings  ORDER BY COUNT(booking_start_date) DESC BIN booking_start_date BY WEEKDAY
****************************************************************************************************
nl_queries:
List the number of documents for each receipt date and bin by year with a line chart , and sort by the x-axis in desc please .
database schema:
Table Documents, columns = [*,document_id, document_status_code, document_type_code, shipping_agent_code, receipt_date, receipt_number, other_details]
target dvq:
Visualize LINE SELECT receipt_date , COUNT(receipt_date) FROM Documents  ORDER BY receipt_date DESC BIN receipt_date BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the average of manager_id bin hire_date by time , and visualize them by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
On which day has it neither been foggy nor rained in the zip code of 94107 , and count them by a bar chart , order total number in ascending order please .
database schema:
Table trip, columns = [*,id, duration, start_date, start_station_name, start_station_id, end_date, end_station_name, end_station_id, bike_id, subscription_type, zip_code]
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE zip_code = 94107 AND EVENTS != "Fog" AND EVENTS != "Rain"  ORDER BY COUNT(date) ASC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by time , and I want to sort y-axis from low to high order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(EMPLOYEE_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Give me line charts of worldwide gross the number of date in location from over year date in location from by major genres Location_Code , display Date_in_Location_From from low to high order please .
database schema:
Table Ref_Locations, columns = [*,Location_Code, Location_Name, Location_Description]
Table Document_Locations, columns = [*,Document_ID, Location_Code, Date_in_Location_From, Date_in_Locaton_To]
target dvq:
Visualize LINE SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations GROUP BY Location_Code ORDER BY Date_in_Location_From ASC BIN Date_in_Location_From BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of hire_date and the sum of salary bin hire_date by time in a bar chart , could you display from low to high by the total number ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of hire_date and the average of manager_id bin hire_date by weekday , and could you display y axis in ascending order ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(MANAGER_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
A line chart for what are the number of the distinct visit dates ? , rank by the X in ascending please .
database schema:
Table Visits, columns = [*,Visit_ID, Tourist_Attraction_ID, Tourist_ID, Visit_Date, Visit_Details]
target dvq:
Visualize LINE SELECT Visit_Date , COUNT(Visit_Date) FROM VISITS  ORDER BY Visit_Date ASC BIN Visit_Date BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by time , and sort in asc by the how many hire date .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by time , order by the y-axis in descending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(DEPARTMENT_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Draw a bar chart about the distribution of Start_from and the amount of Start_from , and group by attribute Is_full_time and bin start_from by weekday .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , COUNT(Start_from) FROM hiring GROUP BY Is_full_time BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
A bar chart for what are the number of the dates of transactions with at least 100 share count or amount bigger than 100 ?
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100 BIN date_of_transaction BY WEEKDAY
****************************************************************************************************
nl_queries:
Bar graph to show the number of booking end date from different booking end date , could you list in desc by the how many booking end date ?
database schema:
Table Apartment_Bookings, columns = [*,apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date]
target dvq:
Visualize BAR SELECT booking_end_date , COUNT(booking_end_date) FROM Apartment_Bookings  ORDER BY COUNT(booking_end_date) DESC BIN booking_end_date BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the sum of manager_id bin hire_date by weekday , and visualize them by a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time , and display y-axis in ascending order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(DEPARTMENT_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of hire_date and the average of manager_id bin hire_date by weekday in a bar chart , and show by the Y-axis in asc .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(MANAGER_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
What is the total cloud cover rates of the dates (bin into day of the week interval) that had the top 5 cloud cover rates ? You can show me a bar chart , list by the y-axis in ascending .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , SUM(cloud_cover) FROM weather  ORDER BY SUM(cloud_cover) ASC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
Visualize a line chart about the change of the sum of Employee_ID over Start_from bin start_from by time .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Employee_ID) FROM hiring BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Bar chart of the number of receipt date from each receipt date
database schema:
Table Documents, columns = [*,document_id, document_status_code, document_type_code, shipping_agent_code, receipt_date, receipt_number, other_details]
target dvq:
Visualize BAR SELECT receipt_date , COUNT(receipt_date) FROM Documents BIN receipt_date BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find hire_date and the sum of employee_id bin hire_date by time , and visualize them by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Draw a bar chart about the distribution of Start_from and the sum of Shop_ID , and group by attribute Is_full_time and bin start_from by weekday , and display total number of shop id in asc order .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , SUM(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY SUM(Shop_ID) ASC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the average of department_id bin hire_date by weekday in a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
What are the dates in which the mean sea level pressure was between 303 and 31 , and count them by a bar chart , could you rank by the Y in asc please ?
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) ASC BIN date BY YEAR
****************************************************************************************************
nl_queries:
Bar graph to show sum share count from different date of transaction , and could you rank Y from low to high order ?
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize BAR SELECT date_of_transaction , SUM(share_count) FROM TRANSACTIONS  ORDER BY SUM(share_count) ASC BIN date_of_transaction BY WEEKDAY
****************************************************************************************************
nl_queries:
Show all calendar dates and bin by year in a line chart , list by the Calendar_Date from low to high .
database schema:
Table Ref_Calendar, columns = [*,Calendar_Date, Day_Number]
target dvq:
Visualize LINE SELECT Calendar_Date , COUNT(Calendar_Date) FROM Ref_calendar  ORDER BY Calendar_Date ASC BIN Calendar_Date BY YEAR
****************************************************************************************************
nl_queries:
Can you draw the trend of the average of capacity over the openning year ?
database schema:
Table cinema, columns = [*,Cinema_ID, Name, Openning_year, Capacity, Location]
target dvq:
Visualize LINE SELECT Openning_year , AVG(Capacity) FROM cinema BIN Openning_year BY YEAR
****************************************************************************************************
nl_queries:
Show all dates of transactions whose type code is "SALE" , and count them by a line chart , order by the X from low to high .
database schema:
Table Ref_Transaction_Types, columns = [*,transaction_type_code, transaction_type_description]
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE transaction_type_code = "SALE"  ORDER BY date_of_transaction ASC BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
Stacked bar chart of the number of start from for with each Is_full_time in each start from , and list from high to low by the y-axis .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , COUNT(Start_from) FROM hiring GROUP BY Is_full_time ORDER BY COUNT(Start_from) DESC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of hire_date and the sum of manager_id bin hire_date by time , and rank total number of manager id in descending order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(MANAGER_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
What are the payment date of the payment with amount paid higher than 300 or with payment type is 'Check , and count them by a bar chart , order by the y axis from low to high .
database schema:
Table Payments, columns = [*,payment_id, booking_id, customer_id, payment_type_code, amount_paid_in_full_yn, payment_date, amount_due, amount_paid]
target dvq:
Visualize BAR SELECT payment_date , COUNT(payment_date) FROM payments WHERE amount_paid > 300 OR payment_type_code = 'Check'  ORDER BY COUNT(payment_date) ASC BIN payment_date BY MONTH
****************************************************************************************************
nl_queries:
Return a line chart about the change of the average of Employee_ID over Start_from bin start_from by time , and sort x axis from high to low order .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Employee_ID) FROM hiring  ORDER BY Start_from DESC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the sum of salary bin hire_date by time , and visualize them by a bar chart , and I want to show total number of salary in desc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For the amount of Start_from , Start_from , visualize the trend , display by the Start_from in asc .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , COUNT(Start_from) FROM hiring GROUP BY Is_full_time ORDER BY Start_from ASC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
A bar chart that computes the total number of wines with a price is bigger than 100 Next , Bin the year into the weekday interval , rank y-axis from low to high order .
database schema:
Table wine, columns = [*,No, Grape, Winery, Appelation, State, Name, Year, Price, Score, Cases, Drink]
target dvq:
Visualize BAR SELECT Year , COUNT(Year) FROM WINE WHERE Price > 100  ORDER BY COUNT(Year) ASC BIN Year BY WEEKDAY
****************************************************************************************************
nl_queries:
Give me the comparison about the amount of Start_from over the Start_from bin start_from by weekday , and list in asc by the y axis .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , COUNT(Start_from) FROM hiring  ORDER BY COUNT(Start_from) ASC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the sum of employee_id bin hire_date by weekday in a bar chart , list y-axis in ascending order please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(EMPLOYEE_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Give me line charts of worldwide gross the average of shop id over year start from by major genres Is_full_time , I want to list by the Start_from in ascending .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from ASC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Show the number of apartment bookings in each year and bin booking start date by year with a bar chart , could you sort in desc by the Y-axis please ?
database schema:
Table Apartment_Bookings, columns = [*,apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date]
target dvq:
Visualize BAR SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings  ORDER BY COUNT(booking_start_date) DESC BIN booking_start_date BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by weekday .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of hire_date and the average of department_id bin hire_date by weekday in a bar chart , and rank by the the average of department id from low to high .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(DEPARTMENT_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the sum of employee_id bin hire_date by weekday , and visualize them by a bar chart , sort y-axis in ascending order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(EMPLOYEE_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of hire_date and the sum of department_id bin hire_date by time , list by the y-axis from low to high please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(DEPARTMENT_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Show the number of documents in different ending date . Bin ending date by year interval and group by location code with a group line chart .
database schema:
Table Ref_Locations, columns = [*,Location_Code, Location_Name, Location_Description]
Table Document_Locations, columns = [*,Document_ID, Location_Code, Date_in_Location_From, Date_in_Locaton_To]
target dvq:
Visualize LINE SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Location_Code BIN Date_in_Locaton_To BY YEAR
****************************************************************************************************
nl_queries:
Stacked bar of took office and how many took office colored by Minister , and display by the Y-axis in descending .
database schema:
Table party, columns = [*,Party_ID, Minister, Took_office, Left_office, Region_ID, Party_name]
target dvq:
Visualize BAR SELECT Took_office , COUNT(Took_office) FROM party GROUP BY Minister ORDER BY COUNT(Took_office) DESC BIN Took_office BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find hire_date and the sum of employee_id bin hire_date by time , and visualize them by a bar chart , and could you order in descending by the Y ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(EMPLOYEE_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Plot total number of salary by grouped by hire date as a bar graph , list y-axis in descending order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
A bar chart for what are the number of the dates with a maximum temperature higher than 85 ? , and could you display from low to high by the y axis ?
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) ASC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the sum of employee_id over the hire_date bin hire_date by time by a bar chart , and show by the y-axis in ascending .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(EMPLOYEE_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those dates that have the 5 highest cloud cover rates , please bin the date into the day of week interval and count their frequency , show by the y axis in ascending .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather  ORDER BY COUNT(date) ASC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
Show sum employee id from each start from , and display in asc by the total number .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , SUM(Employee_ID) FROM hiring  ORDER BY SUM(Employee_ID) ASC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
Show me the trend about the average of Employee_ID over Start_from , and group by attribute Is_full_time and bin start_from by time with a line chart , and sort in descending by the X-axis .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from DESC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
What are dates of birth of all the guests whose gender is "Male" , and count them by a line chart
database schema:
Table Guests, columns = [*,guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth]
target dvq:
Visualize LINE SELECT date_of_birth , COUNT(date_of_birth) FROM Guests WHERE gender_code = "Male" BIN date_of_birth BY YEAR
****************************************************************************************************
nl_queries:
In zip code 94107 , on which day neither Fog nor Rain was not observed , and count them by a bar chart , sort in desc by the Y .
database schema:
Table trip, columns = [*,id, duration, start_date, start_station_name, start_station_id, end_date, end_station_name, end_station_id, bike_id, subscription_type, zip_code]
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE zip_code = 94107 AND EVENTS != "Fog" AND EVENTS != "Rain"  ORDER BY COUNT(date) DESC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
List the number of documents for each receipt date and bin by weekday in a bar chart , I want to list in ascending by the total number please .
database schema:
Table Documents, columns = [*,document_id, document_status_code, document_type_code, shipping_agent_code, receipt_date, receipt_number, other_details]
target dvq:
Visualize BAR SELECT receipt_date , COUNT(receipt_date) FROM Documents  ORDER BY COUNT(receipt_date) ASC BIN receipt_date BY WEEKDAY
****************************************************************************************************
nl_queries:
Show the number of documents in different starting date and bin starting date by year interval with a line chart , sort X in asc order please .
database schema:
Table Document_Locations, columns = [*,Document_ID, Location_Code, Date_in_Location_From, Date_in_Locaton_To]
target dvq:
Visualize LINE SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations  ORDER BY Date_in_Location_From ASC BIN Date_in_Location_From BY YEAR
****************************************************************************************************
nl_queries:
Return a line chart about the change of the amount of Start_from over Start_from bin start_from by time , and list by the X-axis in descending .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , COUNT(Start_from) FROM hiring  ORDER BY Start_from DESC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the sum of manager_id bin hire_date by weekday , and visualize them by a bar chart , and sort from low to high by the Y-axis .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(MANAGER_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Draw a line chart about the change of the sum of Shop_ID over Start_from bin start_from by time .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Shop_ID) FROM hiring BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Bin the installation date into Year interval , and then you can draw a bar chart to tell me how many stations each year , and could you sort y-axis in descending order please ?
database schema:
Table station, columns = [*,id, name, lat, long, dock_count, city, installation_date]
target dvq:
Visualize BAR SELECT installation_date , COUNT(installation_date) FROM station  ORDER BY COUNT(installation_date) DESC BIN installation_date BY YEAR
****************************************************************************************************
nl_queries:
A line chart shows the change of the sum of Employee_ID over Start_from , and group by attribute Is_full_time and bin start_from by time
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Employee_ID) FROM hiring GROUP BY Is_full_time BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
What are dates of birth of all the guests whose gender is "Male" , and count them by a line chart , and I want to show by the x-axis from high to low .
database schema:
Table Guests, columns = [*,guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth]
target dvq:
Visualize LINE SELECT date_of_birth , COUNT(date_of_birth) FROM Guests WHERE gender_code = "Male"  ORDER BY date_of_birth DESC BIN date_of_birth BY YEAR
****************************************************************************************************
nl_queries:
Show the number of books for each year in descending order by year and visualize in a bar chart .
database schema:
Table book_club, columns = [*,book_club_id, Year, Author_or_Editor, Book_Title, Publisher, Category, Result]
Table movie, columns = [*,movie_id, Title, Year, Director, Budget_million, Gross_worldwide]
target dvq:
Visualize BAR SELECT Year , COUNT(Year) FROM book_club  ORDER BY YEAR DESC BIN Year BY YEAR
****************************************************************************************************
nl_queries:
Bin all date of transactions into the YEAR interval , and give the average of the share count for each bin . What is the trend ?
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , AVG(share_count) FROM TRANSACTIONS BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the sum of department_id bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For the average of Employee_ID , Start_from , visualize the trend , and display by the x-axis from high to low .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from DESC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
How many cars each weekday (by bin the year into a day of the week interval) ? Show me the bar chart .
database schema:
Table cars_data, columns = [*,Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year]
target dvq:
Visualize BAR SELECT Year , COUNT(Year) FROM CARS_DATA BIN Year BY WEEKDAY
****************************************************************************************************
nl_queries:
For those dates with a max temperature greater than or equal to 80 , I want to know the number of days on the day of the week interval using a bar chart , I want to display by the Y in asc .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f >= 80  ORDER BY COUNT(date) ASC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
Give me the comparison about the amount of Start_from over the Start_from bin start_from by weekday .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , COUNT(Start_from) FROM hiring BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
Give me the number of the dates when the max temperature was higher than 85 .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85 BIN date BY YEAR
****************************************************************************************************
nl_queries:
Give me the comparison about the average of Employee_ID over the Start_from bin start_from by weekday , show in asc by the Y-axis .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , AVG(Employee_ID) FROM hiring  ORDER BY AVG(Employee_ID) ASC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by weekday , and could you list Y in desc order please ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(MANAGER_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a bar chart shows the distribution of hire_date and the sum of manager_id bin hire_date by weekday .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
What are the number of the dates in which the mean sea level pressure was between 303 and 31 ? , and could you rank in desc by the y-axis ?
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) DESC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the sum of department_id bin hire_date by time , and visualize them by a bar chart , show by the Y-axis in ascending .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(DEPARTMENT_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Return a line chart about the change of the sum of Employee_ID over Start_from bin start_from by time , and display Start_from from high to low order please .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Employee_ID) FROM hiring  ORDER BY Start_from DESC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find hire_date and the average of manager_id bin hire_date by time , and visualize them by a bar chart , show by the y axis in ascending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(MANAGER_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
List the number of dogs arrived in each day with a bar chart that bins arrived date by weekday , order by the Y in descending .
database schema:
Table Dogs, columns = [*,dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed]
target dvq:
Visualize BAR SELECT date_arrived , COUNT(date_arrived) FROM Dogs  ORDER BY COUNT(date_arrived) DESC BIN date_arrived BY WEEKDAY
****************************************************************************************************
nl_queries:
Bin the hire date of employees into Month interval and count them for visualizing a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of hire_date and the sum of salary bin hire_date by time .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Show me the trend about the average of Shop_ID over Start_from bin start_from by time with a line chart , rank in desc by the x axis .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Shop_ID) FROM hiring  ORDER BY Start_from DESC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
What are the number of the dates of transactions with at least 100 share count or amount bigger than 100 ? , and show total number in desc order .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100  ORDER BY COUNT(date_of_transaction) DESC BIN date_of_transaction BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the amount of hire_date over the hire_date bin hire_date by time , and show in descending by the Y .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by weekday , and rank total number from high to low order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Show the number of date arrived from each date arrived , I want to sort Y in desc order .
database schema:
Table Dogs, columns = [*,dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed]
target dvq:
Visualize BAR SELECT date_arrived , COUNT(date_arrived) FROM Dogs  ORDER BY COUNT(date_arrived) DESC BIN date_arrived BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find hire_date and the sum of manager_id bin hire_date by weekday , and visualize them by a bar chart , order from low to high by the y-axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(MANAGER_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of hire_date and the amount of hire_date bin hire_date by weekday in a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Find Start_from and the sum of Shop_ID bin start_from by weekday , and visualize them by a bar chart , could you rank in desc by the total number ?
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , SUM(Shop_ID) FROM hiring  ORDER BY SUM(Shop_ID) DESC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of hire_date and the sum of salary bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
A bar chart for returning the number of the date of birth for all the guests with gender code "Male" , and show Y in descending order .
database schema:
Table Guests, columns = [*,guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth]
target dvq:
Visualize BAR SELECT date_of_birth , COUNT(date_of_birth) FROM Guests WHERE gender_code = "Male"  ORDER BY COUNT(date_of_birth) DESC BIN date_of_birth BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the sum of department_id bin hire_date by weekday in a bar chart , and could you order in desc by the Y ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(DEPARTMENT_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Give me line charts of worldwide gross total number of shop id over year start from by major genres Is_full_time , and display from high to low by the x axis .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from DESC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
A line chart shows the change of the average of Employee_ID over Start_from , and group by attribute Is_full_time and bin start_from by time , and show by the x-axis from high to low please .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from DESC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
A bar chart for showing the number of the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000 , and sort in asc by the Y please .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000  ORDER BY COUNT(date_of_transaction) ASC BIN date_of_transaction BY WEEKDAY
****************************************************************************************************
nl_queries:
Bin the hire date into the day of week interval , and then calculate the total salary of employees in each day for a bar chart , note that just select those employees without the letter M in their first name , and list Y-axis in desc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name NOT LIKE '%M%'  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Show me mean cloud cover by date in a histogram , could you display the average of cloud cover in ascending order ?
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , AVG(cloud_cover) FROM weather  ORDER BY AVG(cloud_cover) ASC BIN date BY YEAR
****************************************************************************************************
nl_queries:
What are the number of the dates of the latest logon of the students with family name "Jaskolski" or "Langosh" ? , and show in descending by the Y .
database schema:
Table Course_Authors_and_Tutors, columns = [*,author_id, author_tutor_ATB, login_name, password, personal_name, middle_name, family_name, gender_mf, address_line_1]
Table Students, columns = [*,student_id, date_of_registration, date_of_latest_logon, login_name, password, personal_name, middle_name, family_name]
target dvq:
Visualize BAR SELECT date_of_latest_logon , COUNT(date_of_latest_logon) FROM Students WHERE family_name = "Jaskolski" OR family_name = "Langosh"  ORDER BY COUNT(date_of_latest_logon) DESC BIN date_of_latest_logon BY WEEKDAY
****************************************************************************************************
nl_queries:
How many documents in different starting date ? Return a line chart binning starting date by year interval , sort X in asc order please .
database schema:
Table Document_Locations, columns = [*,Document_ID, Location_Code, Date_in_Location_From, Date_in_Locaton_To]
target dvq:
Visualize LINE SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations  ORDER BY Date_in_Location_From ASC BIN Date_in_Location_From BY YEAR
****************************************************************************************************
nl_queries:
How many dogs departed in each day ? Visualize with a bar chart that bins departed date by weekday , and could you show total number in ascending order ?
database schema:
Table Dogs, columns = [*,dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed]
target dvq:
Visualize BAR SELECT date_departed , COUNT(date_departed) FROM Dogs  ORDER BY COUNT(date_departed) ASC BIN date_departed BY WEEKDAY
****************************************************************************************************
nl_queries:
Plot start from by the average of employee id as a line chart
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Employee_ID) FROM hiring BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Show me a line chart of how the number of visit date change over the visit date , and order by the X in asc .
database schema:
Table Visits, columns = [*,Visit_ID, Tourist_Attraction_ID, Tourist_ID, Visit_Date, Visit_Details]
target dvq:
Visualize LINE SELECT Visit_Date , COUNT(Visit_Date) FROM VISITS  ORDER BY Visit_Date ASC BIN Visit_Date BY YEAR
****************************************************************************************************
nl_queries:
What are the number of the dates in which the mean sea level pressure was between 30 . 3 and 31 ?
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31 BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
Draw a bar chart about the distribution of Start_from and the average of Shop_ID bin start_from by weekday , and could you display in desc by the Y ?
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , AVG(Shop_ID) FROM hiring  ORDER BY AVG(Shop_ID) DESC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time , could you sort by the the average of department id in asc ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(DEPARTMENT_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the average of manager_id bin hire_date by time in a bar chart , could you show Y in desc order ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(MANAGER_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the amount of hire_date over the hire_date bin hire_date by weekday by a bar chart , show by the how many hire date in ascending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by weekday , and rank Y-axis from low to high order please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(EMPLOYEE_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
List the number of completion students in each month and bin date of completion by month interval with a bar chart .
database schema:
Table Student_Course_Enrolment, columns = [*,registration_id, student_id, course_id, date_of_enrolment, date_of_completion]
target dvq:
Visualize BAR SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment BIN date_of_completion BY MONTH
****************************************************************************************************
nl_queries:
Stacked bar chart of the number of start from for with each Is_full_time in each start from
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , COUNT(Start_from) FROM hiring GROUP BY Is_full_time BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
Draw a bar chart of open date versus the number of open date , show in ascending by the y axis .
database schema:
Table church, columns = [*,Church_ID, Name, Organized_by, Open_Date, Continuation_of]
target dvq:
Visualize BAR SELECT Open_Date , COUNT(Open_Date) FROM church  ORDER BY COUNT(Open_Date) ASC BIN Open_Date BY WEEKDAY
****************************************************************************************************
nl_queries:
Draw a bar chart about the distribution of Start_from and the sum of Employee_ID , and group by attribute Is_full_time and bin start_from by weekday .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , SUM(Employee_ID) FROM hiring GROUP BY Is_full_time BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the average of salary bin hire_date by time , and visualize them by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Draw a line chart about the change of the average of Employee_ID over Start_from bin start_from by time , rank by the X-axis from high to low .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Employee_ID) FROM hiring  ORDER BY Start_from DESC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
How many wines with a price higher than 100 of each year ? Show a bar chart that converts year into weekday interval , and I want to show by the Y in ascending .
database schema:
Table wine, columns = [*,No, Grape, Winery, Appelation, State, Name, Year, Price, Score, Cases, Drink]
target dvq:
Visualize BAR SELECT Year , COUNT(Year) FROM WINE WHERE Price > 100  ORDER BY COUNT(Year) ASC BIN Year BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the sum of department_id over the hire_date bin hire_date by time by a bar chart , and I want to order by the total number of department id from high to low .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(DEPARTMENT_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the average of department_id bin hire_date by weekday , and list Y from high to low order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(DEPARTMENT_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Show the number of documents in different ending date and bin ending date by year interval with a line chart , and I want to display X from high to low order please .
database schema:
Table Document_Locations, columns = [*,Document_ID, Location_Code, Date_in_Location_From, Date_in_Locaton_To]
target dvq:
Visualize LINE SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations  ORDER BY Date_in_Locaton_To DESC BIN Date_in_Locaton_To BY YEAR
****************************************************************************************************
nl_queries:
Give me the trend about the average of Employee_ID over Start_from bin start_from by time , rank by the X-axis from high to low .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Employee_ID) FROM hiring  ORDER BY Start_from DESC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
How many accounts are opened in each day ? Bin the account open day by weekday and group by other account details in a stacked bar chart , and could you sort by the Y-axis in desc ?
database schema:
Table Accounts, columns = [*,account_id, customer_id, date_account_opened, account_name, other_account_details]
target dvq:
Visualize BAR SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts GROUP BY other_account_details ORDER BY COUNT(date_account_opened) DESC BIN date_account_opened BY WEEKDAY
****************************************************************************************************
nl_queries:
Draw a line chart about the change of the sum of Shop_ID over Start_from bin start_from by time , I want to show in desc by the x-axis .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Shop_ID) FROM hiring  ORDER BY Start_from DESC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
How many parties of the time they took office , binning the took office into WEEKDAY interval
database schema:
Table party, columns = [*,Party_ID, Minister, Took_office, Left_office, Region_ID, Party_name]
target dvq:
Visualize BAR SELECT Took_office , COUNT(Took_office) FROM party BIN Took_office BY WEEKDAY
****************************************************************************************************
nl_queries:
How many parties of the time they took office , binning the left office into Weekday interval , and then split by the minister's name .
database schema:
Table party, columns = [*,Party_ID, Minister, Took_office, Left_office, Region_ID, Party_name]
target dvq:
Visualize BAR SELECT Left_office , COUNT(Left_office) FROM party GROUP BY Minister BIN Left_office BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those dates that have the 5 highest cloud cover rates , please bin the date into weekdays interval and compute their total cloud cover .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , SUM(cloud_cover) FROM weather BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
Give me a bar chart for the average of salary of each hire date , list y axis in descending order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Bar graph to show the number of took office from different took office , I want to sort in desc by the Y please .
database schema:
Table party, columns = [*,Party_ID, Minister, Took_office, Left_office, Region_ID, Party_name]
target dvq:
Visualize BAR SELECT Took_office , COUNT(Took_office) FROM party  ORDER BY COUNT(Took_office) DESC BIN Took_office BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the average of salary bin hire_date by time , and visualize them by a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Draw a bar chart about the distribution of Start_from and the average of Employee_ID , and group by attribute Is_full_time and bin start_from by weekday , and sort by the total number in asc please .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , AVG(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY AVG(Employee_ID) ASC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For those dates that have the 5 highest cloud cover rates , please bin the date into the day of week interval and count their frequency .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
Find Start_from and the average of Shop_ID , and group by attribute Is_full_time and bin start_from by weekday , and visualize them by a bar chart .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , AVG(Shop_ID) FROM hiring GROUP BY Is_full_time BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
Give me the comparison about the sum of Employee_ID over the Start_from bin start_from by weekday by a bar chart .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , SUM(Employee_ID) FROM hiring BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by time , display Y in desc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(EMPLOYEE_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of manager_id over the hire_date bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the average of employee_id bin hire_date by weekday , and order total number in ascending order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(EMPLOYEE_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by weekday , and I want to sort by the Y-axis in asc .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(MANAGER_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the average of salary bin hire_date by weekday in a bar chart , display from low to high by the y axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
What are dates of birth of all the guests whose gender is "Male" , and count them by a bar chart , and list by the y axis in descending .
database schema:
Table Guests, columns = [*,guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth]
target dvq:
Visualize BAR SELECT date_of_birth , COUNT(date_of_birth) FROM Guests WHERE gender_code = "Male"  ORDER BY COUNT(date_of_birth) DESC BIN date_of_birth BY WEEKDAY
****************************************************************************************************
nl_queries:
For the transaction dates if share count is smaller than 10 , bin the dates into the year interval , and count them using a line chart , could you sort X from high to low order ?
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count < 10  ORDER BY date_of_transaction DESC BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the average of manager_id bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
List the number of games in each season with a line chart .
database schema:
Table game, columns = [*,stadium_id, id, Season, Date, Home_team, Away_team, Score, Competition]
target dvq:
Visualize LINE SELECT Season , COUNT(Season) FROM game BIN Season BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by weekday , and show by the y axis in ascending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(MANAGER_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Bar chart of how many date of enrolment from each date of enrolment , and could you rank by the y-axis in desc ?
database schema:
Table Student_Course_Enrolment, columns = [*,registration_id, student_id, course_id, date_of_enrolment, date_of_completion]
target dvq:
Visualize BAR SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment  ORDER BY COUNT(date_of_enrolment) DESC BIN date_of_enrolment BY MONTH
****************************************************************************************************
nl_queries:
Bar chart x axis start from y axis the number of start from , and could you order by the y axis in descending ?
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , COUNT(Start_from) FROM hiring  ORDER BY COUNT(Start_from) DESC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
A line chart for what are the number of the dates of transactions with at least 100 share count or amount bigger than 100 ?
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100 BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
I want a bar chart to show the average cloud cover of the dates that have the 5 highest cloud cover rates each day , rank from high to low by the Y-axis .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , AVG(cloud_cover) FROM weather  ORDER BY AVG(cloud_cover) DESC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
when is the hire date for those employees whose first name does not containing the letter M , and count them by a bar chart , order y axis from high to low order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name NOT LIKE '%M%'  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Bar chart x axis date in location from y axis the number of date in location from
database schema:
Table Document_Locations, columns = [*,Document_ID, Location_Code, Date_in_Location_From, Date_in_Locaton_To]
target dvq:
Visualize BAR SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations BIN Date_in_Location_From BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of salary over the hire_date bin hire_date by weekday , and I want to order in asc by the Y-axis .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Bin all date of transactions into the weekday interval , and sum the share count of each bin . Return the result using a bar chart .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize BAR SELECT date_of_transaction , SUM(share_count) FROM TRANSACTIONS BIN date_of_transaction BY WEEKDAY
****************************************************************************************************
nl_queries:
Find the number of the latest logon date of the students whose family name is "Jaskolski" or "Langosh" , and could you list y axis in ascending order ?
database schema:
Table Course_Authors_and_Tutors, columns = [*,author_id, author_tutor_ATB, login_name, password, personal_name, middle_name, family_name, gender_mf, address_line_1]
Table Students, columns = [*,student_id, date_of_registration, date_of_latest_logon, login_name, password, personal_name, middle_name, family_name]
target dvq:
Visualize BAR SELECT date_of_latest_logon , COUNT(date_of_latest_logon) FROM Students WHERE family_name = "Jaskolski" OR family_name = "Langosh"  ORDER BY COUNT(date_of_latest_logon) ASC BIN date_of_latest_logon BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of hire_date and the average of manager_id bin hire_date by weekday , and I want to order by the Y from high to low .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(MANAGER_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Give me the comparison about the amount of Start_from over the Start_from , and group by attribute Is_full_time and bin start_from by weekday by a bar chart .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , COUNT(Start_from) FROM hiring GROUP BY Is_full_time BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
bin the yearid into the day of the week interval and count them for visualizing a bar chart .
database schema:
Table hall_of_fame, columns = [*,player_id, yearid, votedby, ballots, needed, votes, inducted, category, needed_note]
target dvq:
Visualize BAR SELECT yearid , COUNT(yearid) FROM hall_of_fame BIN yearid BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a bar chart shows the distribution of hire_date and the sum of department_id bin hire_date by weekday , and list by the Y-axis in descending .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(DEPARTMENT_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the sum of employee_id bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
What is the total cloud cover rates of the dates (bin into year interval) that had the top 5 cloud cover rates ? You can draw me a bar chart for this purpose , and could you sort by the total number of cloud cover in asc ?
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , SUM(cloud_cover) FROM weather  ORDER BY SUM(cloud_cover) ASC BIN date BY YEAR
****************************************************************************************************
nl_queries:
Show the number of date account opened from each date account opened
database schema:
Table Accounts, columns = [*,account_id, customer_id, date_account_opened, account_name, other_account_details]
target dvq:
Visualize BAR SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts BIN date_account_opened BY WEEKDAY
****************************************************************************************************
nl_queries:
Show total number of shop id from each start from , and I want to show by the y axis from high to low .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , SUM(Shop_ID) FROM hiring  ORDER BY SUM(Shop_ID) DESC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
Show the number of documents in different ending date and bin ending date by year interval with a line chart .
database schema:
Table Document_Locations, columns = [*,Document_ID, Location_Code, Date_in_Location_From, Date_in_Locaton_To]
target dvq:
Visualize LINE SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations BIN Date_in_Locaton_To BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the sum of manager_id over the hire_date bin hire_date by time by a bar chart , I want to show from low to high by the y axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(MANAGER_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of department_id over the hire_date bin hire_date by weekday by a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For the average of Employee_ID , Start_from , visualize the trend , and order in asc by the X-axis .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Employee_ID) FROM hiring  ORDER BY Start_from ASC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
How many documents in different ending date ? Return a bar chart binning ending date by weekday .
database schema:
Table Document_Locations, columns = [*,Document_ID, Location_Code, Date_in_Location_From, Date_in_Locaton_To]
target dvq:
Visualize BAR SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations BIN Date_in_Locaton_To BY WEEKDAY
****************************************************************************************************
nl_queries:
List the number of completion students in each day and bin date of completion by weekday with a bar chart , rank in ascending by the y axis .
database schema:
Table Student_Course_Enrolment, columns = [*,registration_id, student_id, course_id, date_of_enrolment, date_of_completion]
target dvq:
Visualize BAR SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment  ORDER BY COUNT(date_of_completion) ASC BIN date_of_completion BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose first name does not contain the letter M , sum their salary by binning the hire date into the day of week interval for visualizing a bar chart , show by the total number from low to high .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name NOT LIKE '%M%'  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
How many documents in different starting date ? Return a bar chart binning starting date by weekday interval , I want to sort y-axis in descending order .
database schema:
Table Document_Locations, columns = [*,Document_ID, Location_Code, Date_in_Location_From, Date_in_Locaton_To]
target dvq:
Visualize BAR SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations  ORDER BY COUNT(Date_in_Location_From) DESC BIN Date_in_Location_From BY WEEKDAY
****************************************************************************************************
nl_queries:
How many parties of the time they took office , binning the took office into WEEKDAY interval , I want to show by the Y-axis in descending .
database schema:
Table party, columns = [*,Party_ID, Minister, Took_office, Left_office, Region_ID, Party_name]
target dvq:
Visualize BAR SELECT Took_office , COUNT(Took_office) FROM party  ORDER BY COUNT(Took_office) DESC BIN Took_office BY WEEKDAY
****************************************************************************************************
nl_queries:
Give me the trend about the date_from attributes of all researchers , and bin the date into Year interval , order from low to high by the date_from please .
database schema:
Table Project_Staff, columns = [*,staff_id, project_id, role_code, date_from, date_to, other_details]
target dvq:
Visualize LINE SELECT date_from , COUNT(date_from) FROM Project_Staff ORDER BY date_from ASC BIN date_from BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a bar chart shows the distribution of hire_date and the average of department_id bin hire_date by time , and could you rank from high to low by the total number ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(DEPARTMENT_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Bar chart x axis start from y axis the average of shop id
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , AVG(Shop_ID) FROM hiring BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
What is the frequency of the dates (bin into weekday interval) that had the top 5 cloud cover rates ? You can draw me a bar chart for this purpose .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
Bar graph to show sum share count from different date of transaction , and rank total number in descending order please .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize BAR SELECT date_of_transaction , SUM(share_count) FROM TRANSACTIONS  ORDER BY SUM(share_count) DESC BIN date_of_transaction BY WEEKDAY
****************************************************************************************************
nl_queries:
Show me about the distribution of Start_from and the sum of Employee_ID , and group by attribute Is_full_time and bin start_from by weekday in a bar chart , sort in descending by the Y .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , SUM(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY SUM(Employee_ID) DESC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
Plot how many date from by grouped by date from as a bar graph , list Y in asc order .
database schema:
Table Project_Staff, columns = [*,staff_id, project_id, role_code, date_from, date_to, other_details]
target dvq:
Visualize BAR SELECT date_from , COUNT(date_from) FROM Project_Staff ORDER BY COUNT(date_from) ASC BIN date_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find hire_date and the average of department_id bin hire_date by time , and visualize them by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
What are the number of the distinct visit dates ? , and could you show Visit_Date from low to high order ?
database schema:
Table Visits, columns = [*,Visit_ID, Tourist_Attraction_ID, Tourist_ID, Visit_Date, Visit_Details]
target dvq:
Visualize LINE SELECT Visit_Date , COUNT(Visit_Date) FROM VISITS  ORDER BY Visit_Date ASC BIN Visit_Date BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by weekday .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
How many parties of the time they took office , binning the took office into Weekday interval , and then split by the minister's name , and show y axis from high to low order .
database schema:
Table party, columns = [*,Party_ID, Minister, Took_office, Left_office, Region_ID, Party_name]
target dvq:
Visualize BAR SELECT Took_office , COUNT(Took_office) FROM party GROUP BY Minister ORDER BY COUNT(Took_office) DESC BIN Took_office BY WEEKDAY
****************************************************************************************************
nl_queries:
What are the number of the dates with a maximum temperature higher than 85 ? , and rank from high to low by the the number of date .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) DESC BIN date BY YEAR
****************************************************************************************************
nl_queries:
Bar chart x axis start from y axis the average of shop id , and could you display in desc by the Y ?
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , AVG(Shop_ID) FROM hiring  ORDER BY AVG(Shop_ID) DESC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
Give me the comparison about the sum of Employee_ID over the Start_from , and group by attribute Is_full_time and bin start_from by weekday , I want to sort total number in descending order .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , SUM(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY SUM(Employee_ID) DESC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
Show the number of apartment bookings in each weekday and bin booking start date by weekday with a bar chart .
database schema:
Table Apartment_Bookings, columns = [*,apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date]
target dvq:
Visualize BAR SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings BIN booking_start_date BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the average of department_id bin hire_date by weekday , and visualize them by a bar chart , and rank from high to low by the y axis .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(DEPARTMENT_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Show me how many long by long in a histogram , and list by the Y from high to low please .
database schema:
Table station, columns = [*,id, name, lat, long, dock_count, city, installation_date]
target dvq:
Visualize BAR SELECT long , COUNT(long) FROM station  ORDER BY COUNT(long) DESC BIN long BY ZERO
****************************************************************************************************
nl_queries:
I want to see trend of the number of yearid by yearid
database schema:
Table all_star, columns = [*,player_id, year, game_num, game_id, team_id, league_id, gp, starting_pos]
Table appearances, columns = [*,year, team_id, league_id, player_id, g_all, gs, g_batting, g_defense, g_p, g_c, g_1b, g_2b, g_3b, g_ss, g_lf, g_cf, g_rf, g_of, g_dh, g_ph, g_pr]
Table manager_award, columns = [*,player_id, award_id, year, league_id, tie, notes]
Table player_award, columns = [*,player_id, award_id, year, league_id, tie, notes]
Table manager_award_vote, columns = [*,award_id, year, league_id, player_id, points_won, points_max, votes_first]
Table player_award_vote, columns = [*,award_id, year, league_id, player_id, points_won, points_max, votes_first]
Table batting, columns = [*,player_id, year, stint, team_id, league_id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g_idp]
Table batting_postseason, columns = [*,year, round, player_id, team_id, league_id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g_idp]
Table player_college, columns = [*,player_id, college_id, year]
Table fielding, columns = [*,player_id, year, stint, team_id, league_id, pos, g, gs, inn_outs, po, a, e, dp, pb, wp, sb, cs, zr]
Table fielding_outfield, columns = [*,player_id, year, stint, glf, gcf, grf]
Table fielding_postseason, columns = [*,player_id, year, team_id, league_id, round, pos, g, gs, inn_outs, po, a, e, dp, tp, pb, sb, cs]
Table hall_of_fame, columns = [*,player_id, yearid, votedby, ballots, needed, votes, inducted, category, needed_note]
Table home_game, columns = [*,year, league_id, team_id, park_id, span_first, span_last, games, openings, attendance]
Table manager, columns = [*,player_id, year, team_id, league_id, inseason, g, w, l, rank, plyr_mgr]
Table manager_half, columns = [*,player_id, year, team_id, league_id, inseason, half, g, w, l, rank]
Table pitching, columns = [*,player_id, year, stint, team_id, league_id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g_idp]
Table pitching_postseason, columns = [*,player_id, year, round, team_id, league_id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g_idp]
Table salary, columns = [*,year, team_id, league_id, player_id, salary]
Table postseason, columns = [*,year, round, team_id_winner, league_id_winner, team_id_loser, league_id_loser, wins, losses, ties]
Table team, columns = [*,year, league_id, team_id, franchise_id, div_id, rank, g, ghome, w, l, div_win, wc_win, lg_win, ws_win, r, ab, h, double, triple, hr, bb, so, sb, cs, hbp, sf, ra, er, era, cg, sho, sv, ipouts, ha, hra, bba, soa, e, dp, fp, name, park, attendance, bpf, ppf, team_id_br, team_id_lahman45, team_id_retro]
Table team_half, columns = [*,year, league_id, team_id, half, div_id, div_win, rank, g, w, l]
target dvq:
Visualize LINE SELECT yearid , COUNT(yearid) FROM hall_of_fame BIN yearid BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of hire_date and the sum of salary bin hire_date by weekday , display total number in asc order please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of hire_date and the sum of salary bin hire_date by weekday , sort in ascending by the y axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those dates that have the 5 highest cloud cover rates , please bin the date into Year interval and compute their total cloud cover , show by the Y-axis in asc please .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , SUM(cloud_cover) FROM weather  ORDER BY SUM(cloud_cover) ASC BIN date BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by time , rank by the Y from low to high .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(DEPARTMENT_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Stacked bar chart of how many date in location from for with each Location_Code in each date in location from
database schema:
Table Ref_Locations, columns = [*,Location_Code, Location_Name, Location_Description]
Table Document_Locations, columns = [*,Document_ID, Location_Code, Date_in_Location_From, Date_in_Locaton_To]
target dvq:
Visualize BAR SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations GROUP BY Location_Code BIN Date_in_Location_From BY WEEKDAY
****************************************************************************************************
nl_queries:
Bar chart x axis date of enrolment y axis the number of date of enrolment
database schema:
Table Student_Course_Enrolment, columns = [*,registration_id, student_id, course_id, date_of_enrolment, date_of_completion]
target dvq:
Visualize BAR SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment BIN date_of_enrolment BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time , and rank mean department id in descending order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(DEPARTMENT_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Give me the comparison about the sum of Shop_ID over the Start_from bin start_from by weekday , and order y-axis from high to low order .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , SUM(Shop_ID) FROM hiring  ORDER BY SUM(Shop_ID) DESC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For the days with the 3 largest maximum gust speeds , calculate the mean of the average temperature of each month (bin date into month level) .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , AVG(mean_temperature_f) FROM weather  ORDER BY max_gust_speed_mph DESC LIMIT 3 BIN date BY MONTH
****************************************************************************************************
nl_queries:
Visualize a bar chart about the distribution of Start_from and the sum of Shop_ID bin start_from by weekday , and list by the Y in ascending .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , SUM(Shop_ID) FROM hiring  ORDER BY SUM(Shop_ID) ASC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
A line chart shows the change of the average of Employee_ID over Start_from , and group by attribute Is_full_time and bin start_from by time
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Employee_ID) FROM hiring GROUP BY Is_full_time BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the sum of employee_id over the hire_date bin hire_date by time .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Visualize a line chart about the change of the amount of Start_from over Start_from bin start_from by time .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , COUNT(Start_from) FROM hiring BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of hire_date and the average of department_id bin hire_date by weekday , list by the Y in ascending please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(DEPARTMENT_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
A bar chart for what are the number of the dates in which the mean sea level pressure was between 303 and 31 ? , sort in asc by the how many date please .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) ASC BIN date BY YEAR
****************************************************************************************************
nl_queries:
Visualize a bar chart that bin the open date into a day of the week interval and count them , and list in ascending by the total number please .
database schema:
Table church, columns = [*,Church_ID, Name, Organized_by, Open_Date, Continuation_of]
target dvq:
Visualize BAR SELECT Open_Date , COUNT(Open_Date) FROM church  ORDER BY COUNT(Open_Date) ASC BIN Open_Date BY WEEKDAY
****************************************************************************************************
nl_queries:
Find the number of the dates of the tests taken with result "Pass" .
database schema:
Table Student_Tests_Taken, columns = [*,registration_id, date_test_taken, test_result]
target dvq:
Visualize BAR SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = "Pass" BIN date_test_taken BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the average of employee_id bin hire_date by weekday in a bar chart , order total number in ascending order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(EMPLOYEE_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
What is the date of birth of every customer whose status code is 'Good Customer' , and count them by a bar chart
database schema:
Table Staff, columns = [*,staff_id, staff_address_id, nickname, first_name, middle_name, last_name, date_of_birth, date_joined_staff, date_left_staff]
Table Customers, columns = [*,customer_id, customer_address_id, customer_status_code, date_became_customer, date_of_birth, first_name, last_name, amount_outstanding, email_address, phone_number, cell_mobile_phone_number]
target dvq:
Visualize BAR SELECT date_of_birth , COUNT(date_of_birth) FROM Customers WHERE customer_status_code = 'Good Customer' BIN date_of_birth BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a bar chart shows the distribution of hire_date and the average of department_id bin hire_date by weekday .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Give me the comparison about the average of Shop_ID over the Start_from , and group by attribute Is_full_time and bin start_from by weekday by a bar chart , and display y axis from low to high order .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , AVG(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY AVG(Shop_ID) ASC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the sum of employee_id over the hire_date bin hire_date by time , could you rank by the Y in asc ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(EMPLOYEE_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Bar chart of how many date of completion from each date of completion
database schema:
Table Student_Course_Enrolment, columns = [*,registration_id, student_id, course_id, date_of_enrolment, date_of_completion]
target dvq:
Visualize BAR SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment BIN date_of_completion BY MONTH
****************************************************************************************************
nl_queries:
When do all the researcher role staff stop working ? Bin the time into weekday interval and count them with a bar chart , order by the the number of date to in asc .
database schema:
Table Project_Staff, columns = [*,staff_id, project_id, role_code, date_from, date_to, other_details]
target dvq:
Visualize BAR SELECT date_to , COUNT(date_to) FROM Project_Staff ORDER BY COUNT(date_to) ASC BIN date_to BY WEEKDAY
****************************************************************************************************
nl_queries:
Give me a line chart , that bins all date of transactions into the weekday interval , and the count for each bin .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
A bar chart for what are the number of the dates that have an average sea level pressure between 303 and 31 ? , could you sort in desc by the y axis ?
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) DESC BIN date BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the sum of salary bin hire_date by time , and visualize them by a bar chart , and order by the y-axis from low to high please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of hire_date and the sum of salary bin hire_date by weekday .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a bar chart shows the distribution of hire_date and the sum of manager_id bin hire_date by weekday , order in ascending by the y axis .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(MANAGER_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the sum of employee_id bin hire_date by weekday , and visualize them by a bar chart , display y axis in desc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(EMPLOYEE_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
What is the frequency of the dates (bin into year interval) that had the top 5 cloud cover rates ? You can draw me a bar chart for this purpose , and list by the y-axis from low to high .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather  ORDER BY COUNT(date) ASC BIN date BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a bar chart shows the distribution of hire_date and the amount of hire_date bin hire_date by weekday .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Show the number of documents for each receipt date and bin by year with a line chart , show in asc by the receipt_date .
database schema:
Table Documents, columns = [*,document_id, document_status_code, document_type_code, shipping_agent_code, receipt_date, receipt_number, other_details]
target dvq:
Visualize LINE SELECT receipt_date , COUNT(receipt_date) FROM Documents  ORDER BY receipt_date ASC BIN receipt_date BY YEAR
****************************************************************************************************
nl_queries:
Draw a line chart about the change of the sum of Employee_ID over Start_from bin start_from by time , rank x-axis in descending order .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Employee_ID) FROM hiring  ORDER BY Start_from DESC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by weekday , list the average of employee id in descending order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(EMPLOYEE_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Plot total number of salary by grouped by hire date as a bar graph
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Show all dates of transactions whose type code is "SALE" , and count them by a bar chart , and I want to sort by the y-axis in asc .
database schema:
Table Ref_Transaction_Types, columns = [*,transaction_type_code, transaction_type_description]
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE transaction_type_code = "SALE"  ORDER BY COUNT(date_of_transaction) ASC BIN date_of_transaction BY WEEKDAY
****************************************************************************************************
nl_queries:
List the number of games in each season with a line chart , order in descending by the x axis .
database schema:
Table game, columns = [*,stadium_id, id, Season, Date, Home_team, Away_team, Score, Competition]
target dvq:
Visualize LINE SELECT Season , COUNT(Season) FROM game  ORDER BY Season DESC BIN Season BY YEAR
****************************************************************************************************
nl_queries:
Please show the trend of the number of the church by open date (bin into the year) using a line chart , and I want to rank x axis from low to high order .
database schema:
Table church, columns = [*,Church_ID, Name, Organized_by, Open_Date, Continuation_of]
Table wedding, columns = [*,Church_ID, Male_ID, Female_ID, Year]
target dvq:
Visualize LINE SELECT Open_Date , COUNT(Open_Date) FROM church  ORDER BY Open_Date ASC BIN Open_Date BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find hire_date and the amount of hire_date bin hire_date by weekday , and visualize them by a bar chart , show by the how many hire date in ascending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Show me about the change of the sum of Shop_ID over Start_from , and group by attribute Is_full_time and bin start_from by time in a line chart , display from high to low by the x axis .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from DESC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
A line chart shows the change of the sum of Shop_ID over Start_from , and group by attribute Is_full_time and bin start_from by time , and sort x axis from high to low order .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from DESC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For those days with the 3 largest maximum gust speeds , can you plot a bar chart to compare the average of mean humidity of each day of the weeks ?
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , AVG(mean_humidity) FROM weather  ORDER BY max_gust_speed_mph DESC LIMIT 3 BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
I want to see trend of the number of yearid by yearid , and display x-axis in ascending order .
database schema:
Table all_star, columns = [*,player_id, year, game_num, game_id, team_id, league_id, gp, starting_pos]
Table appearances, columns = [*,year, team_id, league_id, player_id, g_all, gs, g_batting, g_defense, g_p, g_c, g_1b, g_2b, g_3b, g_ss, g_lf, g_cf, g_rf, g_of, g_dh, g_ph, g_pr]
Table manager_award, columns = [*,player_id, award_id, year, league_id, tie, notes]
Table player_award, columns = [*,player_id, award_id, year, league_id, tie, notes]
Table manager_award_vote, columns = [*,award_id, year, league_id, player_id, points_won, points_max, votes_first]
Table player_award_vote, columns = [*,award_id, year, league_id, player_id, points_won, points_max, votes_first]
Table batting, columns = [*,player_id, year, stint, team_id, league_id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g_idp]
Table batting_postseason, columns = [*,year, round, player_id, team_id, league_id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g_idp]
Table player_college, columns = [*,player_id, college_id, year]
Table fielding, columns = [*,player_id, year, stint, team_id, league_id, pos, g, gs, inn_outs, po, a, e, dp, pb, wp, sb, cs, zr]
Table fielding_outfield, columns = [*,player_id, year, stint, glf, gcf, grf]
Table fielding_postseason, columns = [*,player_id, year, team_id, league_id, round, pos, g, gs, inn_outs, po, a, e, dp, tp, pb, sb, cs]
Table hall_of_fame, columns = [*,player_id, yearid, votedby, ballots, needed, votes, inducted, category, needed_note]
Table home_game, columns = [*,year, league_id, team_id, park_id, span_first, span_last, games, openings, attendance]
Table manager, columns = [*,player_id, year, team_id, league_id, inseason, g, w, l, rank, plyr_mgr]
Table manager_half, columns = [*,player_id, year, team_id, league_id, inseason, half, g, w, l, rank]
Table pitching, columns = [*,player_id, year, stint, team_id, league_id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g_idp]
Table pitching_postseason, columns = [*,player_id, year, round, team_id, league_id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g_idp]
Table salary, columns = [*,year, team_id, league_id, player_id, salary]
Table postseason, columns = [*,year, round, team_id_winner, league_id_winner, team_id_loser, league_id_loser, wins, losses, ties]
Table team, columns = [*,year, league_id, team_id, franchise_id, div_id, rank, g, ghome, w, l, div_win, wc_win, lg_win, ws_win, r, ab, h, double, triple, hr, bb, so, sb, cs, hbp, sf, ra, er, era, cg, sho, sv, ipouts, ha, hra, bba, soa, e, dp, fp, name, park, attendance, bpf, ppf, team_id_br, team_id_lahman45, team_id_retro]
Table team_half, columns = [*,year, league_id, team_id, half, div_id, div_win, rank, g, w, l]
target dvq:
Visualize LINE SELECT yearid , COUNT(yearid) FROM hall_of_fame  ORDER BY yearid ASC BIN yearid BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the average of department_id over the hire_date bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a bar chart shows the distribution of hire_date and the average of department_id bin hire_date by weekday , list by the Y from low to high .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(DEPARTMENT_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
What are all the calendar dates ? Give me a line chart binning calendar dates by year .
database schema:
Table Ref_Calendar, columns = [*,Calendar_Date, Day_Number]
target dvq:
Visualize LINE SELECT Calendar_Date , COUNT(Calendar_Date) FROM Ref_calendar BIN Calendar_Date BY YEAR
****************************************************************************************************
nl_queries:
How many accounts are opened in each year ? Show a line chart .
database schema:
Table Accounts, columns = [*,account_id, customer_id, date_account_opened, account_name, other_account_details]
target dvq:
Visualize LINE SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts BIN date_account_opened BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the sum of department_id bin hire_date by weekday , and visualize them by a bar chart , could you order from high to low by the y axis please ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(DEPARTMENT_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by time , and order by the mean manager id in desc .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(MANAGER_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Visualize a bar chart about the distribution of Start_from and the amount of Start_from bin start_from by weekday , show how many start from in asc order .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , COUNT(Start_from) FROM hiring  ORDER BY COUNT(Start_from) ASC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
A bar chart shows the number of year of the maximum price and score of wines , and bin the year into the weekday interval , and list total number from low to high order .
database schema:
Table wine, columns = [*,No, Grape, Winery, Appelation, State, Name, Year, Price, Score, Cases, Drink]
target dvq:
Visualize BAR SELECT Year , COUNT(Year) FROM WINE  ORDER BY COUNT(Year) ASC BIN Year BY WEEKDAY
****************************************************************************************************
nl_queries:
When are the birthdays of customer who are classified as 'Good Customer' status , and count them by a line chart , and show from low to high by the X-axis please .
database schema:
Table Staff, columns = [*,staff_id, staff_address_id, nickname, first_name, middle_name, last_name, date_of_birth, date_joined_staff, date_left_staff]
Table Customers, columns = [*,customer_id, customer_address_id, customer_status_code, date_became_customer, date_of_birth, first_name, last_name, amount_outstanding, email_address, phone_number, cell_mobile_phone_number]
target dvq:
Visualize LINE SELECT date_of_birth , COUNT(date_of_birth) FROM Customers WHERE customer_status_code = 'Good Customer'  ORDER BY date_of_birth ASC BIN date_of_birth BY YEAR
****************************************************************************************************
nl_queries:
How many dogs departed in each day ? Visualize with a bar chart that bins departed date by weekday .
database schema:
Table Dogs, columns = [*,dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed]
target dvq:
Visualize BAR SELECT date_departed , COUNT(date_departed) FROM Dogs BIN date_departed BY WEEKDAY
****************************************************************************************************
nl_queries:
Return me a line chart to show the frequency of the year attribute by binning into a weekday interval .
database schema:
Table all_star, columns = [*,player_id, year, game_num, game_id, team_id, league_id, gp, starting_pos]
Table appearances, columns = [*,year, team_id, league_id, player_id, g_all, gs, g_batting, g_defense, g_p, g_c, g_1b, g_2b, g_3b, g_ss, g_lf, g_cf, g_rf, g_of, g_dh, g_ph, g_pr]
Table manager_award, columns = [*,player_id, award_id, year, league_id, tie, notes]
Table player_award, columns = [*,player_id, award_id, year, league_id, tie, notes]
Table manager_award_vote, columns = [*,award_id, year, league_id, player_id, points_won, points_max, votes_first]
Table player_award_vote, columns = [*,award_id, year, league_id, player_id, points_won, points_max, votes_first]
Table batting, columns = [*,player_id, year, stint, team_id, league_id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g_idp]
Table batting_postseason, columns = [*,year, round, player_id, team_id, league_id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g_idp]
Table player_college, columns = [*,player_id, college_id, year]
Table fielding, columns = [*,player_id, year, stint, team_id, league_id, pos, g, gs, inn_outs, po, a, e, dp, pb, wp, sb, cs, zr]
Table fielding_outfield, columns = [*,player_id, year, stint, glf, gcf, grf]
Table fielding_postseason, columns = [*,player_id, year, team_id, league_id, round, pos, g, gs, inn_outs, po, a, e, dp, tp, pb, sb, cs]
Table home_game, columns = [*,year, league_id, team_id, park_id, span_first, span_last, games, openings, attendance]
Table manager, columns = [*,player_id, year, team_id, league_id, inseason, g, w, l, rank, plyr_mgr]
Table manager_half, columns = [*,player_id, year, team_id, league_id, inseason, half, g, w, l, rank]
Table pitching, columns = [*,player_id, year, stint, team_id, league_id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g_idp]
Table pitching_postseason, columns = [*,player_id, year, round, team_id, league_id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g_idp]
Table salary, columns = [*,year, team_id, league_id, player_id, salary]
Table postseason, columns = [*,year, round, team_id_winner, league_id_winner, team_id_loser, league_id_loser, wins, losses, ties]
Table team, columns = [*,year, league_id, team_id, franchise_id, div_id, rank, g, ghome, w, l, div_win, wc_win, lg_win, ws_win, r, ab, h, double, triple, hr, bb, so, sb, cs, hbp, sf, ra, er, era, cg, sho, sv, ipouts, ha, hra, bba, soa, e, dp, fp, name, park, attendance, bpf, ppf, team_id_br, team_id_lahman45, team_id_retro]
Table team_half, columns = [*,year, league_id, team_id, half, div_id, div_win, rank, g, w, l]
target dvq:
Visualize LINE SELECT year , COUNT(year) FROM home_game BIN year BY YEAR
****************************************************************************************************
nl_queries:
Please give me a bar chart that bins the installation date of stations into Year interval as the X-axis , and count for showing how many stations are installed each year , list y axis in descending order .
database schema:
Table station, columns = [*,id, name, lat, long, dock_count, city, installation_date]
target dvq:
Visualize BAR SELECT installation_date , COUNT(installation_date) FROM station  ORDER BY COUNT(installation_date) DESC BIN installation_date BY YEAR
****************************************************************************************************
nl_queries:
What are the dates of transactions with at least 100 share count or amount bigger than 100 , and count them by a line chart
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100 BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the amount of hire_date over the hire_date bin hire_date by weekday , I want to list in asc by the total number .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Plot how many booking start date by grouped by booking start date as a bar graph , order Y in ascending order .
database schema:
Table Apartment_Bookings, columns = [*,apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date]
target dvq:
Visualize BAR SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings  ORDER BY COUNT(booking_start_date) ASC BIN booking_start_date BY WEEKDAY
****************************************************************************************************
nl_queries:
How many parties of the time they left office , binning the left office time into Year interval , and then split by the minister's name , sort in desc by the y-axis .
database schema:
Table party, columns = [*,Party_ID, Minister, Took_office, Left_office, Region_ID, Party_name]
target dvq:
Visualize BAR SELECT Left_office , COUNT(Left_office) FROM party GROUP BY Minister ORDER BY COUNT(Left_office) DESC BIN Left_office BY YEAR
****************************************************************************************************
nl_queries:
Return a bar chart about the distribution of Start_from and the average of Shop_ID , and group by attribute Is_full_time and bin start_from by weekday .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , AVG(Shop_ID) FROM hiring GROUP BY Is_full_time BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
Show me about the change of the average of Shop_ID over Start_from , and group by attribute Is_full_time and bin start_from by time in a line chart .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Shop_ID) FROM hiring GROUP BY Is_full_time BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
What is the average cloud cover rates of the dates (bin into year interval) that had the top 5 cloud cover rates ? You can draw me a bar chart for this purpose , and show in asc by the Y .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , AVG(cloud_cover) FROM weather  ORDER BY AVG(cloud_cover) ASC BIN date BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the amount of hire_date bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Bin the hire date into the day of week interval , and then calculate the average salary of employees in each day for a bar chart , note that just select those employees without the letter M in their first name .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name NOT LIKE '%M%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
I want to see trend of how many date account opened by date account opened
database schema:
Table Accounts, columns = [*,account_id, customer_id, date_account_opened, account_name, other_account_details]
target dvq:
Visualize LINE SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts BIN date_account_opened BY YEAR
****************************************************************************************************
nl_queries:
Give me a bar chart that the X-axis is the date_moved_in and the Y-axis is Count them , please bin X-axis into Year interval , and show by the Y-axis from low to high .
database schema:
Table Residents, columns = [*,resident_id, property_id, date_moved_in, date_moved_out, other_details]
Table Residents_Services, columns = [*,resident_id, service_id, date_moved_in, property_id, date_requested, date_provided, other_details]
Table Customer_Events, columns = [*,Customer_Event_ID, customer_id, date_moved_in, property_id, resident_id, thing_id]
Table Customer_Event_Notes, columns = [*,Customer_Event_Note_ID, Customer_Event_ID, service_type_code, resident_id, property_id, date_moved_in]
target dvq:
Visualize BAR SELECT date_moved_in , COUNT(date_moved_in) FROM customer_events  ORDER BY COUNT(date_moved_in) ASC BIN date_moved_in BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by time , could you show in ascending by the y axis ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of hire_date and the sum of salary bin hire_date by weekday in a bar chart , I want to display in desc by the total number .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Show the number of apartment bookings in each weekday and bin booking end date by weekday with a bar chart .
database schema:
Table Apartment_Bookings, columns = [*,apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date]
target dvq:
Visualize BAR SELECT booking_end_date , COUNT(booking_end_date) FROM Apartment_Bookings BIN booking_end_date BY WEEKDAY
****************************************************************************************************
nl_queries:
What are the number of the dates of transactions with at least 100 share count or amount bigger than 100 ?
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100 BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
A bar chart for what are the number of the dates with a maximum temperature higher than 85 ?
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85 BIN date BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by weekday , and I want to sort sum employee id in asc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(EMPLOYEE_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by weekday .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Return the date of birth for all the guests with gender code "Male" , and count them by a bar chart , I want to order the number of date of birth from high to low order .
database schema:
Table Guests, columns = [*,guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth]
target dvq:
Visualize BAR SELECT date_of_birth , COUNT(date_of_birth) FROM Guests WHERE gender_code = "Male"  ORDER BY COUNT(date_of_birth) DESC BIN date_of_birth BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of employee_id over the hire_date bin hire_date by time , display in desc by the the average of employee id .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(EMPLOYEE_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
What are the payment date of the payment with amount paid higher than 300 or with payment type is 'Check , and count them by a bar chart , and I want to rank y-axis in ascending order .
database schema:
Table Payments, columns = [*,payment_id, booking_id, customer_id, payment_type_code, amount_paid_in_full_yn, payment_date, amount_due, amount_paid]
target dvq:
Visualize BAR SELECT payment_date , COUNT(payment_date) FROM payments WHERE amount_paid > 300 OR payment_type_code = 'Check'  ORDER BY COUNT(payment_date) ASC BIN payment_date BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of department_id over the hire_date bin hire_date by weekday .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Show the number of accounts opened in each year for all accounts in a line chart , and show by the x-axis from high to low .
database schema:
Table Accounts, columns = [*,account_id, customer_id, date_account_opened, account_name, other_account_details]
target dvq:
Visualize LINE SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts  ORDER BY date_account_opened DESC BIN date_account_opened BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of hire_date and the average of department_id bin hire_date by weekday , I want to show in desc by the y-axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(DEPARTMENT_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Find the number of the dates of the tests taken with result "Pass" , sort from low to high by the y axis .
database schema:
Table Student_Tests_Taken, columns = [*,registration_id, date_test_taken, test_result]
target dvq:
Visualize BAR SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = "Pass"  ORDER BY COUNT(date_test_taken) ASC BIN date_test_taken BY WEEKDAY
****************************************************************************************************
nl_queries:
Give me the trend about the date_from attributes of all researchers , and bin the date into Year interval .
database schema:
Table Project_Staff, columns = [*,staff_id, project_id, role_code, date_from, date_to, other_details]
target dvq:
Visualize LINE SELECT date_from , COUNT(date_from) FROM Project_Staff BIN date_from BY YEAR
****************************************************************************************************
nl_queries:
Give me the comparison about the average of Shop_ID over the Start_from bin start_from by weekday by a bar chart , could you order by the y-axis from low to high ?
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , AVG(Shop_ID) FROM hiring  ORDER BY AVG(Shop_ID) ASC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
Bar chart of how many date of enrolment from each date of enrolment
database schema:
Table Student_Course_Enrolment, columns = [*,registration_id, student_id, course_id, date_of_enrolment, date_of_completion]
target dvq:
Visualize BAR SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment BIN date_of_enrolment BY MONTH
****************************************************************************************************
nl_queries:
Give me the comparison about the sum of Shop_ID over the Start_from , and group by attribute Is_full_time and bin start_from by weekday by a bar chart , and display by the y-axis in ascending please .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , SUM(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY SUM(Shop_ID) ASC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose first name does not contain the letter M , display their average salary by binning the hire date into the day of week interval for visualizing a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name NOT LIKE '%M%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the sum of employee_id over the hire_date bin hire_date by weekday , and sort Y-axis in desc order please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(EMPLOYEE_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Give me the comparison about the sum of Employee_ID over the Start_from bin start_from by weekday , and sort by the y-axis in ascending .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , SUM(Employee_ID) FROM hiring  ORDER BY SUM(Employee_ID) ASC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
Group and count the move in date in a bar chart , and bin the X-axis into week day interval , and I want to order from low to high by the how many date moved in .
database schema:
Table Residents, columns = [*,resident_id, property_id, date_moved_in, date_moved_out, other_details]
Table Residents_Services, columns = [*,resident_id, service_id, date_moved_in, property_id, date_requested, date_provided, other_details]
Table Customer_Events, columns = [*,Customer_Event_ID, customer_id, date_moved_in, property_id, resident_id, thing_id]
Table Customer_Event_Notes, columns = [*,Customer_Event_Note_ID, Customer_Event_ID, service_type_code, resident_id, property_id, date_moved_in]
target dvq:
Visualize BAR SELECT date_moved_in , COUNT(date_moved_in) FROM customer_events  ORDER BY COUNT(date_moved_in) ASC BIN date_moved_in BY WEEKDAY
****************************************************************************************************
nl_queries:
The trend about the the number of start from of different Is_full_time over the start from , and display x-axis from high to low order .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , COUNT(Start_from) FROM hiring GROUP BY Is_full_time ORDER BY Start_from DESC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Give me a bar chart for how many date of transaction of each date of transaction
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS BIN date_of_transaction BY WEEKDAY
****************************************************************************************************
nl_queries:
Bar chart x axis year y axis the number of year , and list Y-axis from low to high order .
database schema:
Table all_star, columns = [*,player_id, year, game_num, game_id, team_id, league_id, gp, starting_pos]
Table appearances, columns = [*,year, team_id, league_id, player_id, g_all, gs, g_batting, g_defense, g_p, g_c, g_1b, g_2b, g_3b, g_ss, g_lf, g_cf, g_rf, g_of, g_dh, g_ph, g_pr]
Table manager_award, columns = [*,player_id, award_id, year, league_id, tie, notes]
Table player_award, columns = [*,player_id, award_id, year, league_id, tie, notes]
Table manager_award_vote, columns = [*,award_id, year, league_id, player_id, points_won, points_max, votes_first]
Table player_award_vote, columns = [*,award_id, year, league_id, player_id, points_won, points_max, votes_first]
Table batting, columns = [*,player_id, year, stint, team_id, league_id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g_idp]
Table batting_postseason, columns = [*,year, round, player_id, team_id, league_id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g_idp]
Table player_college, columns = [*,player_id, college_id, year]
Table fielding, columns = [*,player_id, year, stint, team_id, league_id, pos, g, gs, inn_outs, po, a, e, dp, pb, wp, sb, cs, zr]
Table fielding_outfield, columns = [*,player_id, year, stint, glf, gcf, grf]
Table fielding_postseason, columns = [*,player_id, year, team_id, league_id, round, pos, g, gs, inn_outs, po, a, e, dp, tp, pb, sb, cs]
Table home_game, columns = [*,year, league_id, team_id, park_id, span_first, span_last, games, openings, attendance]
Table manager, columns = [*,player_id, year, team_id, league_id, inseason, g, w, l, rank, plyr_mgr]
Table manager_half, columns = [*,player_id, year, team_id, league_id, inseason, half, g, w, l, rank]
Table pitching, columns = [*,player_id, year, stint, team_id, league_id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g_idp]
Table pitching_postseason, columns = [*,player_id, year, round, team_id, league_id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g_idp]
Table salary, columns = [*,year, team_id, league_id, player_id, salary]
Table postseason, columns = [*,year, round, team_id_winner, league_id_winner, team_id_loser, league_id_loser, wins, losses, ties]
Table team, columns = [*,year, league_id, team_id, franchise_id, div_id, rank, g, ghome, w, l, div_win, wc_win, lg_win, ws_win, r, ab, h, double, triple, hr, bb, so, sb, cs, hbp, sf, ra, er, era, cg, sho, sv, ipouts, ha, hra, bba, soa, e, dp, fp, name, park, attendance, bpf, ppf, team_id_br, team_id_lahman45, team_id_retro]
Table team_half, columns = [*,year, league_id, team_id, half, div_id, div_win, rank, g, w, l]
target dvq:
Visualize BAR SELECT year , COUNT(year) FROM home_game  ORDER BY COUNT(year) ASC BIN year BY WEEKDAY
****************************************************************************************************
nl_queries:
A line chart shows the change of the sum of Employee_ID over Start_from , and group by attribute Is_full_time and bin start_from by time , order in desc by the X-axis .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from DESC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Show all dates of transactions whose type code is "SALE" , and count them by a line chart , and display by the x-axis from high to low .
database schema:
Table Ref_Transaction_Types, columns = [*,transaction_type_code, transaction_type_description]
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE transaction_type_code = "SALE"  ORDER BY date_of_transaction DESC BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of hire_date and the sum of salary bin hire_date by time , and display y axis from low to high order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Show me a bar chart that bin all date of transactions into the weekday interval and the y-axis is their total number , and show y-axis in ascending order .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS  ORDER BY COUNT(date_of_transaction) ASC BIN date_of_transaction BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the sum of salary over the hire_date bin hire_date by time by a bar chart , and show by the Y in ascending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
On which day has it neither been foggy nor rained in the zip code of 94107 , and count them by a bar chart , and list by the Y from low to high .
database schema:
Table trip, columns = [*,id, duration, start_date, start_station_name, start_station_id, end_date, end_station_name, end_station_id, bike_id, subscription_type, zip_code]
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE zip_code = 94107 AND EVENTS != "Fog" AND EVENTS != "Rain"  ORDER BY COUNT(date) ASC BIN date BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the average of employee_id bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the average of salary bin hire_date by weekday , and visualize them by a bar chart , I want to order in asc by the Y-axis .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find hire_date and the sum of manager_id bin hire_date by weekday , and visualize them by a bar chart , and I want to order from high to low by the Y .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(MANAGER_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the sum of manager_id over the hire_date bin hire_date by time by a bar chart , and display by the total number in descending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(MANAGER_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Show the average salary by each hire date of employees , and please bin the hire date into the Month interval for showing a bar chart , list from high to low by the mean salary .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Find Start_from and the amount of Start_from bin start_from by weekday , and visualize them by a bar chart , and list by the how many start from in asc .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , COUNT(Start_from) FROM hiring  ORDER BY COUNT(Start_from) ASC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by weekday , and could you list y axis in asc order ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
How many completion students in each day ? Return a bar chart binning date of completion by weekday .
database schema:
Table Student_Course_Enrolment, columns = [*,registration_id, student_id, course_id, date_of_enrolment, date_of_completion]
target dvq:
Visualize BAR SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment BIN date_of_completion BY WEEKDAY
****************************************************************************************************
nl_queries:
Give me the comparison about the sum of Shop_ID over the Start_from , and group by attribute Is_full_time and bin start_from by weekday , I want to display from high to low by the Y-axis please .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , SUM(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY SUM(Shop_ID) DESC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find hire_date and the sum of salary bin hire_date by weekday , and visualize them by a bar chart , and list total number of salary from high to low order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the average of employee_id bin hire_date by weekday , and visualize them by a bar chart , I want to order in ascending by the total number please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(EMPLOYEE_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
A line chart shows the trend of the average of Shop_ID over Start_from bin start_from by time .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Shop_ID) FROM hiring BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
I want to see trend of sum employee id by start from , list by the x axis in ascending .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Employee_ID) FROM hiring  ORDER BY Start_from ASC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For those dates with a max temperature greater than or equal to 80 , I want to see the number of days for each year using a bar chart , rank by the y axis in desc .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f >= 80  ORDER BY COUNT(date) DESC BIN date BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time , I want to rank by the total number in descending .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(DEPARTMENT_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the amount of hire_date over the hire_date bin hire_date by time .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of hire_date and the sum of salary bin hire_date by time , and I want to order by the total number from high to low .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by weekday , and order the average of employee id in asc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(EMPLOYEE_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of manager_id over the hire_date bin hire_date by weekday by a bar chart , and could you sort by the Y-axis in ascending ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(MANAGER_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the sum of manager_id bin hire_date by time , and visualize them by a bar chart , and could you list by the total number in asc ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(MANAGER_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Find Start_from and the amount of Start_from , and group by attribute Is_full_time and bin start_from by weekday , and visualize them by a bar chart , and could you rank from high to low by the Y ?
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , COUNT(Start_from) FROM hiring GROUP BY Is_full_time ORDER BY COUNT(Start_from) DESC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the sum of department_id over the hire_date bin hire_date by time , could you show in descending by the total number please ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(DEPARTMENT_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a bar chart shows the distribution of hire_date and the average of department_id bin hire_date by weekday , and order in desc by the the average of department id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(DEPARTMENT_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Visualize a bar chart about the distribution of Start_from and the sum of Employee_ID , and group by attribute Is_full_time and bin start_from by weekday , and I want to rank in ascending by the sum employee id .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , SUM(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY SUM(Employee_ID) ASC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
Return the number of the date of birth for all the guests with gender code "Male" , list x axis in descending order .
database schema:
Table Guests, columns = [*,guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth]
target dvq:
Visualize LINE SELECT date_of_birth , COUNT(date_of_birth) FROM Guests WHERE gender_code = "Male"  ORDER BY date_of_birth DESC BIN date_of_birth BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the average of manager_id bin hire_date by weekday in a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Visualize a line chart that bins the open date into the Year interval and counts them , and could you sort X-axis in descending order ?
database schema:
Table church, columns = [*,Church_ID, Name, Organized_by, Open_Date, Continuation_of]
Table wedding, columns = [*,Church_ID, Male_ID, Female_ID, Year]
target dvq:
Visualize LINE SELECT Open_Date , COUNT(Open_Date) FROM church  ORDER BY Open_Date DESC BIN Open_Date BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the amount of hire_date bin hire_date by weekday , and visualize them by a bar chart , and show by the total number in asc please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Show total number of shop id from each start from
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , SUM(Shop_ID) FROM hiring BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
Give me a bar chart for the average of salary of each hire date
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Give me a bar chart for the number of year of each year
database schema:
Table wine, columns = [*,No, Grape, Winery, Appelation, State, Name, Year, Price, Score, Cases, Drink]
target dvq:
Visualize BAR SELECT Year , COUNT(Year) FROM WINE BIN Year BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the average of salary over the hire_date bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the average of department_id bin hire_date by weekday , list by the Y in ascending please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(DEPARTMENT_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Give me line charts of worldwide gross the number of date in location from over year date in location from by major genres Location_Code , and could you rank from high to low by the X ?
database schema:
Table Ref_Locations, columns = [*,Location_Code, Location_Name, Location_Description]
Table Document_Locations, columns = [*,Document_ID, Location_Code, Date_in_Location_From, Date_in_Locaton_To]
target dvq:
Visualize LINE SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations GROUP BY Location_Code ORDER BY Date_in_Location_From DESC BIN Date_in_Location_From BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the sum of manager_id over the hire_date bin hire_date by weekday by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by time , could you display by the Y in ascending ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(MANAGER_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Show the number of apartment bookings in each year and bin booking end date by year with a bar chart , could you list Y in ascending order please ?
database schema:
Table Apartment_Bookings, columns = [*,apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date]
target dvq:
Visualize BAR SELECT booking_end_date , COUNT(booking_end_date) FROM Apartment_Bookings  ORDER BY COUNT(booking_end_date) ASC BIN booking_end_date BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find hire_date and the sum of employee_id bin hire_date by weekday , and visualize them by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Return a line chart about the change of the sum of Shop_ID over Start_from , and group by attribute Is_full_time and bin start_from by time , display by the x-axis in descending .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from DESC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by weekday , show by the the average of manager id in descending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(MANAGER_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Create a bar chart showing the number of date in locaton to across date in locaton to , I want to show the number of date in locaton to from high to low order .
database schema:
Table Document_Locations, columns = [*,Document_ID, Location_Code, Date_in_Location_From, Date_in_Locaton_To]
target dvq:
Visualize BAR SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations  ORDER BY COUNT(Date_in_Locaton_To) DESC BIN Date_in_Locaton_To BY WEEKDAY
****************************************************************************************************
nl_queries:
Bar chart x axis date moved in y axis how many date moved in , display by the Y from low to high .
database schema:
Table Residents, columns = [*,resident_id, property_id, date_moved_in, date_moved_out, other_details]
Table Residents_Services, columns = [*,resident_id, service_id, date_moved_in, property_id, date_requested, date_provided, other_details]
Table Customer_Events, columns = [*,Customer_Event_ID, customer_id, date_moved_in, property_id, resident_id, thing_id]
Table Customer_Event_Notes, columns = [*,Customer_Event_Note_ID, Customer_Event_ID, service_type_code, resident_id, property_id, date_moved_in]
target dvq:
Visualize BAR SELECT date_moved_in , COUNT(date_moved_in) FROM customer_events  ORDER BY COUNT(date_moved_in) ASC BIN date_moved_in BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the sum of salary bin hire_date by time in a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
How many documents in different starting date ? Return a bar chart binning starting date by weekday interval .
database schema:
Table Document_Locations, columns = [*,Document_ID, Location_Code, Date_in_Location_From, Date_in_Locaton_To]
target dvq:
Visualize BAR SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations BIN Date_in_Location_From BY WEEKDAY
****************************************************************************************************
nl_queries:
Which tests have "Pass" results ? Return the dates when the tests were taken , and count them by a bar chart , and sort in desc by the y axis .
database schema:
Table Student_Tests_Taken, columns = [*,registration_id, date_test_taken, test_result]
target dvq:
Visualize BAR SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = "Pass"  ORDER BY COUNT(date_test_taken) DESC BIN date_test_taken BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of hire_date and the average of salary bin hire_date by time , sort by the Y from low to high .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Draw a bar chart about the distribution of Start_from and the average of Employee_ID bin start_from by weekday , display Y-axis from low to high order .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , AVG(Employee_ID) FROM hiring  ORDER BY AVG(Employee_ID) ASC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by weekday , list by the Y in asc .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For the average of Shop_ID , Start_from , visualize the trend .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , AVG(Shop_ID) FROM hiring BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the average of salary bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Plot total number of shop id over start from in a line chart , list by the x-axis in asc .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Shop_ID) FROM hiring  ORDER BY Start_from ASC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Return a line chart about the change of the sum of Employee_ID over Start_from , and group by attribute Is_full_time and bin start_from by time , I want to list by the X in asc .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize LINE SELECT Start_from , SUM(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from ASC BIN Start_from BY YEAR
****************************************************************************************************
nl_queries:
Visualize a bar chart that bin the open date into a day of the week interval and count them , and sort from high to low by the Y-axis .
database schema:
Table church, columns = [*,Church_ID, Name, Organized_by, Open_Date, Continuation_of]
target dvq:
Visualize BAR SELECT Open_Date , COUNT(Open_Date) FROM church  ORDER BY COUNT(Open_Date) DESC BIN Open_Date BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of hire_date and the sum of salary bin hire_date by weekday in a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the sum of employee_id bin hire_date by weekday in a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Stacked bar chart of the number of left office for with each Minister in each left office , could you display in asc by the y-axis ?
database schema:
Table party, columns = [*,Party_ID, Minister, Took_office, Left_office, Region_ID, Party_name]
target dvq:
Visualize BAR SELECT Left_office , COUNT(Left_office) FROM party GROUP BY Minister ORDER BY COUNT(Left_office) ASC BIN Left_office BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the average of salary bin hire_date by time in a bar chart , display by the y-axis from high to low .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of hire_date and the average of salary bin hire_date by time , and could you rank by the Y-axis from high to low ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by weekday , and rank in asc by the Y .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Bar chart x axis date moved in y axis how many date moved in , list in ascending by the y axis please .
database schema:
Table Residents, columns = [*,resident_id, property_id, date_moved_in, date_moved_out, other_details]
Table Residents_Services, columns = [*,resident_id, service_id, date_moved_in, property_id, date_requested, date_provided, other_details]
Table Customer_Events, columns = [*,Customer_Event_ID, customer_id, date_moved_in, property_id, resident_id, thing_id]
Table Customer_Event_Notes, columns = [*,Customer_Event_Note_ID, Customer_Event_ID, service_type_code, resident_id, property_id, date_moved_in]
target dvq:
Visualize BAR SELECT date_moved_in , COUNT(date_moved_in) FROM customer_events  ORDER BY COUNT(date_moved_in) ASC BIN date_moved_in BY YEAR
****************************************************************************************************
nl_queries:
Plot how many booking start date by grouped by booking start date as a bar graph , display by the total number from high to low please .
database schema:
Table Apartment_Bookings, columns = [*,apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date]
target dvq:
Visualize BAR SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings  ORDER BY COUNT(booking_start_date) DESC BIN booking_start_date BY WEEKDAY
****************************************************************************************************
nl_queries:
Plot how many date from by grouped by date from as a bar graph
database schema:
Table Project_Staff, columns = [*,staff_id, project_id, role_code, date_from, date_to, other_details]
target dvq:
Visualize BAR SELECT date_from , COUNT(date_from) FROM Project_Staff BIN date_from BY WEEKDAY
****************************************************************************************************
nl_queries:
Show all dates of transactions whose type code is "SALE" , and count them by a line chart , and list x axis from high to low order .
database schema:
Table Ref_Transaction_Types, columns = [*,transaction_type_code, transaction_type_description]
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE transaction_type_code = "SALE"  ORDER BY date_of_transaction DESC BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the sum of department_id bin hire_date by time in a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Draw a bar chart of open date versus the number of open date
database schema:
Table church, columns = [*,Church_ID, Name, Organized_by, Open_Date, Continuation_of]
target dvq:
Visualize BAR SELECT Open_Date , COUNT(Open_Date) FROM church BIN Open_Date BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the average of manager_id bin hire_date by weekday in a bar chart , and could you show Y in descending order ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(MANAGER_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Bin all date of transactions into the weekday interval , and the total number of each bin , and then show me the trend .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
Bin the hire date into the day of week interval , and then calculate the total salary of employees in each day for a bar chart , note that just select those employees without the letter M in their first name .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name NOT LIKE '%M%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Stacked bar chart of total number of shop id for with each Is_full_time in each start from , sort in ascending by the Y .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , SUM(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY SUM(Shop_ID) ASC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
Bar chart x axis start from y axis the average of shop id , and display total number in ascending order .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , AVG(Shop_ID) FROM hiring  ORDER BY AVG(Shop_ID) ASC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Bar chart x axis calendar date y axis the number of calendar date , I want to display by the Y in desc .
database schema:
Table Ref_Calendar, columns = [*,Calendar_Date, Day_Number]
target dvq:
Visualize BAR SELECT Calendar_Date , COUNT(Calendar_Date) FROM Ref_calendar  ORDER BY COUNT(Calendar_Date) DESC BIN Calendar_Date BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of hire_date and the sum of salary bin hire_date by weekday , sort Y-axis from high to low order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Give me the trend of how many receipt date by receipt date , and could you show in asc by the receipt_date ?
database schema:
Table Documents, columns = [*,document_id, document_status_code, document_type_code, shipping_agent_code, receipt_date, receipt_number, other_details]
target dvq:
Visualize LINE SELECT receipt_date , COUNT(receipt_date) FROM Documents  ORDER BY receipt_date ASC BIN receipt_date BY YEAR
****************************************************************************************************
nl_queries:
Bin all date of transactions into the weekday interval , and compute the average of the share count for each bin . Return the result using a bar chart .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize BAR SELECT date_of_transaction , AVG(share_count) FROM TRANSACTIONS BIN date_of_transaction BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by time , could you show in descending by the Y-axis ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(EMPLOYEE_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Show how many cinemas open for each year in a line chart , show x-axis from low to high order .
database schema:
Table cinema, columns = [*,Cinema_ID, Name, Openning_year, Capacity, Location]
target dvq:
Visualize LINE SELECT Openning_year , COUNT(Openning_year) FROM cinema  ORDER BY Openning_year ASC BIN Openning_year BY YEAR
****************************************************************************************************
nl_queries:
Bin the year attribute into the Year interval and count them for a bar chart .
database schema:
Table wine, columns = [*,No, Grape, Winery, Appelation, State, Name, Year, Price, Score, Cases, Drink]
target dvq:
Visualize BAR SELECT Year , COUNT(Year) FROM WINE BIN Year BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by weekday , order by the y-axis from low to high .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(EMPLOYEE_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Show the number of apartment bookings in each year and bin booking start date by year with a bar chart .
database schema:
Table Apartment_Bookings, columns = [*,apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date]
target dvq:
Visualize BAR SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings BIN booking_start_date BY YEAR
****************************************************************************************************
nl_queries:
A bar chart for giveing me the number of the dates when the max temperature was higher than 85 , and could you list y axis in ascending order please ?
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) ASC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Give me line charts of worldwide gross the number of date in location from over year date in location from by major genres Location_Code , and order in descending by the Date_in_Location_From please .
database schema:
Table Ref_Locations, columns = [*,Location_Code, Location_Name, Location_Description]
Table Document_Locations, columns = [*,Document_ID, Location_Code, Date_in_Location_From, Date_in_Locaton_To]
target dvq:
Visualize LINE SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations GROUP BY Location_Code ORDER BY Date_in_Location_From DESC BIN Date_in_Location_From BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by time , and list Y in asc order please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
What is the sum of capacity of cinemas open for each year ? Return a line chart .
database schema:
Table cinema, columns = [*,Cinema_ID, Name, Openning_year, Capacity, Location]
target dvq:
Visualize LINE SELECT Openning_year , SUM(Capacity) FROM cinema BIN Openning_year BY YEAR
****************************************************************************************************
nl_queries:
What are the distinct visit dates , and count them by a line chart
database schema:
Table Visits, columns = [*,Visit_ID, Tourist_Attraction_ID, Tourist_ID, Visit_Date, Visit_Details]
target dvq:
Visualize LINE SELECT Visit_Date , COUNT(Visit_Date) FROM VISITS BIN Visit_Date BY YEAR
****************************************************************************************************
nl_queries:
List the number of dogs arrived in each year with a bar chart .
database schema:
Table Dogs, columns = [*,dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed]
target dvq:
Visualize BAR SELECT date_arrived , COUNT(date_arrived) FROM Dogs BIN date_arrived BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the average of department_id bin hire_date by weekday , display Y-axis in desc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(DEPARTMENT_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those dates that have the 5 highest cloud cover rates , please bin the date into day of the week interval and compute their average cloud cover .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , AVG(cloud_cover) FROM weather BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the sum of salary over the hire_date bin hire_date by weekday , and list total number of salary from low to high order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Bar graph to show the number of took office from different took office , and show by the Y in ascending .
database schema:
Table party, columns = [*,Party_ID, Minister, Took_office, Left_office, Region_ID, Party_name]
target dvq:
Visualize BAR SELECT Took_office , COUNT(Took_office) FROM party  ORDER BY COUNT(Took_office) ASC BIN Took_office BY WEEKDAY
****************************************************************************************************
nl_queries:
Return a bar chart about the distribution of Start_from and the average of Shop_ID bin start_from by weekday , could you display in desc by the Y ?
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , AVG(Shop_ID) FROM hiring  ORDER BY AVG(Shop_ID) DESC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
Show the number of games in each season and group by home team in a group line chart The x-axis is season , show Season in asc order .
database schema:
Table game, columns = [*,stadium_id, id, Season, Date, Home_team, Away_team, Score, Competition]
target dvq:
Visualize LINE SELECT Season , COUNT(Season) FROM game GROUP BY Home_team ORDER BY Season ASC BIN Season BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the sum of manager_id over the hire_date bin hire_date by time by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Give me line charts of worldwide gross how many date in locaton to over year date in locaton to by major genres Location_Code , display from high to low by the x axis .
database schema:
Table Ref_Locations, columns = [*,Location_Code, Location_Name, Location_Description]
Table Document_Locations, columns = [*,Document_ID, Location_Code, Date_in_Location_From, Date_in_Locaton_To]
target dvq:
Visualize LINE SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Location_Code ORDER BY Date_in_Locaton_To DESC BIN Date_in_Locaton_To BY YEAR
****************************************************************************************************
nl_queries:
Show the number of accounts opened in each year for all accounts and group by other account details in a group line chart , and sort from high to low by the X-axis .
database schema:
Table Accounts, columns = [*,account_id, customer_id, date_account_opened, account_name, other_account_details]
target dvq:
Visualize LINE SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts GROUP BY other_account_details ORDER BY date_account_opened DESC BIN date_account_opened BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by time , and order in desc by the y axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(DEPARTMENT_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
What are the distinct move in dates of the residents , and count them by a bar chart , I want to rank by the Y-axis from low to high .
database schema:
Table Residents, columns = [*,resident_id, property_id, date_moved_in, date_moved_out, other_details]
Table Residents_Services, columns = [*,resident_id, service_id, date_moved_in, property_id, date_requested, date_provided, other_details]
Table Customer_Events, columns = [*,Customer_Event_ID, customer_id, date_moved_in, property_id, resident_id, thing_id]
Table Customer_Event_Notes, columns = [*,Customer_Event_Note_ID, Customer_Event_ID, service_type_code, resident_id, property_id, date_moved_in]
target dvq:
Visualize BAR SELECT date_moved_in , COUNT(date_moved_in) FROM residents  ORDER BY COUNT(date_moved_in) ASC BIN date_moved_in BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday , and could you list y axis from high to low order ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by time , and order sum department id in ascending order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(DEPARTMENT_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the average of department_id bin hire_date by weekday , display by the the average of department id in asc .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(DEPARTMENT_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Bin the installation date into the day of week interval , and then you can draw a bar chart to tell me how many stations each year .
database schema:
Table station, columns = [*,id, name, lat, long, dock_count, city, installation_date]
target dvq:
Visualize BAR SELECT installation_date , COUNT(installation_date) FROM station BIN installation_date BY WEEKDAY
****************************************************************************************************
nl_queries:
Plot sum capacity over openning year in a line chart , and could you display X-axis in ascending order ?
database schema:
Table cinema, columns = [*,Cinema_ID, Name, Openning_year, Capacity, Location]
target dvq:
Visualize LINE SELECT Openning_year , SUM(Capacity) FROM cinema  ORDER BY Openning_year ASC BIN Openning_year BY YEAR
****************************************************************************************************
nl_queries:
A bar chart shows the distribution of Start_from and the average of Employee_ID , and group by attribute Is_full_time and bin start_from by weekday , and show y axis in ascending order please .
database schema:
Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]
target dvq:
Visualize BAR SELECT Start_from , AVG(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY AVG(Employee_ID) ASC BIN Start_from BY WEEKDAY
****************************************************************************************************
nl_queries:
List the number of documents for each receipt date and bin by year with a line chart , order by the X in ascending .
database schema:
Table Documents, columns = [*,document_id, document_status_code, document_type_code, shipping_agent_code, receipt_date, receipt_number, other_details]
target dvq:
Visualize LINE SELECT receipt_date , COUNT(receipt_date) FROM Documents  ORDER BY receipt_date ASC BIN receipt_date BY YEAR
****************************************************************************************************
nl_queries:
When do all the researcher role staff stop working ? Bin the time into YEAR interval and count them with a line chart .
database schema:
Table Project_Staff, columns = [*,staff_id, project_id, role_code, date_from, date_to, other_details]
target dvq:
Visualize LINE SELECT date_to , COUNT(date_to) FROM Project_Staff BIN date_to BY YEAR
****************************************************************************************************
