nl_queries:
For those products with a price between 60 and 120 , visualize a bar chart about the distribution of name and manufacturer .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Manufacturer FROM products WHERE price BETWEEN 60 AND 120
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the sum of department_id bin hire_date by weekday , and visualize them by a bar chart , and could you order in desc by the Y ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(DEPARTMENT_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
A bar chart for what are the number of the category of music festivals with result "Awarded" ? , rank by the Y in descending .
database schema:
Table music_festival, columns = [*,ID, Music_Festival, Date_of_ceremony, Category, Volume, Result]
target dvq:
Visualize BAR SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = "Awarded" GROUP BY Category ORDER BY COUNT(Category) DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of department_id over the job_id , and group by attribute job_id , order in desc by the y-axis .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY AVG(DEPARTMENT_ID) DESC
****************************************************************************************************
nl_queries:
How many rooms cost more than 120 , for each different decor Plot them as bar chart , and list by the Y from low to high .
database schema:
Table Rooms, columns = [*,RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor]
target dvq:
Visualize BAR SELECT decor , count(*) FROM Rooms WHERE basePrice > 120 GROUP BY decor ORDER BY count(*) ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a line chart shows the change of manager_id over hire_date , sort X-axis in asc order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
What are the payment date of the payment with amount paid higher than 300 or with payment type is 'Check , and count them by a bar chart
database schema:
Table Payments, columns = [*,payment_id, booking_id, customer_id, payment_type_code, amount_paid_in_full_yn, payment_date, amount_due, amount_paid]
target dvq:
Visualize BAR SELECT payment_date , COUNT(payment_date) FROM payments WHERE amount_paid > 300 OR payment_type_code = 'Check' BIN payment_date BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the average of department_id bin hire_date by time in a bar chart , and could you order from high to low by the Y please ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(DEPARTMENT_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time , and order by the y-axis in desc .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(DEPARTMENT_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Visualize a bar chart for what is the id and weight of every pet who is older than 1 ? , and I want to list in desc by the X .
database schema:
Table Has_Pet, columns = [*,StuID, PetID]
Table Pets, columns = [*,PetID, PetType, pet_age, weight]
target dvq:
Visualize BAR SELECT PetID , weight FROM pets WHERE pet_age > 1 ORDER BY PetID DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by weekday , and display by the total number of manager id in ascending .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(MANAGER_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of employee_id over the hire_date bin hire_date by weekday by a bar chart , could you sort by the y axis from low to high please ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(EMPLOYEE_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me the trend about manager_id over hire_date with a line chart , and I want to order by the X-axis in asc .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the trend about commission_pct over hire_date , and could you rank x axis in desc order ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of job_id and the amount of job_id , and group by attribute job_id , order by the y axis in ascending .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY COUNT(JOB_ID) ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a scatter chart about the correlation between employee_id and manager_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT EMPLOYEE_ID , MANAGER_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me the trend about salary over hire_date with a line chart , I want to show x axis in desc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , give me a pie chart to reflect the proportion of name and manufacturer .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize PIE SELECT Name , Manufacturer FROM products WHERE price BETWEEN 60 AND 120
****************************************************************************************************
nl_queries:
What are the number of the dates in which the mean sea level pressure was between 303 and 31 ? , display in desc by the Y-axis .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) DESC BIN date BY YEAR
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , return a bar chart about the distribution of name and price , and order in ascending by the Y .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Price FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Price ASC
****************************************************************************************************
nl_queries:
Find the dates of the tests taken with result "Pass" , and count them by a line chart , and order by the x-axis from low to high .
database schema:
Table Student_Tests_Taken, columns = [*,registration_id, date_test_taken, test_result]
target dvq:
Visualize LINE SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = "Pass"  ORDER BY date_test_taken ASC BIN date_test_taken BY DAY
****************************************************************************************************
nl_queries:
For each zip code , how many times has the maximum wind speed reached 25 mph . Visualize by scatter chart .
database schema:
Table trip, columns = [*,id, duration, start_date, start_station_name, start_station_id, end_date, end_station_name, end_station_id, bike_id, subscription_type, zip_code]
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize SCATTER SELECT zip_code , count(*) FROM weather WHERE max_wind_Speed_mph >= 25 GROUP BY zip_code
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a bar chart shows the distribution of job_id and the sum of employee_id , and group by attribute job_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the correlation between salary and department_id in a scatter chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT SALARY , DEPARTMENT_ID FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of job_id and the sum of employee_id , and group by attribute job_id .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id , could you sort X from high to low order please ?
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
Give me the number of the dates when the max temperature was higher than 85 , and rank by the x-axis from high to low .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize LINE SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85 GROUP BY date ORDER BY date DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the amount of hire_date over the hire_date bin hire_date by time , and show in descending by the Y .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of job_id and the sum of salary , and group by attribute job_id , and could you rank by the X from low to high ?
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of hire_date and the average of manager_id bin hire_date by time in a bar chart , could you list from low to high by the the average of manager id please ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(MANAGER_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of job_id and the sum of employee_id , and group by attribute job_id .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by time , display in desc by the sum department id .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(DEPARTMENT_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of hire_date and the sum of salary bin hire_date by time .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a bar chart shows the distribution of job_id and the average of manager_id , and group by attribute job_id , and could you rank in asc by the Y-axis ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY AVG(MANAGER_ID) ASC
****************************************************************************************************
nl_queries:
What are the different years in which there were cars produced that weighed less than 4000 and also cars that weighted more than 3000 , and count them by a bar chart , sort in ascending by the y axis .
database schema:
Table cars_data, columns = [*,Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year]
target dvq:
Visualize BAR SELECT Year , COUNT(Year) FROM cars_data where weight between 3000 and 4000  ORDER BY COUNT(Year) ASC BIN Year BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of job_id and the average of manager_id , and group by attribute job_id in a bar chart , and show by the Y-axis from high to low .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY AVG(MANAGER_ID) DESC
****************************************************************************************************
nl_queries:
What is the average salary of employees who have a commission percentage that is not null . Show scatter chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT DEPARTMENT_ID , AVG(salary) FROM employees WHERE commission_pct != "null" GROUP BY department_id
****************************************************************************************************
nl_queries:
Bar chart , group and count the decor of rooms that have a king bed .
database schema:
Table Rooms, columns = [*,RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor]
target dvq:
Visualize BAR SELECT decor , COUNT(decor) FROM Rooms WHERE bedtype = 'King' GROUP BY decor ORDER BY basePrice
****************************************************************************************************
nl_queries:
A bar chart for showing the number of the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000 .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000 BIN date_of_transaction BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of hire_date and the average of manager_id bin hire_date by weekday , and I want to order by the Y from high to low .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(MANAGER_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
What are dates of birth of all the guests whose gender is "Male" , and count them by a line chart , list date_of_birth in asc order .
database schema:
Table Guests, columns = [*,guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth]
target dvq:
Visualize LINE SELECT date_of_birth , COUNT(date_of_birth) FROM Guests WHERE gender_code = "Male"  ORDER BY date_of_birth ASC BIN date_of_birth BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of job_id and the average of department_id , and group by attribute job_id , and sort by the X-axis from low to high .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the average of salary bin hire_date by time , and visualize them by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the amount of job_id over the job_id , and group by attribute job_id , and I want to sort y axis in ascending order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY COUNT(JOB_ID) ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize the relationship between salary and department_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT SALARY , DEPARTMENT_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find hire_date and the sum of employee_id bin hire_date by weekday , and visualize them by a bar chart , show y axis in desc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(EMPLOYEE_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id , list y-axis in descending order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY SUM(MANAGER_ID) DESC
****************************************************************************************************
nl_queries:
Bin the hire date into Month interval , and then calculate the total salary of employees in each month for a bar chart , note that just select those employees without the letter M in their first name , and could you show by the Y-axis in descending please ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name NOT LIKE '%M%'  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , draw a scatter chart about the correlation between code and manufacturer , and group by attribute name .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize SCATTER SELECT Code , Manufacturer FROM products WHERE price BETWEEN 60 AND 120 GROUP BY Name
****************************************************************************************************
nl_queries:
Find the number of rooms with price higher than 120 for different decor Show bar chart , list by the decor in desc .
database schema:
Table Rooms, columns = [*,RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor]
target dvq:
Visualize BAR SELECT decor , count(*) FROM Rooms WHERE basePrice > 120 GROUP BY decor ORDER BY decor DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find job_id and the sum of employee_id , and group by attribute job_id , and visualize them by a bar chart , and sort y-axis from high to low order please .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY SUM(EMPLOYEE_ID) DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a scatter chart about the correlation between salary and manager_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT SALARY , MANAGER_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
Find the number of employees of each gender whose salary is lower than 50000 Visualize by bar chart , I want to rank by the Y in descending .
database schema:
Table employee, columns = [*,Fname, Minit, Lname, Ssn, Bdate, Address, Sex, Salary, Super_ssn, Dno]
Table dependent, columns = [*,Essn, Dependent_name, Sex, Bdate, Relationship]
target dvq:
Visualize BAR SELECT Sex , count(*) FROM employee WHERE salary < 50000 GROUP BY sex ORDER BY count(*) DESC
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , a scatter chart shows the correlation between code and manufacturer .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize SCATTER SELECT Code , Manufacturer FROM products WHERE price BETWEEN 60 AND 120
****************************************************************************************************
nl_queries:
What are the number of the dates with a maximum temperature higher than 85 ?
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85 BIN date BY YEAR
****************************************************************************************************
nl_queries:
List the number of the name of technicians whose team is not "NYY" , order by the X-axis in desc .
database schema:
Table repair, columns = [*,repair_ID, name, Launch_Date, Notes]
Table machine, columns = [*,Machine_ID, Making_Year, Class, Team, Machine_series, value_points, quality_rank]
Table technician, columns = [*,technician_id, Name, Team, Starting_Year, Age]
target dvq:
Visualize BAR SELECT Name , COUNT(Name) FROM technician WHERE Team != "NYY" GROUP BY Name ORDER BY Name DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by weekday , show by the the average of manager id from high to low .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(MANAGER_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of hire_date and the average of manager_id bin hire_date by time in a bar chart , and sort by the total number in desc please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(MANAGER_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a line chart about the change of commission_pct over hire_date , rank x axis in ascending order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
On which day has it neither been foggy nor rained in the zip code of 94107 , and count them by a bar chart
database schema:
Table trip, columns = [*,id, duration, start_date, start_station_name, start_station_id, end_date, end_station_name, end_station_id, bike_id, subscription_type, zip_code]
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE zip_code = 94107 AND EVENTS != "Fog" AND EVENTS != "Rain" BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the amount of job_id over the job_id , and group by attribute job_id , and sort in asc by the the number of job id please .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY COUNT(JOB_ID) ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the average of manager_id bin hire_date by weekday , could you rank from low to high by the y axis ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(MANAGER_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Which tests have "Pass" results ? Return the dates when the tests were taken , and count them by a bar chart , and order y-axis in ascending order .
database schema:
Table Student_Tests_Taken, columns = [*,registration_id, date_test_taken, test_result]
target dvq:
Visualize BAR SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = "Pass"  ORDER BY COUNT(date_test_taken) ASC BIN date_test_taken BY WEEKDAY
****************************************************************************************************
nl_queries:
What are the names of products with price at most 200 , and count them by a bar chart
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , COUNT(Name) FROM products WHERE price <= 200 GROUP BY Name
****************************************************************************************************
nl_queries:
What are the pixel aspect ratio and country of origin for all TV channels that do not use English ? Show the comparison of the total number of pixel aspect ratio in a bar chart , order in ascending by the y axis .
database schema:
Table TV_Channel, columns = [*,id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option]
target dvq:
Visualize BAR SELECT Pixel_aspect_ratio_PAR , COUNT(Pixel_aspect_ratio_PAR) FROM tv_channel WHERE LANGUAGE != 'English' GROUP BY Pixel_aspect_ratio_PAR ORDER BY COUNT(Pixel_aspect_ratio_PAR) ASC
****************************************************************************************************
nl_queries:
Find the number of professors with a PhD degree in each department Show bar chart , I want to display by the Y from low to high .
database schema:
Table COURSE, columns = [*,CRS_CODE, DEPT_CODE, CRS_DESCRIPTION, CRS_CREDIT]
Table DEPARTMENT, columns = [*,DEPT_CODE, DEPT_NAME, SCHOOL_CODE, EMP_NUM, DEPT_ADDRESS, DEPT_EXTENSION]
Table PROFESSOR, columns = [*,EMP_NUM, DEPT_CODE, PROF_OFFICE, PROF_EXTENSION, PROF_HIGH_DEGREE]
Table STUDENT, columns = [*,STU_NUM, STU_LNAME, STU_FNAME, STU_INIT, STU_DOB, STU_HRS, STU_CLASS, STU_GPA, STU_TRANSFER, DEPT_CODE, STU_PHONE, PROF_NUM]
target dvq:
Visualize BAR SELECT DEPT_CODE , count(*) FROM professor WHERE prof_high_degree = 'Ph.D.' GROUP BY dept_code ORDER BY count(*) ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the average of salary bin hire_date by time , I want to sort in asc by the Y-axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a bar chart shows the distribution of hire_date and the average of department_id bin hire_date by time .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by weekday , rank y axis from low to high order please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(MANAGER_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the amount of hire_date bin hire_date by time in a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of job_id and the sum of salary , and group by attribute job_id .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a scatter chart about the correlation between employee_id and department_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT EMPLOYEE_ID , DEPARTMENT_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of hire_date and the average of salary bin hire_date by weekday in a bar chart , and rank in asc by the total number .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
When are the birthdays of customer who are classified as 'Good Customer' status , and count them by a bar chart
database schema:
Table Staff, columns = [*,staff_id, staff_address_id, nickname, first_name, middle_name, last_name, date_of_birth, date_joined_staff, date_left_staff]
Table Customers, columns = [*,customer_id, customer_address_id, customer_status_code, date_became_customer, date_of_birth, first_name, last_name, amount_outstanding, email_address, phone_number, cell_mobile_phone_number]
target dvq:
Visualize BAR SELECT date_of_birth , COUNT(date_of_birth) FROM Customers WHERE customer_status_code = 'Good Customer' BIN date_of_birth BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by time , I want to display y-axis from high to low order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the sum of salary over the job_id , and group by attribute job_id , and could you list x-axis from low to high order ?
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the sum of salary bin hire_date by time , and visualize them by a bar chart , and I want to show total number of salary in desc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
A bar chart for finding the number of the latest logon date of the students whose family name is "Jaskolski" or "Langosh" , and I want to show y axis in descending order .
database schema:
Table Course_Authors_and_Tutors, columns = [*,author_id, author_tutor_ATB, login_name, password, personal_name, middle_name, family_name, gender_mf, address_line_1]
Table Students, columns = [*,student_id, date_of_registration, date_of_latest_logon, login_name, password, personal_name, middle_name, family_name]
target dvq:
Visualize BAR SELECT date_of_latest_logon , COUNT(date_of_latest_logon) FROM Students WHERE family_name = "Jaskolski" OR family_name = "Langosh"  ORDER BY COUNT(date_of_latest_logon) DESC BIN date_of_latest_logon BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , for salary , hire_date , visualize the trend , and could you order by the x axis from high to low ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
Show me a line chart to show the change of salary for those employees whose first name does not containing the letter M over the corresponding hire date , and sort in descending by the x axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
What are the dates with a maximum temperature higher than 85 , and count them by a bar chart , list in asc by the y axis .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) ASC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a line chart about the change of department_id over hire_date , and show by the x-axis in desc .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
Return a pie on what is the average age for a male in each job ?
database schema:
Table Person, columns = [*,name, age, city, gender, job]
target dvq:
Visualize PIE SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job
****************************************************************************************************
nl_queries:
Return a bar chart on what is the average age for a male in each job ? , and could you show Y-axis in ascending order ?
database schema:
Table Person, columns = [*,name, age, city, gender, job]
target dvq:
Visualize BAR SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY avg(age) ASC
****************************************************************************************************
nl_queries:
For those employees whose first name is ending with the letter m , sum their salary for visualizing a bar chart , and could you order in descending by the total number ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT FIRST_NAME , SUM(SALARY) FROM employees WHERE first_name LIKE '%m' GROUP BY FIRST_NAME ORDER BY SUM(SALARY) DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id , could you list in ascending by the X-axis please ?
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the amount of hire_date bin hire_date by time , and visualize them by a bar chart , and sort by the Y from low to high .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
What are the number of the dates with a maximum temperature higher than 85 ? , I want to show the number of date from low to high order .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) ASC BIN date BY YEAR
****************************************************************************************************
nl_queries:
How many rooms have king beds ? Report the number for each decor type Plot them as bar chart , list by the x-axis in descending .
database schema:
Table Rooms, columns = [*,RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor]
target dvq:
Visualize BAR SELECT decor , count(*) FROM Rooms WHERE bedType = "King" GROUP BY decor ORDER BY decor DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the sum of salary over the hire_date bin hire_date by weekday by a bar chart , display sum salary in desc order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Show the number of companies whose headquarters are not from USA fpr each main industry in a bar chart .
database schema:
Table company, columns = [*,Company_ID, Rank, Company, Headquarters, Main_Industry, Sales_billion, Profits_billion, Assets_billion, Market_Value]
target dvq:
Visualize BAR SELECT Main_Industry , COUNT(Main_Industry) FROM company WHERE headquarters != 'USA' GROUP BY Main_Industry
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a scatter chart about the correlation between employee_id and commission_pct .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT EMPLOYEE_ID , COMMISSION_PCT FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the average of department_id bin hire_date by weekday , and visualize them by a bar chart , and rank from high to low by the y axis .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(DEPARTMENT_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a scatter chart about the correlation between employee_id and commission_pct .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT EMPLOYEE_ID , COMMISSION_PCT FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of hire_date and the amount of hire_date bin hire_date by weekday in a bar chart , and could you display the number of hire date in desc order ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time , and order by the y-axis in desc .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(DEPARTMENT_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time , and display y-axis in ascending order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(DEPARTMENT_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by time .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the amount of job_id over the job_id , and group by attribute job_id by a bar chart , and display the number of job id from low to high order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY COUNT(JOB_ID) ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
Which ministers are not a part of the Progress Party , and count them by a bar chart , and I want to order by the x-axis from high to low .
database schema:
Table party, columns = [*,Party_ID, Minister, Took_office, Left_office, Region_ID, Party_name]
target dvq:
Visualize BAR SELECT Minister , COUNT(Minister) FROM party WHERE party_name != 'Progress Party' GROUP BY Minister ORDER BY Minister DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of job_id and the amount of job_id , and group by attribute job_id in a bar chart , and list X from high to low order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the average of salary bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the average of employee_id bin hire_date by weekday , and visualize them by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those female students with age is older than 18 who are not majoring in 600 , tell me how many students of different first names using a bar chart , display in asc by the how many fname .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
target dvq:
Visualize BAR SELECT Fname , COUNT(Fname) FROM Student WHERE Age > 18 AND Major != 600 AND Sex = 'F' GROUP BY Fname ORDER BY COUNT(Fname) ASC
****************************************************************************************************
nl_queries:
A bar chart for returning the number of the categories of music festivals that have the result "Awarded" , and rank Category in descending order please .
database schema:
Table music_festival, columns = [*,ID, Music_Festival, Date_of_ceremony, Category, Volume, Result]
target dvq:
Visualize BAR SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = "Awarded" GROUP BY Category ORDER BY Category DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of hire_date and the sum of salary bin hire_date by time , and I want to show by the Y in descending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a bar chart shows the distribution of job_id and the sum of department_id , and group by attribute job_id , and rank y-axis in asc order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY SUM(DEPARTMENT_ID) ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of hire_date and the sum of salary bin hire_date by time , and show by the total number in asc .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the average of manager_id bin hire_date by time , and sort by the y-axis in descending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(MANAGER_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Give me a histogram for what is the number of players who have points less than 30 for each position ? , show y axis from low to high order .
database schema:
Table player, columns = [*,Player_ID, name, Position, Club_ID, Apps, Tries, Goals, Points]
target dvq:
Visualize BAR SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION ORDER BY count(*) ASC
****************************************************************************************************
nl_queries:
What is the weight of each dog that was abandoned ? Show in a bar chart , and I want to sort by the x-axis in asc .
database schema:
Table Dogs, columns = [*,dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed]
target dvq:
Visualize BAR SELECT name , weight FROM Dogs WHERE abandoned_yn = 1 ORDER BY name ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id , sort in desc by the names .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , give me the comparison about price over the name by a bar chart .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Price FROM products WHERE price BETWEEN 60 AND 120
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of salary over the hire_date bin hire_date by weekday , I want to order by the Y-axis in ascending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , return a bar chart about the distribution of name and manufacturer , I want to list in ascending by the bars .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Manufacturer FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Name ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the average of salary over the job_id , and group by attribute job_id by a bar chart , could you sort by the x axis in asc ?
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
A bar chart showing the number of last name for all female students Their sex is F , and order x axis from low to high order .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
target dvq:
Visualize BAR SELECT LName , COUNT(LName) FROM Student WHERE Sex = 'F' GROUP BY LName ORDER BY LName ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by weekday .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by weekday , and could you list Y in desc order please ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(MANAGER_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Which ministers are not a part of the Progress Party , and count them by a bar chart , list by the Minister from low to high .
database schema:
Table party, columns = [*,Party_ID, Minister, Took_office, Left_office, Region_ID, Party_name]
target dvq:
Visualize BAR SELECT Minister , COUNT(Minister) FROM party WHERE party_name != 'Progress Party' GROUP BY Minister ORDER BY Minister ASC
****************************************************************************************************
nl_queries:
Return a histogram on how many invoices were billed from each state ?
database schema:
Table invoices, columns = [*,id, customer_id, invoice_date, billing_address, billing_city, billing_state, billing_country, billing_postal_code, total]
target dvq:
Visualize BAR SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = "USA" GROUP BY billing_state
****************************************************************************************************
nl_queries:
How many injured players not suffering from injury of 'Knee problem' in each match ? Show me a bar chart grouping by number of matches .
database schema:
Table injury_accident, columns = [*,game_id, id, Player, Injury, Number_of_matches, Source]
target dvq:
Visualize BAR SELECT Number_of_matches , COUNT(Number_of_matches) FROM injury_accident WHERE injury != 'Knee problem' GROUP BY Number_of_matches
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id , and I want to sort in ascending by the x-axis please .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the average of salary over the job_id , and group by attribute job_id by a bar chart , and rank by the Y-axis in asc .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY AVG(SALARY) ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the trend about salary over hire_date .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the sum of department_id bin hire_date by time , and visualize them by a bar chart , and I want to order by the total number of department id from high to low .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(DEPARTMENT_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the sum of employee_id over the job_id , and group by attribute job_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id , I want to display X-axis from low to high order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of department_id over the hire_date bin hire_date by weekday , display by the total number in desc .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(DEPARTMENT_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of job_id and the average of manager_id , and group by attribute job_id , order in asc by the JOB_ID .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , draw a bar chart about the distribution of name and code .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Code FROM products WHERE price BETWEEN 60 AND 120
****************************************************************************************************
nl_queries:
What are the number of the dates that have an average sea level pressure between 303 and 31 ? , could you sort in desc by the y axis ?
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) DESC BIN date BY YEAR
****************************************************************************************************
nl_queries:
List the name of technicians whose team is not "NYY" , and count them by a bar chart , I want to order from low to high by the y-axis please .
database schema:
Table repair, columns = [*,repair_ID, name, Launch_Date, Notes]
Table machine, columns = [*,Machine_ID, Making_Year, Class, Team, Machine_series, value_points, quality_rank]
Table technician, columns = [*,technician_id, Name, Team, Starting_Year, Age]
target dvq:
Visualize BAR SELECT Name , COUNT(Name) FROM technician WHERE Team != "NYY" GROUP BY Name ORDER BY COUNT(Name) ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a line chart shows the trend of commission_pct over hire_date .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of job_id and the sum of department_id , and group by attribute job_id in a bar chart , and show in descending by the X-axis .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize the relationship between commission_pct and department_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT COMMISSION_PCT , DEPARTMENT_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
Show all ministers who do not belong to Progress Party , and count them by a bar chart , and order in asc by the Y .
database schema:
Table party, columns = [*,Party_ID, Minister, Took_office, Left_office, Region_ID, Party_name]
target dvq:
Visualize BAR SELECT Minister , COUNT(Minister) FROM party WHERE party_name != 'Progress Party' GROUP BY Minister ORDER BY COUNT(Minister) ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of job_id and the average of manager_id , and group by attribute job_id in a bar chart , and rank X in descending order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a line chart about the change of department_id over hire_date , rank by the X-axis in descending .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find job_id and the sum of manager_id , and group by attribute job_id , and visualize them by a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a line chart about the change of commission_pct over hire_date , and sort X-axis from low to high order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a bar chart shows the distribution of job_id and the sum of department_id , and group by attribute job_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
Return a histogram on how many invoices were billed from each state ? , and rank by the the total number in descending please .
database schema:
Table invoices, columns = [*,id, customer_id, invoice_date, billing_address, billing_city, billing_state, billing_country, billing_postal_code, total]
target dvq:
Visualize BAR SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = "USA" GROUP BY billing_state ORDER BY COUNT(*) DESC
****************************************************************************************************
nl_queries:
What is the id and weight of every pet who is older than 1 , and order X in ascending order .
database schema:
Table Has_Pet, columns = [*,StuID, PetID]
Table Pets, columns = [*,PetID, PetType, pet_age, weight]
target dvq:
Visualize BAR SELECT PetID , weight FROM pets WHERE pet_age > 1 ORDER BY PetID ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
How many rooms have king beds ? Report the number for each decor type Plot them as bar chart , I want to sort by the Y from low to high please .
database schema:
Table Rooms, columns = [*,RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor]
target dvq:
Visualize BAR SELECT decor , count(*) FROM Rooms WHERE bedType = "King" GROUP BY decor ORDER BY count(*) ASC
****************************************************************************************************
nl_queries:
Which ministers are not a part of the Progress Party , and count them by a bar chart , order in asc by the Y .
database schema:
Table party, columns = [*,Party_ID, Minister, Took_office, Left_office, Region_ID, Party_name]
target dvq:
Visualize BAR SELECT Minister , COUNT(Minister) FROM party WHERE party_name != 'Progress Party' GROUP BY Minister ORDER BY COUNT(Minister) ASC
****************************************************************************************************
nl_queries:
What are the different affiliations , and what is the total enrollment of schools founded after 1850 for each enrollment type Visualize by bar chart , and I want to rank from low to high by the total number of enrollment please .
database schema:
Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]
target dvq:
Visualize BAR SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation ORDER BY sum(Enrollment) ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the amount of hire_date bin hire_date by weekday in a bar chart , and rank from high to low by the Y please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the average of manager_id over the job_id , and group by attribute job_id .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a line chart about the change of employee_id over hire_date , and list in desc by the x axis please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the sum of employee_id bin hire_date by time in a bar chart , and rank total number from low to high order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(EMPLOYEE_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Give me the number of the dates when the max temperature was higher than 85 , and I want to order from low to high by the y-axis .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) ASC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the sum of manager_id over the hire_date bin hire_date by time .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id , order from high to low by the x-axis .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , for department_id , hire_date , visualize the trend , and list from high to low by the x axis .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the sum of salary bin hire_date by time in a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the average of salary bin hire_date by weekday , and visualize them by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
what is the number of players who have points less than 30 for each position ?
database schema:
Table player, columns = [*,Player_ID, name, Position, Club_ID, Apps, Tries, Goals, Points]
target dvq:
Visualize BAR SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id , list by the y axis in descending .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY SUM(MANAGER_ID) DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the amount of hire_date over the hire_date bin hire_date by weekday by a bar chart , rank by the y axis in ascending please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a line chart about the change of commission_pct over hire_date .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
For all storms with at least 1 death , show me the name and the total number of deaths with a bar chart , order by the bar in descending .
database schema:
Table storm, columns = [*,Storm_ID, Name, Dates_active, Max_speed, Damage_millions_USD, Number_Deaths]
target dvq:
Visualize BAR SELECT Name , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Name DESC
****************************************************************************************************
nl_queries:
Count the number of people of each sex who have a weight higher than 85 , I want to sort by the Y in desc .
database schema:
Table people, columns = [*,People_ID, Sex, Name, Date_of_Birth, Height, Weight]
target dvq:
Visualize BAR SELECT Sex , count(*) FROM people WHERE weight > 85 GROUP BY sex ORDER BY count(*) DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of salary over the hire_date bin hire_date by time , and I want to sort y-axis in desc order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a line chart about the change of employee_id over hire_date , and I want to display x axis in desc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
Return a histogram on what is average age of male for different job title ? , sort bar in asc order .
database schema:
Table Person, columns = [*,name, age, city, gender, job]
target dvq:
Visualize BAR SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY job ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the sum of employee_id bin hire_date by weekday , and visualize them by a bar chart , and sort in desc by the y-axis .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(EMPLOYEE_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the average of employee_id bin hire_date by weekday in a bar chart , could you show Y in ascending order ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(EMPLOYEE_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all storms with at least 1 death , compare the number of deaths by name with a bar graph , and order by the bar in descending .
database schema:
Table storm, columns = [*,Storm_ID, Name, Dates_active, Max_speed, Damage_millions_USD, Number_Deaths]
target dvq:
Visualize BAR SELECT Name , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Name DESC
****************************************************************************************************
nl_queries:
Give the proportion of how many male and female assistant professors do we have ?
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
Table Faculty, columns = [*,FacID, Lname, Fname, Rank, Sex, Phone, Room, Building]
target dvq:
Visualize PIE SELECT Sex , count(*) FROM Faculty WHERE rank = "AsstProf" GROUP BY sex
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of hire_date and the average of salary bin hire_date by weekday in a bar chart , and display in descending by the Y-axis please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id , and display by the mean employee id from high to low .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY AVG(EMPLOYEE_ID) DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Visualize a bar chart for what is the id and weight of every pet who is older than 1 ? , and order from low to high by the y axis please .
database schema:
Table Has_Pet, columns = [*,StuID, PetID]
Table Pets, columns = [*,PetID, PetType, pet_age, weight]
target dvq:
Visualize BAR SELECT PetID , weight FROM pets WHERE pet_age > 1 ORDER BY weight ASC
****************************************************************************************************
nl_queries:
Show the number of male and female assistant professors Plot them as bar chart , display in descending by the X-axis .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
Table Faculty, columns = [*,FacID, Lname, Fname, Rank, Sex, Phone, Room, Building]
target dvq:
Visualize BAR SELECT Sex , count(*) FROM Faculty WHERE rank = "AsstProf" GROUP BY sex ORDER BY Sex DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday , I want to rank by the y axis in desc .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(DEPARTMENT_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Draw a bar chart for how many captains with younger than 50 are in each rank ? , show by the Y-axis in asc .
database schema:
Table captain, columns = [*,Captain_ID, Name, Ship_ID, age, Class, Rank]
target dvq:
Visualize BAR SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank ORDER BY count(*) ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of manager_id over the job_id , and group by attribute job_id , and rank by the Y-axis from low to high .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY AVG(MANAGER_ID) ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the sum of department_id bin hire_date by weekday in a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by weekday , and rank in asc by the Y .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Show the relationship between age and weight of the dogs who have been abandoned in a group scatter chart that groups by dog's name .
database schema:
Table Dogs, columns = [*,dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed]
target dvq:
Visualize SCATTER SELECT age , weight FROM Dogs WHERE abandoned_yn = 1 GROUP BY name
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of job_id and the amount of job_id , and group by attribute job_id in a bar chart , and show from high to low by the X-axis please .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the amount of hire_date bin hire_date by weekday in a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of job_id and the average of employee_id , and group by attribute job_id in a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
Give me a bar chart showing the comparison of the pixel aspect ratio and the nation of the tv channels that do not use English , I want to rank by the y-axis in descending .
database schema:
Table TV_Channel, columns = [*,id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option]
target dvq:
Visualize BAR SELECT Pixel_aspect_ratio_PAR , COUNT(Pixel_aspect_ratio_PAR) FROM tv_channel WHERE LANGUAGE != 'English' GROUP BY Pixel_aspect_ratio_PAR ORDER BY COUNT(Pixel_aspect_ratio_PAR) DESC
****************************************************************************************************
nl_queries:
List how many students in each last name who majored in 600 using a bar chart , and I want to rank by the Y in desc .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
target dvq:
Visualize BAR SELECT LName , COUNT(LName) FROM Student WHERE Major = 600 GROUP BY LName ORDER BY COUNT(LName) DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the change of commission_pct over hire_date in a line chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
What are the dates of transactions with at least 100 share count or amount bigger than 100 , and count them by a line chart , and could you rank by the X from low to high ?
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100  ORDER BY date_of_transaction ASC BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the amount of job_id over the job_id , and group by attribute job_id , and sort by the X in desc .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
Show the relationship between the rank and market values of the companies in the banking industry with a scatter chart .
database schema:
Table company, columns = [*,Company_ID, Rank, Company, Headquarters, Main_Industry, Sales_billion, Profits_billion, Assets_billion, Market_Value]
target dvq:
Visualize SCATTER SELECT Rank , Market_Value FROM company WHERE main_industry = 'Banking'
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of job_id and the sum of salary , and group by attribute job_id , show X-axis in desc order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find job_id and the sum of manager_id , and group by attribute job_id , and visualize them by a bar chart , show by the X in asc .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
What are the different affiliations , and what is the total enrollment of schools founded after 1850 for each enrollment type .
database schema:
Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]
target dvq:
Visualize PIE SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of hire_date and the sum of salary bin hire_date by weekday , rank sum salary from low to high order please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
A bar chart showing the number of flights with price higher than 300 for each destination city , and list in descending by the Y .
database schema:
Table flight, columns = [*,flno, origin, destination, distance, departure_date, arrival_date, price, aid]
target dvq:
Visualize BAR SELECT destination , COUNT(destination) FROM Flight WHERE price > 300 GROUP BY destination ORDER BY COUNT(destination) DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the sum of manager_id over the hire_date bin hire_date by time by a bar chart , order from low to high by the total number .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(MANAGER_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
A line chart for what are the number of the dates of transactions with at least 100 share count or amount bigger than 100 ? , and display by the date_of_transaction in asc .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100  ORDER BY date_of_transaction ASC BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the sum of manager_id bin hire_date by weekday , and visualize them by a bar chart , could you list y axis in desc order ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(MANAGER_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find hire_date and the average of manager_id bin hire_date by time , and visualize them by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of job_id and the sum of salary , and group by attribute job_id in a bar chart , and order from low to high by the y axis please .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY SUM(SALARY) ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a line chart about the change of department_id over hire_date , I want to order by the X-axis in asc .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
What are the number of the dates with a maximum temperature higher than 85 ? , and sort by the the number of date in desc .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) DESC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by time .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Show the number of products with price higher than 1000 or lower than 500 for each product type code in a bar chart , rank x-axis in ascending order .
database schema:
Table Products, columns = [*,product_id, product_type_code, product_name, product_price]
target dvq:
Visualize BAR SELECT product_type_code , COUNT(product_type_code) FROM products WHERE product_price > 1000 OR product_price < 500 GROUP BY product_type_code ORDER BY product_type_code ASC
****************************************************************************************************
nl_queries:
Select the name of the products with a price less than or equal to $200 , and count them by a bar chart , and rank by the y axis in ascending .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , COUNT(Name) FROM products WHERE price <= 200 GROUP BY Name ORDER BY COUNT(Name) ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of manager_id over the hire_date bin hire_date by time , show in descending by the y-axis please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(MANAGER_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
What are the pixel aspect ratio and country of origin for all TV channels that do not use English ? Show the comparison of the total number of pixel aspect ratio in a bar chart , I want to display in desc by the Pixel_aspect_ratio_PAR .
database schema:
Table TV_Channel, columns = [*,id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option]
target dvq:
Visualize BAR SELECT Pixel_aspect_ratio_PAR , COUNT(Pixel_aspect_ratio_PAR) FROM tv_channel WHERE LANGUAGE != 'English' GROUP BY Pixel_aspect_ratio_PAR ORDER BY Pixel_aspect_ratio_PAR DESC
****************************************************************************************************
nl_queries:
Show a bar chart about the number of results of the battles when the bulgarian commander is not 'Boril' , and I want to rank by the bars in asc .
database schema:
Table battle, columns = [*,id, name, date, bulgarian_commander, latin_commander, result]
target dvq:
Visualize BAR SELECT result , COUNT(result) FROM battle WHERE bulgarian_commander != 'Boril' GROUP BY result ORDER BY result ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a scatter chart shows the correlation between commission_pct and manager_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT COMMISSION_PCT , MANAGER_ID FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a bar chart shows the distribution of hire_date and the sum of salary bin hire_date by time .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of job_id and the sum of salary , and group by attribute job_id in a bar chart , rank x axis in ascending order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of job_id and the sum of employee_id , and group by attribute job_id in a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a scatter chart about the correlation between employee_id and commission_pct .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT EMPLOYEE_ID , COMMISSION_PCT FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
How many rooms have king beds ? Report the number for each decor type Plot them as bar chart , and I want to rank by the y-axis in desc .
database schema:
Table Rooms, columns = [*,RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor]
target dvq:
Visualize BAR SELECT decor , count(*) FROM Rooms WHERE bedType = "King" GROUP BY decor ORDER BY count(*) DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday , I want to show from low to high by the Y .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(DEPARTMENT_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find job_id and the average of employee_id , and group by attribute job_id , and visualize them by a bar chart , I want to display from low to high by the y axis .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY AVG(EMPLOYEE_ID) ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of job_id and the sum of salary , and group by attribute job_id , and could you rank by the x axis in desc ?
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For those employees whose first name is ending with the letter m , visualize a bar chart to show each employee's salary by the last name , I want to rank by the Y in ascending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT LAST_NAME , SALARY FROM employees WHERE first_name LIKE '%m' ORDER BY SALARY ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the sum of department_id bin hire_date by weekday , and visualize them by a bar chart , could you order from high to low by the y axis please ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(DEPARTMENT_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the sum of salary bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Show all dates of transactions whose type code is "SALE" , and count them by a line chart , and list x axis from high to low order .
database schema:
Table Ref_Transaction_Types, columns = [*,transaction_type_code, transaction_type_description]
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE transaction_type_code = "SALE"  ORDER BY date_of_transaction DESC BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
Give me the number of the dates when the max temperature was higher than 85 , and display from high to low by the Y .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) DESC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a scatter chart shows the correlation between salary and manager_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT SALARY , MANAGER_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
Give me a bar chart to show how many dates with a max temperature greater than or equal to 80 for each day , and could you show from high to low by the Y ?
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f >= 80  ORDER BY COUNT(date) DESC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a line chart about the change of department_id over hire_date , and display by the X from low to high .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
A line chart for finding the number of the dates of the tests taken with result "Pass" .
database schema:
Table Student_Tests_Taken, columns = [*,registration_id, date_test_taken, test_result]
target dvq:
Visualize LINE SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = "Pass" BIN date_test_taken BY DAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the sum of department_id over the hire_date bin hire_date by weekday by a bar chart , and display in desc by the y-axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(DEPARTMENT_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the trend about department_id over hire_date , could you show in descending by the x-axis please ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id , sort Y-axis from low to high order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY AVG(SALARY) ASC
****************************************************************************************************
nl_queries:
Show me a bar chart for how many invoices were billed from each state ? , and show in ascending by the billing_state .
database schema:
Table invoices, columns = [*,id, customer_id, invoice_date, billing_address, billing_city, billing_state, billing_country, billing_postal_code, total]
target dvq:
Visualize BAR SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = "USA" GROUP BY billing_state ORDER BY billing_state ASC
****************************************************************************************************
nl_queries:
Return the number of the categories of music festivals that have the result "Awarded" , show in descending by the x axis .
database schema:
Table music_festival, columns = [*,ID, Music_Festival, Date_of_ceremony, Category, Volume, Result]
target dvq:
Visualize BAR SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = "Awarded" GROUP BY Category ORDER BY Category DESC
****************************************************************************************************
nl_queries:
Draw a bar chart for what is average age of male for different job title ? , I want to order y axis in ascending order please .
database schema:
Table Person, columns = [*,name, age, city, gender, job]
target dvq:
Visualize BAR SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY avg(age) ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the sum of department_id bin hire_date by time , and visualize them by a bar chart , show by the Y-axis in ascending .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(DEPARTMENT_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of hire_date and the average of department_id bin hire_date by weekday , I want to order y axis in ascending order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(DEPARTMENT_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of department_id over the hire_date bin hire_date by weekday .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the amount of hire_date over the hire_date bin hire_date by time by a bar chart , and display by the y axis in descending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , visualize a bar chart about the distribution of name and manufacturer , rank from low to high by the Y .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Manufacturer FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Manufacturer ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
What is average age of male for different job title . Show the proportion .
database schema:
Table Person, columns = [*,name, age, city, gender, job]
target dvq:
Visualize PIE SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job
****************************************************************************************************
nl_queries:
How many rooms cost more than 120 , for each different decor Plot them as bar chart , and rank by the decor from low to high .
database schema:
Table Rooms, columns = [*,RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor]
target dvq:
Visualize BAR SELECT decor , count(*) FROM Rooms WHERE basePrice > 120 GROUP BY decor ORDER BY decor ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a scatter chart about the correlation between commission_pct and department_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT COMMISSION_PCT , DEPARTMENT_ID FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
A bar chart for what are the number of the dates in which the mean sea level pressure was between 303 and 31 ? , display Y-axis from low to high order .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) ASC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the average of employee_id bin hire_date by time in a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Return a histogram on what is average age of male for different job title ? , and sort y axis in descending order .
database schema:
Table Person, columns = [*,name, age, city, gender, job]
target dvq:
Visualize BAR SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY avg(age) DESC
****************************************************************************************************
nl_queries:
Return the number of the categories of music festivals that have the result "Awarded" , and display Y from high to low order .
database schema:
Table music_festival, columns = [*,ID, Music_Festival, Date_of_ceremony, Category, Volume, Result]
target dvq:
Visualize BAR SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = "Awarded" GROUP BY Category ORDER BY COUNT(Category) DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the sum of manager_id bin hire_date by time , and visualize them by a bar chart , and could you list by the total number in asc ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(MANAGER_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me the trend about employee_id over hire_date with a line chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find job_id and the average of manager_id , and group by attribute job_id , and visualize them by a bar chart .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
What is the average age of male students in each city ? Draw a bar chart , display by the city_code in ascending please .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
target dvq:
Visualize BAR SELECT city_code , avg(age) FROM student WHERE sex = 'M' GROUP BY city_code ORDER BY city_code ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of hire_date and the sum of salary bin hire_date by weekday .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the average of manager_id bin hire_date by time , and visualize them by a bar chart , and could you list from low to high by the the average of manager id please ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(MANAGER_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
What are the number of the dates of transactions with at least 100 share count or amount bigger than 100 ? , and could you display by the date_of_transaction in ascending ?
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100  ORDER BY date_of_transaction ASC BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the sum of department_id over the job_id , and group by attribute job_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a line chart about the change of department_id over hire_date .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
Return the number of the categories of music festivals that have the result "Awarded" .
database schema:
Table music_festival, columns = [*,ID, Music_Festival, Date_of_ceremony, Category, Volume, Result]
target dvq:
Visualize PIE SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = "Awarded" GROUP BY Category
****************************************************************************************************
nl_queries:
Show the number of the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000 .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000 BIN date_of_transaction BY WEEKDAY
****************************************************************************************************
nl_queries:
What are the salaries and manager ids for employees who have managers . Show scatter chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT SALARY , MANAGER_ID FROM employees WHERE manager_id != "null"
****************************************************************************************************
nl_queries:
Visualize a bar chart for what is the id and weight of every pet who is older than 1 ?
database schema:
Table Has_Pet, columns = [*,StuID, PetID]
Table Pets, columns = [*,PetID, PetType, pet_age, weight]
target dvq:
Visualize BAR SELECT PetID , weight FROM pets WHERE pet_age > 1
****************************************************************************************************
nl_queries:
List the physicians' employee ids together with their primary affiliation departments' ids . Plot them as scatter chart .
database schema:
Table Physician, columns = [*,EmployeeID, Name, Position, SSN]
Table Department, columns = [*,DepartmentID, Name, Head]
Table Affiliated_With, columns = [*,Physician, Department, PrimaryAffiliation]
Table Trained_In, columns = [*,Physician, Treatment, CertificationDate, CertificationExpires]
Table Appointment, columns = [*,AppointmentID, Patient, PrepNurse, Physician, Start, End, ExaminationRoom]
Table Prescribes, columns = [*,Physician, Patient, Medication, Date, Appointment, Dose]
Table Undergoes, columns = [*,Patient, Procedures, Stay, DateUndergoes, Physician, AssistingNurse]
target dvq:
Visualize SCATTER SELECT Physician , Department FROM affiliated_with WHERE primaryaffiliation = 1
****************************************************************************************************
nl_queries:
For all storms with at least 1 death , show me the dates active and the total number of deaths with a bar chart , could you sort by the names in asc ?
database schema:
Table storm, columns = [*,Storm_ID, Name, Dates_active, Max_speed, Damage_millions_USD, Number_Deaths]
target dvq:
Visualize BAR SELECT Dates_active , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Dates_active ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , for salary , hire_date , visualize the trend , and order in asc by the x axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the average of department_id bin hire_date by time in a bar chart , and rank in ascending by the Y .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(DEPARTMENT_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
What is the average age for a male in each job Visualize by bar chart , and show x-axis in desc order .
database schema:
Table Person, columns = [*,name, age, city, gender, job]
target dvq:
Visualize BAR SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY job DESC
****************************************************************************************************
nl_queries:
Which tests have "Pass" results ? Return the dates when the tests were taken , and count them by a bar chart , and sort in desc by the y axis .
database schema:
Table Student_Tests_Taken, columns = [*,registration_id, date_test_taken, test_result]
target dvq:
Visualize BAR SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = "Pass"  ORDER BY COUNT(date_test_taken) DESC BIN date_test_taken BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a line chart about the change of commission_pct over hire_date .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
Find the salary and manager number for those employees who is working under a manager .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT SALARY , MANAGER_ID FROM employees WHERE manager_id != "null"
****************************************************************************************************
nl_queries:
Which tests have "Pass" results ? Return the dates when the tests were taken , and count them by a bar chart
database schema:
Table Student_Tests_Taken, columns = [*,registration_id, date_test_taken, test_result]
target dvq:
Visualize BAR SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = "Pass" BIN date_test_taken BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of hire_date and the average of salary bin hire_date by time , and could you rank by the Y-axis from high to low ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a bar chart shows the distribution of job_id and the sum of department_id , and group by attribute job_id , I want to display in desc by the sum department id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY SUM(DEPARTMENT_ID) DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find job_id and the sum of employee_id , and group by attribute job_id , and visualize them by a bar chart , and I want to order JOB_ID in asc order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
Pie chart , group and count the decor of rooms that have a king bed .
database schema:
Table Rooms, columns = [*,RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor]
target dvq:
Visualize PIE SELECT decor , COUNT(decor) FROM Rooms WHERE bedtype = 'King' GROUP BY decor
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the average of department_id bin hire_date by weekday in a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Return a bar chart on what are the district names and city populations for all districts that between 200 , 000 and 2 , 000 , 000 residents ? , show by the y-axis in descending .
database schema:
Table district, columns = [*,District_ID, District_name, Headquartered_City, City_Population, City_Area]
target dvq:
Visualize BAR SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000 ORDER BY City_Population DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a scatter chart about the correlation between employee_id and department_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT EMPLOYEE_ID , DEPARTMENT_ID FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the change of commission_pct over hire_date in a line chart , and I want to list in ascending by the HIRE_DATE .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
How many male and female assistant professors do we have , list y axis in ascending order .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
Table Faculty, columns = [*,FacID, Lname, Fname, Rank, Sex, Phone, Room, Building]
target dvq:
Visualize BAR SELECT Sex , count(*) FROM Faculty WHERE rank = "AsstProf" GROUP BY sex ORDER BY count(*) ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a line chart about the change of employee_id over hire_date .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
A bar chart for showing the number of the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000 , and sort in asc by the Y please .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000  ORDER BY COUNT(date_of_transaction) ASC BIN date_of_transaction BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize the relationship between manager_id and department_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT MANAGER_ID , DEPARTMENT_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the sum of employee_id over the hire_date bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Give me a histogram for what is the number of players who have points less than 30 for each position ? , and show X from low to high order .
database schema:
Table player, columns = [*,Player_ID, name, Position, Club_ID, Apps, Tries, Goals, Points]
target dvq:
Visualize BAR SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION ORDER BY Position ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id , and list Y in desc order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY SUM(MANAGER_ID) DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a scatter chart about the correlation between employee_id and department_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT EMPLOYEE_ID , DEPARTMENT_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id , and display in asc by the X .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
Visualize a bar chart for how many rooms cost more than 120 , for each different decor ? , and list by the Y in descending .
database schema:
Table Rooms, columns = [*,RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor]
target dvq:
Visualize BAR SELECT decor , count(*) FROM Rooms WHERE basePrice > 120 GROUP BY decor ORDER BY count(*) DESC
****************************************************************************************************
nl_queries:
For employees with first names that end with the letter m , give me a bar chart to show their average salary .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT FIRST_NAME , AVG(SALARY) FROM employees WHERE first_name LIKE '%m' GROUP BY FIRST_NAME
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
What are the number of the dates in which the mean sea level pressure was between 303 and 31 ? , and could you rank in desc by the y-axis ?
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) DESC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find job_id and the sum of salary , and group by attribute job_id , and visualize them by a bar chart , and display by the JOB_ID in desc .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the average of salary bin hire_date by time , and visualize them by a bar chart , show y axis in asc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Count the number of captains younger than 50 of each rank , and I want to order by the X from high to low .
database schema:
Table captain, columns = [*,Captain_ID, Name, Ship_ID, age, Class, Rank]
target dvq:
Visualize BAR SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank ORDER BY Rank DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , what is the relationship between manager_id and department_id ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT MANAGER_ID , DEPARTMENT_ID FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id , I want to order bars in descending order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
What are the number of the dates that have an average sea level pressure between 30 . 3 and 31 ?
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31 BIN date BY YEAR
****************************************************************************************************
nl_queries:
Visualize the name and their component amounts with a bar chart for all furnitures that have more than 10 components , order by the X in desc please .
database schema:
Table manufacturer, columns = [*,Manufacturer_ID, Open_Year, Name, Num_of_Factories, Num_of_Shops]
Table furniture, columns = [*,Furniture_ID, Name, Num_of_Component, Market_Rate]
target dvq:
Visualize BAR SELECT Name , Num_of_Component FROM furniture WHERE Num_of_Component > 10 ORDER BY Name DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the sum of department_id bin hire_date by time in a bar chart , and I want to display by the total number of department id in desc .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(DEPARTMENT_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Visualize the name and their component amounts all furnitures that have more than 10 components .
database schema:
Table manufacturer, columns = [*,Manufacturer_ID, Open_Year, Name, Num_of_Factories, Num_of_Shops]
Table furniture, columns = [*,Furniture_ID, Name, Num_of_Component, Market_Rate]
target dvq:
Visualize PIE SELECT Name , Num_of_Component FROM furniture WHERE Num_of_Component > 10
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday , and could you display by the sum department id in ascending ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(DEPARTMENT_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a line chart about the change of salary over hire_date .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
How many rooms cost more than 120 , for each different decor Plot them as bar chart , order in desc by the X .
database schema:
Table Rooms, columns = [*,RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor]
target dvq:
Visualize BAR SELECT decor , count(*) FROM Rooms WHERE basePrice > 120 GROUP BY decor ORDER BY decor DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of department_id over the job_id , and group by attribute job_id by a bar chart , and show total number in ascending order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY AVG(DEPARTMENT_ID) ASC
****************************************************************************************************
nl_queries:
A pie chart showing the number of results of the battles when the bulgarian commander is not 'Boril' .
database schema:
Table battle, columns = [*,id, name, date, bulgarian_commander, latin_commander, result]
target dvq:
Visualize PIE SELECT result , COUNT(result) FROM battle WHERE bulgarian_commander != 'Boril' GROUP BY result
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , for commission_pct , hire_date , visualize the trend , and order from low to high by the X-axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the average of employee_id bin hire_date by weekday , and visualize them by a bar chart , I want to order in ascending by the total number please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(EMPLOYEE_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find job_id and the average of department_id , and group by attribute job_id , and visualize them by a bar chart , rank by the Y in descending .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY AVG(DEPARTMENT_ID) DESC
****************************************************************************************************
nl_queries:
Count the number of documents with the type code BK that correspond to each product id with a scatter chart .
database schema:
Table Ref_Document_Types, columns = [*,Document_Type_Code, Document_Type_Name, Document_Type_Description]
Table Projects, columns = [*,Project_ID, Project_Details]
Table Documents, columns = [*,Document_ID, Document_Type_Code, Project_ID, Document_Date, Document_Name, Document_Description, Other_Details]
target dvq:
Visualize SCATTER SELECT count(*) , Project_ID FROM Documents WHERE document_type_code = "BK" GROUP BY project_id
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of job_id and the sum of department_id , and group by attribute job_id in a bar chart , and rank x-axis from high to low order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id , list in asc by the X .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
What are the number of the different years in which there were cars produced that weighed less than 4000 and also cars that weighted more than 3000 ?
database schema:
Table cars_data, columns = [*,Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year]
target dvq:
Visualize BAR SELECT Year , COUNT(Year) FROM cars_data where weight between 3000 and 4000 BIN Year BY WEEKDAY
****************************************************************************************************
nl_queries:
Return the number of the date of birth for all the guests with gender code "Male" , sort Y in ascending order please .
database schema:
Table Guests, columns = [*,guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth]
target dvq:
Visualize BAR SELECT date_of_birth , COUNT(date_of_birth) FROM Guests WHERE gender_code = "Male"  ORDER BY COUNT(date_of_birth) ASC BIN date_of_birth BY WEEKDAY
****************************************************************************************************
nl_queries:
What are the number of the dates with a maximum temperature higher than 85 ? , and rank from high to low by the the number of date .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) DESC BIN date BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of job_id and the sum of manager_id , and group by attribute job_id in a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me the trend about employee_id over hire_date with a line chart , and rank X-axis from high to low order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the average of salary bin hire_date by weekday , and visualize them by a bar chart , I want to order in asc by the Y-axis .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of job_id and the average of manager_id , and group by attribute job_id , could you show from low to high by the Y-axis ?
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY AVG(MANAGER_ID) ASC
****************************************************************************************************
nl_queries:
What are the dates in which the mean sea level pressure was between 30 . 3 and 31 , and count them by a line chart
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize LINE SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31 GROUP BY date
****************************************************************************************************
nl_queries:
How many professors have a PhD in each department Show bar chart , sort Y-axis in desc order .
database schema:
Table COURSE, columns = [*,CRS_CODE, DEPT_CODE, CRS_DESCRIPTION, CRS_CREDIT]
Table DEPARTMENT, columns = [*,DEPT_CODE, DEPT_NAME, SCHOOL_CODE, EMP_NUM, DEPT_ADDRESS, DEPT_EXTENSION]
Table PROFESSOR, columns = [*,EMP_NUM, DEPT_CODE, PROF_OFFICE, PROF_EXTENSION, PROF_HIGH_DEGREE]
Table STUDENT, columns = [*,STU_NUM, STU_LNAME, STU_FNAME, STU_INIT, STU_DOB, STU_HRS, STU_CLASS, STU_GPA, STU_TRANSFER, DEPT_CODE, STU_PHONE, PROF_NUM]
target dvq:
Visualize BAR SELECT DEPT_CODE , count(*) FROM professor WHERE prof_high_degree = 'Ph.D.' GROUP BY dept_code ORDER BY count(*) DESC
****************************************************************************************************
nl_queries:
A bar chart about what is the id and weight of every pet who is older than 1 ? , sort weight in desc order .
database schema:
Table Has_Pet, columns = [*,StuID, PetID]
Table Pets, columns = [*,PetID, PetType, pet_age, weight]
target dvq:
Visualize BAR SELECT PetID , weight FROM pets WHERE pet_age > 1 ORDER BY weight DESC
****************************************************************************************************
nl_queries:
Show the number of products with price higher than 1000 or lower than 500 for each product name in a bar chart , and I want to sort by the y-axis in ascending .
database schema:
Table Products, columns = [*,product_id, product_type_code, product_name, product_price]
target dvq:
Visualize BAR SELECT product_name , COUNT(product_name) FROM products WHERE product_price > 1000 OR product_price < 500 GROUP BY product_name ORDER BY COUNT(product_name) ASC
****************************************************************************************************
nl_queries:
A bar chart for listing the number of the name of technicians whose team is not "NYY" , I want to display from low to high by the X .
database schema:
Table repair, columns = [*,repair_ID, name, Launch_Date, Notes]
Table machine, columns = [*,Machine_ID, Making_Year, Class, Team, Machine_series, value_points, quality_rank]
Table technician, columns = [*,technician_id, Name, Team, Starting_Year, Age]
target dvq:
Visualize BAR SELECT Name , COUNT(Name) FROM technician WHERE Team != "NYY" GROUP BY Name ORDER BY Name ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of job_id and the sum of manager_id , and group by attribute job_id .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a line chart about the change of department_id over hire_date , and sort by the X-axis in ascending .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find job_id and the average of employee_id , and group by attribute job_id , and visualize them by a bar chart , and could you show in ascending by the JOB_ID ?
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
Show the names and total passengers for all train stations not in London Visualize by bar chart , rank y axis in desc order .
database schema:
Table station, columns = [*,Station_ID, Name, Annual_entry_exit, Annual_interchanges, Total_Passengers, Location, Main_Services, Number_of_Platforms]
Table train, columns = [*,Train_ID, Name, Time, Service]
target dvq:
Visualize BAR SELECT Name , Total_Passengers FROM station WHERE LOCATION != 'London' ORDER BY Total_Passengers DESC
****************************************************************************************************
nl_queries:
For employees without the letter M in their first name , give me a line chart to show the salary change over their hire date using a line chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE first_name NOT LIKE '%M%'
****************************************************************************************************
nl_queries:
For those employees whose first name does not contain the letter M , give me a line chart to show the hire date and the corresponding salaries , and show X-axis from high to low order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
A bar chart about what are the different affiliations , and what is the total enrollment of schools founded after 1850 for each enrollment type ? , I want to sort X-axis from low to high order please .
database schema:
Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]
target dvq:
Visualize BAR SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation ORDER BY Affiliation ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find job_id and the average of manager_id , and group by attribute job_id , and visualize them by a bar chart , I want to list in desc by the y axis .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY AVG(MANAGER_ID) DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of job_id and the average of department_id , and group by attribute job_id .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , what is the relationship between employee_id and department_id ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT EMPLOYEE_ID , DEPARTMENT_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the sum of salary bin hire_date by weekday in a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Return the date of birth for all the guests with gender code "Male" , and count them by a bar chart
database schema:
Table Guests, columns = [*,guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth]
target dvq:
Visualize BAR SELECT date_of_birth , COUNT(date_of_birth) FROM Guests WHERE gender_code = "Male" BIN date_of_birth BY WEEKDAY
****************************************************************************************************
nl_queries:
A bar chart for what are the number of the category of music festivals with result "Awarded" ? , I want to list x axis in asc order .
database schema:
Table music_festival, columns = [*,ID, Music_Festival, Date_of_ceremony, Category, Volume, Result]
target dvq:
Visualize BAR SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = "Awarded" GROUP BY Category ORDER BY Category ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the sum of manager_id over the hire_date bin hire_date by time by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
What are each physician's employee id and department id primarily affiliated . Plot them as scatter chart .
database schema:
Table Physician, columns = [*,EmployeeID, Name, Position, SSN]
Table Department, columns = [*,DepartmentID, Name, Head]
Table Affiliated_With, columns = [*,Physician, Department, PrimaryAffiliation]
Table Trained_In, columns = [*,Physician, Treatment, CertificationDate, CertificationExpires]
Table Appointment, columns = [*,AppointmentID, Patient, PrepNurse, Physician, Start, End, ExaminationRoom]
Table Prescribes, columns = [*,Physician, Patient, Medication, Date, Appointment, Dose]
Table Undergoes, columns = [*,Patient, Procedures, Stay, DateUndergoes, Physician, AssistingNurse]
target dvq:
Visualize SCATTER SELECT Physician , Department FROM affiliated_with WHERE primaryaffiliation = 1
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id , and I want to order y axis from low to high order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY AVG(EMPLOYEE_ID) ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time , show from high to low by the total number please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(DEPARTMENT_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose first name is ending with the letter m , sum their salary for visualizing a bar chart , and I want to display in descending by the bars please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT FIRST_NAME , SUM(SALARY) FROM employees WHERE first_name LIKE '%m' GROUP BY FIRST_NAME ORDER BY FIRST_NAME DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a line chart shows the trend of commission_pct over hire_date , show X-axis in ascending order please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of job_id and the sum of salary , and group by attribute job_id , and I want to display y axis from low to high order please .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY SUM(SALARY) ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the sum of manager_id over the hire_date bin hire_date by time by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by weekday , and rank Y-axis from low to high order please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(EMPLOYEE_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of job_id and the sum of manager_id , and group by attribute job_id .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
A bar chart for what are the number of the names of products with price at most 200 ? , and show from low to high by the total number please .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , COUNT(Name) FROM products WHERE price <= 200 GROUP BY Name ORDER BY COUNT(Name) ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the average of manager_id bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of job_id and the average of salary , and group by attribute job_id in a bar chart , and show y axis from high to low order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY AVG(SALARY) DESC
****************************************************************************************************
nl_queries:
Draw a bar chart for what is average age of male for different job title ? , order by the job in asc .
database schema:
Table Person, columns = [*,name, age, city, gender, job]
target dvq:
Visualize BAR SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY job ASC
****************************************************************************************************
nl_queries:
A bar chart for listing the number of the first name of all employees with job code PROF ordered by their date of birth .
database schema:
Table EMPLOYEE, columns = [*,EMP_NUM, EMP_LNAME, EMP_FNAME, EMP_INITIAL, EMP_JOBCODE, EMP_HIREDATE, EMP_DOB]
target dvq:
Visualize BAR SELECT EMP_FNAME , COUNT(EMP_FNAME) FROM employee WHERE emp_jobcode = 'PROF' GROUP BY EMP_FNAME ORDER BY emp_dob
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , find name and code , and visualize them by a bar chart , list from high to low by the names .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Code FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Name DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the sum of employee_id bin hire_date by time , and visualize them by a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a line chart shows the change of commission_pct over hire_date
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
Show a bar chart about the number of results of the battles when the bulgarian commander is not 'Boril' .
database schema:
Table battle, columns = [*,id, name, date, bulgarian_commander, latin_commander, result]
target dvq:
Visualize BAR SELECT result , COUNT(result) FROM battle WHERE bulgarian_commander != 'Boril' GROUP BY result
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of job_id and the sum of department_id , and group by attribute job_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a scatter chart about the correlation between manager_id and department_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT MANAGER_ID , DEPARTMENT_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of hire_date and the average of salary bin hire_date by time , and rank by the Y-axis in descending please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
How many mills of 'Grondzeiler' type are built in each year ? Give me the trend , list x-axis from low to high order .
database schema:
Table mill, columns = [*,architect_id, id, location, name, type, built_year, notes]
target dvq:
Visualize LINE SELECT built_year , COUNT(built_year) FROM mill WHERE TYPE = 'Grondzeiler'  ORDER BY built_year ASC BIN built_year BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by weekday , sort the average of manager id in desc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(MANAGER_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by weekday , show in ascending by the y axis please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(EMPLOYEE_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
What are the dates in which the mean sea level pressure was between 303 and 31 , and count them by a bar chart , order in ascending by the Y-axis .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) ASC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a line chart shows the change of employee_id over hire_date
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
What are the payment date of the payment with amount paid higher than 300 or with payment type is 'Check , and count them by a line chart , order x-axis in ascending order .
database schema:
Table Payments, columns = [*,payment_id, booking_id, customer_id, payment_type_code, amount_paid_in_full_yn, payment_date, amount_due, amount_paid]
target dvq:
Visualize LINE SELECT payment_date , COUNT(payment_date) FROM payments WHERE amount_paid > 300 OR payment_type_code = 'Check' GROUP BY payment_date ORDER BY payment_date ASC
****************************************************************************************************
nl_queries:
Visualize a bar chart for how many male and female assistant professors do we have ?
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
Table Faculty, columns = [*,FacID, Lname, Fname, Rank, Sex, Phone, Room, Building]
target dvq:
Visualize BAR SELECT Sex , count(*) FROM Faculty WHERE rank = "AsstProf" GROUP BY sex
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the amount of job_id over the job_id , and group by attribute job_id by a bar chart , and could you show names in descending order ?
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
Which ministers are not a part of the Progress Party , and count them by a bar chart
database schema:
Table party, columns = [*,Party_ID, Minister, Took_office, Left_office, Region_ID, Party_name]
target dvq:
Visualize BAR SELECT Minister , COUNT(Minister) FROM party WHERE party_name != 'Progress Party' GROUP BY Minister
****************************************************************************************************
nl_queries:
Return a bar chart on how many rooms have king beds ? Report the number for each decor type , could you list x-axis from high to low order ?
database schema:
Table Rooms, columns = [*,RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor]
target dvq:
Visualize BAR SELECT decor , count(*) FROM Rooms WHERE bedType = "King" GROUP BY decor ORDER BY decor DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of job_id and the sum of salary , and group by attribute job_id in a bar chart , display by the total number in desc .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY SUM(SALARY) DESC
****************************************************************************************************
nl_queries:
Find the latest logon date of the students whose family name is "Jaskolski" or "Langosh" , and count them by a bar chart , and could you show from high to low by the Y ?
database schema:
Table Course_Authors_and_Tutors, columns = [*,author_id, author_tutor_ATB, login_name, password, personal_name, middle_name, family_name, gender_mf, address_line_1]
Table Students, columns = [*,student_id, date_of_registration, date_of_latest_logon, login_name, password, personal_name, middle_name, family_name]
target dvq:
Visualize BAR SELECT date_of_latest_logon , COUNT(date_of_latest_logon) FROM Students WHERE family_name = "Jaskolski" OR family_name = "Langosh"  ORDER BY COUNT(date_of_latest_logon) DESC BIN date_of_latest_logon BY WEEKDAY
****************************************************************************************************
nl_queries:
Show names and seatings , ordered by seating for all tracks opened after 2000 in a bar chart .
database schema:
Table race, columns = [*,Race_ID, Name, Class, Date, Track_ID]
Table track, columns = [*,Track_ID, Name, Location, Seating, Year_Opened]
target dvq:
Visualize BAR SELECT Name , Seating FROM track WHERE year_opened > 2000 ORDER BY seating
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , a pie chart shows the proportion of name and code .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize PIE SELECT Name , Code FROM products WHERE price BETWEEN 60 AND 120
****************************************************************************************************
nl_queries:
A bar chart for showing the number of the musical nominee with award "Bob Fosse" or "Cleavant Derricks" .
database schema:
Table musical, columns = [*,Musical_ID, Name, Year, Award, Category, Nominee, Result]
target dvq:
Visualize BAR SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = "Tony Award" OR Award = "Cleavant Derricks" GROUP BY Nominee
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a scatter chart about the correlation between commission_pct and department_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT COMMISSION_PCT , DEPARTMENT_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a scatter chart shows the correlation between manager_id and department_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT MANAGER_ID , DEPARTMENT_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of job_id and the sum of employee_id , and group by attribute job_id , and display from low to high by the y axis please .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY SUM(EMPLOYEE_ID) ASC
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , show me about the correlation between code and manufacturer , and group by attribute name in a scatter chart .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize SCATTER SELECT Code , Manufacturer FROM products WHERE price BETWEEN 60 AND 120 GROUP BY Name
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , for manager_id , hire_date , visualize the trend , and I want to rank x-axis in asc order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
Compare the number of winery of the wines whose price is bigger than 100 , I want to show by the y axis from high to low .
database schema:
Table wine, columns = [*,No, Grape, Winery, Appelation, State, Name, Year, Price, Score, Cases, Drink]
target dvq:
Visualize BAR SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Winery ORDER BY COUNT(Winery) DESC
****************************************************************************************************
nl_queries:
What is the number of wines with price higher than 100 , sorted by year , group by grape and show by bar chart .
database schema:
Table grapes, columns = [*,ID, Grape, Color]
Table wine, columns = [*,No, Grape, Winery, Appelation, State, Name, Year, Price, Score, Cases, Drink]
target dvq:
Visualize BAR SELECT Year , COUNT(Year) FROM WINE WHERE Price > 100 GROUP BY Grape ORDER BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of hire_date and the average of salary bin hire_date by time .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the sum of department_id over the job_id , and group by attribute job_id by a bar chart .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of manager_id over the job_id , and group by attribute job_id by a bar chart , could you order x axis in desc order ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For those dates with a max temperature greater than or equal to 80 , I want to know the number of days on the day of the week interval using a bar chart , I want to display by the Y in asc .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f >= 80  ORDER BY COUNT(date) ASC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of job_id and the amount of job_id , and group by attribute job_id , I want to show in ascending by the JOB_ID .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For those employees whose first name is ending with the letter m , compute their average salary for visualizing a bar chart , and sort bars in descending order please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT FIRST_NAME , AVG(SALARY) FROM employees WHERE first_name LIKE '%m' GROUP BY FIRST_NAME ORDER BY FIRST_NAME DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a line chart about the change of salary over hire_date .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of job_id and the average of department_id , and group by attribute job_id , I want to rank in desc by the names please .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
What are the number of dates of birth of all the guests whose gender is "Male" ?
database schema:
Table Guests, columns = [*,guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth]
target dvq:
Visualize LINE SELECT date_of_birth , COUNT(date_of_birth) FROM Guests WHERE gender_code = "Male" BIN date_of_birth BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of job_id and the sum of employee_id , and group by attribute job_id in a bar chart , show bars from high to low order please .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by weekday , and rank total number from high to low order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a line chart about the change of salary over hire_date , and order x axis in asc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the sum of department_id over the hire_date bin hire_date by time by a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the sum of manager_id bin hire_date by weekday , and visualize them by a bar chart , I want to sort by the total number in desc .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(MANAGER_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a scatter chart about the correlation between salary and manager_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT SALARY , MANAGER_ID FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
Bin the hire date into the day of week interval , and then calculate the average salary of employees in each day for a bar chart , note that just select those employees without the letter M in their first name , and could you list Y in ascending order ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name NOT LIKE '%M%'  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Return the number of the categories of music festivals that have the result "Awarded" , and show by the names in asc .
database schema:
Table music_festival, columns = [*,ID, Music_Festival, Date_of_ceremony, Category, Volume, Result]
target dvq:
Visualize BAR SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = "Awarded" GROUP BY Category ORDER BY Category ASC
****************************************************************************************************
nl_queries:
Show the names and total passengers for all train stations not in London with a bar chart .
database schema:
Table station, columns = [*,Station_ID, Name, Annual_entry_exit, Annual_interchanges, Total_Passengers, Location, Main_Services, Number_of_Platforms]
Table train, columns = [*,Train_ID, Name, Time, Service]
target dvq:
Visualize BAR SELECT Name , Total_Passengers FROM station WHERE LOCATION != 'London'
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the average of salary bin hire_date by weekday , and visualize them by a bar chart , list y axis from low to high order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a bar chart shows the distribution of job_id and the sum of salary , and group by attribute job_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
How many injured players not suffering from injury of 'Knee problem' in each match ? Show me a bar chart grouping by number of matches , I want to display from high to low by the bar please .
database schema:
Table injury_accident, columns = [*,game_id, id, Player, Injury, Number_of_matches, Source]
target dvq:
Visualize BAR SELECT Number_of_matches , COUNT(Number_of_matches) FROM injury_accident WHERE injury != 'Knee problem' GROUP BY Number_of_matches ORDER BY Number_of_matches DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of job_id and the average of department_id , and group by attribute job_id , list by the bar from low to high .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of job_id and the sum of department_id , and group by attribute job_id , and I want to show by the Y-axis in ascending .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY SUM(DEPARTMENT_ID) ASC
****************************************************************************************************
nl_queries:
A pie chart about how many male and female assistant professors do we have ?
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
Table Faculty, columns = [*,FacID, Lname, Fname, Rank, Sex, Phone, Room, Building]
target dvq:
Visualize PIE SELECT Sex , count(*) FROM Faculty WHERE rank = "AsstProf" GROUP BY sex
****************************************************************************************************
nl_queries:
For all storms with at least 1 death , compare the number of deaths by dates active with a bar graph , and could you rank by the y-axis in asc ?
database schema:
Table storm, columns = [*,Storm_ID, Name, Dates_active, Max_speed, Damage_millions_USD, Number_Deaths]
target dvq:
Visualize BAR SELECT Dates_active , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Number_Deaths ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id , order by the x axis in ascending .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
Find the number of male students (with sex M) from each city in a bar chart , could you show in desc by the Y-axis please ?
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
target dvq:
Visualize BAR SELECT city_code , count(*) FROM student WHERE sex = 'M' GROUP BY city_code ORDER BY count(*) DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the average of department_id bin hire_date by weekday , and sort by the y axis from low to high please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(DEPARTMENT_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
A bar chart listing the number of wines whose price is bigger than 100 ordered by year .
database schema:
Table wine, columns = [*,No, Grape, Winery, Appelation, State, Name, Year, Price, Score, Cases, Drink]
target dvq:
Visualize BAR SELECT Year , COUNT(Year) FROM WINE WHERE Price > 100 GROUP BY Year ORDER BY YEAR
****************************************************************************************************
nl_queries:
Bin the hire date into the day of week interval , and then calculate the total salary of employees in each day for a bar chart , note that just select those employees without the letter M in their first name , I want to list Y from low to high order please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name NOT LIKE '%M%'  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Return the number of the categories of music festivals that have the result "Awarded" , show from low to high by the y axis .
database schema:
Table music_festival, columns = [*,ID, Music_Festival, Date_of_ceremony, Category, Volume, Result]
target dvq:
Visualize BAR SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = "Awarded" GROUP BY Category ORDER BY COUNT(Category) ASC
****************************************************************************************************
nl_queries:
Visualize a bar chart for what are the district names and city populations for all districts that between 200 , 000 and 2 , 000 , 000 residents ? , show by the City_Population in ascending .
database schema:
Table district, columns = [*,District_ID, District_name, Headquartered_City, City_Population, City_Area]
target dvq:
Visualize BAR SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000 ORDER BY City_Population ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find job_id and the amount of job_id , and group by attribute job_id , and visualize them by a bar chart , and I want to sort y axis in ascending order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY COUNT(JOB_ID) ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a bar chart shows the distribution of hire_date and the average of department_id bin hire_date by weekday , and order in desc by the the average of department id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(DEPARTMENT_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Find the market values of the companies in the banking industry order by their sales and profits in billion with a bar chart .
database schema:
Table company, columns = [*,Company_ID, Rank, Company, Headquarters, Main_Industry, Sales_billion, Profits_billion, Assets_billion, Market_Value]
target dvq:
Visualize BAR SELECT Company , Market_Value FROM company WHERE main_industry = 'Banking' ORDER BY sales_billion , profits_billion
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a line chart about the change of manager_id over hire_date , and sort from high to low by the X-axis .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the average of manager_id bin hire_date by weekday , rank in descending by the y axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(MANAGER_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of job_id and the sum of salary , and group by attribute job_id , order by the Y-axis in desc .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY SUM(SALARY) DESC
****************************************************************************************************
nl_queries:
What is the weight of each dog that was abandoned ? Show in a pie chart .
database schema:
Table Dogs, columns = [*,dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed]
target dvq:
Visualize PIE SELECT name , age FROM Dogs WHERE abandoned_yn = 1
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of hire_date and the average of salary bin hire_date by time , sort by the Y-axis in descending .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the average of department_id over the hire_date bin hire_date by weekday by a bar chart , sort from high to low by the y-axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(DEPARTMENT_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of job_id and the sum of department_id , and group by attribute job_id , I want to sort by the sum department id from low to high .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY SUM(DEPARTMENT_ID) ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a line chart about the change of manager_id over hire_date , display x axis in ascending order please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , visualize a bar chart about the distribution of name and price , order in ascending by the Y .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Price FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Price ASC
****************************************************************************************************
nl_queries:
Show the average age for all female students and group them by first name in a bar chart , and I want to display by the y-axis from high to low .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
target dvq:
Visualize BAR SELECT Fname , AVG(Age) FROM Student WHERE Sex = 'F' GROUP BY Fname ORDER BY AVG(Age) DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of employee_id over the hire_date bin hire_date by weekday by a bar chart , show by the Y from high to low .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(EMPLOYEE_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
What is the number of players who have points less than 30 for each position Plot them as bar chart , order the total number from high to low order .
database schema:
Table player, columns = [*,Player_ID, name, Position, Club_ID, Apps, Tries, Goals, Points]
target dvq:
Visualize BAR SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION ORDER BY count(*) DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , what is the relationship between commission_pct and department_id ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT COMMISSION_PCT , DEPARTMENT_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
For all storms with at least 1 death , compare the number of deaths by name with a bar graph , and could you display from high to low by the Number_Deaths ?
database schema:
Table storm, columns = [*,Storm_ID, Name, Dates_active, Max_speed, Damage_millions_USD, Number_Deaths]
target dvq:
Visualize BAR SELECT Name , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Number_Deaths DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a line chart shows the change of manager_id over hire_date
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find hire_date and the amount of hire_date bin hire_date by weekday , and visualize them by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of job_id and the average of manager_id , and group by attribute job_id , could you order x axis in desc order ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by time , and I want to sort Y-axis in ascending order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(MANAGER_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a line chart about the change of commission_pct over hire_date , and list in descending by the x-axis please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
How old is each dog that was abandoned ? Show in a bar chart , could you show X-axis from high to low order ?
database schema:
Table Dogs, columns = [*,dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed]
target dvq:
Visualize BAR SELECT name , age FROM Dogs WHERE abandoned_yn = 1 ORDER BY name DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id , order in ascending by the bars .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find job_id and the average of employee_id , and group by attribute job_id , and visualize them by a bar chart , and display y-axis in asc order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY AVG(EMPLOYEE_ID) ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by time , list total number in desc order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time , could you list by the Y-axis from low to high ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(DEPARTMENT_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by weekday , and I want to sort by the Y-axis in asc .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(MANAGER_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Give me a bar chart showing the comparison of the pixel aspect ratio and the nation of the tv channels that do not use English , show by the total number in asc .
database schema:
Table TV_Channel, columns = [*,id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option]
target dvq:
Visualize BAR SELECT Pixel_aspect_ratio_PAR , COUNT(Pixel_aspect_ratio_PAR) FROM tv_channel WHERE LANGUAGE != 'English' GROUP BY Pixel_aspect_ratio_PAR ORDER BY COUNT(Pixel_aspect_ratio_PAR) ASC
****************************************************************************************************
nl_queries:
For those employees whose first name does not containing the letter M , display their total salary by binning the hire date into Month interval for visualizing a bar chart , and display in descending by the Y-axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name NOT LIKE '%M%'  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the average of employee_id bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , draw a scatter chart about the correlation between price and manufacturer .
database schema:
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize SCATTER SELECT Price , Manufacturer FROM products WHERE price BETWEEN 60 AND 120
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday , and order by the y-axis from high to low .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
How many mills of 'Grondzeiler' type are built in each year ? Give me the trend , list in descending by the X-axis .
database schema:
Table mill, columns = [*,architect_id, id, location, name, type, built_year, notes]
target dvq:
Visualize LINE SELECT built_year , COUNT(built_year) FROM mill WHERE TYPE = 'Grondzeiler'  ORDER BY built_year DESC BIN built_year BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find job_id and the sum of salary , and group by attribute job_id , and visualize them by a bar chart , and could you list in ascending by the Y ?
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY SUM(SALARY) ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the average of salary over the hire_date bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the average of employee_id bin hire_date by weekday in a bar chart , and rank by the total number in desc .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(EMPLOYEE_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For employees with first names that end with the letter m , give me a bar chart to show their average salary , and order Y-axis in desc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT FIRST_NAME , AVG(SALARY) FROM employees WHERE first_name LIKE '%m' GROUP BY FIRST_NAME ORDER BY AVG(SALARY) DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the sum of manager_id over the hire_date bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Show the number of the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000 , show in ascending by the X-axis .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000  ORDER BY date_of_transaction ASC BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a line chart about the change of employee_id over hire_date , and could you display in asc by the HIRE_DATE ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
How many injured players not suffering from injury of 'Knee problem' in each match ? Show me a bar chart grouping by number of matches , and rank by the y axis from low to high .
database schema:
Table injury_accident, columns = [*,game_id, id, Player, Injury, Number_of_matches, Source]
target dvq:
Visualize BAR SELECT Number_of_matches , COUNT(Number_of_matches) FROM injury_accident WHERE injury != 'Knee problem' GROUP BY Number_of_matches ORDER BY COUNT(Number_of_matches) ASC
****************************************************************************************************
nl_queries:
For those employees whose first name does not contain the letter M , give me a line chart to show the hire date and the corresponding salaries , display by the x-axis in desc please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
Find the number of male students (with sex M) from each city in a bar chart , display from high to low by the X .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
target dvq:
Visualize BAR SELECT city_code , count(*) FROM student WHERE sex = 'M' GROUP BY city_code ORDER BY city_code DESC
****************************************************************************************************
nl_queries:
What are the number of the last names of female students , ordered by age descending ?
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
Table Faculty, columns = [*,FacID, Lname, Fname, Rank, Sex, Phone, Room, Building]
target dvq:
Visualize BAR SELECT LName , COUNT(LName) FROM STUDENT WHERE Sex = "F" GROUP BY LName ORDER BY Age DESC
****************************************************************************************************
nl_queries:
A bar chart for listing the number of the name of technicians whose team is not "NYY" , show x-axis in descending order please .
database schema:
Table repair, columns = [*,repair_ID, name, Launch_Date, Notes]
Table machine, columns = [*,Machine_ID, Making_Year, Class, Team, Machine_series, value_points, quality_rank]
Table technician, columns = [*,technician_id, Name, Team, Starting_Year, Age]
target dvq:
Visualize BAR SELECT Name , COUNT(Name) FROM technician WHERE Team != "NYY" GROUP BY Name ORDER BY Name DESC
****************************************************************************************************
nl_queries:
What are the names and seatings for all tracks opened after 2000 , ordered by seating . Show the proportion .
database schema:
Table race, columns = [*,Race_ID, Name, Class, Date, Track_ID]
Table track, columns = [*,Track_ID, Name, Location, Seating, Year_Opened]
target dvq:
Visualize PIE SELECT Name , Seating FROM track WHERE year_opened > 2000
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of job_id and the average of employee_id , and group by attribute job_id in a bar chart , sort x axis in desc order please .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a line chart about the change of department_id over hire_date .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the average of manager_id over the job_id , and group by attribute job_id by a bar chart .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of job_id and the amount of job_id , and group by attribute job_id , order by the total number in asc .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY COUNT(JOB_ID) ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the sum of employee_id bin hire_date by weekday , and visualize them by a bar chart , display y axis in desc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(EMPLOYEE_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the sum of manager_id over the job_id , and group by attribute job_id by a bar chart , display by the y axis in desc please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY SUM(MANAGER_ID) DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the sum of department_id over the job_id , and group by attribute job_id , could you rank bars in asc order ?
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of hire_date and the sum of salary bin hire_date by weekday , sort in ascending by the y axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id , I want to display bar from high to low order please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the sum of employee_id over the job_id , and group by attribute job_id , and could you show in desc by the names ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of job_id and the average of department_id , and group by attribute job_id , display in asc by the total number .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY AVG(DEPARTMENT_ID) ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find hire_date and the average of salary bin hire_date by weekday , and visualize them by a bar chart , list in ascending by the total number please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of hire_date and the average of salary bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a scatter chart about the correlation between employee_id and department_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT EMPLOYEE_ID , DEPARTMENT_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
Take the first name of all the good customers as the X-axis and gender of all the good customers as Y-axis in a bar chart , and sort by the names in asc .
database schema:
Table Customers, columns = [*,customer_id, coupon_id, good_or_bad_customer, first_name, last_name, gender_mf, date_became_customer, date_last_hire]
target dvq:
Visualize BAR SELECT first_name , gender_mf FROM customers WHERE good_or_bad_customer = 'good' ORDER BY first_name ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id , and order from low to high by the total number please .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY SUM(MANAGER_ID) ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the amount of hire_date bin hire_date by time , and display by the y axis in descending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
What are the different affiliations , and what is the total enrollment of schools founded after 1850 for each enrollment type . Visualize by bar chart .
database schema:
Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]
target dvq:
Visualize BAR SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation
****************************************************************************************************
nl_queries:
A bar chart showing the number of first name for all female students Their sex is F , and show in descending by the names .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
target dvq:
Visualize BAR SELECT Fname , COUNT(Fname) FROM Student WHERE Sex = 'F' GROUP BY Fname ORDER BY Fname DESC
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , find name and code , and visualize them by a bar chart .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Code FROM products WHERE price BETWEEN 60 AND 120
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , find name and price , and visualize them by a bar chart , and sort in ascending by the X-axis please .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Price FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Name ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by time , show Y-axis in ascending order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(DEPARTMENT_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find job_id and the average of salary , and group by attribute job_id , and visualize them by a bar chart , and display in descending by the X-axis .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
Give me the number of the dates when the max temperature was higher than 85 , and display from low to high by the Y .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) ASC BIN date BY YEAR
****************************************************************************************************
nl_queries:
Which directors had a movie in either 1999 or 2000 , and count them by a bar chart , I want to order Y from low to high order .
database schema:
Table book_club, columns = [*,book_club_id, Year, Author_or_Editor, Book_Title, Publisher, Category, Result]
Table movie, columns = [*,movie_id, Title, Year, Director, Budget_million, Gross_worldwide]
target dvq:
Visualize BAR SELECT Director , COUNT(Director) FROM movie WHERE YEAR = 1999 OR YEAR = 2000 GROUP BY Director ORDER BY COUNT(Director) ASC
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , draw a pie chart about the proportion of name and price .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize PIE SELECT Name , Price FROM products WHERE price BETWEEN 60 AND 120
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of hire_date and the sum of department_id bin hire_date by time , list by the y-axis from low to high please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(DEPARTMENT_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Find the last name of female (sex is F) students in the descending order of age , and count them by a bar chart
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
Table Faculty, columns = [*,FacID, Lname, Fname, Rank, Sex, Phone, Room, Building]
target dvq:
Visualize BAR SELECT LName , COUNT(LName) FROM STUDENT WHERE Sex = "F" GROUP BY LName ORDER BY Age DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , what is the relationship between manager_id and department_id ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT MANAGER_ID , DEPARTMENT_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
How many companies that are not headquartered in the United States for each main industry ? Show me a bar chart , could you sort in asc by the y axis please ?
database schema:
Table company, columns = [*,Company_ID, Rank, Company, Headquarters, Main_Industry, Sales_billion, Profits_billion, Assets_billion, Market_Value]
target dvq:
Visualize BAR SELECT Main_Industry , COUNT(Main_Industry) FROM company WHERE headquarters != 'USA' GROUP BY Main_Industry ORDER BY COUNT(Main_Industry) ASC
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , return a bar chart about the distribution of name and manufacturer , and display by the Name in desc .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Manufacturer FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Name DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a scatter chart about the correlation between commission_pct and manager_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT COMMISSION_PCT , MANAGER_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
Find the number of rooms with king bed for each decor type . Plot them as pie chart .
database schema:
Table Rooms, columns = [*,RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor]
target dvq:
Visualize PIE SELECT decor , count(*) FROM Rooms WHERE bedType = "King" GROUP BY decor
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of job_id and the sum of employee_id , and group by attribute job_id , and I want to order in ascending by the bars .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
Find the average age of male students (with sex M) from each city , show in descending by the x axis .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
target dvq:
Visualize BAR SELECT city_code , avg(age) FROM student WHERE sex = 'M' GROUP BY city_code ORDER BY city_code DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find job_id and the sum of employee_id , and group by attribute job_id , and visualize them by a bar chart , and show from high to low by the x-axis please .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , find name and price , and visualize them by a bar chart , and could you rank in desc by the Name ?
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Price FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Name DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the amount of job_id over the job_id , and group by attribute job_id by a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
How many companies that are not headquartered in the United States for each main industry ? Show me a bar chart , and rank by the names from low to high .
database schema:
Table company, columns = [*,Company_ID, Rank, Company, Headquarters, Main_Industry, Sales_billion, Profits_billion, Assets_billion, Market_Value]
target dvq:
Visualize BAR SELECT Main_Industry , COUNT(Main_Industry) FROM company WHERE headquarters != 'USA' GROUP BY Main_Industry ORDER BY Main_Industry ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the average of employee_id bin hire_date by time in a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of job_id and the average of department_id , and group by attribute job_id , I want to rank from high to low by the Y-axis .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY AVG(DEPARTMENT_ID) DESC
****************************************************************************************************
nl_queries:
Draw a scatter chart for what are the salaries and manager ids for employees who have managers ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT SALARY , MANAGER_ID FROM employees WHERE manager_id != "null"
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the trend about salary over hire_date , display X-axis in asc order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
For those dates with a max temperature greater than or equal to 80 , I would like a line chart to show the tendency .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize LINE SELECT date , COUNT(date) FROM weather WHERE max_temperature_f >= 80 GROUP BY date
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the average of department_id over the job_id , and group by attribute job_id by a bar chart .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the average of manager_id bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Find the name and population of districts with population between 200000 and 200000 Show a bar chart , and sort District_name from high to low order .
database schema:
Table district, columns = [*,District_ID, District_name, Headquartered_City, City_Population, City_Area]
target dvq:
Visualize BAR SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000 ORDER BY District_name DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the sum of employee_id over the hire_date bin hire_date by time , and could you list by the y axis from low to high ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(EMPLOYEE_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Find the number of male students (with sex M) from each city in a bar chart , rank Y in asc order .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
target dvq:
Visualize BAR SELECT city_code , count(*) FROM student WHERE sex = 'M' GROUP BY city_code ORDER BY count(*) ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id , list names in asc order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
What are the job titles , and range of salaries for jobs with maximum salary between 12000 and 18000 . Visualize by pie chart .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
target dvq:
Visualize PIE SELECT JOB_TITLE , max_salary - min_salary FROM jobs WHERE max_salary BETWEEN 12000 AND 18000
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the change of commission_pct over hire_date in a line chart , and list in desc by the x-axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
A line chart for what are the number of the dates in which the mean sea level pressure was between 303 and 31 ? , and I want to display date from low to high order .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize LINE SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31 GROUP BY date ORDER BY date ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the correlation between employee_id and salary in a scatter chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT EMPLOYEE_ID , SALARY FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the sum of salary bin hire_date by time in a bar chart , show Y-axis in asc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the sum of manager_id over the hire_date bin hire_date by time , and sort in descending by the total number .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(MANAGER_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the trend about employee_id over hire_date , and I want to order X in asc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
Find the number of the dates of the tests taken with result "Pass" .
database schema:
Table Student_Tests_Taken, columns = [*,registration_id, date_test_taken, test_result]
target dvq:
Visualize LINE SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = "Pass" BIN date_test_taken BY DAY
****************************************************************************************************
nl_queries:
Count the number of people of each sex who have a weight higher than 85 by a bar chart , could you rank from high to low by the Y please ?
database schema:
Table people, columns = [*,People_ID, Sex, Name, Date_of_Birth, Height, Weight]
target dvq:
Visualize BAR SELECT Sex , count(*) FROM people WHERE weight > 85 GROUP BY sex ORDER BY count(*) DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday , and display by the total number from low to high .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , what is the relationship between commission_pct and manager_id ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT COMMISSION_PCT , MANAGER_ID FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a scatter chart about the correlation between employee_id and manager_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT EMPLOYEE_ID , MANAGER_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
Count the number of people of each sex who have a weight higher than 85 , display x-axis from low to high order .
database schema:
Table people, columns = [*,People_ID, Sex, Name, Date_of_Birth, Height, Weight]
target dvq:
Visualize BAR SELECT Sex , count(*) FROM people WHERE weight > 85 GROUP BY sex ORDER BY Sex ASC
****************************************************************************************************
nl_queries:
Show the number of companies whose headquarters are not from USA fpr each main industry in a pie chart .
database schema:
Table company, columns = [*,Company_ID, Rank, Company, Headquarters, Main_Industry, Sales_billion, Profits_billion, Assets_billion, Market_Value]
target dvq:
Visualize PIE SELECT Main_Industry , COUNT(Main_Industry) FROM company WHERE headquarters != 'USA' GROUP BY Main_Industry
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id , list total number of manager id in ascending order please .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY SUM(MANAGER_ID) ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the sum of department_id bin hire_date by weekday , could you display sum department id in descending order ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(DEPARTMENT_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of job_id and the sum of salary , and group by attribute job_id , and show by the JOB_ID in descending .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
Show the number of male and female assistant professors . Plot them as bar chart .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
Table Faculty, columns = [*,FacID, Lname, Fname, Rank, Sex, Phone, Room, Building]
target dvq:
Visualize BAR SELECT Sex , count(*) FROM Faculty WHERE rank = "AsstProf" GROUP BY sex
****************************************************************************************************
nl_queries:
For those employees whose first name does not containing the letter M , display their average salary by binning the hire date into Month interval for visualizing a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name NOT LIKE '%M%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the sum of employee_id over the hire_date bin hire_date by weekday , and order y axis in asc order please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(EMPLOYEE_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those wines with a price is bigger than 100 , count then and group by year , order by year . Visualize the result with a bar chart .
database schema:
Table wine, columns = [*,No, Grape, Winery, Appelation, State, Name, Year, Price, Score, Cases, Drink]
target dvq:
Visualize BAR SELECT Year , COUNT(Year) FROM WINE WHERE Price > 100 GROUP BY Year ORDER BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a scatter chart about the correlation between manager_id and department_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT MANAGER_ID , DEPARTMENT_ID FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
Which directors had a movie in either 1999 or 2000 , and count them by a bar chart
database schema:
Table book_club, columns = [*,book_club_id, Year, Author_or_Editor, Book_Title, Publisher, Category, Result]
Table movie, columns = [*,movie_id, Title, Year, Director, Budget_million, Gross_worldwide]
target dvq:
Visualize BAR SELECT Director , COUNT(Director) FROM movie WHERE YEAR = 1999 OR YEAR = 2000 GROUP BY Director
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by weekday , and could you show Y in ascending order ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(EMPLOYEE_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find hire_date and the average of manager_id bin hire_date by time , and visualize them by a bar chart , show by the y axis in ascending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(MANAGER_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the sum of employee_id over the hire_date bin hire_date by time by a bar chart , and show by the y-axis in ascending .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(EMPLOYEE_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Give me the number of the dates when the max temperature was higher than 85 .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85 BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
What are the dates with a maximum temperature higher than 85 , and count them by a bar chart , and display from high to low by the Y .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) DESC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the average of department_id over the job_id , and group by attribute job_id by a bar chart , display in descending by the x-axis .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a bar chart shows the distribution of hire_date and the sum of manager_id bin hire_date by weekday , and order Y in desc order please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(MANAGER_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the sum of department_id over the job_id , and group by attribute job_id , show total number in ascending order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY SUM(DEPARTMENT_ID) ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id , display by the Y-axis in descending .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY AVG(EMPLOYEE_ID) DESC
****************************************************************************************************
nl_queries:
Count the number of people of each sex who have a weight higher than 85 by a bar chart .
database schema:
Table people, columns = [*,People_ID, Sex, Name, Date_of_Birth, Height, Weight]
target dvq:
Visualize BAR SELECT Sex , count(*) FROM people WHERE weight > 85 GROUP BY sex
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of job_id and the average of manager_id , and group by attribute job_id , and sort by the y axis in desc please .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY AVG(MANAGER_ID) DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a line chart shows the trend of manager_id over hire_date , and list in ascending by the X-axis .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of hire_date and the average of employee_id bin hire_date by time in a bar chart , display in ascending by the y axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(EMPLOYEE_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of hire_date and the sum of salary bin hire_date by time , sort total number of salary from high to low order please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
How many people are under 40 for each gender Plot them as bar chart , and display Y in desc order .
database schema:
Table Person, columns = [*,name, age, city, gender, job]
target dvq:
Visualize BAR SELECT gender , count(*) FROM Person WHERE age < 40 GROUP BY gender ORDER BY count(*) DESC
****************************************************************************************************
nl_queries:
Find the pixel aspect ratio and the nation of the tv channels that do not use English . Show the number of different pixel aspect ratios with a bar chart .
database schema:
Table TV_Channel, columns = [*,id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option]
target dvq:
Visualize BAR SELECT Pixel_aspect_ratio_PAR , COUNT(Pixel_aspect_ratio_PAR) FROM tv_channel WHERE LANGUAGE != 'English' GROUP BY Pixel_aspect_ratio_PAR
****************************************************************************************************
nl_queries:
Find the name and membership level of the visitors whose membership level is higher than 4 . Plot them as pie chart .
database schema:
Table museum, columns = [*,Museum_ID, Name, Num_of_Staff, Open_Year]
Table visitor, columns = [*,ID, Name, Level_of_membership, Age]
target dvq:
Visualize PIE SELECT Name , Level_of_membership FROM visitor WHERE Level_of_membership > 4
****************************************************************************************************
nl_queries:
Show the number of products with price higher than 1000 or lower than 500 for each product name in a bar chart , and could you rank y-axis in descending order ?
database schema:
Table Products, columns = [*,product_id, product_type_code, product_name, product_price]
target dvq:
Visualize BAR SELECT product_name , COUNT(product_name) FROM products WHERE product_price > 1000 OR product_price < 500 GROUP BY product_name ORDER BY COUNT(product_name) DESC
****************************************************************************************************
nl_queries:
How many injured players not suffering from injury of 'Knee problem' in each match ? Show me a bar chart grouping by number of matches , I want to display from low to high by the bars .
database schema:
Table injury_accident, columns = [*,game_id, id, Player, Injury, Number_of_matches, Source]
target dvq:
Visualize BAR SELECT Number_of_matches , COUNT(Number_of_matches) FROM injury_accident WHERE injury != 'Knee problem' GROUP BY Number_of_matches ORDER BY Number_of_matches ASC
****************************************************************************************************
nl_queries:
Return the number of the date of birth for all the guests with gender code "Male" .
database schema:
Table Guests, columns = [*,guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth]
target dvq:
Visualize LINE SELECT date_of_birth , COUNT(date_of_birth) FROM Guests WHERE gender_code = "Male" BIN date_of_birth BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the average of department_id bin hire_date by weekday in a bar chart , and I want to rank by the y axis in asc .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(DEPARTMENT_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
A bar chart about the number of last name for all female students whose sex is F , could you sort in descending by the X ?
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
target dvq:
Visualize BAR SELECT LName , COUNT(LName) FROM Student WHERE Sex = 'F' GROUP BY LName ORDER BY LName DESC
****************************************************************************************************
nl_queries:
A line chart for what are the number of the dates that have an average sea level pressure between 303 and 31 ? , and list by the X-axis in descending .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize LINE SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31 GROUP BY date ORDER BY date DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of job_id and the amount of job_id , and group by attribute job_id , order from low to high by the total number .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY COUNT(JOB_ID) ASC
****************************************************************************************************
nl_queries:
A line chart for showing the number of the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000 , display from high to low by the x-axis .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000  ORDER BY date_of_transaction DESC BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the sum of employee_id over the job_id , and group by attribute job_id by a bar chart , show Y from low to high order please .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY SUM(EMPLOYEE_ID) ASC
****************************************************************************************************
nl_queries:
Return a histogram on how many invoices were billed from each state ? , order in descending by the bars .
database schema:
Table invoices, columns = [*,id, customer_id, invoice_date, billing_address, billing_city, billing_state, billing_country, billing_postal_code, total]
target dvq:
Visualize BAR SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = "USA" GROUP BY billing_state ORDER BY billing_state DESC
****************************************************************************************************
nl_queries:
A bar chart for what are the number of the dates that have an average sea level pressure between 30 . 3 and 31 ?
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31 BIN date BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a line chart about the change of commission_pct over hire_date , and rank X in descending order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all storms with at least 1 death , compare the total number of deaths by dates_active attribute , sort by the names from low to high .
database schema:
Table storm, columns = [*,Storm_ID, Name, Dates_active, Max_speed, Damage_millions_USD, Number_Deaths]
target dvq:
Visualize BAR SELECT Dates_active , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Dates_active ASC
****************************************************************************************************
nl_queries:
when is the hire date for those employees whose first name does not containing the letter M , and count them by a bar chart , order y axis from high to low order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name NOT LIKE '%M%'  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Show the number of male and female assistant professors with a bar chart , and order names from low to high order .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
Table Faculty, columns = [*,FacID, Lname, Fname, Rank, Sex, Phone, Room, Building]
target dvq:
Visualize BAR SELECT Sex , count(*) FROM Faculty WHERE rank = "AsstProf" GROUP BY sex ORDER BY Sex ASC
****************************************************************************************************
nl_queries:
What are the names of products with price at most 200 , and count them by a bar chart , display how many name in desc order .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , COUNT(Name) FROM products WHERE price <= 200 GROUP BY Name ORDER BY COUNT(Name) DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of manager_id over the hire_date bin hire_date by weekday by a bar chart , rank the average of manager id in desc order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(MANAGER_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a scatter chart shows the correlation between manager_id and department_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT MANAGER_ID , DEPARTMENT_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
Show the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000 , and count them by a bar chart , and could you show y-axis in asc order ?
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000  ORDER BY COUNT(date_of_transaction) ASC BIN date_of_transaction BY WEEKDAY
****************************************************************************************************
nl_queries:
Find the latest logon date of the students whose family name is "Jaskolski" or "Langosh" , and count them by a bar chart , I want to sort in ascending by the y axis .
database schema:
Table Course_Authors_and_Tutors, columns = [*,author_id, author_tutor_ATB, login_name, password, personal_name, middle_name, family_name, gender_mf, address_line_1]
Table Students, columns = [*,student_id, date_of_registration, date_of_latest_logon, login_name, password, personal_name, middle_name, family_name]
target dvq:
Visualize BAR SELECT date_of_latest_logon , COUNT(date_of_latest_logon) FROM Students WHERE family_name = "Jaskolski" OR family_name = "Langosh"  ORDER BY COUNT(date_of_latest_logon) ASC BIN date_of_latest_logon BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by weekday , list by the Y in asc .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the average of manager_id over the job_id , and group by attribute job_id by a bar chart , display JOB_ID from low to high order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For those employees whose first name is ending with the letter m , visualize a bar chart to show each employee's salary by the last name , could you show X in desc order ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT LAST_NAME , SALARY FROM employees WHERE first_name LIKE '%m' ORDER BY LAST_NAME DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a bar chart shows the distribution of hire_date and the average of employee_id bin hire_date by time .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of job_id and the sum of department_id , and group by attribute job_id , and could you rank by the Y-axis in desc ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY SUM(DEPARTMENT_ID) DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id , show y-axis in asc order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY AVG(SALARY) ASC
****************************************************************************************************
nl_queries:
When are the birthdays of customer who are classified as 'Good Customer' status , and count them by a bar chart , could you order y-axis in ascending order ?
database schema:
Table Staff, columns = [*,staff_id, staff_address_id, nickname, first_name, middle_name, last_name, date_of_birth, date_joined_staff, date_left_staff]
Table Customers, columns = [*,customer_id, customer_address_id, customer_status_code, date_became_customer, date_of_birth, first_name, last_name, amount_outstanding, email_address, phone_number, cell_mobile_phone_number]
target dvq:
Visualize BAR SELECT date_of_birth , COUNT(date_of_birth) FROM Customers WHERE customer_status_code = 'Good Customer'  ORDER BY COUNT(date_of_birth) ASC BIN date_of_birth BY WEEKDAY
****************************************************************************************************
nl_queries:
Show the number of companies whose headquarters are not from USA fpr each main industry in a bar chart , display bars in descending order .
database schema:
Table company, columns = [*,Company_ID, Rank, Company, Headquarters, Main_Industry, Sales_billion, Profits_billion, Assets_billion, Market_Value]
target dvq:
Visualize BAR SELECT Main_Industry , COUNT(Main_Industry) FROM company WHERE headquarters != 'USA' GROUP BY Main_Industry ORDER BY Main_Industry DESC
****************************************************************************************************
nl_queries:
Count the number of people of each sex who have a weight higher than 85 in a pie chart .
database schema:
Table people, columns = [*,People_ID, Sex, Name, Date_of_Birth, Height, Weight]
target dvq:
Visualize PIE SELECT Sex , count(*) FROM people WHERE weight > 85 GROUP BY sex
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a scatter chart about the correlation between salary and department_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT SALARY , DEPARTMENT_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the change of commission_pct over hire_date in a line chart , could you display by the X in asc ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
For those employees whose first name is ending with the letter m , compute their average salary for visualizing a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT FIRST_NAME , AVG(SALARY) FROM employees WHERE first_name LIKE '%m' GROUP BY FIRST_NAME
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id , sort x axis in desc order please .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , return a bar chart about the distribution of name and code , I want to sort by the Y in desc .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Code FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Code DESC
****************************************************************************************************
nl_queries:
What are the different affiliations , and what is the total enrollment of schools founded after 1850 for each enrollment type Visualize by bar chart , and order by the total number in desc .
database schema:
Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]
target dvq:
Visualize BAR SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation ORDER BY sum(Enrollment) DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of manager_id over the job_id , and group by attribute job_id by a bar chart , I want to show in descending by the bars .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
A bar chart for what are the number of the different years in which there were cars produced that weighed less than 4000 and also cars that weighted more than 3000 ? , and order Y in desc order .
database schema:
Table cars_data, columns = [*,Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year]
target dvq:
Visualize BAR SELECT Year , COUNT(Year) FROM cars_data where weight between 3000 and 4000  ORDER BY COUNT(Year) DESC BIN Year BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the sum of department_id over the job_id , and group by attribute job_id , could you sort in asc by the y axis ?
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY SUM(DEPARTMENT_ID) ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the average of department_id bin hire_date by time , and visualize them by a bar chart , could you list by the y-axis in asc ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(DEPARTMENT_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of job_id and the average of manager_id , and group by attribute job_id , show by the X in descending please .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of job_id and the sum of employee_id , and group by attribute job_id .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the sum of salary over the job_id , and group by attribute job_id , and list bar from low to high order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
A bar chart for showing the number of the musical nominee with award "Bob Fosse" or "Cleavant Derricks" , could you sort names from low to high order please ?
database schema:
Table musical, columns = [*,Musical_ID, Name, Year, Award, Category, Nominee, Result]
target dvq:
Visualize BAR SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = "Tony Award" OR Award = "Cleavant Derricks" GROUP BY Nominee ORDER BY Nominee ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the sum of manager_id over the hire_date bin hire_date by time by a bar chart , and display by the total number in descending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(MANAGER_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by time , could you list by the total number in desc ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(DEPARTMENT_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a line chart about the change of commission_pct over hire_date , and rank from high to low by the x-axis please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
Find the number of professors with a Ph . D . degree in each department . Show bar chart .
database schema:
Table COURSE, columns = [*,CRS_CODE, DEPT_CODE, CRS_DESCRIPTION, CRS_CREDIT]
Table DEPARTMENT, columns = [*,DEPT_CODE, DEPT_NAME, SCHOOL_CODE, EMP_NUM, DEPT_ADDRESS, DEPT_EXTENSION]
Table PROFESSOR, columns = [*,EMP_NUM, DEPT_CODE, PROF_OFFICE, PROF_EXTENSION, PROF_HIGH_DEGREE]
Table STUDENT, columns = [*,STU_NUM, STU_LNAME, STU_FNAME, STU_INIT, STU_DOB, STU_HRS, STU_CLASS, STU_GPA, STU_TRANSFER, DEPT_CODE, STU_PHONE, PROF_NUM]
target dvq:
Visualize BAR SELECT DEPT_CODE , count(*) FROM professor WHERE prof_high_degree = 'Ph.D.' GROUP BY dept_code
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the sum of manager_id bin hire_date by weekday in a bar chart , rank by the y-axis in descending .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(MANAGER_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
List how many students in each last name who majored in 600 using a bar chart .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
target dvq:
Visualize BAR SELECT LName , COUNT(LName) FROM Student WHERE Major = 600 GROUP BY LName
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time , I want to rank by the total number in descending .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(DEPARTMENT_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the average of employee_id bin hire_date by time in a bar chart , and show by the total number in desc .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(EMPLOYEE_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a line chart about the change of manager_id over hire_date , list X-axis from high to low order please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a bar chart shows the distribution of job_id and the sum of manager_id , and group by attribute job_id , and sort bar in desc order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the sum of department_id over the job_id , and group by attribute job_id , and I want to order x-axis in asc order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
Count the number of people of each sex who have a weight higher than 85 by a bar chart , show from high to low by the bar .
database schema:
Table people, columns = [*,People_ID, Sex, Name, Date_of_Birth, Height, Weight]
target dvq:
Visualize BAR SELECT Sex , count(*) FROM people WHERE weight > 85 GROUP BY sex ORDER BY Sex DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a line chart shows the change of manager_id over hire_date , I want to order by the X-axis in asc .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
Find the market values of the companies in the banking industry with a pie chart .
database schema:
Table company, columns = [*,Company_ID, Rank, Company, Headquarters, Main_Industry, Sales_billion, Profits_billion, Assets_billion, Market_Value]
target dvq:
Visualize PIE SELECT Company , Market_Value FROM company WHERE main_industry = 'Banking'
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the sum of salary bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
A bar chart about the number of last name for all female students whose sex is F .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
target dvq:
Visualize BAR SELECT LName , COUNT(LName) FROM Student WHERE Sex = 'F' GROUP BY LName
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of job_id and the sum of employee_id , and group by attribute job_id , and display by the bar in ascending .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
Visualize a bar chart for what are the district names and city populations for all districts that between 200 , 000 and 2 , 000 , 000 residents ? , and show in ascending by the District_name .
database schema:
Table district, columns = [*,District_ID, District_name, Headquartered_City, City_Population, City_Area]
target dvq:
Visualize BAR SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000 ORDER BY District_name ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the average of manager_id bin hire_date by weekday in a bar chart , and I want to order by the y-axis in asc please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(MANAGER_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , what is the relationship between employee_id and commission_pct ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT EMPLOYEE_ID , COMMISSION_PCT FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
A bar chart for what are the number of the dates with a maximum temperature higher than 85 ? , show by the Y-axis in desc please .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) DESC BIN date BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a line chart shows the change of employee_id over hire_date , and list from high to low by the x-axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the average of manager_id bin hire_date by time in a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by time , I want to display from high to low by the y axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(EMPLOYEE_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Show all dates of transactions whose type code is "SALE" , and count them by a bar chart , I want to order by the Y-axis in descending please .
database schema:
Table Ref_Transaction_Types, columns = [*,transaction_type_code, transaction_type_description]
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE transaction_type_code = "SALE"  ORDER BY COUNT(date_of_transaction) DESC BIN date_of_transaction BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the amount of job_id over the job_id , and group by attribute job_id , and show from high to low by the y axis please .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY COUNT(JOB_ID) DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a scatter chart shows the correlation between salary and commission_pct .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT SALARY , COMMISSION_PCT FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
How many invoices were billed from each state Plot them as bar chart , list by the X-axis in desc .
database schema:
Table invoices, columns = [*,id, customer_id, invoice_date, billing_address, billing_city, billing_state, billing_country, billing_postal_code, total]
target dvq:
Visualize BAR SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = "USA" GROUP BY billing_state ORDER BY billing_state DESC
****************************************************************************************************
nl_queries:
Show the relationship between age and weight of the dogs who have been abandoned in a scatter chart .
database schema:
Table Dogs, columns = [*,dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed]
target dvq:
Visualize SCATTER SELECT age , weight FROM Dogs WHERE abandoned_yn = 1
****************************************************************************************************
nl_queries:
Find the number of the dates of the tests taken with result "Pass" , show total number from high to low order .
database schema:
Table Student_Tests_Taken, columns = [*,registration_id, date_test_taken, test_result]
target dvq:
Visualize BAR SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = "Pass" GROUP BY date_test_taken ORDER BY COUNT(date_test_taken) DESC
****************************************************************************************************
nl_queries:
Show the number of the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000 , could you display by the how many date of transaction in ascending ?
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000  ORDER BY COUNT(date_of_transaction) ASC BIN date_of_transaction BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the sum of department_id over the job_id , and group by attribute job_id , and display by the total number of department id from high to low .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY SUM(DEPARTMENT_ID) DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find job_id and the sum of department_id , and group by attribute job_id , and visualize them by a bar chart , I want to sort by the total number in ascending .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY SUM(DEPARTMENT_ID) ASC
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , return a pie chart about the proportion of name and manufacturer .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize PIE SELECT Name , Manufacturer FROM products WHERE price BETWEEN 60 AND 120
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a scatter chart about the correlation between commission_pct and manager_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT COMMISSION_PCT , MANAGER_ID FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
A bar chart for what are the number of the dates with a maximum temperature higher than 85 ?
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85 BIN date BY YEAR
****************************************************************************************************
nl_queries:
A bar chart about how many professors have a PhD in each department ? , list from low to high by the x-axis please .
database schema:
Table COURSE, columns = [*,CRS_CODE, DEPT_CODE, CRS_DESCRIPTION, CRS_CREDIT]
Table DEPARTMENT, columns = [*,DEPT_CODE, DEPT_NAME, SCHOOL_CODE, EMP_NUM, DEPT_ADDRESS, DEPT_EXTENSION]
Table PROFESSOR, columns = [*,EMP_NUM, DEPT_CODE, PROF_OFFICE, PROF_EXTENSION, PROF_HIGH_DEGREE]
Table STUDENT, columns = [*,STU_NUM, STU_LNAME, STU_FNAME, STU_INIT, STU_DOB, STU_HRS, STU_CLASS, STU_GPA, STU_TRANSFER, DEPT_CODE, STU_PHONE, PROF_NUM]
target dvq:
Visualize BAR SELECT DEPT_CODE , count(*) FROM professor WHERE prof_high_degree = 'Ph.D.' GROUP BY dept_code ORDER BY DEPT_CODE ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of job_id and the average of department_id , and group by attribute job_id .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time , and rank mean department id in descending order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(DEPARTMENT_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of job_id and the average of department_id , and group by attribute job_id , and I want to order by the names in ascending please .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id , and rank by the Y-axis in asc .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY AVG(SALARY) ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find hire_date and the average of manager_id bin hire_date by time , and visualize them by a bar chart , and could you list by the y axis in descending please ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(MANAGER_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a bar chart shows the distribution of job_id and the sum of manager_id , and group by attribute job_id , and display by the y axis in desc please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY SUM(MANAGER_ID) DESC
****************************************************************************************************
nl_queries:
Bin the hire date into Month interval , and then calculate the total salary of employees in each month for a bar chart , note that just select those employees without the letter M in their first name , and display by the y-axis from low to high please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name NOT LIKE '%M%'  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by weekday , list from high to low by the Y-axis .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(MANAGER_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of job_id and the sum of manager_id , and group by attribute job_id in a bar chart , I want to sort in ascending by the bar .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
What are the number of the dates with a maximum temperature higher than 85 ? , rank by the x-axis from high to low .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize LINE SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85 GROUP BY date ORDER BY date DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the sum of manager_id over the hire_date bin hire_date by weekday by a bar chart , I want to sort by the Y-axis in asc .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(MANAGER_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all storms with at least 1 death , compare the number of deaths by dates active with a bar graph , order names in ascending order .
database schema:
Table storm, columns = [*,Storm_ID, Name, Dates_active, Max_speed, Damage_millions_USD, Number_Deaths]
target dvq:
Visualize BAR SELECT Dates_active , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Dates_active ASC
****************************************************************************************************
nl_queries:
Return a histogram on what is average age of male for different job title ?
database schema:
Table Person, columns = [*,name, age, city, gender, job]
target dvq:
Visualize BAR SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find job_id and the average of salary , and group by attribute job_id , and visualize them by a bar chart , and order Y from low to high order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY AVG(SALARY) ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of job_id and the sum of employee_id , and group by attribute job_id , and could you rank in asc by the sum employee id ?
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY SUM(EMPLOYEE_ID) ASC
****************************************************************************************************
nl_queries:
Display a bar chart for how many male and female assistant professors do we have ? , I want to display y axis in descending order .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
Table Faculty, columns = [*,FacID, Lname, Fname, Rank, Sex, Phone, Room, Building]
target dvq:
Visualize BAR SELECT Sex , count(*) FROM Faculty WHERE rank = "AsstProf" GROUP BY sex ORDER BY count(*) DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of hire_date and the sum of salary bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the amount of hire_date over the hire_date bin hire_date by weekday by a bar chart , sort by the y axis from high to low .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find hire_date and the average of department_id bin hire_date by time , and visualize them by a bar chart , could you display y-axis from high to low order ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(DEPARTMENT_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of job_id and the average of employee_id , and group by attribute job_id in a bar chart , and show total number in descending order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY AVG(EMPLOYEE_ID) DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of employee_id over the job_id , and group by attribute job_id by a bar chart .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the average of salary bin hire_date by time in a bar chart , display by the y-axis in ascending .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , for department_id , hire_date , visualize the trend .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
Can you give me a bar chart to show the name and membership level of the visitors whose membership level is higher than 4 .
database schema:
Table museum, columns = [*,Museum_ID, Name, Num_of_Staff, Open_Year]
Table visitor, columns = [*,ID, Name, Level_of_membership, Age]
target dvq:
Visualize BAR SELECT Name , Level_of_membership FROM visitor WHERE Level_of_membership > 4
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of job_id and the sum of department_id , and group by attribute job_id in a bar chart , and sort by the total number in asc .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY SUM(DEPARTMENT_ID) ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id , show in ascending by the y-axis .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY AVG(EMPLOYEE_ID) ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the sum of employee_id over the hire_date bin hire_date by time , could you rank by the Y in asc ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(EMPLOYEE_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a scatter chart about the correlation between employee_id and department_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT EMPLOYEE_ID , DEPARTMENT_ID FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of job_id and the average of manager_id , and group by attribute job_id in a bar chart , rank bar from low to high order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
List the number of invoices from the US , grouped by state by a bar chart , show by the Y-axis from low to high .
database schema:
Table invoices, columns = [*,id, customer_id, invoice_date, billing_address, billing_city, billing_state, billing_country, billing_postal_code, total]
target dvq:
Visualize BAR SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = "USA" GROUP BY billing_state ORDER BY COUNT(*) ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the sum of salary over the job_id , and group by attribute job_id by a bar chart , and I want to rank JOB_ID from high to low order please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
What is average age of male for different job title . Visualize by bar chart .
database schema:
Table Person, columns = [*,name, age, city, gender, job]
target dvq:
Visualize BAR SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the average of manager_id bin hire_date by weekday , and visualize them by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a line chart shows the change of employee_id over hire_date , and sort by the x-axis in asc .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the sum of manager_id over the job_id , and group by attribute job_id by a bar chart , and list y-axis in descending order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY SUM(MANAGER_ID) DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the sum of manager_id bin hire_date by weekday in a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the average of employee_id over the job_id , and group by attribute job_id by a bar chart , and show in desc by the y axis .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY AVG(EMPLOYEE_ID) DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the sum of employee_id bin hire_date by time , and visualize them by a bar chart , rank total number from low to high order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(EMPLOYEE_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of job_id and the average of department_id , and group by attribute job_id .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , draw a pie chart about the proportion of name and code .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize PIE SELECT Name , Code FROM products WHERE price BETWEEN 60 AND 120
****************************************************************************************************
nl_queries:
A bar chart for what are the number of the different years in which there were cars produced that weighed less than 4000 and also cars that weighted more than 3000 ?
database schema:
Table cars_data, columns = [*,Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year]
target dvq:
Visualize BAR SELECT Year , COUNT(Year) FROM cars_data where weight between 3000 and 4000 BIN Year BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id , and show X-axis in desc order please .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me the trend about manager_id over hire_date with a line chart , and display X-axis in descending order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by time , and could you display in descending by the the average of employee id please ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(EMPLOYEE_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of hire_date and the amount of hire_date bin hire_date by time in a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
What are the dates of transactions with at least 100 share count or amount bigger than 100 , and count them by a line chart
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100 BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the sum of employee_id bin hire_date by weekday in a bar chart , and could you sort from high to low by the Y-axis please ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(EMPLOYEE_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , find name and price , and visualize them by a bar chart , and list in desc by the Y-axis .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Price FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Price DESC
****************************************************************************************************
nl_queries:
A bar chart for what are the number of the names of products with price at most 200 ? , display in descending by the Y .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , COUNT(Name) FROM products WHERE price <= 200 GROUP BY Name ORDER BY COUNT(Name) DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the sum of salary bin hire_date by time in a bar chart , and sort total number of salary from high to low order please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the average of employee_id bin hire_date by time in a bar chart , sort by the y axis in ascending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(EMPLOYEE_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a line chart about the change of salary over hire_date .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by time , and show Y-axis in desc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(DEPARTMENT_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by time , and could you list by the y axis in descending please ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(MANAGER_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the average of department_id over the hire_date bin hire_date by weekday , and display Y-axis in desc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(DEPARTMENT_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , for salary , hire_date , visualize the trend , could you rank x-axis from high to low order ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
Find the total number of students enrolled in the colleges that were founded after the year of 1850 for each affiliation type .
database schema:
Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]
target dvq:
Visualize PIE SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of hire_date and the sum of salary bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of job_id and the average of salary , and group by attribute job_id in a bar chart , list in descending by the X-axis .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
Show the number of products with price higher than 1000 or lower than 500 for each product name in a bar chart , order x axis from low to high order please .
database schema:
Table Products, columns = [*,product_id, product_type_code, product_name, product_price]
target dvq:
Visualize BAR SELECT product_name , COUNT(product_name) FROM products WHERE product_price > 1000 OR product_price < 500 GROUP BY product_name ORDER BY product_name ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a line chart shows the change of salary over hire_date
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
Show all director names who have a movie in the year 1999 or 2000 , and count them by a bar chart , and I want to display by the bars in descending .
database schema:
Table book_club, columns = [*,book_club_id, Year, Author_or_Editor, Book_Title, Publisher, Category, Result]
Table movie, columns = [*,movie_id, Title, Year, Director, Budget_million, Gross_worldwide]
target dvq:
Visualize BAR SELECT Director , COUNT(Director) FROM movie WHERE YEAR = 1999 OR YEAR = 2000 GROUP BY Director ORDER BY Director DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the correlation between salary and manager_id in a scatter chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT SALARY , MANAGER_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
Draw a bar chart for how many captains with younger than 50 are in each rank ? , sort by the X from low to high .
database schema:
Table captain, columns = [*,Captain_ID, Name, Ship_ID, age, Class, Rank]
target dvq:
Visualize BAR SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank ORDER BY Rank ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the amount of hire_date bin hire_date by weekday , and visualize them by a bar chart , order y-axis from high to low order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , for commission_pct , hire_date , visualize the trend , sort from high to low by the X .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
Find the dates of the tests taken with result "Pass" , and count them by a bar chart , and list in descending by the y-axis .
database schema:
Table Student_Tests_Taken, columns = [*,registration_id, date_test_taken, test_result]
target dvq:
Visualize BAR SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = "Pass"  ORDER BY COUNT(date_test_taken) DESC BIN date_test_taken BY WEEKDAY
****************************************************************************************************
nl_queries:
A bar chart showing the number of first name for all female students Their sex is F , list by the y-axis from high to low please .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
target dvq:
Visualize BAR SELECT Fname , COUNT(Fname) FROM Student WHERE Sex = 'F' GROUP BY Fname ORDER BY COUNT(Fname) DESC
****************************************************************************************************
nl_queries:
How many captains with younger than 50 are in each rank , display by the the total number from high to low .
database schema:
Table captain, columns = [*,Captain_ID, Name, Ship_ID, age, Class, Rank]
target dvq:
Visualize BAR SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank ORDER BY count(*) DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the sum of manager_id over the job_id , and group by attribute job_id by a bar chart , could you show in desc by the x axis please ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
Find the name and population of districts with population between 200000 and 200000 Show a bar chart , display in asc by the District_name .
database schema:
Table district, columns = [*,District_ID, District_name, Headquartered_City, City_Population, City_Area]
target dvq:
Visualize BAR SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000 ORDER BY District_name ASC
****************************************************************************************************
nl_queries:
What are the payment date of the payment with amount paid higher than 300 or with payment type is 'Check , and count them by a line chart
database schema:
Table Payments, columns = [*,payment_id, booking_id, customer_id, payment_type_code, amount_paid_in_full_yn, payment_date, amount_due, amount_paid]
target dvq:
Visualize LINE SELECT payment_date , COUNT(payment_date) FROM payments WHERE amount_paid > 300 OR payment_type_code = 'Check' GROUP BY payment_date
****************************************************************************************************
nl_queries:
List the first name of all employees with job code PROF ordered by their date of birth , and count them by a bar chart
database schema:
Table EMPLOYEE, columns = [*,EMP_NUM, EMP_LNAME, EMP_FNAME, EMP_INITIAL, EMP_JOBCODE, EMP_HIREDATE, EMP_DOB]
target dvq:
Visualize BAR SELECT EMP_FNAME , COUNT(EMP_FNAME) FROM employee WHERE emp_jobcode = 'PROF' GROUP BY EMP_FNAME ORDER BY emp_dob
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , a scatter chart shows the correlation between code and price .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize SCATTER SELECT Code , Price FROM products WHERE price BETWEEN 60 AND 120
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by weekday , could you sort from high to low by the Y-axis please ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(EMPLOYEE_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday , rank Y-axis in desc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(DEPARTMENT_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
A bar chart showing the number of last name for all female students Their sex is F , and sort in asc by the y-axis please .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
target dvq:
Visualize BAR SELECT LName , COUNT(LName) FROM Student WHERE Sex = 'F' GROUP BY LName ORDER BY COUNT(LName) ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the sum of salary over the job_id , and group by attribute job_id by a bar chart , I want to rank by the sum salary in descending please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY SUM(SALARY) DESC
****************************************************************************************************
nl_queries:
Find the number of rooms with price higher than 120 for different decor Show bar chart , list by the names in ascending .
database schema:
Table Rooms, columns = [*,RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor]
target dvq:
Visualize BAR SELECT decor , count(*) FROM Rooms WHERE basePrice > 120 GROUP BY decor ORDER BY decor ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the sum of salary over the hire_date bin hire_date by weekday by a bar chart , show total number in desc order please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , return a scatter chart about the correlation between code and manufacturer .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize SCATTER SELECT Code , Manufacturer FROM products WHERE price BETWEEN 60 AND 120
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a scatter chart about the correlation between commission_pct and department_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT COMMISSION_PCT , DEPARTMENT_ID FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
List the number of the name of technicians whose team is not "NYY" , could you order from high to low by the Y-axis please ?
database schema:
Table repair, columns = [*,repair_ID, name, Launch_Date, Notes]
Table machine, columns = [*,Machine_ID, Making_Year, Class, Team, Machine_series, value_points, quality_rank]
Table technician, columns = [*,technician_id, Name, Team, Starting_Year, Age]
target dvq:
Visualize BAR SELECT Name , COUNT(Name) FROM technician WHERE Team != "NYY" GROUP BY Name ORDER BY COUNT(Name) DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the average of manager_id bin hire_date by weekday , and visualize them by a bar chart , display y axis in descending order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(MANAGER_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a scatter chart about the correlation between employee_id and commission_pct .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT EMPLOYEE_ID , COMMISSION_PCT FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a line chart about the change of department_id over hire_date , sort HIRE_DATE in descending order please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
Find the total number of students enrolled in the colleges that were founded after the year of 1850 for each affiliation type . Show bar chart .
database schema:
Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]
target dvq:
Visualize BAR SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the average of manager_id over the hire_date bin hire_date by weekday by a bar chart , rank by the Y in desc .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(MANAGER_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
How old is each dog that was abandoned ? Show in a bar chart , and order age from low to high order .
database schema:
Table Dogs, columns = [*,dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed]
target dvq:
Visualize BAR SELECT name , age FROM Dogs WHERE abandoned_yn = 1 ORDER BY age ASC
****************************************************************************************************
nl_queries:
Show the number of the musical nominee with award "Bob Fosse" or "Cleavant Derricks" .
database schema:
Table musical, columns = [*,Musical_ID, Name, Year, Award, Category, Nominee, Result]
target dvq:
Visualize PIE SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = "Tony Award" OR Award = "Cleavant Derricks" GROUP BY Nominee
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the change of manager_id over hire_date in a line chart , show by the x axis in asc .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of job_id and the amount of job_id , and group by attribute job_id in a bar chart , and show from high to low by the y axis please .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY COUNT(JOB_ID) DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me the trend about employee_id over hire_date with a line chart , I want to sort X in asc order please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of department_id over the job_id , and group by attribute job_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of job_id and the amount of job_id , and group by attribute job_id in a bar chart .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a line chart shows the change of employee_id over hire_date , and rank X-axis from high to low order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a scatter chart about the correlation between commission_pct and department_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT COMMISSION_PCT , DEPARTMENT_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Show the names and total passengers for all train stations not in London Visualize by bar chart , I want to list in asc by the y-axis please .
database schema:
Table station, columns = [*,Station_ID, Name, Annual_entry_exit, Annual_interchanges, Total_Passengers, Location, Main_Services, Number_of_Platforms]
Table train, columns = [*,Train_ID, Name, Time, Service]
target dvq:
Visualize BAR SELECT Name , Total_Passengers FROM station WHERE LOCATION != 'London' ORDER BY Total_Passengers ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of job_id and the average of employee_id , and group by attribute job_id in a bar chart , and list y axis in asc order please .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY AVG(EMPLOYEE_ID) ASC
****************************************************************************************************
nl_queries:
A line chart for what are the number of the dates of transactions with at least 100 share count or amount bigger than 100 ?
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100 BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by time .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
A bar chart about the number of first name for all female students whose sex is F , list by the x-axis in descending .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
target dvq:
Visualize BAR SELECT Fname , COUNT(Fname) FROM Student WHERE Sex = 'F' GROUP BY Fname ORDER BY Fname DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find hire_date and the sum of manager_id bin hire_date by weekday , and visualize them by a bar chart , and I want to order from high to low by the Y .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(MANAGER_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find job_id and the amount of job_id , and group by attribute job_id , and visualize them by a bar chart , and I want to list x axis in asc order please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
Show me a bar chart for how many invoices were billed from each state ? , and show by the Y-axis in desc .
database schema:
Table invoices, columns = [*,id, customer_id, invoice_date, billing_address, billing_city, billing_state, billing_country, billing_postal_code, total]
target dvq:
Visualize BAR SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = "USA" GROUP BY billing_state ORDER BY COUNT(*) DESC
****************************************************************************************************
nl_queries:
Find the number of rooms with king bed for each decor type , I want to order the total number in asc order .
database schema:
Table Rooms, columns = [*,RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor]
target dvq:
Visualize BAR SELECT decor , count(*) FROM Rooms WHERE bedType = "King" GROUP BY decor ORDER BY count(*) ASC
****************************************************************************************************
nl_queries:
Return a histogram on how many professors have a PhD in each department ? , and list in descending by the bar please .
database schema:
Table COURSE, columns = [*,CRS_CODE, DEPT_CODE, CRS_DESCRIPTION, CRS_CREDIT]
Table DEPARTMENT, columns = [*,DEPT_CODE, DEPT_NAME, SCHOOL_CODE, EMP_NUM, DEPT_ADDRESS, DEPT_EXTENSION]
Table PROFESSOR, columns = [*,EMP_NUM, DEPT_CODE, PROF_OFFICE, PROF_EXTENSION, PROF_HIGH_DEGREE]
Table STUDENT, columns = [*,STU_NUM, STU_LNAME, STU_FNAME, STU_INIT, STU_DOB, STU_HRS, STU_CLASS, STU_GPA, STU_TRANSFER, DEPT_CODE, STU_PHONE, PROF_NUM]
target dvq:
Visualize BAR SELECT DEPT_CODE , count(*) FROM professor WHERE prof_high_degree = 'Ph.D.' GROUP BY dept_code ORDER BY DEPT_CODE DESC
****************************************************************************************************
nl_queries:
Bar chart , X is bed type and the Y-axis is their appearance frequency , show by the names in ascending .
database schema:
Table Rooms, columns = [*,RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor]
target dvq:
Visualize BAR SELECT bedType , COUNT(bedType) FROM Rooms WHERE decor = "traditional" GROUP BY bedType ORDER BY bedType ASC
****************************************************************************************************
nl_queries:
What are the number of the dates in which the mean sea level pressure was between 303 and 31 ? , and list by the total number in asc .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) ASC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
Give me a bar chart to show how many dates with a max temperature greater than or equal to 80 for each day .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f >= 80 BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose first name is ending with the letter m , sum their salary for visualizing a pie chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize PIE SELECT FIRST_NAME , SUM(SALARY) FROM employees WHERE first_name LIKE '%m' GROUP BY FIRST_NAME
****************************************************************************************************
nl_queries:
For those female students with age is older than 18 who are not majoring in 600 , visualize the proportion of students' first names with a pie chart .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
target dvq:
Visualize PIE SELECT Fname , COUNT(Fname) FROM Student WHERE Age > 18 AND Major != 600 AND Sex = 'F' GROUP BY Fname
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of job_id and the amount of job_id , and group by attribute job_id in a bar chart , rank names in ascending order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of job_id and the sum of employee_id , and group by attribute job_id , and could you sort by the y-axis in descending ?
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY SUM(EMPLOYEE_ID) DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the average of manager_id bin hire_date by time in a bar chart , I want to show by the Y in asc please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(MANAGER_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a scatter chart about the correlation between employee_id and salary .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT EMPLOYEE_ID , SALARY FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of job_id and the sum of manager_id , and group by attribute job_id in a bar chart , order in asc by the Y .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY SUM(MANAGER_ID) ASC
****************************************************************************************************
nl_queries:
In zip code 94107 , on which day neither Fog nor Rain was not observed , and count them by a bar chart , order total number in ascending order please .
database schema:
Table trip, columns = [*,id, duration, start_date, start_station_name, start_station_id, end_date, end_station_name, end_station_id, bike_id, subscription_type, zip_code]
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE zip_code = 94107 AND EVENTS != "Fog" AND EVENTS != "Rain"  ORDER BY COUNT(date) ASC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
A bar chart for what are the number of the dates in which the mean sea level pressure was between 303 and 31 ? , sort in asc by the how many date please .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) ASC BIN date BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by time , and sort by the y axis in ascending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(EMPLOYEE_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
A bar chart for giveing me the number of the dates when the max temperature was higher than 85 , and sort in descending by the Y .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) DESC BIN date BY YEAR
****************************************************************************************************
nl_queries:
A bar chart for what are the number of the names of products with price at most 200 ? , and list by the bars in descending please .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , COUNT(Name) FROM products WHERE price <= 200 GROUP BY Name ORDER BY Name DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the average of salary over the hire_date bin hire_date by time by a bar chart , I want to order by the Y-axis from high to low .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of hire_date and the sum of manager_id bin hire_date by weekday in a bar chart , and list in desc by the total number of manager id please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(MANAGER_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the average of salary over the hire_date bin hire_date by time , order by the y-axis from high to low .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by time , and could you order by the y axis in descending ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , for the attribute name and code , show their proportion by a pie chart .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize PIE SELECT Name , Code FROM products WHERE price BETWEEN 60 AND 120
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of job_id and the average of employee_id , and group by attribute job_id , rank in desc by the Y-axis .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY AVG(EMPLOYEE_ID) DESC
****************************************************************************************************
nl_queries:
Find the id and weight of all pets whose age is older than 1 Visualize by bar chart , and show weight from low to high order .
database schema:
Table Has_Pet, columns = [*,StuID, PetID]
Table Pets, columns = [*,PetID, PetType, pet_age, weight]
target dvq:
Visualize BAR SELECT PetID , weight FROM pets WHERE pet_age > 1 ORDER BY weight ASC
****************************************************************************************************
nl_queries:
Count the number of captains younger than 50 of each rank in a pie chart .
database schema:
Table captain, columns = [*,Captain_ID, Name, Ship_ID, age, Class, Rank]
target dvq:
Visualize PIE SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank
****************************************************************************************************
nl_queries:
when is the hire date for those employees whose first name does not containing the letter M , and count them by a bar chart
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name NOT LIKE '%M%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
What are the payment date of the payment with amount paid higher than 300 or with payment type is 'Check , and count them by a bar chart , order by the y axis from low to high .
database schema:
Table Payments, columns = [*,payment_id, booking_id, customer_id, payment_type_code, amount_paid_in_full_yn, payment_date, amount_due, amount_paid]
target dvq:
Visualize BAR SELECT payment_date , COUNT(payment_date) FROM payments WHERE amount_paid > 300 OR payment_type_code = 'Check'  ORDER BY COUNT(payment_date) ASC BIN payment_date BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize the relationship between employee_id and department_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT EMPLOYEE_ID , DEPARTMENT_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by weekday , list total number in desc order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Return a bar chart on what are the district names and city populations for all districts that between 200 , 000 and 2 , 000 , 000 residents ? , display by the City_Population from low to high .
database schema:
Table district, columns = [*,District_ID, District_name, Headquartered_City, City_Population, City_Area]
target dvq:
Visualize BAR SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000 ORDER BY City_Population ASC
****************************************************************************************************
nl_queries:
Visualize a bar chart for how many rooms cost more than 120 , for each different decor ? , could you list Y-axis from low to high order ?
database schema:
Table Rooms, columns = [*,RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor]
target dvq:
Visualize BAR SELECT decor , count(*) FROM Rooms WHERE basePrice > 120 GROUP BY decor ORDER BY count(*) ASC
****************************************************************************************************
nl_queries:
Give me the dates when the max temperature was higher than 85 , and count them by a line chart , order X in desc order .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize LINE SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85 GROUP BY date ORDER BY date DESC
****************************************************************************************************
nl_queries:
What are the number of the dates in which the mean sea level pressure was between 30 . 3 and 31 ?
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31 BIN date BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id , and show Y-axis in descending order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY AVG(EMPLOYEE_ID) DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of job_id and the sum of manager_id , and group by attribute job_id , and display from high to low by the y axis .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY SUM(MANAGER_ID) DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a bar chart shows the distribution of hire_date and the sum of manager_id bin hire_date by weekday .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Return the date of birth for all the guests with gender code "Male" , and count them by a bar chart , I want to order the number of date of birth from high to low order .
database schema:
Table Guests, columns = [*,guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth]
target dvq:
Visualize BAR SELECT date_of_birth , COUNT(date_of_birth) FROM Guests WHERE gender_code = "Male"  ORDER BY COUNT(date_of_birth) DESC BIN date_of_birth BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of job_id and the sum of department_id , and group by attribute job_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
When are the birthdays of customer who are classified as 'Good Customer' status , and count them by a line chart , and could you list by the date_of_birth from low to high ?
database schema:
Table Staff, columns = [*,staff_id, staff_address_id, nickname, first_name, middle_name, last_name, date_of_birth, date_joined_staff, date_left_staff]
Table Customers, columns = [*,customer_id, customer_address_id, customer_status_code, date_became_customer, date_of_birth, first_name, last_name, amount_outstanding, email_address, phone_number, cell_mobile_phone_number]
target dvq:
Visualize LINE SELECT date_of_birth , COUNT(date_of_birth) FROM Customers WHERE customer_status_code = 'Good Customer'  ORDER BY date_of_birth ASC BIN date_of_birth BY YEAR
****************************************************************************************************
nl_queries:
Return the categories of music festivals that have the result "Awarded" , and count them by a pie chart
database schema:
Table music_festival, columns = [*,ID, Music_Festival, Date_of_ceremony, Category, Volume, Result]
target dvq:
Visualize PIE SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = "Awarded" GROUP BY Category
****************************************************************************************************
nl_queries:
For those employees whose first name is ending with the letter m , show the frequency of the first name using a bar chart , and display X in descending order please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT FIRST_NAME , COUNT(FIRST_NAME) FROM employees WHERE first_name LIKE '%m' GROUP BY FIRST_NAME ORDER BY FIRST_NAME DESC
****************************************************************************************************
nl_queries:
Show the number of male and female assistant professors with a bar chart .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
Table Faculty, columns = [*,FacID, Lname, Fname, Rank, Sex, Phone, Room, Building]
target dvq:
Visualize BAR SELECT Sex , count(*) FROM Faculty WHERE rank = "AsstProf" GROUP BY sex
****************************************************************************************************
nl_queries:
On which day has it neither been foggy nor rained in the zip code of 94107 , and count them by a bar chart , and list by the Y from low to high .
database schema:
Table trip, columns = [*,id, duration, start_date, start_station_name, start_station_id, end_date, end_station_name, end_station_id, bike_id, subscription_type, zip_code]
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE zip_code = 94107 AND EVENTS != "Fog" AND EVENTS != "Rain"  ORDER BY COUNT(date) ASC BIN date BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday , I want to list by the Y from high to low .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the sum of salary over the hire_date bin hire_date by time by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the change of salary over hire_date in a line chart , and rank in descending by the x axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a line chart shows the trend of manager_id over hire_date .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of job_id and the sum of salary , and group by attribute job_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of hire_date and the sum of salary bin hire_date by weekday , and show total number in descending order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
What are the dates with a maximum temperature higher than 85 , and count them by a bar chart
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85 BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
What are the district names and city populations for all districts that between 200 , 000 and 2 , 000 , 000 residents ? Show a bar graph , and rank in desc by the X .
database schema:
Table district, columns = [*,District_ID, District_name, Headquartered_City, City_Population, City_Area]
target dvq:
Visualize BAR SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000 ORDER BY District_name DESC
****************************************************************************************************
nl_queries:
Show the average age for all female students and group them by first name in a bar chart , and display x axis in desc order please .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
target dvq:
Visualize BAR SELECT Fname , AVG(Age) FROM Student WHERE Sex = 'F' GROUP BY Fname ORDER BY Fname DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a scatter chart about the correlation between manager_id and department_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT MANAGER_ID , DEPARTMENT_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of job_id and the sum of salary , and group by attribute job_id , could you list in descending by the JOB_ID ?
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , give me the comparison about manufacturer over the name , sort by the y-axis in ascending please .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Manufacturer FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Manufacturer ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , for employee_id , hire_date , visualize the trend .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the sum of department_id over the hire_date bin hire_date by time by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of job_id and the sum of salary , and group by attribute job_id , display by the bars in asc please .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of salary over the job_id , and group by attribute job_id , I want to order in descending by the JOB_ID please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by weekday , show y axis in desc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(EMPLOYEE_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of job_id and the average of department_id , and group by attribute job_id , and I want to order x-axis in ascending order please .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the average of employee_id bin hire_date by time , and display Y in desc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(EMPLOYEE_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
A bar chart for what are the number of the dates with a maximum temperature higher than 85 ? , order y axis from low to high order please .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) ASC BIN date BY YEAR
****************************************************************************************************
nl_queries:
What are the district names and city populations for all districts that between 200 , 000 and 2 , 000 , 000 residents ? Show a bar graph .
database schema:
Table district, columns = [*,District_ID, District_name, Headquartered_City, City_Population, City_Area]
target dvq:
Visualize BAR SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find hire_date and the sum of manager_id bin hire_date by weekday , and visualize them by a bar chart , order from low to high by the y-axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(MANAGER_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
What are the district names and city populations for all districts that between 200 , 000 and 2 , 000 , 000 residents ? Show a bar graph , I want to rank in asc by the y axis please .
database schema:
Table district, columns = [*,District_ID, District_name, Headquartered_City, City_Population, City_Area]
target dvq:
Visualize BAR SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000 ORDER BY City_Population ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of job_id and the amount of job_id , and group by attribute job_id in a bar chart , and show Y-axis in descending order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY COUNT(JOB_ID) DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a line chart about the change of salary over hire_date , and rank in descending by the x axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the amount of hire_date over the hire_date bin hire_date by time .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
List the number of the name of technicians whose team is not "NYY" , could you show bar in asc order ?
database schema:
Table repair, columns = [*,repair_ID, name, Launch_Date, Notes]
Table machine, columns = [*,Machine_ID, Making_Year, Class, Team, Machine_series, value_points, quality_rank]
Table technician, columns = [*,technician_id, Name, Team, Starting_Year, Age]
target dvq:
Visualize BAR SELECT Name , COUNT(Name) FROM technician WHERE Team != "NYY" GROUP BY Name ORDER BY Name ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of job_id and the average of department_id , and group by attribute job_id , and I want to sort y-axis from low to high order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY AVG(DEPARTMENT_ID) ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the sum of manager_id bin hire_date by time , and could you display by the Y in ascending ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(MANAGER_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
A line chart for what are the number of the dates with a maximum temperature higher than 85 ?
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize LINE SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85 GROUP BY date
****************************************************************************************************
nl_queries:
Find the component amounts and names of all furnitures that have more than 10 components , and could you order by the y axis from low to high ?
database schema:
Table manufacturer, columns = [*,Manufacturer_ID, Open_Year, Name, Num_of_Factories, Num_of_Shops]
Table furniture, columns = [*,Furniture_ID, Name, Num_of_Component, Market_Rate]
target dvq:
Visualize BAR SELECT Name , Num_of_Component FROM furniture WHERE Num_of_Component > 10 ORDER BY Num_of_Component ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a scatter chart about the correlation between manager_id and department_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT MANAGER_ID , DEPARTMENT_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
what is the number of players who have points less than 30 for each position ? , and rank by the X in desc .
database schema:
Table player, columns = [*,Player_ID, name, Position, Club_ID, Apps, Tries, Goals, Points]
target dvq:
Visualize BAR SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION ORDER BY Position DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the amount of hire_date bin hire_date by time , and visualize them by a bar chart , sort by the how many hire date in descending please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the amount of hire_date over the hire_date bin hire_date by time by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
How many flights with price higher than 300 for each destination city ? Return a bar chart , list in descending by the Y .
database schema:
Table flight, columns = [*,flno, origin, destination, distance, departure_date, arrival_date, price, aid]
target dvq:
Visualize BAR SELECT destination , COUNT(destination) FROM Flight WHERE price > 300 GROUP BY destination ORDER BY COUNT(destination) DESC
****************************************************************************************************
nl_queries:
What is the name of the technician whose team is not 'NYY' , and count them by a bar chart , could you show bar in asc order ?
database schema:
Table repair, columns = [*,repair_ID, name, Launch_Date, Notes]
Table machine, columns = [*,Machine_ID, Making_Year, Class, Team, Machine_series, value_points, quality_rank]
Table technician, columns = [*,technician_id, Name, Team, Starting_Year, Age]
target dvq:
Visualize BAR SELECT Name , COUNT(Name) FROM technician WHERE Team != "NYY" GROUP BY Name ORDER BY Name ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a line chart about the change of commission_pct over hire_date .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find job_id and the sum of employee_id , and group by attribute job_id , and visualize them by a bar chart , and could you list bar in asc order ?
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a scatter chart about the correlation between employee_id and manager_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT EMPLOYEE_ID , MANAGER_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the amount of hire_date bin hire_date by time in a bar chart , display in ascending by the y-axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by time , could you list by the y axis from low to high ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(EMPLOYEE_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For employees without the letter M in their first name , give me a line chart to show the salary change over their hire date using a line chart , and sort by the HIRE_DATE in asc .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
A line chart for giveing me the number of the dates when the max temperature was higher than 85 , show by the X-axis in descending .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize LINE SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85 GROUP BY date ORDER BY date DESC
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , draw a bar chart about the distribution of name and manufacturer , and could you order by the Y in asc please ?
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Manufacturer FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Manufacturer ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the sum of salary over the job_id , and group by attribute job_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of job_id and the sum of department_id , and group by attribute job_id , display in ascending by the total number .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY SUM(DEPARTMENT_ID) ASC
****************************************************************************************************
nl_queries:
Find the number of professors with a PhD degree in each department Show bar chart , and I want to sort x-axis in desc order .
database schema:
Table COURSE, columns = [*,CRS_CODE, DEPT_CODE, CRS_DESCRIPTION, CRS_CREDIT]
Table DEPARTMENT, columns = [*,DEPT_CODE, DEPT_NAME, SCHOOL_CODE, EMP_NUM, DEPT_ADDRESS, DEPT_EXTENSION]
Table PROFESSOR, columns = [*,EMP_NUM, DEPT_CODE, PROF_OFFICE, PROF_EXTENSION, PROF_HIGH_DEGREE]
Table STUDENT, columns = [*,STU_NUM, STU_LNAME, STU_FNAME, STU_INIT, STU_DOB, STU_HRS, STU_CLASS, STU_GPA, STU_TRANSFER, DEPT_CODE, STU_PHONE, PROF_NUM]
target dvq:
Visualize BAR SELECT DEPT_CODE , count(*) FROM professor WHERE prof_high_degree = 'Ph.D.' GROUP BY dept_code ORDER BY DEPT_CODE DESC
****************************************************************************************************
nl_queries:
A line chart for what are the number of the dates that have an average sea level pressure between 30 . 3 and 31 ?
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize LINE SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31 GROUP BY date
****************************************************************************************************
nl_queries:
What are the number of the dates that have an average sea level pressure between 303 and 31 ? , I want to rank y-axis in asc order please .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) ASC BIN date BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a line chart about the change of department_id over hire_date .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , visualize a bar chart about the distribution of name and manufacturer , and could you order in ascending by the x-axis ?
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Manufacturer FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Name ASC
****************************************************************************************************
nl_queries:
For all storms with at least 1 death , show me the dates active and the total number of deaths with a bar chart , and rank by the total number in desc .
database schema:
Table storm, columns = [*,Storm_ID, Name, Dates_active, Max_speed, Damage_millions_USD, Number_Deaths]
target dvq:
Visualize BAR SELECT Dates_active , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Number_Deaths DESC
****************************************************************************************************
nl_queries:
when is the hire date for those employees whose first name does not containing the letter M , and count them by a bar chart
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name NOT LIKE '%M%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by time , list Y-axis from high to low order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(MANAGER_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of job_id and the average of department_id , and group by attribute job_id , and sort from low to high by the X-axis .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of job_id and the average of manager_id , and group by attribute job_id in a bar chart , and show by the total number in ascending .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY AVG(MANAGER_ID) ASC
****************************************************************************************************
nl_queries:
Which directors had a movie in either 1999 or 2000 , and count them by a bar chart , show by the Y in desc .
database schema:
Table book_club, columns = [*,book_club_id, Year, Author_or_Editor, Book_Title, Publisher, Category, Result]
Table movie, columns = [*,movie_id, Title, Year, Director, Budget_million, Gross_worldwide]
target dvq:
Visualize BAR SELECT Director , COUNT(Director) FROM movie WHERE YEAR = 1999 OR YEAR = 2000 GROUP BY Director ORDER BY COUNT(Director) DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday , rank in descending by the y axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(DEPARTMENT_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find job_id and the amount of job_id , and group by attribute job_id , and visualize them by a bar chart , and order in desc by the names .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
List the dog name and age of the dogs who have been abandoned in a bar chart , rank total number in descending order .
database schema:
Table Dogs, columns = [*,dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed]
target dvq:
Visualize BAR SELECT name , age FROM Dogs WHERE abandoned_yn = 1 ORDER BY age DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the sum of salary over the job_id , and group by attribute job_id by a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
A line chart for what are the number of the dates of transactions with at least 100 share count or amount bigger than 100 ? , and sort from high to low by the X-axis .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100  ORDER BY date_of_transaction DESC BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a bar chart shows the distribution of hire_date and the amount of hire_date bin hire_date by weekday .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of hire_date and the sum of salary bin hire_date by weekday , and order y-axis in asc order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
How many male students are there in each city ? Show a bar chart , display bars from low to high order .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
target dvq:
Visualize BAR SELECT city_code , count(*) FROM student WHERE sex = 'M' GROUP BY city_code ORDER BY city_code ASC
****************************************************************************************************
nl_queries:
what are the job titles , and range of salaries for jobs with maximum salary between 12000 and 18000 ? , and sort maximal salary-min salar from low to high order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
target dvq:
Visualize BAR SELECT JOB_TITLE , max_salary - min_salary FROM jobs WHERE max_salary BETWEEN 12000 AND 18000 ORDER BY max_salary - min_salary ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of manager_id over the job_id , and group by attribute job_id , and list Y-axis in desc order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY AVG(MANAGER_ID) DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the average of manager_id bin hire_date by weekday , and visualize them by a bar chart , and order by the y-axis in descending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(MANAGER_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of job_id and the sum of salary , and group by attribute job_id in a bar chart , list X in asc order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a line chart shows the change of salary over hire_date
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Show all ministers who do not belong to Progress Party , and count them by a pie chart
database schema:
Table party, columns = [*,Party_ID, Minister, Took_office, Left_office, Region_ID, Party_name]
target dvq:
Visualize PIE SELECT Minister , COUNT(Minister) FROM party WHERE party_name != 'Progress Party' GROUP BY Minister
****************************************************************************************************
nl_queries:
List the number of invoices from the US , grouped by state by a bar chart .
database schema:
Table invoices, columns = [*,id, customer_id, invoice_date, billing_address, billing_city, billing_state, billing_country, billing_postal_code, total]
target dvq:
Visualize BAR SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = "USA" GROUP BY billing_state
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , return a bar chart about the distribution of name and price , I want to display bars in asc order .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Price FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Name ASC
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , a bar chart shows the distribution of name and code , and list in desc by the Y please .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Code FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Code DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of job_id and the sum of salary , and group by attribute job_id , and display by the Y-axis in desc please .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY SUM(SALARY) DESC
****************************************************************************************************
nl_queries:
What are the different affiliations , and what is the total enrollment of schools founded after 1850 for each enrollment type Visualize by bar chart , and could you list from low to high by the bars ?
database schema:
Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]
target dvq:
Visualize BAR SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation ORDER BY Affiliation ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of job_id and the sum of manager_id , and group by attribute job_id , rank by the x-axis in asc .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of department_id over the hire_date bin hire_date by weekday by a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a line chart shows the change of manager_id over hire_date
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the sum of salary bin hire_date by time , could you sort from high to low by the Y please ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a scatter chart about the correlation between manager_id and department_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT MANAGER_ID , DEPARTMENT_ID FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the change of department_id over hire_date in a line chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by time , and rank by the Y in asc .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(MANAGER_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of job_id and the sum of department_id , and group by attribute job_id , I want to list by the bars from low to high .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the average of department_id bin hire_date by weekday in a bar chart , list by the the average of department id in desc .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(DEPARTMENT_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Show the frequency of the decor of rooms that have a king bed using a pie chart .
database schema:
Table Rooms, columns = [*,RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor]
target dvq:
Visualize PIE SELECT decor , COUNT(decor) FROM Rooms WHERE bedtype = 'King' GROUP BY decor
****************************************************************************************************
nl_queries:
For those female students with age is older than 18 who are not majoring in 600 , tell me how many students of different first names using a bar chart , display in descending by the x axis please .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
target dvq:
Visualize BAR SELECT Fname , COUNT(Fname) FROM Student WHERE Age > 18 AND Major != 600 AND Sex = 'F' GROUP BY Fname ORDER BY Fname DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a scatter chart about the correlation between salary and department_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT SALARY , DEPARTMENT_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
Visualize a bar chart for how many male and female assistant professors do we have ? , and sort from high to low by the y-axis .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
Table Faculty, columns = [*,FacID, Lname, Fname, Rank, Sex, Phone, Room, Building]
target dvq:
Visualize BAR SELECT Sex , count(*) FROM Faculty WHERE rank = "AsstProf" GROUP BY sex ORDER BY count(*) DESC
****************************************************************************************************
nl_queries:
How many flights with price higher than 300 for each destination city ? Return a bar chart , display by the x-axis in ascending .
database schema:
Table flight, columns = [*,flno, origin, destination, distance, departure_date, arrival_date, price, aid]
target dvq:
Visualize BAR SELECT destination , COUNT(destination) FROM Flight WHERE price > 300 GROUP BY destination ORDER BY destination ASC
****************************************************************************************************
nl_queries:
Find the dates of the tests taken with result "Pass" , and count them by a bar chart , and rank names in descending order .
database schema:
Table Student_Tests_Taken, columns = [*,registration_id, date_test_taken, test_result]
target dvq:
Visualize BAR SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = "Pass" GROUP BY date_test_taken ORDER BY date_test_taken DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id , and sort mean employee id in ascending order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY AVG(EMPLOYEE_ID) ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of job_id and the average of salary , and group by attribute job_id in a bar chart , could you list the average of salary in desc order please ?
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY AVG(SALARY) DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the sum of salary bin hire_date by weekday , list total number of salary from high to low order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
What are the number of the names of products with price at most 200 ? , and order by the X-axis in asc .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , COUNT(Name) FROM products WHERE price <= 200 GROUP BY Name ORDER BY Name ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of job_id and the sum of employee_id , and group by attribute job_id in a bar chart , and I want to order JOB_ID in asc order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For employees with first names that end with the letter 'm' , groups and counts the first name to visualize a pie graph .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize PIE SELECT FIRST_NAME , COUNT(FIRST_NAME) FROM employees WHERE first_name LIKE '%m' GROUP BY FIRST_NAME
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the sum of manager_id over the hire_date bin hire_date by weekday by a bar chart , and rank in desc by the total number please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(MANAGER_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the sum of salary bin hire_date by time , and visualize them by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
A bar chart for returning the number of the date of birth for all the guests with gender code "Male" .
database schema:
Table Guests, columns = [*,guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth]
target dvq:
Visualize BAR SELECT date_of_birth , COUNT(date_of_birth) FROM Guests WHERE gender_code = "Male" BIN date_of_birth BY WEEKDAY
****************************************************************************************************
nl_queries:
Find the average age of male students (with sex M) from each city .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
target dvq:
Visualize BAR SELECT city_code , avg(age) FROM student WHERE sex = 'M' GROUP BY city_code
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of job_id and the average of employee_id , and group by attribute job_id in a bar chart , list JOB_ID from low to high order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
A bar chart for what are the number of the dates of the latest logon of the students with family name "Jaskolski" or "Langosh" ?
database schema:
Table Course_Authors_and_Tutors, columns = [*,author_id, author_tutor_ATB, login_name, password, personal_name, middle_name, family_name, gender_mf, address_line_1]
Table Students, columns = [*,student_id, date_of_registration, date_of_latest_logon, login_name, password, personal_name, middle_name, family_name]
target dvq:
Visualize BAR SELECT date_of_latest_logon , COUNT(date_of_latest_logon) FROM Students WHERE family_name = "Jaskolski" OR family_name = "Langosh" BIN date_of_latest_logon BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a bar chart shows the distribution of hire_date and the average of employee_id bin hire_date by time , and order Y-axis in asc order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(EMPLOYEE_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of hire_date and the sum of salary bin hire_date by weekday .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by time , order in ascending by the Y .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(EMPLOYEE_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a line chart about the change of salary over hire_date , could you sort HIRE_DATE from high to low order ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
Which ministers are not a part of the Progress Party , and count them by a bar chart , I want to show Y-axis from high to low order .
database schema:
Table party, columns = [*,Party_ID, Minister, Took_office, Left_office, Region_ID, Party_name]
target dvq:
Visualize BAR SELECT Minister , COUNT(Minister) FROM party WHERE party_name != 'Progress Party' GROUP BY Minister ORDER BY COUNT(Minister) DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of department_id over the job_id , and group by attribute job_id .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by time , and sort in asc by the how many hire date .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of employee_id over the job_id , and group by attribute job_id by a bar chart , and sort X-axis from low to high order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For employees with first names that end with the letter m , groups and count the first name to visualize a bar graph , show from high to low by the total number .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT FIRST_NAME , COUNT(FIRST_NAME) FROM employees WHERE first_name LIKE '%m' GROUP BY FIRST_NAME ORDER BY COUNT(FIRST_NAME) DESC
****************************************************************************************************
nl_queries:
Show all director names who have a movie in the year 1999 or 2000 , and count them by a bar chart
database schema:
Table book_club, columns = [*,book_club_id, Year, Author_or_Editor, Book_Title, Publisher, Category, Result]
Table movie, columns = [*,movie_id, Title, Year, Director, Budget_million, Gross_worldwide]
target dvq:
Visualize BAR SELECT Director , COUNT(Director) FROM movie WHERE YEAR = 1999 OR YEAR = 2000 GROUP BY Director
****************************************************************************************************
nl_queries:
What are the number of the dates in which the mean sea level pressure was between 30 . 3 and 31 ?
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize LINE SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31 GROUP BY date
****************************************************************************************************
nl_queries:
What is the number of wines with price higher than 100 , sorted by year ? Visualize them by a bar chart .
database schema:
Table wine, columns = [*,No, Grape, Winery, Appelation, State, Name, Year, Price, Score, Cases, Drink]
target dvq:
Visualize BAR SELECT Year , COUNT(Year) FROM WINE WHERE Price > 100 GROUP BY Year ORDER BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the sum of salary bin hire_date by weekday , and visualize them by a bar chart , and sort total number in asc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id , show Y from high to low order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY AVG(SALARY) DESC
****************************************************************************************************
nl_queries:
Count the number of people of each sex who have a weight higher than 85 , and display x-axis from high to low order .
database schema:
Table people, columns = [*,People_ID, Sex, Name, Date_of_Birth, Height, Weight]
target dvq:
Visualize BAR SELECT Sex , count(*) FROM people WHERE weight > 85 GROUP BY sex ORDER BY Sex DESC
****************************************************************************************************
nl_queries:
What are the payment date of the payment with amount paid higher than 300 or with payment type is 'Check , and count them by a bar chart , order in desc by the y axis .
database schema:
Table Payments, columns = [*,payment_id, booking_id, customer_id, payment_type_code, amount_paid_in_full_yn, payment_date, amount_due, amount_paid]
target dvq:
Visualize BAR SELECT payment_date , COUNT(payment_date) FROM payments WHERE amount_paid > 300 OR payment_type_code = 'Check'  ORDER BY COUNT(payment_date) DESC BIN payment_date BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of job_id and the sum of salary , and group by attribute job_id , and display by the JOB_ID in desc .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
Select the name of the products with a price less than or equal to $200 , and count them by a bar chart , and could you display Name from high to low order ?
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , COUNT(Name) FROM products WHERE price <= 200 GROUP BY Name ORDER BY Name DESC
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , give me a pie chart to reflect the proportion of name and price .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize PIE SELECT Name , Price FROM products WHERE price BETWEEN 60 AND 120
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of department_id over the hire_date bin hire_date by time by a bar chart , and list mean department id from high to low order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(DEPARTMENT_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of job_id and the sum of department_id , and group by attribute job_id , and could you list by the X in descending please ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday , show by the Y from low to high .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(DEPARTMENT_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
A line chart for what are the number of the dates with a maximum temperature higher than 85 ? , rank by the X from low to high .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize LINE SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85 GROUP BY date ORDER BY date ASC
****************************************************************************************************
nl_queries:
Give me a bar chart to show how many days with a max temperature greater than or equal to 80 for each year .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f >= 80 BIN date BY YEAR
****************************************************************************************************
nl_queries:
Return a bar chart on how many rooms have king beds ? Report the number for each decor type , order by the X-axis in ascending please .
database schema:
Table Rooms, columns = [*,RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor]
target dvq:
Visualize BAR SELECT decor , count(*) FROM Rooms WHERE bedType = "King" GROUP BY decor ORDER BY decor ASC
****************************************************************************************************
nl_queries:
Show me a bar chart for what are the different affiliations , and what is the total enrollment of schools founded after 1850 for each enrollment type ? , and sort from low to high by the Y-axis please .
database schema:
Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]
target dvq:
Visualize BAR SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation ORDER BY sum(Enrollment) ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a line chart about the change of employee_id over hire_date , display in desc by the x-axis .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
What are the dates in which the mean sea level pressure was between 303 and 31 , and count them by a bar chart , could you rank by the Y in asc please ?
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) ASC BIN date BY YEAR
****************************************************************************************************
nl_queries:
What are the dates of the latest logon of the students with family name "Jaskolski" or "Langosh" , and count them by a bar chart , and I want to order in asc by the total number .
database schema:
Table Course_Authors_and_Tutors, columns = [*,author_id, author_tutor_ATB, login_name, password, personal_name, middle_name, family_name, gender_mf, address_line_1]
Table Students, columns = [*,student_id, date_of_registration, date_of_latest_logon, login_name, password, personal_name, middle_name, family_name]
target dvq:
Visualize BAR SELECT date_of_latest_logon , COUNT(date_of_latest_logon) FROM Students WHERE family_name = "Jaskolski" OR family_name = "Langosh"  ORDER BY COUNT(date_of_latest_logon) ASC BIN date_of_latest_logon BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of salary over the hire_date bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
On which day has it neither been foggy nor rained in the zip code of 94107 , and count them by a bar chart , order total number in ascending order please .
database schema:
Table trip, columns = [*,id, duration, start_date, start_station_name, start_station_id, end_date, end_station_name, end_station_id, bike_id, subscription_type, zip_code]
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE zip_code = 94107 AND EVENTS != "Fog" AND EVENTS != "Rain"  ORDER BY COUNT(date) ASC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of job_id and the sum of manager_id , and group by attribute job_id , and could you rank from high to low by the x axis ?
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
Return a bar chart on what is the average age for a male in each job ?
database schema:
Table Person, columns = [*,name, age, city, gender, job]
target dvq:
Visualize BAR SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of job_id and the average of manager_id , and group by attribute job_id , and rank by the Y-axis from low to high .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY AVG(MANAGER_ID) ASC
****************************************************************************************************
nl_queries:
Compare the number of winery of the wines whose price is bigger than 100 , and could you sort total number from low to high order ?
database schema:
Table wine, columns = [*,No, Grape, Winery, Appelation, State, Name, Year, Price, Score, Cases, Drink]
target dvq:
Visualize BAR SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Winery ORDER BY COUNT(Winery) ASC
****************************************************************************************************
nl_queries:
Show all ministers who do not belong to Progress Party , and count them by a bar chart , and could you show total number from high to low order ?
database schema:
Table party, columns = [*,Party_ID, Minister, Took_office, Left_office, Region_ID, Party_name]
target dvq:
Visualize BAR SELECT Minister , COUNT(Minister) FROM party WHERE party_name != 'Progress Party' GROUP BY Minister ORDER BY COUNT(Minister) DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize the relationship between salary and commission_pct .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT SALARY , COMMISSION_PCT FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of department_id over the job_id , and group by attribute job_id by a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the average of manager_id bin hire_date by weekday in a bar chart , and I want to order in asc by the y axis .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(MANAGER_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a line chart about the change of employee_id over hire_date .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the amount of hire_date over the hire_date bin hire_date by weekday by a bar chart , I want to show y axis in desc order please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
A bar chart for finding the number of the latest logon date of the students whose family name is "Jaskolski" or "Langosh" .
database schema:
Table Course_Authors_and_Tutors, columns = [*,author_id, author_tutor_ATB, login_name, password, personal_name, middle_name, family_name, gender_mf, address_line_1]
Table Students, columns = [*,student_id, date_of_registration, date_of_latest_logon, login_name, password, personal_name, middle_name, family_name]
target dvq:
Visualize BAR SELECT date_of_latest_logon , COUNT(date_of_latest_logon) FROM Students WHERE family_name = "Jaskolski" OR family_name = "Langosh" BIN date_of_latest_logon BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , what is the relationship between employee_id and salary ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT EMPLOYEE_ID , SALARY FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
Bin the hire date into the day of week interval , and then calculate the average salary of employees in each day for a bar chart , note that just select those employees without the letter M in their first name .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name NOT LIKE '%M%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
What are the number of the dates of the latest logon of the students with family name "Jaskolski" or "Langosh" ?
database schema:
Table Course_Authors_and_Tutors, columns = [*,author_id, author_tutor_ATB, login_name, password, personal_name, middle_name, family_name, gender_mf, address_line_1]
Table Students, columns = [*,student_id, date_of_registration, date_of_latest_logon, login_name, password, personal_name, middle_name, family_name]
target dvq:
Visualize BAR SELECT date_of_latest_logon , COUNT(date_of_latest_logon) FROM Students WHERE family_name = "Jaskolski" OR family_name = "Langosh" BIN date_of_latest_logon BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of employee_id over the hire_date bin hire_date by weekday by a bar chart , and order in ascending by the the average of employee id .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(EMPLOYEE_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Return the number of the date of birth for all the guests with gender code "Male" , could you rank in desc by the Y ?
database schema:
Table Guests, columns = [*,guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth]
target dvq:
Visualize BAR SELECT date_of_birth , COUNT(date_of_birth) FROM Guests WHERE gender_code = "Male"  ORDER BY COUNT(date_of_birth) DESC BIN date_of_birth BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me the trend about employee_id over hire_date with a line chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the average of manager_id over the job_id , and group by attribute job_id , order mean manager id from low to high order please .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY AVG(MANAGER_ID) ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me the trend about manager_id over hire_date with a line chart , list by the x-axis from high to low please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
what is the average age for a male in each job ? , list by the mean age in asc .
database schema:
Table Person, columns = [*,name, age, city, gender, job]
target dvq:
Visualize BAR SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY avg(age) ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the average of department_id bin hire_date by weekday , I want to display y axis in desc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(DEPARTMENT_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
A bar chart showing the number of first name for all female students . Their sex is F .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
target dvq:
Visualize BAR SELECT Fname , COUNT(Fname) FROM Student WHERE Sex = 'F' GROUP BY Fname
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find hire_date and the amount of hire_date bin hire_date by weekday , and visualize them by a bar chart , and could you show in descending by the how many hire date ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the amount of job_id over the job_id , and group by attribute job_id , and sort by the X in ascending please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the sum of department_id over the hire_date bin hire_date by time by a bar chart , and I want to order by the y-axis from low to high .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(DEPARTMENT_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , a bar chart shows the distribution of name and manufacturer , rank from low to high by the Y .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Manufacturer FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Manufacturer ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by time , and display Y-axis in asc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(EMPLOYEE_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the average of salary bin hire_date by time , and visualize them by a bar chart , show Y-axis from low to high order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , for department_id , hire_date , visualize the trend , I want to sort by the X-axis from low to high .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , for manager_id , hire_date , visualize the trend , and display X-axis in descending order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
List the grape and winery of the wines whose price is bigger than 100 , the x-axis is winery and group the grape , and y-axis is the number of wineries .
database schema:
Table grapes, columns = [*,ID, Grape, Color]
Table wine, columns = [*,No, Grape, Winery, Appelation, State, Name, Year, Price, Score, Cases, Drink]
target dvq:
Visualize BAR SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Grape ,  Winery
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find hire_date and the amount of hire_date bin hire_date by weekday , and visualize them by a bar chart , show by the how many hire date in ascending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of employee_id over the hire_date bin hire_date by time , and show in ascending by the Y .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(EMPLOYEE_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the amount of hire_date bin hire_date by time in a bar chart , display by the y-axis in descending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find job_id and the sum of manager_id , and group by attribute job_id , and visualize them by a bar chart , could you list by the total number from low to high ?
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY SUM(MANAGER_ID) ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time , and show in ascending by the Y-axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(DEPARTMENT_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Find the id and weight of all pets whose age is older than 1 Visualize by bar chart , order in ascending by the x-axis .
database schema:
Table Has_Pet, columns = [*,StuID, PetID]
Table Pets, columns = [*,PetID, PetType, pet_age, weight]
target dvq:
Visualize BAR SELECT PetID , weight FROM pets WHERE pet_age > 1 ORDER BY PetID ASC
****************************************************************************************************
nl_queries:
Find the number of employees of each gender whose salary is lower than 50000 Visualize by bar chart , rank in ascending by the X-axis please .
database schema:
Table employee, columns = [*,Fname, Minit, Lname, Ssn, Bdate, Address, Sex, Salary, Super_ssn, Dno]
Table dependent, columns = [*,Essn, Dependent_name, Sex, Bdate, Relationship]
target dvq:
Visualize BAR SELECT Sex , count(*) FROM employee WHERE salary < 50000 GROUP BY sex ORDER BY Sex ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a scatter chart shows the correlation between employee_id and department_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT EMPLOYEE_ID , DEPARTMENT_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
Give me the dates when the max temperature was higher than 85 , and count them by a bar chart , and could you list y axis in ascending order please ?
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) ASC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of department_id over the hire_date bin hire_date by weekday by a bar chart , and list y-axis in desc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(DEPARTMENT_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the sum of employee_id over the hire_date bin hire_date by time , sort from high to low by the y axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(EMPLOYEE_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a line chart about the change of department_id over hire_date , I want to order in ascending by the x-axis .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
Find the number of male students (with sex M) from each city in a bar chart .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
target dvq:
Visualize BAR SELECT city_code , count(*) FROM student WHERE sex = 'M' GROUP BY city_code
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of job_id and the average of department_id , and group by attribute job_id , order by the y axis in ascending .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY AVG(DEPARTMENT_ID) ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a line chart about the change of employee_id over hire_date .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
when is the hire date for those employees whose first name does not containing the letter M , and count them by a bar chart , show in asc by the Y-axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name NOT LIKE '%M%'  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by time , could you sort y axis in ascending order ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of job_id and the average of employee_id , and group by attribute job_id , sort in ascending by the y axis please .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY AVG(EMPLOYEE_ID) ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a scatter chart shows the correlation between employee_id and department_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT EMPLOYEE_ID , DEPARTMENT_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
Count the number of people of each sex who have a weight higher than 85 . Show a pie chart .
database schema:
Table people, columns = [*,People_ID, Sex, Name, Date_of_Birth, Height, Weight]
target dvq:
Visualize PIE SELECT Sex , count(*) FROM people WHERE weight > 85 GROUP BY sex
****************************************************************************************************
nl_queries:
Give me the dates when the max temperature was higher than 85 , and count them by a bar chart
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85 BIN date BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the change of employee_id over hire_date in a line chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For the transaction dates if share count is smaller than 10 , bin the dates into the year interval , and count them using a line chart , order X from low to high order .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count < 10  ORDER BY date_of_transaction ASC BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
Show the average age for all female students and group them by last name with a bar chart , and rank bar in ascending order .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
target dvq:
Visualize BAR SELECT LName , AVG(Age) FROM Student WHERE Sex = 'F' GROUP BY LName ORDER BY LName ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of job_id and the sum of salary , and group by attribute job_id , display in ascending by the y-axis .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY SUM(SALARY) ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by time , and rank by the sum department id in descending please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(DEPARTMENT_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find job_id and the sum of employee_id , and group by attribute job_id , and visualize them by a bar chart , and display by the total number in asc .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY SUM(EMPLOYEE_ID) ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id , list from low to high by the names .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of job_id and the sum of salary , and group by attribute job_id , and list from high to low by the Y .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY SUM(SALARY) DESC
****************************************************************************************************
nl_queries:
what is the average age for a male in each job ?
database schema:
Table Person, columns = [*,name, age, city, gender, job]
target dvq:
Visualize BAR SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job
****************************************************************************************************
nl_queries:
What is the average age of male students in each city ? Draw a bar chart , and sort from low to high by the Y-axis .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
target dvq:
Visualize BAR SELECT city_code , avg(age) FROM student WHERE sex = 'M' GROUP BY city_code ORDER BY avg(age) ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of department_id over the hire_date bin hire_date by weekday by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday , display mean salary in ascending order please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the average of employee_id bin hire_date by time , and visualize them by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of hire_date and the sum of department_id bin hire_date by time , could you rank by the total number in desc ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(DEPARTMENT_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Show all director names who have a movie in the year 1999 or 2000 , and count them by a bar chart , and could you display by the Director in ascending ?
database schema:
Table book_club, columns = [*,book_club_id, Year, Author_or_Editor, Book_Title, Publisher, Category, Result]
Table movie, columns = [*,movie_id, Title, Year, Director, Budget_million, Gross_worldwide]
target dvq:
Visualize BAR SELECT Director , COUNT(Director) FROM movie WHERE YEAR = 1999 OR YEAR = 2000 GROUP BY Director ORDER BY Director ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the sum of employee_id over the job_id , and group by attribute job_id by a bar chart , I want to show X in desc order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
Take the first name of all the good customers as the X-axis and gender of all the good customers as Y-axis in a bar chart , and order by their last name .
database schema:
Table Customers, columns = [*,customer_id, coupon_id, good_or_bad_customer, first_name, last_name, gender_mf, date_became_customer, date_last_hire]
target dvq:
Visualize BAR SELECT last_name , gender_mf FROM customers WHERE good_or_bad_customer = 'good' ORDER BY last_name
****************************************************************************************************
nl_queries:
How old is each dog that was abandoned ? Show in a bar chart , order by the y-axis in descending .
database schema:
Table Dogs, columns = [*,dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed]
target dvq:
Visualize BAR SELECT name , age FROM Dogs WHERE abandoned_yn = 1 ORDER BY age DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the average of employee_id bin hire_date by time , and visualize them by a bar chart , could you list in desc by the y-axis ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(EMPLOYEE_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Return the date of birth for all the guests with gender code "Male" , and count them by a line chart , I want to show x axis in ascending order .
database schema:
Table Guests, columns = [*,guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth]
target dvq:
Visualize LINE SELECT date_of_birth , COUNT(date_of_birth) FROM Guests WHERE gender_code = "Male"  ORDER BY date_of_birth ASC BIN date_of_birth BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of manager_id over the hire_date bin hire_date by time by a bar chart , and could you display y axis in ascending order ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(MANAGER_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a bar chart shows the distribution of job_id and the sum of employee_id , and group by attribute job_id , display in descending by the JOB_ID .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of job_id and the sum of employee_id , and group by attribute job_id , and list names in asc order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize the relationship between commission_pct and manager_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT COMMISSION_PCT , MANAGER_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a line chart shows the change of commission_pct over hire_date , and sort X-axis from low to high order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
what are the job titles , and range of salaries for jobs with maximum salary between 12000 and 18000 ? , and order in descending by the Y-axis .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
target dvq:
Visualize BAR SELECT JOB_TITLE , max_salary - min_salary FROM jobs WHERE max_salary BETWEEN 12000 AND 18000 ORDER BY max_salary - min_salary DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a line chart about the change of commission_pct over hire_date , could you list by the X in descending ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
For those employees whose first name is ending with the letter m , compute their average salary for visualizing a bar chart , and rank names from low to high order please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT FIRST_NAME , AVG(SALARY) FROM employees WHERE first_name LIKE '%m' GROUP BY FIRST_NAME ORDER BY FIRST_NAME ASC
****************************************************************************************************
nl_queries:
Find the number of people who is under 40 for each gender , list bar in desc order please .
database schema:
Table Person, columns = [*,name, age, city, gender, job]
target dvq:
Visualize BAR SELECT gender , count(*) FROM Person WHERE age < 40 GROUP BY gender ORDER BY gender DESC
****************************************************************************************************
nl_queries:
What are the names and seatings for all tracks opened after 2000 , ordered by seating . Visualize by bar chart .
database schema:
Table race, columns = [*,Race_ID, Name, Class, Date, Track_ID]
Table track, columns = [*,Track_ID, Name, Location, Seating, Year_Opened]
target dvq:
Visualize BAR SELECT Name , Seating FROM track WHERE year_opened > 2000 ORDER BY seating
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id , order by the names from high to low .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , a scatter chart shows the correlation between code and manufacturer , and group by attribute name .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize SCATTER SELECT Code , Manufacturer FROM products WHERE price BETWEEN 60 AND 120 GROUP BY Name
****************************************************************************************************
nl_queries:
Which tests have "Pass" results ? Return the dates when the tests were taken , and count them by a line chart , and I want to display by the X-axis in asc .
database schema:
Table Student_Tests_Taken, columns = [*,registration_id, date_test_taken, test_result]
target dvq:
Visualize LINE SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = "Pass"  ORDER BY date_test_taken ASC BIN date_test_taken BY DAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id , rank in ascending by the Y .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY AVG(SALARY) ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the correlation between commission_pct and manager_id in a scatter chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT COMMISSION_PCT , MANAGER_ID FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
Show the shipping charge and customer id for customer orders with order status Cancelled or Paid . Show scatter chart .
database schema:
Table Customers, columns = [*,customer_id, payment_method, customer_name, customer_phone, customer_email, customer_address, customer_login, customer_password]
Table Customer_Addresses, columns = [*,customer_id, premise_id, date_address_from, address_type_code, date_address_to]
Table Customer_Orders, columns = [*,order_id, customer_id, order_status_code, shipping_method_code, order_placed_datetime, order_delivered_datetime, order_shipping_charges]
Table Mailshot_Customers, columns = [*,mailshot_id, customer_id, outcome_code, mailshot_customer_date]
target dvq:
Visualize SCATTER SELECT order_shipping_charges , customer_id FROM customer_orders WHERE order_status_code = 'Cancelled' OR order_status_code = 'Paid'
****************************************************************************************************
nl_queries:
A bar chart for finding the number of the dates of the tests taken with result "Pass" , and order total number from low to high order .
database schema:
Table Student_Tests_Taken, columns = [*,registration_id, date_test_taken, test_result]
target dvq:
Visualize BAR SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = "Pass"  ORDER BY COUNT(date_test_taken) ASC BIN date_test_taken BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of job_id and the average of department_id , and group by attribute job_id , could you sort by the X in desc please ?
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a scatter chart about the correlation between commission_pct and department_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT COMMISSION_PCT , DEPARTMENT_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , a bar chart shows the distribution of name and code , rank names in descending order .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Code FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Name DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a scatter chart about the correlation between salary and manager_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT SALARY , MANAGER_ID FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of salary over the job_id , and group by attribute job_id , and show y axis from high to low order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY AVG(SALARY) DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the average of department_id bin hire_date by weekday , display by the the average of department id in asc .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(DEPARTMENT_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
How many invoices were billed from each state Plot them as bar chart , and order by the Y-axis from low to high .
database schema:
Table invoices, columns = [*,id, customer_id, invoice_date, billing_address, billing_city, billing_state, billing_country, billing_postal_code, total]
target dvq:
Visualize BAR SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = "USA" GROUP BY billing_state ORDER BY COUNT(*) ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of job_id and the average of salary , and group by attribute job_id in a bar chart , and display in ascending by the X .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
List the dog name and weight of the dogs who have been abandoned in a pie chart .
database schema:
Table Dogs, columns = [*,dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed]
target dvq:
Visualize PIE SELECT name , age FROM Dogs WHERE abandoned_yn = 1
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of job_id and the sum of department_id , and group by attribute job_id , list in desc by the x axis .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me the trend about commission_pct over hire_date with a line chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
What is the name of the technician whose team is not 'NYY' , and count them by a bar chart
database schema:
Table repair, columns = [*,repair_ID, name, Launch_Date, Notes]
Table machine, columns = [*,Machine_ID, Making_Year, Class, Team, Machine_series, value_points, quality_rank]
Table technician, columns = [*,technician_id, Name, Team, Starting_Year, Age]
target dvq:
Visualize BAR SELECT Name , COUNT(Name) FROM technician WHERE Team != "NYY" GROUP BY Name
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a line chart about the change of commission_pct over hire_date , show in asc by the X-axis .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a line chart shows the trend of salary over hire_date .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
What are the number of the category of music festivals with result "Awarded" ? , could you list Y from low to high order ?
database schema:
Table music_festival, columns = [*,ID, Music_Festival, Date_of_ceremony, Category, Volume, Result]
target dvq:
Visualize BAR SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = "Awarded" GROUP BY Category ORDER BY COUNT(Category) ASC
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , a bar chart shows the distribution of name and code .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Code FROM products WHERE price BETWEEN 60 AND 120
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of salary over the hire_date bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
List the dog name and weight of the dogs who have been abandoned in a bar chart , and rank in desc by the X .
database schema:
Table Dogs, columns = [*,dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed]
target dvq:
Visualize BAR SELECT name , weight FROM Dogs WHERE abandoned_yn = 1 ORDER BY name DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id , I want to sort by the Y in descending .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY SUM(MANAGER_ID) DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of job_id and the sum of department_id , and group by attribute job_id , rank bars in asc order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of job_id and the sum of salary , and group by attribute job_id .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the average of manager_id bin hire_date by time , and visualize them by a bar chart , and show in descending by the y-axis please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(MANAGER_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of manager_id over the hire_date bin hire_date by weekday by a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Visualize the name and their component amounts with a bar chart for all furnitures that have more than 10 components , could you order by the bar in ascending ?
database schema:
Table manufacturer, columns = [*,Manufacturer_ID, Open_Year, Name, Num_of_Factories, Num_of_Shops]
Table furniture, columns = [*,Furniture_ID, Name, Num_of_Component, Market_Rate]
target dvq:
Visualize BAR SELECT Name , Num_of_Component FROM furniture WHERE Num_of_Component > 10 ORDER BY Name ASC
****************************************************************************************************
nl_queries:
What are dates of birth of all the guests whose gender is "Male" , and count them by a bar chart , sort in ascending by the total number please .
database schema:
Table Guests, columns = [*,guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth]
target dvq:
Visualize BAR SELECT date_of_birth , COUNT(date_of_birth) FROM Guests WHERE gender_code = "Male"  ORDER BY COUNT(date_of_birth) ASC BIN date_of_birth BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of hire_date and the average of department_id bin hire_date by weekday , and I want to sort Y in descending order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(DEPARTMENT_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
What are the number of the dates of the latest logon of the students with family name "Jaskolski" or "Langosh" ? , and sort by the Y from low to high .
database schema:
Table Course_Authors_and_Tutors, columns = [*,author_id, author_tutor_ATB, login_name, password, personal_name, middle_name, family_name, gender_mf, address_line_1]
Table Students, columns = [*,student_id, date_of_registration, date_of_latest_logon, login_name, password, personal_name, middle_name, family_name]
target dvq:
Visualize BAR SELECT date_of_latest_logon , COUNT(date_of_latest_logon) FROM Students WHERE family_name = "Jaskolski" OR family_name = "Langosh"  ORDER BY COUNT(date_of_latest_logon) ASC BIN date_of_latest_logon BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by weekday .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of job_id and the average of department_id , and group by attribute job_id , could you list by the Y-axis in asc ?
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY AVG(DEPARTMENT_ID) ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find hire_date and the sum of salary bin hire_date by weekday , and visualize them by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the trend about manager_id over hire_date , I want to rank x-axis in asc order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of hire_date and the average of department_id bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a line chart about the change of department_id over hire_date .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
What are the different affiliations , and what is the total enrollment of schools founded after 1850 for each enrollment type Visualize by bar chart , and list by the bars in desc .
database schema:
Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]
target dvq:
Visualize BAR SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation ORDER BY Affiliation DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of job_id and the amount of job_id , and group by attribute job_id , could you list in descending by the names ?
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
A bar chart showing the number of first name for all female students Their sex is F , and show total number from low to high order .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
target dvq:
Visualize BAR SELECT Fname , COUNT(Fname) FROM Student WHERE Sex = 'F' GROUP BY Fname ORDER BY COUNT(Fname) ASC
****************************************************************************************************
nl_queries:
For all storms with at least 1 death , compare the number of deaths by name .
database schema:
Table storm, columns = [*,Storm_ID, Name, Dates_active, Max_speed, Damage_millions_USD, Number_Deaths]
target dvq:
Visualize BAR SELECT Name , Number_Deaths FROM storm WHERE number_deaths >= 1
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by weekday .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the trend about salary over hire_date , and sort x axis in ascending order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , what is the relationship between price and manufacturer , and group by attribute name ?
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize SCATTER SELECT Price , Manufacturer FROM products WHERE price BETWEEN 60 AND 120 GROUP BY Name
****************************************************************************************************
nl_queries:
A bar chart about the number of last name for all female students whose sex is F , and rank in asc by the y-axis .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
target dvq:
Visualize BAR SELECT LName , COUNT(LName) FROM Student WHERE Sex = 'F' GROUP BY LName ORDER BY COUNT(LName) ASC
****************************************************************************************************
nl_queries:
In which years cars were produced weighing no less than 3000 and no more than 4000 , and count them by a bar chart
database schema:
Table cars_data, columns = [*,Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year]
target dvq:
Visualize BAR SELECT Year , COUNT(Year) FROM cars_data where weight between 3000 and 4000 BIN Year BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a line chart shows the trend of commission_pct over hire_date , and could you rank from low to high by the x-axis ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
What are the category of music festivals with result "Awarded" , and count them by a bar chart
database schema:
Table music_festival, columns = [*,ID, Music_Festival, Date_of_ceremony, Category, Volume, Result]
target dvq:
Visualize BAR SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = "Awarded" GROUP BY Category
****************************************************************************************************
nl_queries:
Count the number of people of each sex who have a weight higher than 85 by a bar chart , and I want to order by the X in asc .
database schema:
Table people, columns = [*,People_ID, Sex, Name, Date_of_Birth, Height, Weight]
target dvq:
Visualize BAR SELECT Sex , count(*) FROM people WHERE weight > 85 GROUP BY sex ORDER BY Sex ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of hire_date and the sum of manager_id bin hire_date by time , list Y-axis in asc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(MANAGER_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a scatter chart about the correlation between commission_pct and manager_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT COMMISSION_PCT , MANAGER_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the average of manager_id bin hire_date by weekday in a bar chart , and show by the the average of manager id from high to low .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(MANAGER_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the average of manager_id over the job_id , and group by attribute job_id , and rank bar from low to high order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
A line chart for giveing me the number of the dates when the max temperature was higher than 85 , I want to rank by the X in asc .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize LINE SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85 GROUP BY date ORDER BY date ASC
****************************************************************************************************
nl_queries:
Return a histogram on how many professors have a PhD in each department ? , and I want to rank by the X-axis in asc .
database schema:
Table COURSE, columns = [*,CRS_CODE, DEPT_CODE, CRS_DESCRIPTION, CRS_CREDIT]
Table DEPARTMENT, columns = [*,DEPT_CODE, DEPT_NAME, SCHOOL_CODE, EMP_NUM, DEPT_ADDRESS, DEPT_EXTENSION]
Table PROFESSOR, columns = [*,EMP_NUM, DEPT_CODE, PROF_OFFICE, PROF_EXTENSION, PROF_HIGH_DEGREE]
Table STUDENT, columns = [*,STU_NUM, STU_LNAME, STU_FNAME, STU_INIT, STU_DOB, STU_HRS, STU_CLASS, STU_GPA, STU_TRANSFER, DEPT_CODE, STU_PHONE, PROF_NUM]
target dvq:
Visualize BAR SELECT DEPT_CODE , count(*) FROM professor WHERE prof_high_degree = 'Ph.D.' GROUP BY dept_code ORDER BY DEPT_CODE ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of job_id and the sum of manager_id , and group by attribute job_id in a bar chart , and display by the y axis in desc please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY SUM(MANAGER_ID) DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by weekday , and sort by the Y in desc .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(EMPLOYEE_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of job_id and the average of department_id , and group by attribute job_id , I want to sort in asc by the X-axis .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a bar chart shows the distribution of job_id and the sum of salary , and group by attribute job_id , and show X-axis in desc order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
What is the average age of male students in each city ? Draw a bar chart , could you list in descending by the total number please ?
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
target dvq:
Visualize BAR SELECT city_code , avg(age) FROM student WHERE sex = 'M' GROUP BY city_code ORDER BY avg(age) DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id , sort bar in asc order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by weekday .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those dates with a max temperature greater than or equal to 80 , I want to know the number of days on the day of the week interval using a bar chart , could you show from high to low by the Y ?
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f >= 80  ORDER BY COUNT(date) DESC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find job_id and the sum of salary , and group by attribute job_id , and visualize them by a bar chart .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the sum of salary bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , for employee_id , hire_date , visualize the trend , list in ascending by the X .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
For all train stations not in London with a pie chart , show me the proportion of total_passengers of different names .
database schema:
Table station, columns = [*,Station_ID, Name, Annual_entry_exit, Annual_interchanges, Total_Passengers, Location, Main_Services, Number_of_Platforms]
Table train, columns = [*,Train_ID, Name, Time, Service]
target dvq:
Visualize PIE SELECT Name , Total_Passengers FROM station WHERE LOCATION != 'London'
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find job_id and the average of salary , and group by attribute job_id , and visualize them by a bar chart , and I want to order by the Y from high to low please .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY AVG(SALARY) DESC
****************************************************************************************************
nl_queries:
What are the number of the dates of transactions with at least 100 share count or amount bigger than 100 ?
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100 BIN date_of_transaction BY WEEKDAY
****************************************************************************************************
nl_queries:
Visualize a bar chart for how many male and female assistant professors do we have ? , and order by the bars in descending .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
Table Faculty, columns = [*,FacID, Lname, Fname, Rank, Sex, Phone, Room, Building]
target dvq:
Visualize BAR SELECT Sex , count(*) FROM Faculty WHERE rank = "AsstProf" GROUP BY sex ORDER BY Sex DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of job_id and the average of department_id , and group by attribute job_id , and display in desc by the Y .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY AVG(DEPARTMENT_ID) DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of job_id and the average of employee_id , and group by attribute job_id in a bar chart , could you rank in ascending by the X-axis ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the average of manager_id bin hire_date by weekday , and visualize them by a bar chart , sort the average of manager id in asc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(MANAGER_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the amount of job_id over the job_id , and group by attribute job_id , and list from low to high by the x-axis .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize the relationship between employee_id and manager_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT EMPLOYEE_ID , MANAGER_ID FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
Draw a bar chart for how many people are under 40 for each gender ? , and rank from low to high by the the total number .
database schema:
Table Person, columns = [*,name, age, city, gender, job]
target dvq:
Visualize BAR SELECT gender , count(*) FROM Person WHERE age < 40 GROUP BY gender ORDER BY count(*) ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of job_id and the amount of job_id , and group by attribute job_id .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
How old is each dog that was abandoned ? Show in a bar chart .
database schema:
Table Dogs, columns = [*,dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed]
target dvq:
Visualize BAR SELECT name , age FROM Dogs WHERE abandoned_yn = 1
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time , and could you sort by the the average of department id in asc ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(DEPARTMENT_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the sum of employee_id bin hire_date by weekday , show in desc by the total number .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(EMPLOYEE_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
A stacked bar chart that computes the total number of wines with a price is bigger than 100 of each year , and group by grape . Next , Bin the year into the weekday interval .
database schema:
Table grapes, columns = [*,ID, Grape, Color]
Table wine, columns = [*,No, Grape, Winery, Appelation, State, Name, Year, Price, Score, Cases, Drink]
target dvq:
Visualize BAR SELECT Year , COUNT(Year) FROM WINE WHERE Price > 100 GROUP BY Grape ORDER BY YEAR BIN Year BY WEEKDAY
****************************************************************************************************
nl_queries:
Find the pixel aspect ratio and the nation of the tv channels that do not use English Show the number of different pixel aspect ratios with a bar chart , list in ascending by the Y .
database schema:
Table TV_Channel, columns = [*,id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option]
target dvq:
Visualize BAR SELECT Pixel_aspect_ratio_PAR , COUNT(Pixel_aspect_ratio_PAR) FROM tv_channel WHERE LANGUAGE != 'English' GROUP BY Pixel_aspect_ratio_PAR ORDER BY COUNT(Pixel_aspect_ratio_PAR) ASC
****************************************************************************************************
nl_queries:
For the transaction dates if share count is smaller than 10 , bin the dates into the year interval , and count them using a line chart , and list in ascending by the x axis please .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count < 10  ORDER BY date_of_transaction ASC BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a scatter chart about the correlation between salary and department_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT SALARY , DEPARTMENT_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of hire_date and the sum of salary bin hire_date by time .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a line chart shows the change of commission_pct over hire_date , list X-axis in asc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of job_id and the sum of salary , and group by attribute job_id , rank X from low to high order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of manager_id over the hire_date bin hire_date by time , I want to order from high to low by the Y-axis .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(MANAGER_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of job_id and the average of salary , and group by attribute job_id in a bar chart , order by the Y-axis from low to high please .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY AVG(SALARY) ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of job_id and the sum of department_id , and group by attribute job_id , I want to order by the total number from high to low .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY SUM(DEPARTMENT_ID) DESC
****************************************************************************************************
nl_queries:
For all storms with at least 1 death , compare the number of deaths by name , and rank in asc by the y-axis .
database schema:
Table storm, columns = [*,Storm_ID, Name, Dates_active, Max_speed, Damage_millions_USD, Number_Deaths]
target dvq:
Visualize BAR SELECT Name , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Number_Deaths ASC
****************************************************************************************************
nl_queries:
What are the number of the dates in which the mean sea level pressure was between 303 and 31 ? , display date in asc order .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize LINE SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31 GROUP BY date ORDER BY date ASC
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , return a bar chart about the distribution of name and code , list X from high to low order .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Code FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Name DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of manager_id over the hire_date bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the sum of manager_id bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the average of manager_id bin hire_date by weekday , and visualize them by a bar chart , I want to order from low to high by the y axis .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(MANAGER_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a line chart about the change of employee_id over hire_date , display in desc by the x-axis .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of job_id and the sum of manager_id , and group by attribute job_id in a bar chart , and could you show in desc by the x axis please ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
How many rooms cost more than 120 , for each different decor . Plot them as pie chart .
database schema:
Table Rooms, columns = [*,RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor]
target dvq:
Visualize PIE SELECT decor , count(*) FROM Rooms WHERE basePrice > 120 GROUP BY decor
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of department_id over the job_id , and group by attribute job_id , rank in asc by the y-axis .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY AVG(DEPARTMENT_ID) ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the sum of department_id over the hire_date bin hire_date by time , sort in descending by the y-axis .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(DEPARTMENT_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a line chart shows the trend of employee_id over hire_date , could you order HIRE_DATE in descending order please ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
Compare the frequency of each type of bed by a bar chart , and list bedType from high to low order .
database schema:
Table Rooms, columns = [*,RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor]
target dvq:
Visualize BAR SELECT bedType , COUNT(bedType) FROM Rooms WHERE decor = "traditional" GROUP BY bedType ORDER BY bedType DESC
****************************************************************************************************
nl_queries:
What are dates of birth of all the guests whose gender is "Male" , and count them by a line chart
database schema:
Table Guests, columns = [*,guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth]
target dvq:
Visualize LINE SELECT date_of_birth , COUNT(date_of_birth) FROM Guests WHERE gender_code = "Male" BIN date_of_birth BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of hire_date and the sum of salary bin hire_date by time , and I want to order by the total number from high to low .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the amount of job_id over the job_id , and group by attribute job_id .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a line chart about the change of manager_id over hire_date , list from low to high by the X .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
What are the names of products with price at most 200 , and count them by a bar chart , and rank by the y axis in ascending .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , COUNT(Name) FROM products WHERE price <= 200 GROUP BY Name ORDER BY COUNT(Name) ASC
****************************************************************************************************
nl_queries:
For those dates with a max temperature greater than or equal to 80 , I want to see the number of days for each year using a bar chart .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f >= 80 BIN date BY YEAR
****************************************************************************************************
nl_queries:
Show the number of companies whose headquarters are not from USA fpr each main industry in a bar chart , and display Y from high to low order .
database schema:
Table company, columns = [*,Company_ID, Rank, Company, Headquarters, Main_Industry, Sales_billion, Profits_billion, Assets_billion, Market_Value]
target dvq:
Visualize BAR SELECT Main_Industry , COUNT(Main_Industry) FROM company WHERE headquarters != 'USA' GROUP BY Main_Industry ORDER BY COUNT(Main_Industry) DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday , and I want to display by the Y-axis in descending .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(DEPARTMENT_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Find the average age of male students (with sex M) from each city , show X-axis in ascending order .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
target dvq:
Visualize BAR SELECT city_code , avg(age) FROM student WHERE sex = 'M' GROUP BY city_code ORDER BY city_code ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of job_id and the sum of department_id , and group by attribute job_id , and show in descending by the X-axis .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
What are the dates that have an average sea level pressure between 303 and 31 , and count them by a bar chart , sort the number of date in descending order .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) DESC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
, could you order by the total number in asc ?
database schema:
Table Player_Attributes, columns = [*,id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes]
target dvq:
Visualize BAR SELECT preferred_foot , count(*) FROM Player_Attributes WHERE overall_rating > 80 GROUP BY preferred_foot ORDER BY count(*) ASC
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , visualize a bar chart about the distribution of name and manufacturer , show Y in descending order .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Manufacturer FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Manufacturer DESC
****************************************************************************************************
nl_queries:
How many male and female assistant professors do we have , display in descending by the X-axis .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
Table Faculty, columns = [*,FacID, Lname, Fname, Rank, Sex, Phone, Room, Building]
target dvq:
Visualize BAR SELECT Sex , count(*) FROM Faculty WHERE rank = "AsstProf" GROUP BY sex ORDER BY Sex DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me the trend about department_id over hire_date with a line chart , sort from low to high by the X-axis .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of job_id and the amount of job_id , and group by attribute job_id .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
Find the name and population of districts with population between 200000 and 200000 Show a bar chart , I want to rank in asc by the y axis please .
database schema:
Table district, columns = [*,District_ID, District_name, Headquartered_City, City_Population, City_Area]
target dvq:
Visualize BAR SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000 ORDER BY City_Population ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of job_id and the average of salary , and group by attribute job_id in a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the correlation between salary and commission_pct in a scatter chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT SALARY , COMMISSION_PCT FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of job_id and the average of department_id , and group by attribute job_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me the trend about manager_id over hire_date with a line chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the sum of salary bin hire_date by weekday , and visualize them by a bar chart , and sort total number in descending order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of job_id and the sum of department_id , and group by attribute job_id , and I want to list by the bar from low to high .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of job_id and the sum of salary , and group by attribute job_id .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a bar chart shows the distribution of job_id and the sum of manager_id , and group by attribute job_id , sort in asc by the Y-axis .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY SUM(MANAGER_ID) ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of job_id and the average of department_id , and group by attribute job_id , show X in descending order please .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of job_id and the average of department_id , and group by attribute job_id , and display in desc by the bar .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
Find the dates of the tests taken with result "Pass" , and count them by a bar chart , and show total number from high to low order .
database schema:
Table Student_Tests_Taken, columns = [*,registration_id, date_test_taken, test_result]
target dvq:
Visualize BAR SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = "Pass" GROUP BY date_test_taken ORDER BY COUNT(date_test_taken) DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the trend about department_id over hire_date .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
What are the dates of the latest logon of the students with family name "Jaskolski" or "Langosh" , and count them by a bar chart , list in descending by the y-axis .
database schema:
Table Course_Authors_and_Tutors, columns = [*,author_id, author_tutor_ATB, login_name, password, personal_name, middle_name, family_name, gender_mf, address_line_1]
Table Students, columns = [*,student_id, date_of_registration, date_of_latest_logon, login_name, password, personal_name, middle_name, family_name]
target dvq:
Visualize BAR SELECT date_of_latest_logon , COUNT(date_of_latest_logon) FROM Students WHERE family_name = "Jaskolski" OR family_name = "Langosh"  ORDER BY COUNT(date_of_latest_logon) DESC BIN date_of_latest_logon BY WEEKDAY
****************************************************************************************************
nl_queries:
Visualize a pie chart with what is average age of male for different job title ?
database schema:
Table Person, columns = [*,name, age, city, gender, job]
target dvq:
Visualize PIE SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job
****************************************************************************************************
nl_queries:
Draw a bar chart for how many people are under 40 for each gender ? , order by the gender from low to high .
database schema:
Table Person, columns = [*,name, age, city, gender, job]
target dvq:
Visualize BAR SELECT gender , count(*) FROM Person WHERE age < 40 GROUP BY gender ORDER BY gender ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id , and show Y-axis in descending order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY AVG(EMPLOYEE_ID) DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a line chart about the change of department_id over hire_date , and could you order X in desc order ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , visualize a pie chart about the proportion of name and manufacturer .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize PIE SELECT Name , Manufacturer FROM products WHERE price BETWEEN 60 AND 120
****************************************************************************************************
nl_queries:
What is the id and weight of every pet who is older than 1 , and show by the bars in descending .
database schema:
Table Has_Pet, columns = [*,StuID, PetID]
Table Pets, columns = [*,PetID, PetType, pet_age, weight]
target dvq:
Visualize BAR SELECT PetID , weight FROM pets WHERE pet_age > 1 ORDER BY PetID DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of department_id over the job_id , and group by attribute job_id by a bar chart , and display Y-axis from low to high order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY AVG(DEPARTMENT_ID) ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of job_id and the sum of salary , and group by attribute job_id , and rank sum salary from high to low order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY SUM(SALARY) DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of job_id and the sum of employee_id , and group by attribute job_id in a bar chart , rank y axis in descending order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY SUM(EMPLOYEE_ID) DESC
****************************************************************************************************
nl_queries:
On which day has it neither been foggy nor rained in the zip code of 94107 , and count them by a bar chart , and I want to order in descending by the Y-axis .
database schema:
Table trip, columns = [*,id, duration, start_date, start_station_name, start_station_id, end_date, end_station_name, end_station_id, bike_id, subscription_type, zip_code]
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE zip_code = 94107 AND EVENTS != "Fog" AND EVENTS != "Rain"  ORDER BY COUNT(date) DESC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a line chart about the change of commission_pct over hire_date , and order by the x-axis from high to low please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
What are the number of the dates with a maximum temperature higher than 85 ?
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85 BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
Show the number of products with price higher than 1000 or lower than 500 for each product type code in a bar chart , I want to order by the total number in asc please .
database schema:
Table Products, columns = [*,product_id, product_type_code, product_name, product_price]
target dvq:
Visualize BAR SELECT product_type_code , COUNT(product_type_code) FROM products WHERE product_price > 1000 OR product_price < 500 GROUP BY product_type_code ORDER BY COUNT(product_type_code) ASC
****************************************************************************************************
nl_queries:
A bar chart about what is the id and weight of every pet who is older than 1 ? , show x axis from low to high order .
database schema:
Table Has_Pet, columns = [*,StuID, PetID]
Table Pets, columns = [*,PetID, PetType, pet_age, weight]
target dvq:
Visualize BAR SELECT PetID , weight FROM pets WHERE pet_age > 1 ORDER BY PetID ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the average of department_id bin hire_date by time , and visualize them by a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Take the first name of all the good customers as the X-axis and gender of all the good customers as Y-axis in a bar chart , show y-axis in descending order .
database schema:
Table Customers, columns = [*,customer_id, coupon_id, good_or_bad_customer, first_name, last_name, gender_mf, date_became_customer, date_last_hire]
target dvq:
Visualize BAR SELECT first_name , gender_mf FROM customers WHERE good_or_bad_customer = 'good' ORDER BY gender_mf DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of hire_date and the sum of salary bin hire_date by time , and display y axis from low to high order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
List the name of technicians whose team is not "NYY" , and count them by a bar chart , and show x-axis in descending order please .
database schema:
Table repair, columns = [*,repair_ID, name, Launch_Date, Notes]
Table machine, columns = [*,Machine_ID, Making_Year, Class, Team, Machine_series, value_points, quality_rank]
Table technician, columns = [*,technician_id, Name, Team, Starting_Year, Age]
target dvq:
Visualize BAR SELECT Name , COUNT(Name) FROM technician WHERE Team != "NYY" GROUP BY Name ORDER BY Name DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the sum of employee_id over the hire_date bin hire_date by time , and order by the sum employee id in descending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(EMPLOYEE_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by time , list from low to high by the y-axis .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(MANAGER_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the sum of employee_id over the hire_date bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the sum of employee_id over the hire_date bin hire_date by time by a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the sum of salary over the job_id , and group by attribute job_id , and list y axis in asc order please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY SUM(SALARY) ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of manager_id over the job_id , and group by attribute job_id by a bar chart , could you rank in asc by the Y-axis ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY AVG(MANAGER_ID) ASC
****************************************************************************************************
nl_queries:
What is the id and weight of every pet who is older than 1 .
database schema:
Table Has_Pet, columns = [*,StuID, PetID]
Table Pets, columns = [*,PetID, PetType, pet_age, weight]
target dvq:
Visualize BAR SELECT PetID , weight FROM pets WHERE pet_age > 1
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , for manager_id , hire_date , visualize the trend , sort X-axis in asc order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of job_id and the sum of department_id , and group by attribute job_id , rank by the bars in desc please .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by weekday , sort by the y axis from high to low .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(EMPLOYEE_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
When are the birthdays of customer who are classified as 'Good Customer' status , and count them by a line chart , and show from low to high by the X-axis please .
database schema:
Table Staff, columns = [*,staff_id, staff_address_id, nickname, first_name, middle_name, last_name, date_of_birth, date_joined_staff, date_left_staff]
Table Customers, columns = [*,customer_id, customer_address_id, customer_status_code, date_became_customer, date_of_birth, first_name, last_name, amount_outstanding, email_address, phone_number, cell_mobile_phone_number]
target dvq:
Visualize LINE SELECT date_of_birth , COUNT(date_of_birth) FROM Customers WHERE customer_status_code = 'Good Customer'  ORDER BY date_of_birth ASC BIN date_of_birth BY YEAR
****************************************************************************************************
nl_queries:
What is average age of male for different job title Visualize by bar chart , rank from low to high by the x-axis .
database schema:
Table Person, columns = [*,name, age, city, gender, job]
target dvq:
Visualize BAR SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY job ASC
****************************************************************************************************
nl_queries:
Return the categories of music festivals that have the result "Awarded" , and count them by a bar chart
database schema:
Table music_festival, columns = [*,ID, Music_Festival, Date_of_ceremony, Category, Volume, Result]
target dvq:
Visualize BAR SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = "Awarded" GROUP BY Category
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find job_id and the sum of manager_id , and group by attribute job_id , and visualize them by a bar chart , and list Y in desc order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY SUM(MANAGER_ID) DESC
****************************************************************************************************
nl_queries:
What are the category of music festivals with result "Awarded" , and count them by a bar chart , and show by the Y-axis from high to low .
database schema:
Table music_festival, columns = [*,ID, Music_Festival, Date_of_ceremony, Category, Volume, Result]
target dvq:
Visualize BAR SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = "Awarded" GROUP BY Category ORDER BY COUNT(Category) DESC
****************************************************************************************************
nl_queries:
How many male students are there in each city ? Show a bar chart , and list y axis from high to low order .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
target dvq:
Visualize BAR SELECT city_code , count(*) FROM student WHERE sex = 'M' GROUP BY city_code ORDER BY count(*) DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the change of employee_id over hire_date in a line chart , list from high to low by the x-axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of job_id and the sum of department_id , and group by attribute job_id in a bar chart , order by the X in ascending .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a bar chart shows the distribution of hire_date and the sum of department_id bin hire_date by weekday .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Show a bar chart about the number of results of the battles when the bulgarian commander is not 'Boril' , and order names in descending order .
database schema:
Table battle, columns = [*,id, name, date, bulgarian_commander, latin_commander, result]
target dvq:
Visualize BAR SELECT result , COUNT(result) FROM battle WHERE bulgarian_commander != 'Boril' GROUP BY result ORDER BY result DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find job_id and the sum of manager_id , and group by attribute job_id , and visualize them by a bar chart , I want to list Y-axis from high to low order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY SUM(MANAGER_ID) DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a scatter chart about the correlation between salary and commission_pct .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT SALARY , COMMISSION_PCT FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of job_id and the amount of job_id , and group by attribute job_id , sort y-axis in asc order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY COUNT(JOB_ID) ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of job_id and the sum of salary , and group by attribute job_id , order y-axis in asc order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY SUM(SALARY) ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the sum of salary over the hire_date bin hire_date by weekday by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
how many rooms have king beds ? Report the number for each decor type , and sort from low to high by the decor .
database schema:
Table Rooms, columns = [*,RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor]
target dvq:
Visualize BAR SELECT decor , count(*) FROM Rooms WHERE bedType = "King" GROUP BY decor ORDER BY decor ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find job_id and the sum of employee_id , and group by attribute job_id , and visualize them by a bar chart .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the trend about salary over hire_date , and could you rank x axis from high to low order ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
Show all dates of transactions whose type code is "SALE" , and count them by a bar chart , and I want to sort by the y-axis in asc .
database schema:
Table Ref_Transaction_Types, columns = [*,transaction_type_code, transaction_type_description]
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE transaction_type_code = "SALE"  ORDER BY COUNT(date_of_transaction) ASC BIN date_of_transaction BY WEEKDAY
****************************************************************************************************
nl_queries:
What is the average age of male students in each city ? Draw a bar chart .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
target dvq:
Visualize BAR SELECT city_code , avg(age) FROM student WHERE sex = 'M' GROUP BY city_code
****************************************************************************************************
nl_queries:
Show me a line chart to show the change of salary for those employees whose first name does not containing the letter M over the corresponding hire date , display by the HIRE_DATE from low to high .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the sum of manager_id bin hire_date by weekday , and visualize them by a bar chart , and sort from low to high by the Y-axis .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(MANAGER_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Give me a bar chart about the proportion of the number of grape of the wines whose price is bigger than 100 ordered by year .
database schema:
Table grapes, columns = [*,ID, Grape, Color]
Table wine, columns = [*,No, Grape, Winery, Appelation, State, Name, Year, Price, Score, Cases, Drink]
target dvq:
Visualize BAR SELECT Grape , COUNT(Grape) FROM WINE WHERE Price > 100 GROUP BY Grape ORDER BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a scatter chart shows the correlation between employee_id and salary .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT EMPLOYEE_ID , SALARY FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
A line chart for what are the number of the dates in which the mean sea level pressure was between 303 and 31 ? , and rank in desc by the x axis .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize LINE SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31 GROUP BY date ORDER BY date DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of hire_date and the sum of salary bin hire_date by weekday , and order in desc by the y-axis please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
, and show in descending by the Y .
database schema:
Table Player_Attributes, columns = [*,id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes]
target dvq:
Visualize BAR SELECT preferred_foot , count(*) FROM Player_Attributes WHERE overall_rating > 80 GROUP BY preferred_foot ORDER BY count(*) DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday , order from high to low by the total number .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
How many flights with price higher than 300 for each destination city ? Return a bar chart , I want to show X-axis from high to low order .
database schema:
Table flight, columns = [*,flno, origin, destination, distance, departure_date, arrival_date, price, aid]
target dvq:
Visualize BAR SELECT destination , COUNT(destination) FROM Flight WHERE price > 300 GROUP BY destination ORDER BY destination DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a line chart about the change of department_id over hire_date , show by the HIRE_DATE from low to high please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
Visualize a pie chart about the proportion of the number of grape of the wines whose price is bigger than 100 ordered by year .
database schema:
Table grapes, columns = [*,ID, Grape, Color]
Table wine, columns = [*,No, Grape, Winery, Appelation, State, Name, Year, Price, Score, Cases, Drink]
target dvq:
Visualize BAR SELECT Grape , COUNT(Grape) FROM WINE WHERE Price > 100 GROUP BY Grape ORDER BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
A line chart for returning the number of the date of birth for all the guests with gender code "Male" , I want to show x axis in ascending order .
database schema:
Table Guests, columns = [*,guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth]
target dvq:
Visualize LINE SELECT date_of_birth , COUNT(date_of_birth) FROM Guests WHERE gender_code = "Male"  ORDER BY date_of_birth ASC BIN date_of_birth BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of salary over the hire_date bin hire_date by time , and show y axis in asc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Return the categories of music festivals that have the result "Awarded" , and count them by a bar chart , and I want to rank in ascending by the bars .
database schema:
Table music_festival, columns = [*,ID, Music_Festival, Date_of_ceremony, Category, Volume, Result]
target dvq:
Visualize BAR SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = "Awarded" GROUP BY Category ORDER BY Category ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a line chart about the change of employee_id over hire_date , and sort HIRE_DATE in asc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
A bar chart for what are the number of the different years in which there were cars produced that weighed less than 4000 and also cars that weighted more than 3000 ? , and sort by the y-axis in ascending .
database schema:
Table cars_data, columns = [*,Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year]
target dvq:
Visualize BAR SELECT Year , COUNT(Year) FROM cars_data where weight between 3000 and 4000  ORDER BY COUNT(Year) ASC BIN Year BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of job_id and the sum of department_id , and group by attribute job_id , and display by the bar in asc .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the amount of hire_date bin hire_date by time , and visualize them by a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
What are the number of the category of music festivals with result "Awarded" ? , show in descending by the x axis .
database schema:
Table music_festival, columns = [*,ID, Music_Festival, Date_of_ceremony, Category, Volume, Result]
target dvq:
Visualize BAR SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = "Awarded" GROUP BY Category ORDER BY Category DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of job_id and the average of manager_id , and group by attribute job_id in a bar chart , could you show Y from high to low order please ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY AVG(MANAGER_ID) DESC
****************************************************************************************************
nl_queries:
Give me a histogram for what is the number of players who have points less than 30 for each position ? , list by the y axis in desc please .
database schema:
Table player, columns = [*,Player_ID, name, Position, Club_ID, Apps, Tries, Goals, Points]
target dvq:
Visualize BAR SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION ORDER BY count(*) DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the average of employee_id over the job_id , and group by attribute job_id by a bar chart , I want to order in asc by the y-axis .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY AVG(EMPLOYEE_ID) ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize the relationship between employee_id and department_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT EMPLOYEE_ID , DEPARTMENT_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
A bar chart about the number of last name for all female students whose sex is F , rank in descending by the Y-axis .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
target dvq:
Visualize BAR SELECT LName , COUNT(LName) FROM Student WHERE Sex = 'F' GROUP BY LName ORDER BY COUNT(LName) DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a line chart shows the trend of salary over hire_date , and could you list from high to low by the X ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
Find the number of people who is under 40 for each gender .
database schema:
Table Person, columns = [*,name, age, city, gender, job]
target dvq:
Visualize BAR SELECT gender , count(*) FROM Person WHERE age < 40 GROUP BY gender
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the average of manager_id over the job_id , and group by attribute job_id , and could you rank X-axis from high to low order ?
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
What are the number of the dates that have an average sea level pressure between 30 . 3 and 31 ?
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31 BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of manager_id over the hire_date bin hire_date by time by a bar chart , and could you list in asc by the y-axis ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(MANAGER_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Find the dates of the tests taken with result "Pass" , and count them by a line chart , could you rank in desc by the x axis ?
database schema:
Table Student_Tests_Taken, columns = [*,registration_id, date_test_taken, test_result]
target dvq:
Visualize LINE SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = "Pass"  ORDER BY date_test_taken DESC BIN date_test_taken BY DAY
****************************************************************************************************
nl_queries:
For each grade 0 classroom , report the total number of students . Visualize by scatter chart .
database schema:
Table list, columns = [*,LastName, FirstName, Grade, Classroom]
Table teachers, columns = [*,LastName, FirstName, Classroom]
target dvq:
Visualize SCATTER SELECT Classroom , count(*) FROM list WHERE grade = "0" GROUP BY classroom
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by weekday , and could you order in descending by the y-axis ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of job_id and the sum of employee_id , and group by attribute job_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
What is the id and weight of every pet who is older than 1 , order in desc by the y axis .
database schema:
Table Has_Pet, columns = [*,StuID, PetID]
Table Pets, columns = [*,PetID, PetType, pet_age, weight]
target dvq:
Visualize BAR SELECT PetID , weight FROM pets WHERE pet_age > 1 ORDER BY weight DESC
****************************************************************************************************
nl_queries:
How many companies that are not headquartered in the United States for each main industry ? Show me a bar chart .
database schema:
Table company, columns = [*,Company_ID, Rank, Company, Headquarters, Main_Industry, Sales_billion, Profits_billion, Assets_billion, Market_Value]
target dvq:
Visualize BAR SELECT Main_Industry , COUNT(Main_Industry) FROM company WHERE headquarters != 'USA' GROUP BY Main_Industry
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the average of employee_id bin hire_date by weekday , and visualize them by a bar chart , list the average of employee id in descending order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(EMPLOYEE_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
How many male and female assistant professors do we have , and list by the Sex from low to high .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
Table Faculty, columns = [*,FacID, Lname, Fname, Rank, Sex, Phone, Room, Building]
target dvq:
Visualize BAR SELECT Sex , count(*) FROM Faculty WHERE rank = "AsstProf" GROUP BY sex ORDER BY Sex ASC
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , find name and code , and visualize them by a bar chart , and list in desc by the Y please .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Code FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Code DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a bar chart shows the distribution of hire_date and the average of manager_id bin hire_date by time , and order by the Y in asc .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(MANAGER_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose first name is ending with the letter m , visualize a bar chart to show each employee's salary by the last name , and display from low to high by the x axis please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT LAST_NAME , SALARY FROM employees WHERE first_name LIKE '%m' ORDER BY LAST_NAME ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the sum of salary over the job_id , and group by attribute job_id , and rank total number in desc order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY SUM(SALARY) DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by time , and list by the y axis from high to low please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(EMPLOYEE_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by weekday , could you list y axis in desc order ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(MANAGER_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Which tests have "Pass" results ? Return the dates when the tests were taken , and count them by a bar chart , sort Y-axis in descending order .
database schema:
Table Student_Tests_Taken, columns = [*,registration_id, date_test_taken, test_result]
target dvq:
Visualize BAR SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = "Pass" GROUP BY date_test_taken ORDER BY COUNT(date_test_taken) DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by time , and could you display by the y-axis from high to low ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(EMPLOYEE_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
A bar chart for finding the number of the dates of the tests taken with result "Pass" .
database schema:
Table Student_Tests_Taken, columns = [*,registration_id, date_test_taken, test_result]
target dvq:
Visualize BAR SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = "Pass" BIN date_test_taken BY WEEKDAY
****************************************************************************************************
nl_queries:
What is the date of birth of every customer whose status code is 'Good Customer' , and count them by a line chart , rank in desc by the X-axis .
database schema:
Table Staff, columns = [*,staff_id, staff_address_id, nickname, first_name, middle_name, last_name, date_of_birth, date_joined_staff, date_left_staff]
Table Customers, columns = [*,customer_id, customer_address_id, customer_status_code, date_became_customer, date_of_birth, first_name, last_name, amount_outstanding, email_address, phone_number, cell_mobile_phone_number]
target dvq:
Visualize LINE SELECT date_of_birth , COUNT(date_of_birth) FROM Customers WHERE customer_status_code = 'Good Customer'  ORDER BY date_of_birth DESC BIN date_of_birth BY YEAR
****************************************************************************************************
nl_queries:
Return the number of the date of birth for all the guests with gender code "Male" .
database schema:
Table Guests, columns = [*,guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth]
target dvq:
Visualize BAR SELECT date_of_birth , COUNT(date_of_birth) FROM Guests WHERE gender_code = "Male" BIN date_of_birth BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find job_id and the average of employee_id , and group by attribute job_id , and visualize them by a bar chart , could you display X in descending order ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of job_id and the sum of salary , and group by attribute job_id , and could you list in asc by the y axis please ?
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY SUM(SALARY) ASC
****************************************************************************************************
nl_queries:
List the dog name and weight of the dogs who have been abandoned in a bar chart , could you rank total number in asc order ?
database schema:
Table Dogs, columns = [*,dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed]
target dvq:
Visualize BAR SELECT name , weight FROM Dogs WHERE abandoned_yn = 1 ORDER BY weight ASC
****************************************************************************************************
nl_queries:
Return the number of the date of birth for all the guests with gender code "Male" , and could you display by the x axis in asc ?
database schema:
Table Guests, columns = [*,guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth]
target dvq:
Visualize LINE SELECT date_of_birth , COUNT(date_of_birth) FROM Guests WHERE gender_code = "Male"  ORDER BY date_of_birth ASC BIN date_of_birth BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a scatter chart about the correlation between employee_id and commission_pct .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT EMPLOYEE_ID , COMMISSION_PCT FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
What are the dates of transactions with at least 100 share count or amount bigger than 100 , and count them by a bar chart
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100 BIN date_of_transaction BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the sum of department_id over the job_id , and group by attribute job_id by a bar chart , and display by the total number of department id from high to low .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY SUM(DEPARTMENT_ID) DESC
****************************************************************************************************
nl_queries:
what are the job titles , and range of salaries for jobs with maximum salary between 12000 and 18000 ?
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
target dvq:
Visualize BAR SELECT JOB_TITLE , max_salary - min_salary FROM jobs WHERE max_salary BETWEEN 12000 AND 18000
****************************************************************************************************
nl_queries:
what is the number of players who have points less than 30 for each position ?
database schema:
Table player, columns = [*,Player_ID, name, Position, Club_ID, Apps, Tries, Goals, Points]
target dvq:
Visualize PIE SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find hire_date and the sum of employee_id bin hire_date by weekday , and visualize them by a bar chart , display by the Y in asc .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(EMPLOYEE_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Return a bar chart on what is the average age for a male in each job ? , rank in descending by the Y .
database schema:
Table Person, columns = [*,name, age, city, gender, job]
target dvq:
Visualize BAR SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY avg(age) DESC
****************************************************************************************************
nl_queries:
List the number of invoices from the US , grouped by state by a bar chart , and list X from high to low order .
database schema:
Table invoices, columns = [*,id, customer_id, invoice_date, billing_address, billing_city, billing_state, billing_country, billing_postal_code, total]
target dvq:
Visualize BAR SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = "USA" GROUP BY billing_state ORDER BY billing_state DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of hire_date and the sum of salary bin hire_date by weekday , I want to display in desc by the total number .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , visualize the relationship between code and price , and group by attribute name .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize SCATTER SELECT Code , Price FROM products WHERE price BETWEEN 60 AND 120 GROUP BY Name
****************************************************************************************************
nl_queries:
A bar chart for what are the number of the category of music festivals with result "Awarded" ? , could you list Y from low to high order ?
database schema:
Table music_festival, columns = [*,ID, Music_Festival, Date_of_ceremony, Category, Volume, Result]
target dvq:
Visualize BAR SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = "Awarded" GROUP BY Category ORDER BY COUNT(Category) ASC
****************************************************************************************************
nl_queries:
What are the number of the dates with a maximum temperature higher than 85 ? , and order by the X from low to high .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize LINE SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85 GROUP BY date ORDER BY date ASC
****************************************************************************************************
nl_queries:
For all storms with at least 1 death , show me the dates active and the total number of deaths with a bar chart , and order in ascending by the Y .
database schema:
Table storm, columns = [*,Storm_ID, Name, Dates_active, Max_speed, Damage_millions_USD, Number_Deaths]
target dvq:
Visualize BAR SELECT Dates_active , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Number_Deaths ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday , I want to display from low to high by the mean salary .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the correlation between salary and commission_pct in a scatter chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT SALARY , COMMISSION_PCT FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of job_id and the sum of salary , and group by attribute job_id .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the sum of manager_id bin hire_date by time , and I want to sort by the Y-axis from high to low .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(MANAGER_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by weekday , and could you order in descending by the y-axis ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the sum of department_id over the job_id , and group by attribute job_id , could you display X in descending order ?
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
Find the number of the dates of the tests taken with result "Pass" , and I want to rank x axis in asc order .
database schema:
Table Student_Tests_Taken, columns = [*,registration_id, date_test_taken, test_result]
target dvq:
Visualize LINE SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = "Pass"  ORDER BY date_test_taken ASC BIN date_test_taken BY DAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a line chart about the change of salary over hire_date .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday , and display from low to high by the y axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Who are the nominees who were nominated for either of the Bob Fosse or Cleavant Derricks awards , and count them by a bar chart
database schema:
Table musical, columns = [*,Musical_ID, Name, Year, Award, Category, Nominee, Result]
target dvq:
Visualize BAR SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = "Tony Award" OR Award = "Cleavant Derricks" GROUP BY Nominee
****************************************************************************************************
nl_queries:
List the number of invoices from the US , grouped by state . Visualize by bar chart .
database schema:
Table invoices, columns = [*,id, customer_id, invoice_date, billing_address, billing_city, billing_state, billing_country, billing_postal_code, total]
target dvq:
Visualize BAR SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = "USA" GROUP BY billing_state
****************************************************************************************************
nl_queries:
Show me a bar chart for how many captains with younger than 50 are in each rank ? , and list bars from high to low order please .
database schema:
Table captain, columns = [*,Captain_ID, Name, Ship_ID, age, Class, Rank]
target dvq:
Visualize BAR SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank ORDER BY Rank DESC
****************************************************************************************************
nl_queries:
Show the number of the musical nominee with award "Bob Fosse" or "Cleavant Derricks" .
database schema:
Table musical, columns = [*,Musical_ID, Name, Year, Award, Category, Nominee, Result]
target dvq:
Visualize BAR SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = "Tony Award" OR Award = "Cleavant Derricks" GROUP BY Nominee
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the amount of job_id over the job_id , and group by attribute job_id by a bar chart .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of department_id over the job_id , and group by attribute job_id , and I want to sort in asc by the JOB_ID .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a line chart shows the change of employee_id over hire_date , and could you sort by the X in ascending ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of manager_id over the job_id , and group by attribute job_id , rank names in desc order please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the sum of salary bin hire_date by weekday in a bar chart , and could you list from high to low by the Y-axis ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the sum of department_id over the hire_date bin hire_date by time by a bar chart , and rank by the Y from low to high .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(DEPARTMENT_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of hire_date and the sum of salary bin hire_date by weekday , and rank from low to high by the total number .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of job_id and the sum of department_id , and group by attribute job_id .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a line chart about the change of department_id over hire_date .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of hire_date and the sum of salary bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by weekday , and I want to order in ascending by the Y .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(EMPLOYEE_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me the trend about commission_pct over hire_date with a line chart , and could you display x-axis in ascending order ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of job_id and the amount of job_id , and group by attribute job_id , and display the number of job id from low to high order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY COUNT(JOB_ID) ASC
****************************************************************************************************
nl_queries:
Count the number of captains younger than 50 of each rank . Plot them as pie chart .
database schema:
Table captain, columns = [*,Captain_ID, Name, Ship_ID, age, Class, Rank]
target dvq:
Visualize PIE SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday , I want to sort from high to low by the sum department id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(DEPARTMENT_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a line chart about the change of manager_id over hire_date , and list by the x-axis from high to low .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
A bar chart about the number of first name for all female students whose sex is F , and display y-axis in desc order .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
target dvq:
Visualize BAR SELECT Fname , COUNT(Fname) FROM Student WHERE Sex = 'F' GROUP BY Fname ORDER BY COUNT(Fname) DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a bar chart shows the distribution of hire_date and the average of department_id bin hire_date by time , and could you list by the y-axis in asc ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(DEPARTMENT_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a line chart shows the change of commission_pct over hire_date , and sort by the X-axis from high to low .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize the relationship between commission_pct and department_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT COMMISSION_PCT , DEPARTMENT_ID FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a scatter chart about the correlation between commission_pct and department_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT COMMISSION_PCT , DEPARTMENT_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the sum of manager_id bin hire_date by time , and visualize them by a bar chart , order in descending by the y-axis .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(MANAGER_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of employee_id over the job_id , and group by attribute job_id by a bar chart , and I want to order y axis from low to high order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY AVG(EMPLOYEE_ID) ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the average of manager_id over the job_id , and group by attribute job_id , and order total number from high to low order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY AVG(MANAGER_ID) DESC
****************************************************************************************************
nl_queries:
List the number of winery of the wines whose price is bigger than 100 in a bar chart , could you display in descending by the total number please ?
database schema:
Table wine, columns = [*,No, Grape, Winery, Appelation, State, Name, Year, Price, Score, Cases, Drink]
target dvq:
Visualize BAR SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Winery ORDER BY COUNT(Winery) DESC
****************************************************************************************************
nl_queries:
What is the date of birth of every customer whose status code is 'Good Customer' , and count them by a line chart , could you display by the X in ascending please ?
database schema:
Table Staff, columns = [*,staff_id, staff_address_id, nickname, first_name, middle_name, last_name, date_of_birth, date_joined_staff, date_left_staff]
Table Customers, columns = [*,customer_id, customer_address_id, customer_status_code, date_became_customer, date_of_birth, first_name, last_name, amount_outstanding, email_address, phone_number, cell_mobile_phone_number]
target dvq:
Visualize LINE SELECT date_of_birth , COUNT(date_of_birth) FROM Customers WHERE customer_status_code = 'Good Customer'  ORDER BY date_of_birth ASC BIN date_of_birth BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find hire_date and the average of employee_id bin hire_date by time , and visualize them by a bar chart , and could you show from low to high by the total number ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(EMPLOYEE_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by time .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id , and order Y from low to high order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY AVG(EMPLOYEE_ID) ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the trend about employee_id over hire_date , and could you order HIRE_DATE in descending order please ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
Show the names and total passengers for all train stations not in London . Visualize by bar chart .
database schema:
Table station, columns = [*,Station_ID, Name, Annual_entry_exit, Annual_interchanges, Total_Passengers, Location, Main_Services, Number_of_Platforms]
Table train, columns = [*,Train_ID, Name, Time, Service]
target dvq:
Visualize BAR SELECT Name , Total_Passengers FROM station WHERE LOCATION != 'London'
****************************************************************************************************
nl_queries:
For all storms with at least 1 death , compare the number of deaths by name with a bar graph , rank by the bars from low to high .
database schema:
Table storm, columns = [*,Storm_ID, Name, Dates_active, Max_speed, Damage_millions_USD, Number_Deaths]
target dvq:
Visualize BAR SELECT Name , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Name ASC
****************************************************************************************************
nl_queries:
For the transaction dates if share count is smaller than 10 , bin the dates into the year interval , and count them using a line chart , could you sort X from high to low order ?
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count < 10  ORDER BY date_of_transaction DESC BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a line chart shows the trend of department_id over hire_date .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
Which tests have "Pass" results ? Return the dates when the tests were taken , and count them by a bar chart , sort by the names in asc please .
database schema:
Table Student_Tests_Taken, columns = [*,registration_id, date_test_taken, test_result]
target dvq:
Visualize BAR SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = "Pass" GROUP BY date_test_taken ORDER BY date_test_taken ASC
****************************************************************************************************
nl_queries:
A bar chart for what are the number of the dates with a maximum temperature higher than 85 ? , and could you display from low to high by the y axis ?
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) ASC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of job_id and the average of manager_id , and group by attribute job_id in a bar chart , list by the x axis in descending .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
What are the number of dates of birth of all the guests whose gender is "Male" ?
database schema:
Table Guests, columns = [*,guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth]
target dvq:
Visualize BAR SELECT date_of_birth , COUNT(date_of_birth) FROM Guests WHERE gender_code = "Male" BIN date_of_birth BY WEEKDAY
****************************************************************************************************
nl_queries:
What are the number of the dates that have an average sea level pressure between 30 . 3 and 31 ?
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize LINE SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31 GROUP BY date
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the sum of department_id over the hire_date bin hire_date by weekday by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Show the number of male and female assistant professors Plot them as bar chart , and I want to display y axis in descending order .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
Table Faculty, columns = [*,FacID, Lname, Fname, Rank, Sex, Phone, Room, Building]
target dvq:
Visualize BAR SELECT Sex , count(*) FROM Faculty WHERE rank = "AsstProf" GROUP BY sex ORDER BY count(*) DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the average of employee_id bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
What is the average age for a male in each job .
database schema:
Table Person, columns = [*,name, age, city, gender, job]
target dvq:
Visualize PIE SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job
****************************************************************************************************
nl_queries:
List the name of technicians whose team is not "NYY" , and count them by a bar chart
database schema:
Table repair, columns = [*,repair_ID, name, Launch_Date, Notes]
Table machine, columns = [*,Machine_ID, Making_Year, Class, Team, Machine_series, value_points, quality_rank]
Table technician, columns = [*,technician_id, Name, Team, Starting_Year, Age]
target dvq:
Visualize BAR SELECT Name , COUNT(Name) FROM technician WHERE Team != "NYY" GROUP BY Name
****************************************************************************************************
nl_queries:
For those employees whose first name does not contain the letter M , give me a line chart to show the hire date and the corresponding salaries , and sort x-axis in asc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by time , could you show in descending by the Y-axis ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(EMPLOYEE_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the trend about manager_id over hire_date , display HIRE_DATE from low to high order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of job_id and the sum of salary , and group by attribute job_id in a bar chart , rank x-axis in descending order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by time , and I want to display y axis from low to high order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(EMPLOYEE_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of job_id and the average of employee_id , and group by attribute job_id in a bar chart , and could you order from low to high by the total number ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY AVG(EMPLOYEE_ID) ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of job_id and the average of manager_id , and group by attribute job_id , and I want to show names from low to high order please .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
Find the dates of the tests taken with result "Pass" , and count them by a line chart
database schema:
Table Student_Tests_Taken, columns = [*,registration_id, date_test_taken, test_result]
target dvq:
Visualize LINE SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = "Pass" BIN date_test_taken BY DAY
****************************************************************************************************
nl_queries:
what are the job titles , and range of salaries for jobs with maximum salary between 12000 and 18000 ? , could you sort by the names in descending ?
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
target dvq:
Visualize BAR SELECT JOB_TITLE , max_salary - min_salary FROM jobs WHERE max_salary BETWEEN 12000 AND 18000 ORDER BY JOB_TITLE DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the sum of manager_id over the job_id , and group by attribute job_id by a bar chart , and order by the y-axis from low to high .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY SUM(MANAGER_ID) ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the correlation between employee_id and salary in a scatter chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT EMPLOYEE_ID , SALARY FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of job_id and the sum of manager_id , and group by attribute job_id , could you order by the total number of manager id from low to high ?
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY SUM(MANAGER_ID) ASC
****************************************************************************************************
nl_queries:
For the transaction dates if share count is smaller than 10 , bin the dates into the year interval , and count them using a line chart , and I want to show by the x axis in desc .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count < 10  ORDER BY date_of_transaction DESC BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose first name is ending with the letter m , show the frequency of the first name using a bar chart , sort X-axis from low to high order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT FIRST_NAME , COUNT(FIRST_NAME) FROM employees WHERE first_name LIKE '%m' GROUP BY FIRST_NAME ORDER BY FIRST_NAME ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a line chart shows the trend of department_id over hire_date , and could you show in descending by the x-axis please ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of hire_date and the sum of salary bin hire_date by time , I want to show total number from high to low order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
On which day has it neither been foggy nor rained in the zip code of 94107 , and count them by a bar chart
database schema:
Table trip, columns = [*,id, duration, start_date, start_station_name, start_station_id, end_date, end_station_name, end_station_id, bike_id, subscription_type, zip_code]
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE zip_code = 94107 AND EVENTS != "Fog" AND EVENTS != "Rain" BIN date BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the sum of department_id over the job_id , and group by attribute job_id , and could you rank Y-axis from low to high order ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY SUM(DEPARTMENT_ID) ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the trend about commission_pct over hire_date .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
Find the total number of students enrolled in the colleges that were founded after the year of 1850 for each affiliation type Show bar chart , show total number of enrollment in descending order please .
database schema:
Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]
target dvq:
Visualize BAR SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation ORDER BY sum(Enrollment) DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the average of department_id bin hire_date by weekday in a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
A pie chart showing the number of flights with price higher than 300 for each destination city .
database schema:
Table flight, columns = [*,flno, origin, destination, distance, departure_date, arrival_date, price, aid]
target dvq:
Visualize PIE SELECT destination , COUNT(destination) FROM Flight WHERE price > 300 GROUP BY destination
****************************************************************************************************
nl_queries:
Find the number of rooms with king bed for each decor type , I want to rank by the y-axis in desc .
database schema:
Table Rooms, columns = [*,RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor]
target dvq:
Visualize BAR SELECT decor , count(*) FROM Rooms WHERE bedType = "King" GROUP BY decor ORDER BY count(*) DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by time .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of job_id and the average of salary , and group by attribute job_id in a bar chart , and could you order y-axis in desc order ?
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY AVG(SALARY) DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of job_id and the sum of employee_id , and group by attribute job_id , I want to order in desc by the X-axis please .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of job_id and the average of department_id , and group by attribute job_id .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
Show me a line chart to show the change of salary for those employees whose first name does not containing the letter M over the corresponding hire date , and show by the X-axis in descending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the trend about salary over hire_date .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
Show a bar chart about the number of results of the battles when the bulgarian commander is not 'Boril' , I want to sort from low to high by the Y-axis .
database schema:
Table battle, columns = [*,id, name, date, bulgarian_commander, latin_commander, result]
target dvq:
Visualize BAR SELECT result , COUNT(result) FROM battle WHERE bulgarian_commander != 'Boril' GROUP BY result ORDER BY COUNT(result) ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the amount of hire_date bin hire_date by weekday in a bar chart , order how many hire date from low to high order please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id , and could you display by the y axis in ascending ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY AVG(SALARY) ASC
****************************************************************************************************
nl_queries:
A bar chart for finding the number of the dates of the tests taken with result "Pass" , sort Y-axis in descending order .
database schema:
Table Student_Tests_Taken, columns = [*,registration_id, date_test_taken, test_result]
target dvq:
Visualize BAR SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = "Pass" GROUP BY date_test_taken ORDER BY COUNT(date_test_taken) DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id , list total number of manager id in ascending order please .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY SUM(MANAGER_ID) ASC
****************************************************************************************************
nl_queries:
List the dog name and age of the dogs who have been abandoned in a bar chart , and list in ascending by the y-axis please .
database schema:
Table Dogs, columns = [*,dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed]
target dvq:
Visualize BAR SELECT name , age FROM Dogs WHERE abandoned_yn = 1 ORDER BY age ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a line chart about the change of employee_id over hire_date , and I want to list by the HIRE_DATE in desc .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of hire_date and the amount of hire_date bin hire_date by time in a bar chart , and show by the total number in ascending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the average of department_id bin hire_date by time in a bar chart , sort in asc by the mean department id .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(DEPARTMENT_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of job_id and the amount of job_id , and group by attribute job_id , and sort in ascending by the X please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
What are the number of the dates that have an average sea level pressure between 303 and 31 ? , and show y axis in ascending order .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) ASC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by weekday , list the average of employee id in descending order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(EMPLOYEE_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Visualize a bar chart about the number of winery of the wines whose price is bigger than 100 , sort bars from high to low order please .
database schema:
Table wine, columns = [*,No, Grape, Winery, Appelation, State, Name, Year, Price, Score, Cases, Drink]
target dvq:
Visualize BAR SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Winery ORDER BY Winery DESC
****************************************************************************************************
nl_queries:
Find the pixel aspect ratio and the nation of the tv channels that do not use English Show the number of different pixel aspect ratios with a bar chart , I want to show by the Pixel_aspect_ratio_PAR in ascending .
database schema:
Table TV_Channel, columns = [*,id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option]
target dvq:
Visualize BAR SELECT Pixel_aspect_ratio_PAR , COUNT(Pixel_aspect_ratio_PAR) FROM tv_channel WHERE LANGUAGE != 'English' GROUP BY Pixel_aspect_ratio_PAR ORDER BY Pixel_aspect_ratio_PAR ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , for employee_id , hire_date , visualize the trend , I want to sort by the X-axis from high to low please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the average of manager_id bin hire_date by time in a bar chart , order from high to low by the Y-axis .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(MANAGER_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the sum of salary bin hire_date by time in a bar chart , rank in desc by the Y .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
What are the job titles , and range of salaries for jobs with maximum salary between 12000 and 18000 Plot them as bar chart , I want to show by the bars from high to low .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
target dvq:
Visualize BAR SELECT JOB_TITLE , max_salary - min_salary FROM jobs WHERE max_salary BETWEEN 12000 AND 18000 ORDER BY JOB_TITLE DESC
****************************************************************************************************
nl_queries:
A pie chart about what are the job titles , and range of salaries for jobs with maximum salary between 12000 and 18000 ?
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
target dvq:
Visualize PIE SELECT JOB_TITLE , max_salary - min_salary FROM jobs WHERE max_salary BETWEEN 12000 AND 18000
****************************************************************************************************
nl_queries:
A line chart for showing the number of the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000 , and display x-axis from low to high order .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000  ORDER BY date_of_transaction ASC BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a bar chart shows the distribution of hire_date and the average of department_id bin hire_date by weekday .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find job_id and the average of employee_id , and group by attribute job_id , and visualize them by a bar chart , sort total number from high to low order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY AVG(EMPLOYEE_ID) DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the amount of job_id over the job_id , and group by attribute job_id , and could you display in ascending by the bar please ?
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the amount of job_id over the job_id , and group by attribute job_id by a bar chart , I want to show y-axis in descending order please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY COUNT(JOB_ID) DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a scatter chart shows the correlation between employee_id and salary .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT EMPLOYEE_ID , SALARY FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the average of department_id over the job_id , and group by attribute job_id by a bar chart , order by the JOB_ID in asc .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the sum of salary over the hire_date bin hire_date by time by a bar chart , order by the y axis in descending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of hire_date and the sum of salary bin hire_date by weekday , could you order from low to high by the y axis ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the trend about department_id over hire_date , could you list in descending by the X-axis ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of hire_date and the sum of salary bin hire_date by time , and I want to display by the total number of salary in ascending .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
A bar chart for what are the number of the category of music festivals with result "Awarded" ?
database schema:
Table music_festival, columns = [*,ID, Music_Festival, Date_of_ceremony, Category, Volume, Result]
target dvq:
Visualize BAR SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = "Awarded" GROUP BY Category
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of job_id and the sum of employee_id , and group by attribute job_id , and display Y-axis in descending order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY SUM(EMPLOYEE_ID) DESC
****************************************************************************************************
nl_queries:
Show the average age for all female students and group them by last name with a bar chart , and sort LName in desc order .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
target dvq:
Visualize BAR SELECT LName , AVG(Age) FROM Student WHERE Sex = 'F' GROUP BY LName ORDER BY LName DESC
****************************************************************************************************
nl_queries:
Who are the nominees who were nominated for either of the Bob Fosse or Cleavant Derricks awards , and count them by a pie chart
database schema:
Table musical, columns = [*,Musical_ID, Name, Year, Award, Category, Nominee, Result]
target dvq:
Visualize PIE SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = "Tony Award" OR Award = "Cleavant Derricks" GROUP BY Nominee
****************************************************************************************************
nl_queries:
Scatter . what are each physician's employee id and department id primarily affiliated .
database schema:
Table Physician, columns = [*,EmployeeID, Name, Position, SSN]
Table Department, columns = [*,DepartmentID, Name, Head]
Table Affiliated_With, columns = [*,Physician, Department, PrimaryAffiliation]
Table Trained_In, columns = [*,Physician, Treatment, CertificationDate, CertificationExpires]
Table Appointment, columns = [*,AppointmentID, Patient, PrepNurse, Physician, Start, End, ExaminationRoom]
Table Prescribes, columns = [*,Physician, Patient, Medication, Date, Appointment, Dose]
Table Undergoes, columns = [*,Patient, Procedures, Stay, DateUndergoes, Physician, AssistingNurse]
target dvq:
Visualize SCATTER SELECT Physician , Department FROM affiliated_with WHERE primaryaffiliation = 1
****************************************************************************************************
nl_queries:
How many companies that are not headquartered in the United States for each main industry ? Show me a pie chart .
database schema:
Table company, columns = [*,Company_ID, Rank, Company, Headquarters, Main_Industry, Sales_billion, Profits_billion, Assets_billion, Market_Value]
target dvq:
Visualize PIE SELECT Main_Industry , COUNT(Main_Industry) FROM company WHERE headquarters != 'USA' GROUP BY Main_Industry
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the change of department_id over hire_date in a line chart , rank by the HIRE_DATE in asc .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
Show me a bar chart for how many captains with younger than 50 are in each rank ? , display in ascending by the bars .
database schema:
Table captain, columns = [*,Captain_ID, Name, Ship_ID, age, Class, Rank]
target dvq:
Visualize BAR SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank ORDER BY Rank ASC
****************************************************************************************************
nl_queries:
How many mills of 'Grondzeiler' type are built in each year ? Give me the trend , rank from low to high by the x-axis .
database schema:
Table mill, columns = [*,architect_id, id, location, name, type, built_year, notes]
target dvq:
Visualize LINE SELECT built_year , COUNT(built_year) FROM mill WHERE TYPE = 'Grondzeiler'  ORDER BY built_year ASC BIN built_year BY YEAR
****************************************************************************************************
nl_queries:
A bar chart that computes the total number of wines with a price is bigger than 100 Next , Bin the year into the weekday interval , rank y-axis from low to high order .
database schema:
Table wine, columns = [*,No, Grape, Winery, Appelation, State, Name, Year, Price, Score, Cases, Drink]
target dvq:
Visualize BAR SELECT Year , COUNT(Year) FROM WINE WHERE Price > 100  ORDER BY COUNT(Year) ASC BIN Year BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the sum of department_id over the job_id , and group by attribute job_id , rank from high to low by the names .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
Visualize a bar chart about the number of winery of the wines whose price is bigger than 100 , and rank X in ascending order .
database schema:
Table wine, columns = [*,No, Grape, Winery, Appelation, State, Name, Year, Price, Score, Cases, Drink]
target dvq:
Visualize BAR SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Winery ORDER BY Winery ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the sum of salary over the hire_date bin hire_date by time by a bar chart , and show by the Y in ascending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a line chart about the change of salary over hire_date , and display X-axis in asc order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
What are the number of the dates that have an average sea level pressure between 303 and 31 ? , list X-axis in desc order .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize LINE SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31 GROUP BY date ORDER BY date DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find hire_date and the sum of employee_id bin hire_date by time , and visualize them by a bar chart , and could you order in descending by the Y ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(EMPLOYEE_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find job_id and the average of salary , and group by attribute job_id , and visualize them by a bar chart , and I want to rank by the Y-axis in descending .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY AVG(SALARY) DESC
****************************************************************************************************
nl_queries:
What are the category of music festivals with result "Awarded" , and count them by a bar chart , I want to list x axis in asc order .
database schema:
Table music_festival, columns = [*,ID, Music_Festival, Date_of_ceremony, Category, Volume, Result]
target dvq:
Visualize BAR SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = "Awarded" GROUP BY Category ORDER BY Category ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of job_id and the average of department_id , and group by attribute job_id , could you sort in desc by the y-axis please ?
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY AVG(DEPARTMENT_ID) DESC
****************************************************************************************************
nl_queries:
A bar chart about the number of first name for all female students whose sex is F , and list in asc by the Y .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
target dvq:
Visualize BAR SELECT Fname , COUNT(Fname) FROM Student WHERE Sex = 'F' GROUP BY Fname ORDER BY COUNT(Fname) ASC
****************************************************************************************************
nl_queries:
For employees with first names that end with the letter m , groups and count the first name to visualize a bar graph , and could you display in desc by the x-axis ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT FIRST_NAME , COUNT(FIRST_NAME) FROM employees WHERE first_name LIKE '%m' GROUP BY FIRST_NAME ORDER BY FIRST_NAME DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of job_id and the average of manager_id , and group by attribute job_id .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the sum of department_id over the hire_date bin hire_date by time by a bar chart , and I want to order by the total number of department id from high to low .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(DEPARTMENT_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of hire_date and the sum of salary bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , visualize the relationship between price and manufacturer , and group by attribute name .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize SCATTER SELECT Price , Manufacturer FROM products WHERE price BETWEEN 60 AND 120 GROUP BY Name
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of hire_date and the sum of salary bin hire_date by time , order by the total number of salary in ascending please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Draw a bar chart for what is average age of male for different job title ? , and show Y in desc order .
database schema:
Table Person, columns = [*,name, age, city, gender, job]
target dvq:
Visualize BAR SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY avg(age) DESC
****************************************************************************************************
nl_queries:
When are the birthdays of customer who are classified as 'Good Customer' status , and count them by a line chart , list from high to low by the X-axis please .
database schema:
Table Staff, columns = [*,staff_id, staff_address_id, nickname, first_name, middle_name, last_name, date_of_birth, date_joined_staff, date_left_staff]
Table Customers, columns = [*,customer_id, customer_address_id, customer_status_code, date_became_customer, date_of_birth, first_name, last_name, amount_outstanding, email_address, phone_number, cell_mobile_phone_number]
target dvq:
Visualize LINE SELECT date_of_birth , COUNT(date_of_birth) FROM Customers WHERE customer_status_code = 'Good Customer'  ORDER BY date_of_birth DESC BIN date_of_birth BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
List the grape and winery of the wines whose price is bigger than 100 , visualize them with a stacked bar chart , the x-axis is winery and group the grape , and y-axis is the number of wineries , display by the X in desc .
database schema:
Table grapes, columns = [*,ID, Grape, Color]
Table wine, columns = [*,No, Grape, Winery, Appelation, State, Name, Year, Price, Score, Cases, Drink]
target dvq:
Visualize BAR SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Grape ,  Winery ORDER BY Winery DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find job_id and the average of employee_id , and group by attribute job_id , and visualize them by a bar chart , rank from low to high by the JOB_ID .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by time , could you show Y in ascending order ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(EMPLOYEE_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of job_id and the amount of job_id , and group by attribute job_id , list x-axis in asc order please .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a line chart about the change of commission_pct over hire_date , and could you rank x axis in desc order ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of hire_date and the amount of hire_date bin hire_date by time in a bar chart , sort in descending by the y-axis please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Give me a bar chart showing the comparison of the pixel aspect ratio and the nation of the tv channels that do not use English .
database schema:
Table TV_Channel, columns = [*,id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option]
target dvq:
Visualize BAR SELECT Pixel_aspect_ratio_PAR , COUNT(Pixel_aspect_ratio_PAR) FROM tv_channel WHERE LANGUAGE != 'English' GROUP BY Pixel_aspect_ratio_PAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of manager_id over the job_id , and group by attribute job_id by a bar chart , rank from low to high by the the average of manager id .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY AVG(MANAGER_ID) ASC
****************************************************************************************************
nl_queries:
What are the dates in which the mean sea level pressure was between 303 and 31 , and count them by a bar chart , and order y axis in descending order please .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) DESC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
what is the number of players who have points less than 30 for each position ? , and could you list from high to low by the y axis ?
database schema:
Table player, columns = [*,Player_ID, name, Position, Club_ID, Apps, Tries, Goals, Points]
target dvq:
Visualize BAR SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION ORDER BY count(*) DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the sum of department_id bin hire_date by time in a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
A line chart for what are the number of the dates with a maximum temperature higher than 85 ? , show by the date in descending please .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize LINE SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85 GROUP BY date ORDER BY date DESC
****************************************************************************************************
nl_queries:
Bin the hire date into the day of week interval , and then calculate the total salary of employees in each day for a bar chart , note that just select those employees without the letter M in their first name , and list Y-axis in desc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name NOT LIKE '%M%'  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Give me a histogram for how many rooms cost more than 120 , for each different decor ? , could you sort y-axis from low to high order ?
database schema:
Table Rooms, columns = [*,RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor]
target dvq:
Visualize BAR SELECT decor , count(*) FROM Rooms WHERE basePrice > 120 GROUP BY decor ORDER BY count(*) ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of department_id over the hire_date bin hire_date by time by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Find the number of the last name of female (sex is F) students in the descending order of age .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
Table Faculty, columns = [*,FacID, Lname, Fname, Rank, Sex, Phone, Room, Building]
target dvq:
Visualize BAR SELECT LName , COUNT(LName) FROM STUDENT WHERE Sex = "F" GROUP BY LName ORDER BY Age DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find job_id and the average of manager_id , and group by attribute job_id , and visualize them by a bar chart , could you order by the bar in desc please ?
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of job_id and the amount of job_id , and group by attribute job_id .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
What is the number of players who have points less than 30 for each position . Plot them as bar chart .
database schema:
Table player, columns = [*,Player_ID, name, Position, Club_ID, Apps, Tries, Goals, Points]
target dvq:
Visualize BAR SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a line chart about the change of commission_pct over hire_date , rank HIRE_DATE in ascending order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , draw a bar chart about the distribution of name and code , and display by the names in ascending .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Code FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Name ASC
****************************************************************************************************
nl_queries:
Show the musical nominee with award "Bob Fosse" or "Cleavant Derricks" , and count them by a bar chart , display by the x-axis in asc please .
database schema:
Table musical, columns = [*,Musical_ID, Name, Year, Award, Category, Nominee, Result]
target dvq:
Visualize BAR SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = "Tony Award" OR Award = "Cleavant Derricks" GROUP BY Nominee ORDER BY Nominee ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the average of employee_id bin hire_date by weekday in a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of job_id and the average of department_id , and group by attribute job_id , order the average of department id in ascending order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY AVG(DEPARTMENT_ID) ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a line chart about the change of salary over hire_date , I want to list from low to high by the HIRE_DATE .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a bar chart shows the distribution of hire_date and the average of employee_id bin hire_date by time , and rank in descending by the y-axis .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(EMPLOYEE_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by time , and order by the total number in desc .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(MANAGER_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Return a histogram on how many professors have a Ph . D . in each department ?
database schema:
Table COURSE, columns = [*,CRS_CODE, DEPT_CODE, CRS_DESCRIPTION, CRS_CREDIT]
Table DEPARTMENT, columns = [*,DEPT_CODE, DEPT_NAME, SCHOOL_CODE, EMP_NUM, DEPT_ADDRESS, DEPT_EXTENSION]
Table PROFESSOR, columns = [*,EMP_NUM, DEPT_CODE, PROF_OFFICE, PROF_EXTENSION, PROF_HIGH_DEGREE]
Table STUDENT, columns = [*,STU_NUM, STU_LNAME, STU_FNAME, STU_INIT, STU_DOB, STU_HRS, STU_CLASS, STU_GPA, STU_TRANSFER, DEPT_CODE, STU_PHONE, PROF_NUM]
target dvq:
Visualize BAR SELECT DEPT_CODE , count(*) FROM professor WHERE prof_high_degree = 'Ph.D.' GROUP BY dept_code
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the change of commission_pct over hire_date in a line chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a scatter chart about the correlation between commission_pct and manager_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT COMMISSION_PCT , MANAGER_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of job_id and the sum of salary , and group by attribute job_id , and I want to list Y from high to low order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY SUM(SALARY) DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the sum of salary over the job_id , and group by attribute job_id by a bar chart , and list X in asc order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id , could you show in desc by the X-axis please ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of hire_date and the average of manager_id bin hire_date by weekday in a bar chart , and show by the Y-axis in asc .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(MANAGER_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those female students with age is older than 18 who are not majoring in 600 , tell me how many students of different first names using a bar chart .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
target dvq:
Visualize BAR SELECT Fname , COUNT(Fname) FROM Student WHERE Age > 18 AND Major != 600 AND Sex = 'F' GROUP BY Fname
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the sum of department_id over the hire_date bin hire_date by time , could you show in descending by the total number please ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(DEPARTMENT_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , draw a bar chart about the distribution of name and code , I want to order Y-axis in descending order .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Code FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Code DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by time , and order sum department id in ascending order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(DEPARTMENT_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , visualize a bar chart about the distribution of name and code , and I want to rank by the x-axis in asc .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Code FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Name ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the trend about employee_id over hire_date , and display by the HIRE_DATE in ascending .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of employee_id over the hire_date bin hire_date by weekday by a bar chart , and display Y-axis in descending order please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(EMPLOYEE_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
How many captains with younger than 50 are in each rank .
database schema:
Table captain, columns = [*,Captain_ID, Name, Ship_ID, age, Class, Rank]
target dvq:
Visualize BAR SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of job_id and the sum of department_id , and group by attribute job_id , and display from high to low by the y axis .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY SUM(DEPARTMENT_ID) DESC
****************************************************************************************************
nl_queries:
Return the categories of music festivals that have the result "Awarded" , and count them by a bar chart , and order by the y axis from high to low .
database schema:
Table music_festival, columns = [*,ID, Music_Festival, Date_of_ceremony, Category, Volume, Result]
target dvq:
Visualize BAR SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = "Awarded" GROUP BY Category ORDER BY COUNT(Category) DESC
****************************************************************************************************
nl_queries:
Display a bar chart for how many male and female assistant professors do we have ?
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
Table Faculty, columns = [*,FacID, Lname, Fname, Rank, Sex, Phone, Room, Building]
target dvq:
Visualize BAR SELECT Sex , count(*) FROM Faculty WHERE rank = "AsstProf" GROUP BY sex
****************************************************************************************************
nl_queries:
Show the number of products with price higher than 1000 or lower than 500 for each product type code in a bar chart .
database schema:
Table Products, columns = [*,product_id, product_type_code, product_name, product_price]
target dvq:
Visualize BAR SELECT product_type_code , COUNT(product_type_code) FROM products WHERE product_price > 1000 OR product_price < 500 GROUP BY product_type_code
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a scatter chart about the correlation between employee_id and manager_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT EMPLOYEE_ID , MANAGER_ID FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a line chart about the change of commission_pct over hire_date .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of job_id and the average of employee_id , and group by attribute job_id .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
How many mills of 'Grondzeiler' type are built in each year ? Give me the trend .
database schema:
Table mill, columns = [*,architect_id, id, location, name, type, built_year, notes]
target dvq:
Visualize LINE SELECT built_year , COUNT(built_year) FROM mill WHERE TYPE = 'Grondzeiler' BIN built_year BY YEAR
****************************************************************************************************
nl_queries:
Visualize a scatter chart on what are each physician's employee id and department id primarily affiliated .
database schema:
Table Physician, columns = [*,EmployeeID, Name, Position, SSN]
Table Department, columns = [*,DepartmentID, Name, Head]
Table Affiliated_With, columns = [*,Physician, Department, PrimaryAffiliation]
Table Trained_In, columns = [*,Physician, Treatment, CertificationDate, CertificationExpires]
Table Appointment, columns = [*,AppointmentID, Patient, PrepNurse, Physician, Start, End, ExaminationRoom]
Table Prescribes, columns = [*,Physician, Patient, Medication, Date, Appointment, Dose]
Table Undergoes, columns = [*,Patient, Procedures, Stay, DateUndergoes, Physician, AssistingNurse]
target dvq:
Visualize SCATTER SELECT Physician , Department FROM affiliated_with WHERE primaryaffiliation = 1
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a line chart shows the change of employee_id over hire_date
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by time , show y-axis from high to low order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the change of commission_pct over hire_date in a line chart , I want to sort HIRE_DATE in desc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by weekday , and rank by the total number in descending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(EMPLOYEE_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Can you give me a bar chart to show the name and membership level of the visitors whose membership level is higher than 4 , could you order by the y-axis in asc please ?
database schema:
Table museum, columns = [*,Museum_ID, Name, Num_of_Staff, Open_Year]
Table visitor, columns = [*,ID, Name, Level_of_membership, Age]
target dvq:
Visualize BAR SELECT Name , Level_of_membership FROM visitor WHERE Level_of_membership > 4 ORDER BY Level_of_membership ASC
****************************************************************************************************
nl_queries:
Can you show me the proportion of each bed type using a pie chart ?
database schema:
Table Rooms, columns = [*,RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor]
target dvq:
Visualize PIE SELECT bedType , COUNT(bedType) FROM Rooms WHERE decor = "traditional" GROUP BY bedType
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the sum of department_id bin hire_date by time in a bar chart , order from low to high by the Y .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(DEPARTMENT_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the change of department_id over hire_date in a line chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of job_id and the average of department_id , and group by attribute job_id , and could you order in descending by the x-axis ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
Take the first name of all the good customers as the X-axis and gender of all the good customers as Y-axis in a bar chart , could you sort from high to low by the first_name please ?
database schema:
Table Customers, columns = [*,customer_id, coupon_id, good_or_bad_customer, first_name, last_name, gender_mf, date_became_customer, date_last_hire]
target dvq:
Visualize BAR SELECT first_name , gender_mf FROM customers WHERE good_or_bad_customer = 'good' ORDER BY first_name DESC
****************************************************************************************************
nl_queries:
A bar chart for what are the number of the dates of the latest logon of the students with family name "Jaskolski" or "Langosh" ? , and order total number in asc order .
database schema:
Table Course_Authors_and_Tutors, columns = [*,author_id, author_tutor_ATB, login_name, password, personal_name, middle_name, family_name, gender_mf, address_line_1]
Table Students, columns = [*,student_id, date_of_registration, date_of_latest_logon, login_name, password, personal_name, middle_name, family_name]
target dvq:
Visualize BAR SELECT date_of_latest_logon , COUNT(date_of_latest_logon) FROM Students WHERE family_name = "Jaskolski" OR family_name = "Langosh"  ORDER BY COUNT(date_of_latest_logon) ASC BIN date_of_latest_logon BY WEEKDAY
****************************************************************************************************
nl_queries:
Visualize a bar chart for how many male and female assistant professors do we have ? , I want to order in ascending by the Y-axis .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
Table Faculty, columns = [*,FacID, Lname, Fname, Rank, Sex, Phone, Room, Building]
target dvq:
Visualize BAR SELECT Sex , count(*) FROM Faculty WHERE rank = "AsstProf" GROUP BY sex ORDER BY count(*) ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of job_id and the sum of employee_id , and group by attribute job_id , and I want to sort by the y-axis in desc .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY SUM(EMPLOYEE_ID) DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , what is the relationship between employee_id and salary ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT EMPLOYEE_ID , SALARY FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
Show the number of products with price higher than 1000 or lower than 500 for each product name in a pie chart .
database schema:
Table Products, columns = [*,product_id, product_type_code, product_name, product_price]
target dvq:
Visualize PIE SELECT product_name , COUNT(product_name) FROM products WHERE product_price > 1000 OR product_price < 500 GROUP BY product_name
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday , display by the total number from low to high .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For employees with first names that end with the letter m , give me a bar chart to show their total salary , and sort in desc by the X .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT FIRST_NAME , SUM(SALARY) FROM employees WHERE first_name LIKE '%m' GROUP BY FIRST_NAME ORDER BY FIRST_NAME DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the average of department_id bin hire_date by weekday , and visualize them by a bar chart , could you show in ascending by the total number ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(DEPARTMENT_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find hire_date and the sum of salary bin hire_date by weekday , and visualize them by a bar chart , list total number of salary from low to high order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the sum of salary bin hire_date by weekday in a bar chart , display total number of salary in ascending order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
A bar chart showing the number of last name for all female students Their sex is F , and list by the x-axis in desc please .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
target dvq:
Visualize BAR SELECT LName , COUNT(LName) FROM Student WHERE Sex = 'F' GROUP BY LName ORDER BY LName DESC
****************************************************************************************************
nl_queries:
In zip code 94107 , on which day neither Fog nor Rain was not observed , and count them by a bar chart , sort by the y axis in desc .
database schema:
Table trip, columns = [*,id, duration, start_date, start_station_name, start_station_id, end_date, end_station_name, end_station_id, bike_id, subscription_type, zip_code]
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE zip_code = 94107 AND EVENTS != "Fog" AND EVENTS != "Rain"  ORDER BY COUNT(date) DESC BIN date BY YEAR
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , a bar chart shows the distribution of name and manufacturer , I want to rank in descending by the y axis .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Manufacturer FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Manufacturer DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by time , could you list by the y axis in descending please ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(MANAGER_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the sum of manager_id over the job_id , and group by attribute job_id by a bar chart , and order by the x axis in desc .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a scatter chart about the correlation between salary and manager_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT SALARY , MANAGER_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of manager_id over the hire_date bin hire_date by weekday , order by the y-axis in descending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(MANAGER_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the average of department_id bin hire_date by weekday in a bar chart , sort Y from low to high order please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(DEPARTMENT_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of job_id and the sum of salary , and group by attribute job_id in a bar chart .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by time , sort Y-axis from high to low order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(MANAGER_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all storms with at least 1 death , show me the name and the total number of deaths with a bar chart , and order by the x-axis from low to high please .
database schema:
Table storm, columns = [*,Storm_ID, Name, Dates_active, Max_speed, Damage_millions_USD, Number_Deaths]
target dvq:
Visualize BAR SELECT Name , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Name ASC
****************************************************************************************************
nl_queries:
For those employees whose first name is ending with the letter m , show the frequency of the first name using a bar chart , list by the y-axis in desc .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT FIRST_NAME , COUNT(FIRST_NAME) FROM employees WHERE first_name LIKE '%m' GROUP BY FIRST_NAME ORDER BY COUNT(FIRST_NAME) DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the sum of employee_id over the hire_date bin hire_date by weekday by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of hire_date and the sum of salary bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
A bar chart for what are the number of the dates of transactions with at least 100 share count or amount bigger than 100 ?
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100 BIN date_of_transaction BY WEEKDAY
****************************************************************************************************
nl_queries:
A bar chart for giveing me the number of the dates when the max temperature was higher than 85 .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85 BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find hire_date and the average of department_id bin hire_date by time , and visualize them by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the sum of employee_id over the job_id , and group by attribute job_id , and order by the y axis in descending .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY SUM(EMPLOYEE_ID) DESC
****************************************************************************************************
nl_queries:
A bar chart for what are the number of the dates with a maximum temperature higher than 85 ? , and show total number in descending order .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) DESC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the sum of manager_id bin hire_date by weekday , and sort from high to low by the y-axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(MANAGER_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Find the dates of the tests taken with result "Pass" , and count them by a bar chart , display by the names in ascending .
database schema:
Table Student_Tests_Taken, columns = [*,registration_id, date_test_taken, test_result]
target dvq:
Visualize BAR SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = "Pass" GROUP BY date_test_taken ORDER BY date_test_taken ASC
****************************************************************************************************
nl_queries:
Return a scatter chart on how many documents are with document type code BK for each product id ?
database schema:
Table Ref_Document_Types, columns = [*,Document_Type_Code, Document_Type_Name, Document_Type_Description]
Table Projects, columns = [*,Project_ID, Project_Details]
Table Documents, columns = [*,Document_ID, Document_Type_Code, Project_ID, Document_Date, Document_Name, Document_Description, Other_Details]
target dvq:
Visualize SCATTER SELECT count(*) , Project_ID FROM Documents WHERE document_type_code = "BK" GROUP BY project_id
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of job_id and the amount of job_id , and group by attribute job_id , list by the bars from high to low .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
What are the number of dates of birth of all the guests whose gender is "Male" ? , I want to show x axis in ascending order .
database schema:
Table Guests, columns = [*,guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth]
target dvq:
Visualize LINE SELECT date_of_birth , COUNT(date_of_birth) FROM Guests WHERE gender_code = "Male"  ORDER BY date_of_birth ASC BIN date_of_birth BY YEAR
****************************************************************************************************
nl_queries:
Show me a bar chart for what are the different affiliations , and what is the total enrollment of schools founded after 1850 for each enrollment type ? , and rank in asc by the bar .
database schema:
Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]
target dvq:
Visualize BAR SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation ORDER BY Affiliation ASC
****************************************************************************************************
nl_queries:
Who are the nominees who were nominated for either of the Bob Fosse or Cleavant Derricks awards , and count them by a bar chart , and I want to order x-axis in ascending order .
database schema:
Table musical, columns = [*,Musical_ID, Name, Year, Award, Category, Nominee, Result]
target dvq:
Visualize BAR SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = "Tony Award" OR Award = "Cleavant Derricks" GROUP BY Nominee ORDER BY Nominee ASC
****************************************************************************************************
nl_queries:
Show all ministers who do not belong to Progress Party , and count them by a bar chart , rank in asc by the bars .
database schema:
Table party, columns = [*,Party_ID, Minister, Took_office, Left_office, Region_ID, Party_name]
target dvq:
Visualize BAR SELECT Minister , COUNT(Minister) FROM party WHERE party_name != 'Progress Party' GROUP BY Minister ORDER BY Minister ASC
****************************************************************************************************
nl_queries:
For those employees whose first name is ending with the letter m , visualize a bar chart to show each employee's salary by the last name .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT LAST_NAME , SALARY FROM employees WHERE first_name LIKE '%m'
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the sum of department_id over the hire_date bin hire_date by weekday by a bar chart , sort by the sum department id in ascending please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(DEPARTMENT_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id , and I want to show in asc by the X-axis .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by time , could you list by the Y in asc please ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For employees without the letter M in their first name , give me a line chart to show the salary change over their hire date using a line chart , and I want to sort by the X-axis from high to low please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , draw a bar chart about the distribution of name and code , and rank by the y axis in asc please .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Code FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Code ASC
****************************************************************************************************
nl_queries:
What are the dates that have an average sea level pressure between 303 and 31 , and count them by a bar chart , show y-axis from high to low order .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) DESC BIN date BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday , order by the total number from low to high .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(DEPARTMENT_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a line chart shows the change of commission_pct over hire_date
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the change of manager_id over hire_date in a line chart , and show from high to low by the x-axis .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
For those employees whose first name is ending with the letter m , just show the salary by the last name using a pie chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize PIE SELECT LAST_NAME , SALARY FROM employees WHERE first_name LIKE '%m'
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by weekday .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the amount of hire_date bin hire_date by time in a bar chart , and could you show in asc by the y-axis ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id , sort Y-axis from low to high order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY AVG(SALARY) ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a bar chart shows the distribution of hire_date and the sum of department_id bin hire_date by weekday , rank in asc by the total number please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(DEPARTMENT_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by time , show by the Y-axis from low to high .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
, list X-axis in ascending order .
database schema:
Table Player_Attributes, columns = [*,id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes]
target dvq:
Visualize BAR SELECT preferred_foot , count(*) FROM Player_Attributes WHERE overall_rating > 80 GROUP BY preferred_foot ORDER BY preferred_foot ASC
****************************************************************************************************
nl_queries:
Take the first name of all the good customers as the X-axis and gender of all the good customers as Y-axis in a bar chart .
database schema:
Table Customers, columns = [*,customer_id, coupon_id, good_or_bad_customer, first_name, last_name, gender_mf, date_became_customer, date_last_hire]
target dvq:
Visualize BAR SELECT first_name , gender_mf FROM customers WHERE good_or_bad_customer = 'good'
****************************************************************************************************
nl_queries:
Pie chart . how many people are under 40 for each gender ?
database schema:
Table Person, columns = [*,name, age, city, gender, job]
target dvq:
Visualize PIE SELECT gender , count(*) FROM Person WHERE age < 40 GROUP BY gender
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find hire_date and the average of employee_id bin hire_date by time , and visualize them by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the correlation between employee_id and department_id in a scatter chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT EMPLOYEE_ID , DEPARTMENT_ID FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by weekday , display from high to low by the total number .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(EMPLOYEE_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Return a bar chart on how many rooms have king beds ? Report the number for each decor type .
database schema:
Table Rooms, columns = [*,RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor]
target dvq:
Visualize BAR SELECT decor , count(*) FROM Rooms WHERE bedType = "King" GROUP BY decor
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
When are the birthdays of customer who are classified as 'Good Customer' status , and count them by a bar chart , I want to list from high to low by the Y-axis .
database schema:
Table Staff, columns = [*,staff_id, staff_address_id, nickname, first_name, middle_name, last_name, date_of_birth, date_joined_staff, date_left_staff]
Table Customers, columns = [*,customer_id, customer_address_id, customer_status_code, date_became_customer, date_of_birth, first_name, last_name, amount_outstanding, email_address, phone_number, cell_mobile_phone_number]
target dvq:
Visualize BAR SELECT date_of_birth , COUNT(date_of_birth) FROM Customers WHERE customer_status_code = 'Good Customer'  ORDER BY COUNT(date_of_birth) DESC BIN date_of_birth BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me the trend about department_id over hire_date with a line chart , show by the x-axis in desc .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a line chart about the change of employee_id over hire_date .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
A bar chart for what are the number of the dates that have an average sea level pressure between 303 and 31 ? , list by the the number of date from low to high .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) ASC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id , and list by the x-axis in desc .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
A bar chart for what are the number of the first names of all employees that are professors ordered by date of birth ?
database schema:
Table EMPLOYEE, columns = [*,EMP_NUM, EMP_LNAME, EMP_FNAME, EMP_INITIAL, EMP_JOBCODE, EMP_HIREDATE, EMP_DOB]
target dvq:
Visualize BAR SELECT EMP_FNAME , COUNT(EMP_FNAME) FROM employee WHERE emp_jobcode = 'PROF' GROUP BY EMP_FNAME ORDER BY emp_dob
****************************************************************************************************
nl_queries:
Find the number of the latest logon date of the students whose family name is "Jaskolski" or "Langosh" .
database schema:
Table Course_Authors_and_Tutors, columns = [*,author_id, author_tutor_ATB, login_name, password, personal_name, middle_name, family_name, gender_mf, address_line_1]
Table Students, columns = [*,student_id, date_of_registration, date_of_latest_logon, login_name, password, personal_name, middle_name, family_name]
target dvq:
Visualize BAR SELECT date_of_latest_logon , COUNT(date_of_latest_logon) FROM Students WHERE family_name = "Jaskolski" OR family_name = "Langosh" BIN date_of_latest_logon BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the sum of salary over the job_id , and group by attribute job_id .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the amount of hire_date over the hire_date bin hire_date by weekday , I want to list in asc by the total number .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , give me the comparison about manufacturer over the name , and rank x axis from low to high order .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Manufacturer FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Name ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a line chart shows the change of manager_id over hire_date , and sort HIRE_DATE in descending order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
What is the relationship between age and weight of the dogs who have been abandoned ? Return a group scatter chart that groups by dog's name .
database schema:
Table Dogs, columns = [*,dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed]
target dvq:
Visualize SCATTER SELECT age , weight FROM Dogs WHERE abandoned_yn = 1 GROUP BY name
****************************************************************************************************
nl_queries:
how many rooms have king beds ? Report the number for each decor type , and could you order by the y-axis from high to low please ?
database schema:
Table Rooms, columns = [*,RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor]
target dvq:
Visualize BAR SELECT decor , count(*) FROM Rooms WHERE bedType = "King" GROUP BY decor ORDER BY count(*) DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of job_id and the average of salary , and group by attribute job_id in a bar chart .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the sum of employee_id over the hire_date bin hire_date by time , and list Y-axis in descending order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(EMPLOYEE_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the sum of manager_id over the hire_date bin hire_date by time by a bar chart , I want to show from low to high by the y axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(MANAGER_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the average of employee_id over the job_id , and group by attribute job_id by a bar chart .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
A bar chart for listing the number of the name of technicians whose team is not "NYY" , order by the y axis in desc please .
database schema:
Table repair, columns = [*,repair_ID, name, Launch_Date, Notes]
Table machine, columns = [*,Machine_ID, Making_Year, Class, Team, Machine_series, value_points, quality_rank]
Table technician, columns = [*,technician_id, Name, Team, Starting_Year, Age]
target dvq:
Visualize BAR SELECT Name , COUNT(Name) FROM technician WHERE Team != "NYY" GROUP BY Name ORDER BY COUNT(Name) DESC
****************************************************************************************************
nl_queries:
Show the number of the musical nominee with award "Bob Fosse" or "Cleavant Derricks" , and list the number of nominee in desc order .
database schema:
Table musical, columns = [*,Musical_ID, Name, Year, Award, Category, Nominee, Result]
target dvq:
Visualize BAR SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = "Tony Award" OR Award = "Cleavant Derricks" GROUP BY Nominee ORDER BY COUNT(Nominee) DESC
****************************************************************************************************
nl_queries:
how many rooms have king beds ? Report the number for each decor type , and could you list x-axis from high to low order ?
database schema:
Table Rooms, columns = [*,RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor]
target dvq:
Visualize BAR SELECT decor , count(*) FROM Rooms WHERE bedType = "King" GROUP BY decor ORDER BY decor DESC
****************************************************************************************************
nl_queries:
For those wines whose price is bigger than 100 , count their total number of each year and sort by year in a bar chart .
database schema:
Table grapes, columns = [*,ID, Grape, Color]
Table wine, columns = [*,No, Grape, Winery, Appelation, State, Name, Year, Price, Score, Cases, Drink]
target dvq:
Visualize BAR SELECT Year , COUNT(Year) FROM WINE WHERE Price > 100 GROUP BY Grape ,  Year ORDER BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find job_id and the average of department_id , and group by attribute job_id , and visualize them by a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id , and I want to order names in descending order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , a bar chart shows the distribution of name and code , show bars in asc order .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Code FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Name ASC
****************************************************************************************************
nl_queries:
A bar chart for listing the number of grapes , whose score is higher than 93 ordered by Name .
database schema:
Table grapes, columns = [*,ID, Grape, Color]
Table wine, columns = [*,No, Grape, Winery, Appelation, State, Name, Year, Price, Score, Cases, Drink]
target dvq:
Visualize BAR SELECT Grape , COUNT(Grape) FROM WINE WHERE Score > 93 GROUP BY Grape ORDER BY Name
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the average of manager_id over the job_id , and group by attribute job_id by a bar chart , and sort from low to high by the y axis please .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY AVG(MANAGER_ID) ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time , and list y axis in desc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(DEPARTMENT_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , a pie chart shows the proportion of name and manufacturer .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize PIE SELECT Name , Manufacturer FROM products WHERE price BETWEEN 60 AND 120
****************************************************************************************************
nl_queries:
Visualize a bar chart for what are the district names and city populations for all districts that between 200 , 000 and 2 , 000 , 000 residents ? , I want to list X from high to low order please .
database schema:
Table district, columns = [*,District_ID, District_name, Headquartered_City, City_Population, City_Area]
target dvq:
Visualize BAR SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000 ORDER BY District_name DESC
****************************************************************************************************
nl_queries:
Show the musical nominee with award "Bob Fosse" or "Cleavant Derricks" , and count them by a bar chart , and could you list from high to low by the total number ?
database schema:
Table musical, columns = [*,Musical_ID, Name, Year, Award, Category, Nominee, Result]
target dvq:
Visualize BAR SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = "Tony Award" OR Award = "Cleavant Derricks" GROUP BY Nominee ORDER BY COUNT(Nominee) DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of manager_id over the hire_date bin hire_date by time by a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , visualize a bar chart about the distribution of name and price , show by the x-axis in descending .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Price FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Name DESC
****************************************************************************************************
nl_queries:
A bar chart about what are the different affiliations , and what is the total enrollment of schools founded after 1850 for each enrollment type ?
database schema:
Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]
target dvq:
Visualize BAR SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of hire_date and the average of salary bin hire_date by time , sort by the Y from low to high .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of manager_id over the hire_date bin hire_date by time by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Count the number of captains younger than 50 of each rank .
database schema:
Table captain, columns = [*,Captain_ID, Name, Ship_ID, age, Class, Rank]
target dvq:
Visualize BAR SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank
****************************************************************************************************
nl_queries:
Show me a line chart to show the change of salary for those employees whose first name does not containing the letter M over the corresponding hire date , display in asc by the HIRE_DATE .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me the trend about department_id over hire_date with a line chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday , display from low to high by the y axis please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(DEPARTMENT_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the sum of salary over the job_id , and group by attribute job_id , sort by the bar in ascending .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of job_id and the sum of employee_id , and group by attribute job_id , and order total number from low to high order please .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY SUM(EMPLOYEE_ID) ASC
****************************************************************************************************
nl_queries:
How many rooms cost more than 120 , for each different decor Plot them as bar chart , I want to rank by the Y-axis from high to low .
database schema:
Table Rooms, columns = [*,RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor]
target dvq:
Visualize BAR SELECT decor , count(*) FROM Rooms WHERE basePrice > 120 GROUP BY decor ORDER BY count(*) DESC
****************************************************************************************************
nl_queries:
Find the number of rooms with king bed for each decor type , could you show in asc by the names ?
database schema:
Table Rooms, columns = [*,RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor]
target dvq:
Visualize BAR SELECT decor , count(*) FROM Rooms WHERE bedType = "King" GROUP BY decor ORDER BY decor ASC
****************************************************************************************************
nl_queries:
List the grape and winery of the wines whose price is bigger than 100 , visualize them with a stacked bar chart , the x-axis is winery and group the grape , and y-axis is the number of wineries , and show y-axis in asc order .
database schema:
Table grapes, columns = [*,ID, Grape, Color]
Table wine, columns = [*,No, Grape, Winery, Appelation, State, Name, Year, Price, Score, Cases, Drink]
target dvq:
Visualize BAR SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Grape ,  Winery ORDER BY COUNT(Winery) ASC
****************************************************************************************************
nl_queries:
Give me the dates when the max temperature was higher than 85 , and count them by a bar chart , sort by the the number of date in descending please .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) DESC BIN date BY YEAR
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , return a scatter chart about the correlation between code and price , and group by attribute name .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize SCATTER SELECT Code , Price FROM products WHERE price BETWEEN 60 AND 120 GROUP BY Name
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a bar chart shows the distribution of job_id and the sum of employee_id , and group by attribute job_id , and sort by the y axis from low to high .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY SUM(EMPLOYEE_ID) ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of job_id and the amount of job_id , and group by attribute job_id , rank in descending by the the number of job id .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY COUNT(JOB_ID) DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the amount of hire_date bin hire_date by weekday , and visualize them by a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by time , list by the Y-axis in asc please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(EMPLOYEE_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a line chart shows the change of salary over hire_date , and list x-axis in ascending order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , for manager_id , hire_date , visualize the trend , show by the x-axis in descending .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
Give me a histogram for what is the number of players who have points less than 30 for each position ?
database schema:
Table player, columns = [*,Player_ID, name, Position, Club_ID, Apps, Tries, Goals, Points]
target dvq:
Visualize BAR SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time , and could you display y-axis from high to low order ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(DEPARTMENT_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find job_id and the sum of employee_id , and group by attribute job_id , and visualize them by a bar chart , and I want to sort y-axis from high to low order please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY SUM(EMPLOYEE_ID) DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the change of manager_id over hire_date in a line chart , sort by the X-axis in ascending .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of job_id and the sum of manager_id , and group by attribute job_id , show from high to low by the total number of manager id .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY SUM(MANAGER_ID) DESC
****************************************************************************************************
nl_queries:
What are the payment date of the payment with amount paid higher than 300 or with payment type is 'Check , and count them by a bar chart , show in descending by the y axis .
database schema:
Table Payments, columns = [*,payment_id, booking_id, customer_id, payment_type_code, amount_paid_in_full_yn, payment_date, amount_due, amount_paid]
target dvq:
Visualize BAR SELECT payment_date , COUNT(payment_date) FROM payments WHERE amount_paid > 300 OR payment_type_code = 'Check'  ORDER BY COUNT(payment_date) DESC BIN payment_date BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of job_id and the amount of job_id , and group by attribute job_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
What are the number of the different years in which there were cars produced that weighed less than 4000 and also cars that weighted more than 3000 ? , and show by the y axis from high to low please .
database schema:
Table cars_data, columns = [*,Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year]
target dvq:
Visualize BAR SELECT Year , COUNT(Year) FROM cars_data where weight between 3000 and 4000  ORDER BY COUNT(Year) DESC BIN Year BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id , list Y-axis from high to low order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY AVG(SALARY) DESC
****************************************************************************************************
nl_queries:
How many documents are with document type code BK for each product id . Visualize by scatter chart .
database schema:
Table Ref_Document_Types, columns = [*,Document_Type_Code, Document_Type_Name, Document_Type_Description]
Table Projects, columns = [*,Project_ID, Project_Details]
Table Documents, columns = [*,Document_ID, Document_Type_Code, Project_ID, Document_Date, Document_Name, Document_Description, Other_Details]
target dvq:
Visualize SCATTER SELECT count(*) , Project_ID FROM Documents WHERE document_type_code = "BK" GROUP BY project_id
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by time , rank Y in descending order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(EMPLOYEE_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the sum of manager_id over the hire_date bin hire_date by weekday by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Show me a bar chart for how many captains with younger than 50 are in each rank ? , and rank Y-axis in descending order .
database schema:
Table captain, columns = [*,Captain_ID, Name, Ship_ID, age, Class, Rank]
target dvq:
Visualize BAR SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank ORDER BY count(*) DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find hire_date and the average of department_id bin hire_date by time , and visualize them by a bar chart , and show y-axis from low to high order please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(DEPARTMENT_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the average of manager_id bin hire_date by time in a bar chart , could you show Y in desc order ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(MANAGER_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
List the dog name and age of the dogs who have been abandoned in a bar chart .
database schema:
Table Dogs, columns = [*,dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed]
target dvq:
Visualize BAR SELECT name , age FROM Dogs WHERE abandoned_yn = 1
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by weekday .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For employees with first names that end with the letter m , give me a bar chart to show their average salary , could you sort by the y axis from low to high ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT FIRST_NAME , AVG(SALARY) FROM employees WHERE first_name LIKE '%m' GROUP BY FIRST_NAME ORDER BY AVG(SALARY) ASC
****************************************************************************************************
nl_queries:
A bar chart showing the number of flights with price higher than 300 for each destination city , show from low to high by the bar .
database schema:
Table flight, columns = [*,flno, origin, destination, distance, departure_date, arrival_date, price, aid]
target dvq:
Visualize BAR SELECT destination , COUNT(destination) FROM Flight WHERE price > 300 GROUP BY destination ORDER BY destination ASC
****************************************************************************************************
nl_queries:
For employees without the letter M in their first name , give me a line chart to show the salary change over their hire date using a line chart , order from low to high by the X .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a line chart shows the change of commission_pct over hire_date , and show x-axis in desc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of job_id and the average of manager_id , and group by attribute job_id in a bar chart .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of hire_date and the average of employee_id bin hire_date by time in a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of job_id and the average of manager_id , and group by attribute job_id .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of hire_date and the sum of salary bin hire_date by weekday in a bar chart , could you order by the sum salary in asc ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the amount of job_id over the job_id , and group by attribute job_id by a bar chart , could you display in ascending by the bar please ?
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by weekday , order in desc by the y axis please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(MANAGER_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Show the number of male and female assistant professors with a bar chart , rank in desc by the X-axis .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
Table Faculty, columns = [*,FacID, Lname, Fname, Rank, Sex, Phone, Room, Building]
target dvq:
Visualize BAR SELECT Sex , count(*) FROM Faculty WHERE rank = "AsstProf" GROUP BY sex ORDER BY Sex DESC
****************************************************************************************************
nl_queries:
When are the birthdays of customer who are classified as 'Good Customer' status , and count them by a line chart
database schema:
Table Staff, columns = [*,staff_id, staff_address_id, nickname, first_name, middle_name, last_name, date_of_birth, date_joined_staff, date_left_staff]
Table Customers, columns = [*,customer_id, customer_address_id, customer_status_code, date_became_customer, date_of_birth, first_name, last_name, amount_outstanding, email_address, phone_number, cell_mobile_phone_number]
target dvq:
Visualize LINE SELECT date_of_birth , COUNT(date_of_birth) FROM Customers WHERE customer_status_code = 'Good Customer' BIN date_of_birth BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find job_id and the average of department_id , and group by attribute job_id , and visualize them by a bar chart , I want to order by the X-axis from high to low .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find job_id and the average of employee_id , and group by attribute job_id , and visualize them by a bar chart , could you rank in descending by the bar ?
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , what is the relationship between employee_id and commission_pct ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT EMPLOYEE_ID , COMMISSION_PCT FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
A bar chart about what are the different affiliations , and what is the total enrollment of schools founded after 1850 for each enrollment type ? , order from high to low by the Y-axis .
database schema:
Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]
target dvq:
Visualize BAR SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation ORDER BY sum(Enrollment) DESC
****************************************************************************************************
nl_queries:
How many companies that are not headquartered in the United States for each main industry ? Show me a bar chart , and list names from high to low order .
database schema:
Table company, columns = [*,Company_ID, Rank, Company, Headquarters, Main_Industry, Sales_billion, Profits_billion, Assets_billion, Market_Value]
target dvq:
Visualize BAR SELECT Main_Industry , COUNT(Main_Industry) FROM company WHERE headquarters != 'USA' GROUP BY Main_Industry ORDER BY Main_Industry DESC
****************************************************************************************************
nl_queries:
How many captains with younger than 50 are in each rank , list by the bars from low to high .
database schema:
Table captain, columns = [*,Captain_ID, Name, Ship_ID, age, Class, Rank]
target dvq:
Visualize BAR SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank ORDER BY Rank ASC
****************************************************************************************************
nl_queries:
Find the number of professors with a PhD degree in each department Show bar chart , and could you display X from low to high order ?
database schema:
Table COURSE, columns = [*,CRS_CODE, DEPT_CODE, CRS_DESCRIPTION, CRS_CREDIT]
Table DEPARTMENT, columns = [*,DEPT_CODE, DEPT_NAME, SCHOOL_CODE, EMP_NUM, DEPT_ADDRESS, DEPT_EXTENSION]
Table PROFESSOR, columns = [*,EMP_NUM, DEPT_CODE, PROF_OFFICE, PROF_EXTENSION, PROF_HIGH_DEGREE]
Table STUDENT, columns = [*,STU_NUM, STU_LNAME, STU_FNAME, STU_INIT, STU_DOB, STU_HRS, STU_CLASS, STU_GPA, STU_TRANSFER, DEPT_CODE, STU_PHONE, PROF_NUM]
target dvq:
Visualize BAR SELECT DEPT_CODE , count(*) FROM professor WHERE prof_high_degree = 'Ph.D.' GROUP BY dept_code ORDER BY DEPT_CODE ASC
****************************************************************************************************
nl_queries:
What is the date of birth of every customer whose status code is 'Good Customer' , and count them by a bar chart
database schema:
Table Staff, columns = [*,staff_id, staff_address_id, nickname, first_name, middle_name, last_name, date_of_birth, date_joined_staff, date_left_staff]
Table Customers, columns = [*,customer_id, customer_address_id, customer_status_code, date_became_customer, date_of_birth, first_name, last_name, amount_outstanding, email_address, phone_number, cell_mobile_phone_number]
target dvq:
Visualize BAR SELECT date_of_birth , COUNT(date_of_birth) FROM Customers WHERE customer_status_code = 'Good Customer' BIN date_of_birth BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of job_id and the average of manager_id , and group by attribute job_id .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of hire_date and the sum of salary bin hire_date by time .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose first name is ending with the letter m , show the frequency of the first name using a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT FIRST_NAME , COUNT(FIRST_NAME) FROM employees WHERE first_name LIKE '%m' GROUP BY FIRST_NAME
****************************************************************************************************
nl_queries:
Show me a bar chart for how many captains with younger than 50 are in each rank ? , list by the y-axis in asc .
database schema:
Table captain, columns = [*,Captain_ID, Name, Ship_ID, age, Class, Rank]
target dvq:
Visualize BAR SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank ORDER BY count(*) ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the average of department_id bin hire_date by weekday , and visualize them by a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find job_id and the average of employee_id , and group by attribute job_id , and visualize them by a bar chart .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a line chart about the change of department_id over hire_date , display by the X from low to high .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of job_id and the sum of employee_id , and group by attribute job_id , could you display in ascending by the names ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
What is the weight of each dog that was abandoned ? Show in a bar chart , and list names in desc order .
database schema:
Table Dogs, columns = [*,dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed]
target dvq:
Visualize BAR SELECT name , weight FROM Dogs WHERE abandoned_yn = 1 ORDER BY name DESC
****************************************************************************************************
nl_queries:
Give me the dates when the max temperature was higher than 85 , and count them by a bar chart
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85 BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a scatter chart about the correlation between employee_id and commission_pct .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT EMPLOYEE_ID , COMMISSION_PCT FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the change of department_id over hire_date in a line chart , and sort from high to low by the x axis .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
Show all dates of transactions whose type code is "SALE" , and count them by a line chart
database schema:
Table Ref_Transaction_Types, columns = [*,transaction_type_code, transaction_type_description]
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE transaction_type_code = "SALE" BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
A bar chart for giveing me the number of the dates when the max temperature was higher than 85 , and could you show by the y axis in desc ?
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) DESC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the correlation between salary and department_id in a scatter chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT SALARY , DEPARTMENT_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of job_id and the sum of employee_id , and group by attribute job_id , could you list bar in asc order ?
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of job_id and the sum of employee_id , and group by attribute job_id .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the change of manager_id over hire_date in a line chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
Give me a histogram for how many rooms cost more than 120 , for each different decor ? , order by the bar in ascending please .
database schema:
Table Rooms, columns = [*,RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor]
target dvq:
Visualize BAR SELECT decor , count(*) FROM Rooms WHERE basePrice > 120 GROUP BY decor ORDER BY decor ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a scatter chart shows the correlation between salary and manager_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT SALARY , MANAGER_ID FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , draw a scatter chart about the correlation between code and price .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize SCATTER SELECT Code , Price FROM products WHERE price BETWEEN 60 AND 120
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a scatter chart about the correlation between employee_id and manager_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT EMPLOYEE_ID , MANAGER_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize the relationship between commission_pct and department_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT COMMISSION_PCT , DEPARTMENT_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
Show the shipping charge and customer id for customer orders with order status Cancelled or Paid by a scatter chart .
database schema:
Table Customers, columns = [*,customer_id, payment_method, customer_name, customer_phone, customer_email, customer_address, customer_login, customer_password]
Table Customer_Addresses, columns = [*,customer_id, premise_id, date_address_from, address_type_code, date_address_to]
Table Customer_Orders, columns = [*,order_id, customer_id, order_status_code, shipping_method_code, order_placed_datetime, order_delivered_datetime, order_shipping_charges]
Table Mailshot_Customers, columns = [*,mailshot_id, customer_id, outcome_code, mailshot_customer_date]
target dvq:
Visualize SCATTER SELECT order_shipping_charges , customer_id FROM customer_orders WHERE order_status_code = 'Cancelled' OR order_status_code = 'Paid'
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , find name and code , and visualize them by a bar chart , list Y-axis in ascending order please .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Code FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Code ASC
****************************************************************************************************
nl_queries:
How many people are under 40 for each gender Plot them as bar chart , list x axis in asc order .
database schema:
Table Person, columns = [*,name, age, city, gender, job]
target dvq:
Visualize BAR SELECT gender , count(*) FROM Person WHERE age < 40 GROUP BY gender ORDER BY gender ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by time , order by the y-axis in descending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(DEPARTMENT_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the sum of department_id over the job_id , and group by attribute job_id .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
What are the dates that have an average sea level pressure between 30 . 3 and 31 , and count them by a bar chart
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31 BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by weekday .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Find the pixel aspect ratio and the nation of the tv channels that do not use English Show the number of different pixel aspect ratios with a bar chart , list X-axis from high to low order .
database schema:
Table TV_Channel, columns = [*,id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option]
target dvq:
Visualize BAR SELECT Pixel_aspect_ratio_PAR , COUNT(Pixel_aspect_ratio_PAR) FROM tv_channel WHERE LANGUAGE != 'English' GROUP BY Pixel_aspect_ratio_PAR ORDER BY Pixel_aspect_ratio_PAR DESC
****************************************************************************************************
nl_queries:
Return the number of the date of birth for all the guests with gender code "Male" , list x axis in descending order .
database schema:
Table Guests, columns = [*,guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth]
target dvq:
Visualize LINE SELECT date_of_birth , COUNT(date_of_birth) FROM Guests WHERE gender_code = "Male"  ORDER BY date_of_birth DESC BIN date_of_birth BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of job_id and the average of manager_id , and group by attribute job_id , and I want to sort from high to low by the x-axis please .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
In zip code 94107 , on which day neither Fog nor Rain was not observed , and count them by a bar chart , sort in desc by the Y .
database schema:
Table trip, columns = [*,id, duration, start_date, start_station_name, start_station_id, end_date, end_station_name, end_station_id, bike_id, subscription_type, zip_code]
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE zip_code = 94107 AND EVENTS != "Fog" AND EVENTS != "Rain"  ORDER BY COUNT(date) DESC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the amount of hire_date over the hire_date bin hire_date by weekday , could you list by the Y in descending ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of job_id and the average of salary , and group by attribute job_id in a bar chart , and show by the bars from low to high .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id , show X-axis from high to low order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the sum of manager_id over the job_id , and group by attribute job_id by a bar chart , show by the X in asc .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
What are the last names of female students , ordered by age descending , and count them by a bar chart
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
Table Faculty, columns = [*,FacID, Lname, Fname, Rank, Sex, Phone, Room, Building]
target dvq:
Visualize BAR SELECT LName , COUNT(LName) FROM STUDENT WHERE Sex = "F" GROUP BY LName ORDER BY Age DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the sum of employee_id bin hire_date by weekday , list by the Y in ascending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(EMPLOYEE_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of job_id and the average of manager_id , and group by attribute job_id , and display y axis in ascending order please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY AVG(MANAGER_ID) ASC
****************************************************************************************************
nl_queries:
Show the names and total passengers for all train stations not in London Visualize by bar chart , and show by the X-axis from high to low .
database schema:
Table station, columns = [*,Station_ID, Name, Annual_entry_exit, Annual_interchanges, Total_Passengers, Location, Main_Services, Number_of_Platforms]
Table train, columns = [*,Train_ID, Name, Time, Service]
target dvq:
Visualize BAR SELECT Name , Total_Passengers FROM station WHERE LOCATION != 'London' ORDER BY Name DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id , show by the names in asc .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
How many flights with price higher than 300 for each destination city ? Return a pie chart .
database schema:
Table flight, columns = [*,flno, origin, destination, distance, departure_date, arrival_date, price, aid]
target dvq:
Visualize PIE SELECT destination , COUNT(destination) FROM Flight WHERE price > 300 GROUP BY destination
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of job_id and the amount of job_id , and group by attribute job_id , and sort in asc by the the number of job id please .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY COUNT(JOB_ID) ASC
****************************************************************************************************
nl_queries:
what is the average age for a male in each job ? , rank X in desc order .
database schema:
Table Person, columns = [*,name, age, city, gender, job]
target dvq:
Visualize BAR SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY job DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , what is the relationship between salary and department_id ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT SALARY , DEPARTMENT_ID FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
, show preferred_foot in descending order .
database schema:
Table Player_Attributes, columns = [*,id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes]
target dvq:
Visualize BAR SELECT preferred_foot , count(*) FROM Player_Attributes WHERE overall_rating > 80 GROUP BY preferred_foot ORDER BY preferred_foot DESC
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , return a bar chart about the distribution of name and code , and I want to rank by the x-axis in asc .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Code FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Name ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a line chart shows the trend of salary over hire_date .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
Draw a pie chart for how many rooms have king beds ? Report the number for each decor type .
database schema:
Table Rooms, columns = [*,RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor]
target dvq:
Visualize PIE SELECT decor , count(*) FROM Rooms WHERE bedType = "King" GROUP BY decor
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of job_id and the average of salary , and group by attribute job_id in a bar chart , and display by the total number in ascending please .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY AVG(SALARY) ASC
****************************************************************************************************
nl_queries:
Find the name and population of districts with population between 200000 and 200000 Show a bar chart , show by the y-axis in descending .
database schema:
Table district, columns = [*,District_ID, District_name, Headquartered_City, City_Population, City_Area]
target dvq:
Visualize BAR SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000 ORDER BY City_Population DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the average of salary bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by weekday , display Y-axis in desc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(MANAGER_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the average of manager_id bin hire_date by weekday , and visualize them by a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Give me a bar chart to show how many days with a max temperature greater than or equal to 80 for each year , and sort total number from high to low order .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f >= 80  ORDER BY COUNT(date) DESC BIN date BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of department_id over the job_id , and group by attribute job_id by a bar chart , and sort by the y axis in descending .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY AVG(DEPARTMENT_ID) DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the trend about manager_id over hire_date .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of hire_date and the average of salary bin hire_date by time , and could you rank from low to high by the Y-axis ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by weekday , and I want to sort sum employee id in asc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(EMPLOYEE_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by weekday , and sort from low to high by the Y .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(EMPLOYEE_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those dates with a max temperature greater than or equal to 80 , I would like a line chart to show the tendency , I want to display by the X-axis in desc .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize LINE SELECT date , COUNT(date) FROM weather WHERE max_temperature_f >= 80 GROUP BY date ORDER BY date DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id , rank by the Y-axis in descending .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY AVG(EMPLOYEE_ID) DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id , sort Y-axis in asc order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY AVG(EMPLOYEE_ID) ASC
****************************************************************************************************
nl_queries:
Visualize a pie chart with what are the different affiliations , and what is the total enrollment of schools founded after 1850 for each enrollment type ?
database schema:
Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]
target dvq:
Visualize PIE SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the sum of salary bin hire_date by time , could you order Y-axis in asc order please ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of job_id and the average of department_id , and group by attribute job_id , and list by the y-axis from high to low .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY AVG(DEPARTMENT_ID) DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of job_id and the amount of job_id , and group by attribute job_id , and show Y-axis in descending order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY COUNT(JOB_ID) DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of hire_date and the average of salary bin hire_date by time , order by the y axis in ascending .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
What are the payment date of the payment with amount paid higher than 300 or with payment type is 'Check , and count them by a bar chart
database schema:
Table Payments, columns = [*,payment_id, booking_id, customer_id, payment_type_code, amount_paid_in_full_yn, payment_date, amount_due, amount_paid]
target dvq:
Visualize BAR SELECT payment_date , COUNT(payment_date) FROM payments WHERE amount_paid > 300 OR payment_type_code = 'Check' BIN payment_date BY WEEKDAY
****************************************************************************************************
nl_queries:
What are the job titles , and range of salaries for jobs with maximum salary between 12000 and 18000 Plot them as bar chart , and I want to list by the names from low to high .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
target dvq:
Visualize BAR SELECT JOB_TITLE , max_salary - min_salary FROM jobs WHERE max_salary BETWEEN 12000 AND 18000 ORDER BY JOB_TITLE ASC
****************************************************************************************************
nl_queries:
Show the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000 , and count them by a line chart , order x-axis from low to high order .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000  ORDER BY date_of_transaction ASC BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by weekday , list by the Y-axis in asc please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(EMPLOYEE_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a line chart about the change of manager_id over hire_date .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the average of salary over the job_id , and group by attribute job_id by a bar chart .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
Find the number of rooms with price higher than 120 for different decor . Show bar chart .
database schema:
Table Rooms, columns = [*,RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor]
target dvq:
Visualize BAR SELECT decor , count(*) FROM Rooms WHERE basePrice > 120 GROUP BY decor
****************************************************************************************************
nl_queries:
How many captains with younger than 50 are in each rank , and sort in desc by the bar .
database schema:
Table captain, columns = [*,Captain_ID, Name, Ship_ID, age, Class, Rank]
target dvq:
Visualize BAR SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank ORDER BY Rank DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the sum of manager_id over the job_id , and group by attribute job_id by a bar chart .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize the relationship between commission_pct and manager_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT COMMISSION_PCT , MANAGER_ID FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
A line chart for returning the number of the date of birth for all the guests with gender code "Male" .
database schema:
Table Guests, columns = [*,guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth]
target dvq:
Visualize LINE SELECT date_of_birth , COUNT(date_of_birth) FROM Guests WHERE gender_code = "Male" BIN date_of_birth BY YEAR
****************************************************************************************************
nl_queries:
Show the number of the musical nominee with award "Bob Fosse" or "Cleavant Derricks" , sort x-axis from low to high order .
database schema:
Table musical, columns = [*,Musical_ID, Name, Year, Award, Category, Nominee, Result]
target dvq:
Visualize BAR SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = "Tony Award" OR Award = "Cleavant Derricks" GROUP BY Nominee ORDER BY Nominee ASC
****************************************************************************************************
nl_queries:
A bar chart for what are the number of the dates in which the mean sea level pressure was between 30 . 3 and 31 ?
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31 BIN date BY YEAR
****************************************************************************************************
nl_queries:
Give me the dates when the max temperature was higher than 85 , and count them by a line chart , order by the x axis in asc .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize LINE SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85 GROUP BY date ORDER BY date ASC
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , return a bar chart about the distribution of name and price .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Price FROM products WHERE price BETWEEN 60 AND 120
****************************************************************************************************
nl_queries:
A bar chart for what are the number of the last names of female students , ordered by age descending ?
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
Table Faculty, columns = [*,FacID, Lname, Fname, Rank, Sex, Phone, Room, Building]
target dvq:
Visualize BAR SELECT LName , COUNT(LName) FROM STUDENT WHERE Sex = "F" GROUP BY LName ORDER BY Age DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the average of employee_id over the job_id , and group by attribute job_id by a bar chart , and list JOB_ID from low to high order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find job_id and the sum of manager_id , and group by attribute job_id , and visualize them by a bar chart .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the sum of department_id over the hire_date bin hire_date by time , and could you display by the sum department id in ascending ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(DEPARTMENT_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a scatter chart about the correlation between employee_id and commission_pct .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT EMPLOYEE_ID , COMMISSION_PCT FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
Line chart , let hire data as X and salary as Y , and filter for employees without the letter M in their first name , and list by the X-axis in ascending please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
List the number of winery of the wines whose price is bigger than 100 in a bar chart , and I want to rank in asc by the Y-axis .
database schema:
Table wine, columns = [*,No, Grape, Winery, Appelation, State, Name, Year, Price, Score, Cases, Drink]
target dvq:
Visualize BAR SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Winery ORDER BY COUNT(Winery) ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , what is the relationship between employee_id and manager_id ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT EMPLOYEE_ID , MANAGER_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by time , display Y in desc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id , and list by the Y-axis in descending .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY AVG(SALARY) DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of job_id and the sum of department_id , and group by attribute job_id in a bar chart , and could you rank in asc by the y-axis please ?
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY SUM(DEPARTMENT_ID) ASC
****************************************************************************************************
nl_queries:
In zip code 94107 , on which day neither Fog nor Rain was not observed , and count them by a bar chart , and display y axis from low to high order .
database schema:
Table trip, columns = [*,id, duration, start_date, start_station_name, start_station_id, end_date, end_station_name, end_station_id, bike_id, subscription_type, zip_code]
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE zip_code = 94107 AND EVENTS != "Fog" AND EVENTS != "Rain"  ORDER BY COUNT(date) ASC BIN date BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the change of department_id over hire_date in a line chart , and I want to show in desc by the HIRE_DATE .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
A bar chart about the number of first name for all female students whose sex is F , and list by the x-axis in ascending .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
target dvq:
Visualize BAR SELECT Fname , COUNT(Fname) FROM Student WHERE Sex = 'F' GROUP BY Fname ORDER BY Fname ASC
****************************************************************************************************
nl_queries:
Find the component amounts and names of all furnitures that have more than 10 components .
database schema:
Table manufacturer, columns = [*,Manufacturer_ID, Open_Year, Name, Num_of_Factories, Num_of_Shops]
Table furniture, columns = [*,Furniture_ID, Name, Num_of_Component, Market_Rate]
target dvq:
Visualize BAR SELECT Name , Num_of_Component FROM furniture WHERE Num_of_Component > 10
****************************************************************************************************
nl_queries:
On what dates were employees without the letter M in their first names hired , and count them by a bar chart , rank in ascending by the y-axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name NOT LIKE '%M%'  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the correlation between manager_id and department_id in a scatter chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT MANAGER_ID , DEPARTMENT_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
how many rooms have king beds ? Report the number for each decor type .
database schema:
Table Rooms, columns = [*,RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor]
target dvq:
Visualize BAR SELECT decor , count(*) FROM Rooms WHERE bedType = "King" GROUP BY decor
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of manager_id over the job_id , and group by attribute job_id , order JOB_ID in descending order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
Show the number of male and female assistant professors with a bar chart , list y axis in ascending order .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
Table Faculty, columns = [*,FacID, Lname, Fname, Rank, Sex, Phone, Room, Building]
target dvq:
Visualize BAR SELECT Sex , count(*) FROM Faculty WHERE rank = "AsstProf" GROUP BY sex ORDER BY count(*) ASC
****************************************************************************************************
nl_queries:
For all storms with at least 1 death , compare the total number of deaths by dates_active attribute .
database schema:
Table storm, columns = [*,Storm_ID, Name, Dates_active, Max_speed, Damage_millions_USD, Number_Deaths]
target dvq:
Visualize BAR SELECT Dates_active , Number_Deaths FROM storm WHERE number_deaths >= 1
****************************************************************************************************
nl_queries:
A bar chart about the number of first name for all female students whose sex is F .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
target dvq:
Visualize BAR SELECT Fname , COUNT(Fname) FROM Student WHERE Sex = 'F' GROUP BY Fname
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the amount of hire_date over the hire_date bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the sum of department_id over the job_id , and group by attribute job_id , and order in ascending by the names .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For those employees whose first name does not contain the letter M , sum their salary by binning the hire date into the day of week interval for visualizing a bar chart , show by the total number from low to high .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name NOT LIKE '%M%'  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , visualize a scatter chart about the correlation between price and manufacturer , and group by attribute name .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize SCATTER SELECT Price , Manufacturer FROM products WHERE price BETWEEN 60 AND 120 GROUP BY Name
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the average of department_id over the job_id , and group by attribute job_id by a bar chart , list by the y-axis from high to low .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY AVG(DEPARTMENT_ID) DESC
****************************************************************************************************
nl_queries:
In zip code 94107 , on which day neither Fog nor Rain was not observed , and count them by a bar chart
database schema:
Table trip, columns = [*,id, duration, start_date, start_station_name, start_station_id, end_date, end_station_name, end_station_id, bike_id, subscription_type, zip_code]
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE zip_code = 94107 AND EVENTS != "Fog" AND EVENTS != "Rain" BIN date BY YEAR
****************************************************************************************************
nl_queries:
What is the name of the technician whose team is not 'NYY' , and count them by a bar chart , order by the X-axis in desc .
database schema:
Table repair, columns = [*,repair_ID, name, Launch_Date, Notes]
Table machine, columns = [*,Machine_ID, Making_Year, Class, Team, Machine_series, value_points, quality_rank]
Table technician, columns = [*,technician_id, Name, Team, Starting_Year, Age]
target dvq:
Visualize BAR SELECT Name , COUNT(Name) FROM technician WHERE Team != "NYY" GROUP BY Name ORDER BY Name DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me the trend about salary over hire_date with a line chart , order from low to high by the X-axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id , list JOB_ID from low to high order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the sum of department_id bin hire_date by time , and visualize them by a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the trend about department_id over hire_date , and I want to show in asc by the HIRE_DATE .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the amount of job_id over the job_id , and group by attribute job_id , show from high to low by the X-axis please .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
Show the names and total passengers for all train stations not in London with a bar chart , show Total_Passengers in desc order please .
database schema:
Table station, columns = [*,Station_ID, Name, Annual_entry_exit, Annual_interchanges, Total_Passengers, Location, Main_Services, Number_of_Platforms]
Table train, columns = [*,Train_ID, Name, Time, Service]
target dvq:
Visualize BAR SELECT Name , Total_Passengers FROM station WHERE LOCATION != 'London' ORDER BY Total_Passengers DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , for employee_id , hire_date , visualize the trend , and sort X from high to low order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a scatter chart about the correlation between employee_id and manager_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT EMPLOYEE_ID , MANAGER_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by time .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of job_id and the sum of department_id , and group by attribute job_id , list y axis from low to high order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY SUM(DEPARTMENT_ID) ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the trend about department_id over hire_date , order x axis in ascending order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a line chart about the change of manager_id over hire_date .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
What are dates of birth of all the guests whose gender is "Male" , and count them by a bar chart
database schema:
Table Guests, columns = [*,guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth]
target dvq:
Visualize BAR SELECT date_of_birth , COUNT(date_of_birth) FROM Guests WHERE gender_code = "Male" BIN date_of_birth BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of department_id over the job_id , and group by attribute job_id by a bar chart , and could you order in descending by the x-axis ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
Count the number of people of each sex who have a weight higher than 85 .
database schema:
Table people, columns = [*,People_ID, Sex, Name, Date_of_Birth, Height, Weight]
target dvq:
Visualize BAR SELECT Sex , count(*) FROM people WHERE weight > 85 GROUP BY sex
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of job_id and the sum of salary , and group by attribute job_id in a bar chart , could you rank Y in ascending order ?
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY SUM(SALARY) ASC
****************************************************************************************************
nl_queries:
Find the component amounts and names of all furnitures that have more than 10 components . Show me the proportion of component amounts using a pie chart .
database schema:
Table manufacturer, columns = [*,Manufacturer_ID, Open_Year, Name, Num_of_Factories, Num_of_Shops]
Table furniture, columns = [*,Furniture_ID, Name, Num_of_Component, Market_Rate]
target dvq:
Visualize PIE SELECT Name , Num_of_Component FROM furniture WHERE Num_of_Component > 10
****************************************************************************************************
nl_queries:
Find the number of the dates of the tests taken with result "Pass" .
database schema:
Table Student_Tests_Taken, columns = [*,registration_id, date_test_taken, test_result]
target dvq:
Visualize BAR SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = "Pass" BIN date_test_taken BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of job_id and the sum of employee_id , and group by attribute job_id , and could you show in desc by the names ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
Find the number of the dates of the tests taken with result "Pass" , sort by the names in asc please .
database schema:
Table Student_Tests_Taken, columns = [*,registration_id, date_test_taken, test_result]
target dvq:
Visualize BAR SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = "Pass" GROUP BY date_test_taken ORDER BY date_test_taken ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the average of salary over the job_id , and group by attribute job_id by a bar chart , I want to rank names from high to low order please .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
List the grape and winery of the wines whose price is bigger than 100 , the x-axis is winery and group the grape , and y-axis is the number of wineries , and could you show by the y axis in descending ?
database schema:
Table grapes, columns = [*,ID, Grape, Color]
Table wine, columns = [*,No, Grape, Winery, Appelation, State, Name, Year, Price, Score, Cases, Drink]
target dvq:
Visualize BAR SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Grape ,  Winery ORDER BY COUNT(Winery) DESC
****************************************************************************************************
nl_queries:
What are the dates in which the mean sea level pressure was between 303 and 31 , and count them by a line chart , list from low to high by the date .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize LINE SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31 GROUP BY date ORDER BY date ASC
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , visualize the relationship between price and manufacturer .
database schema:
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize SCATTER SELECT Price , Manufacturer FROM products WHERE price BETWEEN 60 AND 120
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a bar chart shows the distribution of job_id and the sum of manager_id , and group by attribute job_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
Find the total number of students enrolled in the colleges that were founded after the year of 1850 for each affiliation type Show bar chart , and could you rank Affiliation from high to low order ?
database schema:
Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]
target dvq:
Visualize BAR SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation ORDER BY Affiliation DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by weekday , and could you order the average of manager id in ascending order ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(MANAGER_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Visualize a bar chart for what is the id and weight of every pet who is older than 1 ? , order Y from high to low order .
database schema:
Table Has_Pet, columns = [*,StuID, PetID]
Table Pets, columns = [*,PetID, PetType, pet_age, weight]
target dvq:
Visualize BAR SELECT PetID , weight FROM pets WHERE pet_age > 1 ORDER BY weight DESC
****************************************************************************************************
nl_queries:
Show the number of products with price higher than 1000 or lower than 500 for each product name in a bar chart .
database schema:
Table Products, columns = [*,product_id, product_type_code, product_name, product_price]
target dvq:
Visualize BAR SELECT product_name , COUNT(product_name) FROM products WHERE product_price > 1000 OR product_price < 500 GROUP BY product_name
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the sum of employee_id over the hire_date bin hire_date by time , and list by the sum employee id in ascending please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(EMPLOYEE_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
How many injured players not suffering from injury of 'Knee problem' in each match ? Show me a bar chart grouping by number of matches , and sort y-axis in desc order please .
database schema:
Table injury_accident, columns = [*,game_id, id, Player, Injury, Number_of_matches, Source]
target dvq:
Visualize BAR SELECT Number_of_matches , COUNT(Number_of_matches) FROM injury_accident WHERE injury != 'Knee problem' GROUP BY Number_of_matches ORDER BY COUNT(Number_of_matches) DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of job_id and the average of department_id , and group by attribute job_id , show by the names in descending .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id , and rank Y-axis in desc order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY SUM(MANAGER_ID) DESC
****************************************************************************************************
nl_queries:
Bin the hire date into Month interval , and then compute the average salary of employees in each month for a bar chart , note that just select those employees without the letter M in their first name , display by the the average of salary from high to low .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name NOT LIKE '%M%'  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , give me the comparison about manufacturer over the name .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Manufacturer FROM products WHERE price BETWEEN 60 AND 120
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the sum of employee_id over the hire_date bin hire_date by time .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of job_id and the sum of employee_id , and group by attribute job_id , order in desc by the y axis .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY SUM(EMPLOYEE_ID) DESC
****************************************************************************************************
nl_queries:
For all storms with at least 1 death , show me the name and the total number of deaths with a bar chart .
database schema:
Table storm, columns = [*,Storm_ID, Name, Dates_active, Max_speed, Damage_millions_USD, Number_Deaths]
target dvq:
Visualize BAR SELECT Name , Number_Deaths FROM storm WHERE number_deaths >= 1
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of hire_date and the sum of salary bin hire_date by weekday , display total number in asc order please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
List the number of invoices from the US , grouped by state by a bar chart , sort x axis from low to high order .
database schema:
Table invoices, columns = [*,id, customer_id, invoice_date, billing_address, billing_city, billing_state, billing_country, billing_postal_code, total]
target dvq:
Visualize BAR SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = "USA" GROUP BY billing_state ORDER BY billing_state ASC
****************************************************************************************************
nl_queries:
For those female students with age is older than 18 who are not majoring in 600 , tell me how many students of different first names using a bar chart , rank by the how many fname in desc please .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
target dvq:
Visualize BAR SELECT Fname , COUNT(Fname) FROM Student WHERE Age > 18 AND Major != 600 AND Sex = 'F' GROUP BY Fname ORDER BY COUNT(Fname) DESC
****************************************************************************************************
nl_queries:
Find the component amounts and names of all furnitures that have more than 10 components , and sort X from high to low order .
database schema:
Table manufacturer, columns = [*,Manufacturer_ID, Open_Year, Name, Num_of_Factories, Num_of_Shops]
Table furniture, columns = [*,Furniture_ID, Name, Num_of_Component, Market_Rate]
target dvq:
Visualize BAR SELECT Name , Num_of_Component FROM furniture WHERE Num_of_Component > 10 ORDER BY Name DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of job_id and the sum of department_id , and group by attribute job_id , and could you list by the X in descending please ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the average of manager_id bin hire_date by time , and visualize them by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those dates with a max temperature greater than or equal to 80 , I would like a line chart to show the tendency , display by the X in asc .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize LINE SELECT date , COUNT(date) FROM weather WHERE max_temperature_f >= 80 GROUP BY date ORDER BY date ASC
****************************************************************************************************
nl_queries:
Select the name of the products with a price less than or equal to $200 , and count them by a bar chart , order Y in desc order .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , COUNT(Name) FROM products WHERE price <= 200 GROUP BY Name ORDER BY COUNT(Name) DESC
****************************************************************************************************
nl_queries:
List the grape and winery of the wines whose price is bigger than 100 , the x-axis is winery and group the grape , and y-axis is the number of wineries , could you show bar in desc order please ?
database schema:
Table grapes, columns = [*,ID, Grape, Color]
Table wine, columns = [*,No, Grape, Winery, Appelation, State, Name, Year, Price, Score, Cases, Drink]
target dvq:
Visualize BAR SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Grape ,  Winery ORDER BY Winery DESC
****************************************************************************************************
nl_queries:
What are the dates in which the mean sea level pressure was between 303 and 31 , and count them by a bar chart , could you sort in desc by the y axis ?
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) DESC BIN date BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of job_id and the amount of job_id , and group by attribute job_id , and I want to show in ascending by the JOB_ID .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
What are the dates of transactions with at least 100 share count or amount bigger than 100 , and count them by a line chart , and I want to display by the x-axis in desc please .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100  ORDER BY date_of_transaction DESC BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of job_id and the sum of manager_id , and group by attribute job_id , I want to order names in descending order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
Show the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000 , and count them by a line chart
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000 BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
On what dates were employees without the letter M in their first names hired , and count them by a bar chart
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name NOT LIKE '%M%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find job_id and the average of salary , and group by attribute job_id , and visualize them by a bar chart .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
A bar chart for finding the number of the dates of the tests taken with result "Pass" , list in descending by the y-axis .
database schema:
Table Student_Tests_Taken, columns = [*,registration_id, date_test_taken, test_result]
target dvq:
Visualize BAR SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = "Pass"  ORDER BY COUNT(date_test_taken) DESC BIN date_test_taken BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find job_id and the sum of employee_id , and group by attribute job_id , and visualize them by a bar chart , rank from low to high by the Y-axis .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY SUM(EMPLOYEE_ID) ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the average of department_id bin hire_date by weekday , list by the Y in ascending please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(DEPARTMENT_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of job_id and the amount of job_id , and group by attribute job_id , order bars from high to low order please .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
How many captains with younger than 50 are in each rank , display y axis in asc order .
database schema:
Table captain, columns = [*,Captain_ID, Name, Ship_ID, age, Class, Rank]
target dvq:
Visualize BAR SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank ORDER BY count(*) ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of department_id over the job_id , and group by attribute job_id , I want to sort by the x-axis in desc .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the sum of employee_id over the hire_date bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Line chart , let hire data as X and salary as Y , and filter for employees without the letter M in their first name , show HIRE_DATE in descending order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of department_id over the hire_date bin hire_date by time by a bar chart , I want to rank by the Y-axis in asc .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(DEPARTMENT_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Draw a pie chart for what are the different affiliations , and what is the total enrollment of schools founded after 1850 for each enrollment type ?
database schema:
Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]
target dvq:
Visualize PIE SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the sum of employee_id over the job_id , and group by attribute job_id by a bar chart .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of department_id over the job_id , and group by attribute job_id by a bar chart , and display in desc by the bar .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the average of salary bin hire_date by weekday in a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For employees with first names that end with the letter m , groups and count the first name to visualize a bar graph , list in ascending by the X-axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT FIRST_NAME , COUNT(FIRST_NAME) FROM employees WHERE first_name LIKE '%m' GROUP BY FIRST_NAME ORDER BY FIRST_NAME ASC
****************************************************************************************************
nl_queries:
Compare the number of winery of the wines whose price is bigger than 100 , and could you order bar in asc order please ?
database schema:
Table wine, columns = [*,No, Grape, Winery, Appelation, State, Name, Year, Price, Score, Cases, Drink]
target dvq:
Visualize BAR SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Winery ORDER BY Winery ASC
****************************************************************************************************
nl_queries:
What are the category of music festivals with result "Awarded" , and count them by a pie chart
database schema:
Table music_festival, columns = [*,ID, Music_Festival, Date_of_ceremony, Category, Volume, Result]
target dvq:
Visualize PIE SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = "Awarded" GROUP BY Category
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , what is the relationship between salary and commission_pct ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT SALARY , COMMISSION_PCT FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
Find the id and weight of all pets whose age is older than 1 Visualize by bar chart , sort in descending by the names .
database schema:
Table Has_Pet, columns = [*,StuID, PetID]
Table Pets, columns = [*,PetID, PetType, pet_age, weight]
target dvq:
Visualize BAR SELECT PetID , weight FROM pets WHERE pet_age > 1 ORDER BY PetID DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of job_id and the sum of employee_id , and group by attribute job_id , and I want to list by the y-axis from high to low please .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY SUM(EMPLOYEE_ID) DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a scatter chart about the correlation between employee_id and manager_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT EMPLOYEE_ID , MANAGER_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
Find the number of rooms with price higher than 120 for different decor . Show the proportion .
database schema:
Table Rooms, columns = [*,RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor]
target dvq:
Visualize PIE SELECT decor , count(*) FROM Rooms WHERE basePrice > 120 GROUP BY decor
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id , display in desc by the x-axis please .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
A pie chart for showing the number of the musical nominee with award "Bob Fosse" or "Cleavant Derricks" .
database schema:
Table musical, columns = [*,Musical_ID, Name, Year, Award, Category, Nominee, Result]
target dvq:
Visualize PIE SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = "Tony Award" OR Award = "Cleavant Derricks" GROUP BY Nominee
****************************************************************************************************
nl_queries:
List the dog name and age of the dogs who have been abandoned in a bar chart , order from high to low by the x axis please .
database schema:
Table Dogs, columns = [*,dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed]
target dvq:
Visualize BAR SELECT name , age FROM Dogs WHERE abandoned_yn = 1 ORDER BY name DESC
****************************************************************************************************
nl_queries:
Show the musical nominee with award "Bob Fosse" or "Cleavant Derricks" , and count them by a bar chart , I want to sort y axis in ascending order .
database schema:
Table musical, columns = [*,Musical_ID, Name, Year, Award, Category, Nominee, Result]
target dvq:
Visualize BAR SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = "Tony Award" OR Award = "Cleavant Derricks" GROUP BY Nominee ORDER BY COUNT(Nominee) ASC
****************************************************************************************************
nl_queries:
Please show the trend about the number of days with max temperature reaches 80 change over dates , and could you display x axis from high to low order please ?
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize LINE SELECT date , COUNT(date) FROM weather WHERE max_temperature_f >= 80 GROUP BY date ORDER BY date DESC
****************************************************************************************************
nl_queries:
A bar chart that computes the total number of wines with a price is bigger than 100 . Next , Bin the year into the weekday interval .
database schema:
Table wine, columns = [*,No, Grape, Winery, Appelation, State, Name, Year, Price, Score, Cases, Drink]
target dvq:
Visualize BAR SELECT Year , COUNT(Year) FROM WINE WHERE Price > 100 BIN Year BY WEEKDAY
****************************************************************************************************
nl_queries:
A bar chart for what are the number of the dates of transactions with at least 100 share count or amount bigger than 100 ? , and sort by the Y from high to low .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100  ORDER BY COUNT(date_of_transaction) DESC BIN date_of_transaction BY WEEKDAY
****************************************************************************************************
nl_queries:
Bin the hire date into Month interval , and then compute the average salary of employees in each month for a bar chart , note that just select those employees without the letter M in their first name .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name NOT LIKE '%M%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of job_id and the average of employee_id , and group by attribute job_id in a bar chart , and rank X-axis in descending order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by time , and I want to sort y-axis from low to high order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(EMPLOYEE_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Show the names and total passengers for all train stations not in London Visualize by bar chart , and I want to sort in ascending by the bars please .
database schema:
Table station, columns = [*,Station_ID, Name, Annual_entry_exit, Annual_interchanges, Total_Passengers, Location, Main_Services, Number_of_Platforms]
Table train, columns = [*,Train_ID, Name, Time, Service]
target dvq:
Visualize BAR SELECT Name , Total_Passengers FROM station WHERE LOCATION != 'London' ORDER BY Name ASC
****************************************************************************************************
nl_queries:
Who are the nominees who were nominated for either of the Bob Fosse or Cleavant Derricks awards , and count them by a bar chart , display x-axis in desc order .
database schema:
Table musical, columns = [*,Musical_ID, Name, Year, Award, Category, Nominee, Result]
target dvq:
Visualize BAR SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = "Tony Award" OR Award = "Cleavant Derricks" GROUP BY Nominee ORDER BY Nominee DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the sum of manager_id bin hire_date by weekday , display by the y axis in asc .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(MANAGER_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Show the musical nominee with award "Bob Fosse" or "Cleavant Derricks" , and count them by a bar chart
database schema:
Table musical, columns = [*,Musical_ID, Name, Year, Award, Category, Nominee, Result]
target dvq:
Visualize BAR SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = "Tony Award" OR Award = "Cleavant Derricks" GROUP BY Nominee
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by weekday , order Y in desc order please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(MANAGER_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find job_id and the average of salary , and group by attribute job_id , and visualize them by a bar chart , rank in ascending by the Y .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY AVG(SALARY) ASC
****************************************************************************************************
nl_queries:
Find the component amounts and names of all furnitures that have more than 10 components , order by the Num_of_Component in descending .
database schema:
Table manufacturer, columns = [*,Manufacturer_ID, Open_Year, Name, Num_of_Factories, Num_of_Shops]
Table furniture, columns = [*,Furniture_ID, Name, Num_of_Component, Market_Rate]
target dvq:
Visualize BAR SELECT Name , Num_of_Component FROM furniture WHERE Num_of_Component > 10 ORDER BY Num_of_Component DESC
****************************************************************************************************
nl_queries:
A bar chart for finding the number of the dates of the tests taken with result "Pass" , I want to show by the y-axis in ascending .
database schema:
Table Student_Tests_Taken, columns = [*,registration_id, date_test_taken, test_result]
target dvq:
Visualize BAR SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = "Pass" GROUP BY date_test_taken ORDER BY COUNT(date_test_taken) ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
Show names and seatings for all tracks opened after 2000 .
database schema:
Table race, columns = [*,Race_ID, Name, Class, Date, Track_ID]
Table track, columns = [*,Track_ID, Name, Location, Seating, Year_Opened]
target dvq:
Visualize PIE SELECT Name , Seating FROM track WHERE year_opened > 2000
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a line chart about the change of salary over hire_date , and show from high to low by the HIRE_DATE .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id , and I want to rank by the Y-axis in descending .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY AVG(SALARY) DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find job_id and the sum of manager_id , and group by attribute job_id , and visualize them by a bar chart , and sort in descending by the bars .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time , I want to sort by the Y in ascending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(DEPARTMENT_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of manager_id over the job_id , and group by attribute job_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , show me about the correlation between code and price in a scatter chart .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize SCATTER SELECT Code , Price FROM products WHERE price BETWEEN 60 AND 120
****************************************************************************************************
nl_queries:
A bar chart showing the number of those wines with a price is bigger than 100 and order by year .
database schema:
Table wine, columns = [*,No, Grape, Winery, Appelation, State, Name, Year, Price, Score, Cases, Drink]
target dvq:
Visualize BAR SELECT Year , COUNT(Year) FROM WINE WHERE Price > 100 GROUP BY Year ORDER BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a scatter chart shows the correlation between salary and manager_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT SALARY , MANAGER_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of hire_date and the sum of salary bin hire_date by time in a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose first name does not contain the letter M , sum their salary by binning the hire date into the day of week interval for visualizing a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name NOT LIKE '%M%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find job_id and the average of department_id , and group by attribute job_id , and visualize them by a bar chart , I want to sort by the x-axis in desc .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a bar chart shows the distribution of job_id and the average of manager_id , and group by attribute job_id , and rank names in desc order please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of salary over the hire_date bin hire_date by weekday , and I want to order in asc by the Y-axis .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find job_id and the sum of salary , and group by attribute job_id , and visualize them by a bar chart , and I want to sort JOB_ID from low to high order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the average of employee_id bin hire_date by time in a bar chart , and list from low to high by the y axis please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(EMPLOYEE_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a line chart about the change of commission_pct over hire_date , and rank from high to low by the x-axis please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of job_id and the average of manager_id , and group by attribute job_id , and order by the y-axis in desc .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY AVG(MANAGER_ID) DESC
****************************************************************************************************
nl_queries:
Find the dates of the tests taken with result "Pass" , and count them by a bar chart
database schema:
Table Student_Tests_Taken, columns = [*,registration_id, date_test_taken, test_result]
target dvq:
Visualize BAR SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = "Pass" GROUP BY date_test_taken
****************************************************************************************************
nl_queries:
Find the number of the dates of the tests taken with result "Pass" , and sort in descending by the Y .
database schema:
Table Student_Tests_Taken, columns = [*,registration_id, date_test_taken, test_result]
target dvq:
Visualize BAR SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = "Pass"  ORDER BY COUNT(date_test_taken) DESC BIN date_test_taken BY WEEKDAY
****************************************************************************************************
nl_queries:
What is the weight of each dog that was abandoned ? Show in a bar chart , rank Y in desc order .
database schema:
Table Dogs, columns = [*,dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed]
target dvq:
Visualize BAR SELECT name , weight FROM Dogs WHERE abandoned_yn = 1 ORDER BY weight DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find job_id and the average of department_id , and group by attribute job_id , and visualize them by a bar chart , display from high to low by the total number .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY AVG(DEPARTMENT_ID) DESC
****************************************************************************************************
nl_queries:
What are the number of the dates that have an average sea level pressure between 303 and 31 ? , display date in asc order .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize LINE SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31 GROUP BY date ORDER BY date ASC
****************************************************************************************************
nl_queries:
Show the number of the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000 , could you list from high to low by the Y ?
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000  ORDER BY COUNT(date_of_transaction) DESC BIN date_of_transaction BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the sum of salary bin hire_date by weekday , and visualize them by a bar chart , and I want to list in ascending by the Y please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the sum of employee_id bin hire_date by time , and visualize them by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of job_id and the sum of employee_id , and group by attribute job_id , list by the Y from low to high .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY SUM(EMPLOYEE_ID) ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of hire_date and the sum of employee_id bin hire_date by weekday in a bar chart , rank by the Y from low to high please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(EMPLOYEE_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the sum of manager_id over the hire_date bin hire_date by time , and I want to order in desc by the total number .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(MANAGER_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For employees with first names that end with the letter m , give me a bar chart to show their total salary , and could you show from high to low by the Y-axis ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT FIRST_NAME , SUM(SALARY) FROM employees WHERE first_name LIKE '%m' GROUP BY FIRST_NAME ORDER BY SUM(SALARY) DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find hire_date and the average of employee_id bin hire_date by time , and visualize them by a bar chart , and display y axis in descending order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(EMPLOYEE_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by weekday , order by the y-axis from low to high .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(EMPLOYEE_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
A bar chart showing the number of flights with price higher than 300 for each destination city , could you display in descending by the x-axis ?
database schema:
Table flight, columns = [*,flno, origin, destination, distance, departure_date, arrival_date, price, aid]
target dvq:
Visualize BAR SELECT destination , COUNT(destination) FROM Flight WHERE price > 300 GROUP BY destination ORDER BY destination DESC
****************************************************************************************************
nl_queries:
List the grape and winery of the wines whose price is bigger than 100 , visualize them with a stacked bar chart , the x-axis is winery and group the grape , and y-axis is the number of wineries , show by the y-axis from high to low .
database schema:
Table grapes, columns = [*,ID, Grape, Color]
Table wine, columns = [*,No, Grape, Winery, Appelation, State, Name, Year, Price, Score, Cases, Drink]
target dvq:
Visualize BAR SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Grape ,  Winery ORDER BY COUNT(Winery) DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the sum of salary bin hire_date by time in a bar chart , I want to show in asc by the Y-axis please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday , and list in ascending by the y axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(DEPARTMENT_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a line chart shows the trend of manager_id over hire_date , and I want to show X-axis in ascending order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , give me the comparison about price over the name by a bar chart , and show by the Y in ascending .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Price FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Price ASC
****************************************************************************************************
nl_queries:
A bar chart for showing the number of the musical nominee with award "Bob Fosse" or "Cleavant Derricks" , and I want to show from high to low by the y-axis .
database schema:
Table musical, columns = [*,Musical_ID, Name, Year, Award, Category, Nominee, Result]
target dvq:
Visualize BAR SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = "Tony Award" OR Award = "Cleavant Derricks" GROUP BY Nominee ORDER BY COUNT(Nominee) DESC
****************************************************************************************************
nl_queries:
For all storms with at least 1 death , compare the number of deaths by dates active with a bar graph , show y axis in descending order .
database schema:
Table storm, columns = [*,Storm_ID, Name, Dates_active, Max_speed, Damage_millions_USD, Number_Deaths]
target dvq:
Visualize BAR SELECT Dates_active , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Number_Deaths DESC
****************************************************************************************************
nl_queries:
A bar chart for returning the number of the date of birth for all the guests with gender code "Male" , and show Y in descending order .
database schema:
Table Guests, columns = [*,guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth]
target dvq:
Visualize BAR SELECT date_of_birth , COUNT(date_of_birth) FROM Guests WHERE gender_code = "Male"  ORDER BY COUNT(date_of_birth) DESC BIN date_of_birth BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the sum of manager_id over the hire_date bin hire_date by time by a bar chart , I want to show by the total number of manager id from high to low .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(MANAGER_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the sum of department_id over the job_id , and group by attribute job_id , I want to show by the Y in desc .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY SUM(DEPARTMENT_ID) DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of job_id and the sum of department_id , and group by attribute job_id , and display by the bar in asc .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
Show the musical nominee with award "Bob Fosse" or "Cleavant Derricks" , and count them by a pie chart
database schema:
Table musical, columns = [*,Musical_ID, Name, Year, Award, Category, Nominee, Result]
target dvq:
Visualize PIE SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = "Tony Award" OR Award = "Cleavant Derricks" GROUP BY Nominee
****************************************************************************************************
nl_queries:
How many rooms cost more than 120 , for each different decor . Plot them as bar chart .
database schema:
Table Rooms, columns = [*,RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor]
target dvq:
Visualize BAR SELECT decor , count(*) FROM Rooms WHERE basePrice > 120 GROUP BY decor
****************************************************************************************************
nl_queries:
A bar chart about how many professors have a PhD in each department ? , display from high to low by the X .
database schema:
Table COURSE, columns = [*,CRS_CODE, DEPT_CODE, CRS_DESCRIPTION, CRS_CREDIT]
Table DEPARTMENT, columns = [*,DEPT_CODE, DEPT_NAME, SCHOOL_CODE, EMP_NUM, DEPT_ADDRESS, DEPT_EXTENSION]
Table PROFESSOR, columns = [*,EMP_NUM, DEPT_CODE, PROF_OFFICE, PROF_EXTENSION, PROF_HIGH_DEGREE]
Table STUDENT, columns = [*,STU_NUM, STU_LNAME, STU_FNAME, STU_INIT, STU_DOB, STU_HRS, STU_CLASS, STU_GPA, STU_TRANSFER, DEPT_CODE, STU_PHONE, PROF_NUM]
target dvq:
Visualize BAR SELECT DEPT_CODE , count(*) FROM professor WHERE prof_high_degree = 'Ph.D.' GROUP BY dept_code ORDER BY DEPT_CODE DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of job_id and the sum of salary , and group by attribute job_id .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For employees with first names that end with the letter m , groups and count the first name to visualize a bar graph , and could you rank total number in ascending order please ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT FIRST_NAME , COUNT(FIRST_NAME) FROM employees WHERE first_name LIKE '%m' GROUP BY FIRST_NAME ORDER BY COUNT(FIRST_NAME) ASC
****************************************************************************************************
nl_queries:
A bar chart for returning the number of the categories of music festivals that have the result "Awarded" , sort from low to high by the x-axis .
database schema:
Table music_festival, columns = [*,ID, Music_Festival, Date_of_ceremony, Category, Volume, Result]
target dvq:
Visualize BAR SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = "Awarded" GROUP BY Category ORDER BY Category ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the sum of department_id bin hire_date by weekday in a bar chart , and could you order in desc by the Y ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(DEPARTMENT_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the trend about commission_pct over hire_date , and I want to rank x axis from low to high order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
For those female students with age is older than 18 who are not majoring in 600 , tell me how many students of different first names using a bar chart , sort bar from low to high order .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
target dvq:
Visualize BAR SELECT Fname , COUNT(Fname) FROM Student WHERE Age > 18 AND Major != 600 AND Sex = 'F' GROUP BY Fname ORDER BY Fname ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by time , sort by the y-axis in ascending please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(MANAGER_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
What are the dates of the latest logon of the students with family name "Jaskolski" or "Langosh" , and count them by a bar chart
database schema:
Table Course_Authors_and_Tutors, columns = [*,author_id, author_tutor_ATB, login_name, password, personal_name, middle_name, family_name, gender_mf, address_line_1]
Table Students, columns = [*,student_id, date_of_registration, date_of_latest_logon, login_name, password, personal_name, middle_name, family_name]
target dvq:
Visualize BAR SELECT date_of_latest_logon , COUNT(date_of_latest_logon) FROM Students WHERE family_name = "Jaskolski" OR family_name = "Langosh" BIN date_of_latest_logon BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of manager_id over the hire_date bin hire_date by time , show by the y-axis in asc .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(MANAGER_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
What is the rank every company in the banking industry ordered by sales and profits ? Show a bar chart .
database schema:
Table company, columns = [*,Company_ID, Rank, Company, Headquarters, Main_Industry, Sales_billion, Profits_billion, Assets_billion, Market_Value]
target dvq:
Visualize BAR SELECT Company , Rank FROM company WHERE main_industry = 'Banking' ORDER BY sales_billion, profits_billion
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by time , and order in desc by the y axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(DEPARTMENT_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the sum of employee_id bin hire_date by time , and visualize them by a bar chart , order in desc by the Y .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(EMPLOYEE_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
List the name of technicians whose team is not "NYY" , and count them by a bar chart , rank x axis in ascending order .
database schema:
Table repair, columns = [*,repair_ID, name, Launch_Date, Notes]
Table machine, columns = [*,Machine_ID, Making_Year, Class, Team, Machine_series, value_points, quality_rank]
Table technician, columns = [*,technician_id, Name, Team, Starting_Year, Age]
target dvq:
Visualize BAR SELECT Name , COUNT(Name) FROM technician WHERE Team != "NYY" GROUP BY Name ORDER BY Name ASC
****************************************************************************************************
nl_queries:
What are dates of birth of all the guests whose gender is "Male" , and count them by a line chart , and I want to show by the x-axis from high to low .
database schema:
Table Guests, columns = [*,guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth]
target dvq:
Visualize LINE SELECT date_of_birth , COUNT(date_of_birth) FROM Guests WHERE gender_code = "Male"  ORDER BY date_of_birth DESC BIN date_of_birth BY YEAR
****************************************************************************************************
nl_queries:
How many rooms have king beds ? Report the number for each decor type Plot them as bar chart , show X from low to high order .
database schema:
Table Rooms, columns = [*,RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor]
target dvq:
Visualize BAR SELECT decor , count(*) FROM Rooms WHERE bedType = "King" GROUP BY decor ORDER BY decor ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a line chart about the change of commission_pct over hire_date , and could you sort by the x-axis from low to high ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
What is the relationship between age and weight of the dogs who have been abandoned ? Return a scatter chart .
database schema:
Table Dogs, columns = [*,dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed]
target dvq:
Visualize SCATTER SELECT age , weight FROM Dogs WHERE abandoned_yn = 1
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of department_id over the hire_date bin hire_date by weekday by a bar chart , and sort in asc by the the average of department id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(DEPARTMENT_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Display a pie chart for what are the names and prices of products that cost at least 180 , sorted by price decreasing and name ascending ?
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize PIE SELECT Name , Price FROM products WHERE price >= 180 ORDER BY price DESC , name ASC
****************************************************************************************************
nl_queries:
Bar chart , X is bed type and the Y-axis is their appearance frequency .
database schema:
Table Rooms, columns = [*,RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor]
target dvq:
Visualize BAR SELECT bedType , COUNT(bedType) FROM Rooms WHERE decor = "traditional" GROUP BY bedType
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of job_id and the average of manager_id , and group by attribute job_id , and order by the bars in ascending .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the amount of hire_date bin hire_date by weekday , and visualize them by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , what is the relationship between employee_id and manager_id ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT EMPLOYEE_ID , MANAGER_ID FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a bar chart shows the distribution of hire_date and the amount of hire_date bin hire_date by weekday , and rank by the total number in descending .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of department_id over the hire_date bin hire_date by weekday , show in ascending by the y axis please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(DEPARTMENT_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a line chart shows the trend of department_id over hire_date , I want to show in asc by the HIRE_DATE .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the sum of employee_id bin hire_date by weekday , and visualize them by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the average of department_id bin hire_date by time in a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
List the dog name and weight of the dogs who have been abandoned in a bar chart , and list bars in asc order .
database schema:
Table Dogs, columns = [*,dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed]
target dvq:
Visualize BAR SELECT name , weight FROM Dogs WHERE abandoned_yn = 1 ORDER BY name ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by time , and could you show in descending by the Y-axis ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(EMPLOYEE_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Find the id and weight of all pets whose age is older than 1 Visualize by bar chart , sort by the Y-axis from high to low .
database schema:
Table Has_Pet, columns = [*,StuID, PetID]
Table Pets, columns = [*,PetID, PetType, pet_age, weight]
target dvq:
Visualize BAR SELECT PetID , weight FROM pets WHERE pet_age > 1 ORDER BY weight DESC
****************************************************************************************************
nl_queries:
A bar chart for listing the number of the name of technicians whose team is not "NYY" , I want to rank in asc by the Y-axis .
database schema:
Table repair, columns = [*,repair_ID, name, Launch_Date, Notes]
Table machine, columns = [*,Machine_ID, Making_Year, Class, Team, Machine_series, value_points, quality_rank]
Table technician, columns = [*,technician_id, Name, Team, Starting_Year, Age]
target dvq:
Visualize BAR SELECT Name , COUNT(Name) FROM technician WHERE Team != "NYY" GROUP BY Name ORDER BY COUNT(Name) ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the average of manager_id bin hire_date by time in a bar chart , and display from low to high by the Y .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(MANAGER_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a line chart shows the change of salary over hire_date , and sort by the x axis in ascending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
How many rooms have king beds ? Report the number for each decor type .
database schema:
Table Rooms, columns = [*,RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor]
target dvq:
Visualize PIE SELECT decor , count(*) FROM Rooms WHERE bedType = "King" GROUP BY decor
****************************************************************************************************
nl_queries:
Show me a line chart to show the change of salary for those employees whose first name does not containing the letter M over the corresponding hire date .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE first_name NOT LIKE '%M%'
****************************************************************************************************
nl_queries:
List the grape and winery of the wines whose price is bigger than 100 , visualize them with a stacked bar chart , the x-axis is winery and group the grape , and y-axis is the number of wineries .
database schema:
Table grapes, columns = [*,ID, Grape, Color]
Table wine, columns = [*,No, Grape, Winery, Appelation, State, Name, Year, Price, Score, Cases, Drink]
target dvq:
Visualize BAR SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Grape ,  Winery
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , give me a pie chart to reflect the proportion of name and code .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize PIE SELECT Name , Code FROM products WHERE price BETWEEN 60 AND 120
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a scatter chart about the correlation between employee_id and commission_pct .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT EMPLOYEE_ID , COMMISSION_PCT FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the sum of employee_id bin hire_date by weekday in a bar chart , sort by the Y-axis in desc .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(EMPLOYEE_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the amount of job_id over the job_id , and group by attribute job_id .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
List the grape and winery of the wines whose price is bigger than 100 , the x-axis is winery and group the grape , and y-axis is the number of wineries , order x axis in asc order .
database schema:
Table grapes, columns = [*,ID, Grape, Color]
Table wine, columns = [*,No, Grape, Winery, Appelation, State, Name, Year, Price, Score, Cases, Drink]
target dvq:
Visualize BAR SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Grape ,  Winery ORDER BY Winery ASC
****************************************************************************************************
nl_queries:
Give the proportion of how many rooms cost more than 120 , for each different decor ?
database schema:
Table Rooms, columns = [*,RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor]
target dvq:
Visualize PIE SELECT decor , count(*) FROM Rooms WHERE basePrice > 120 GROUP BY decor
****************************************************************************************************
nl_queries:
How many male students are there in each city ? Show a bar chart .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
target dvq:
Visualize BAR SELECT city_code , count(*) FROM student WHERE sex = 'M' GROUP BY city_code
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a bar chart shows the distribution of hire_date and the sum of department_id bin hire_date by weekday , and list by the Y-axis in descending .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(DEPARTMENT_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the average of manager_id bin hire_date by weekday in a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
What are the pixel aspect ratio and country of origin for all TV channels that do not use English ? Show the comparison of the total number of pixel aspect ratio in a bar chart , sort by the y axis in desc .
database schema:
Table TV_Channel, columns = [*,id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option]
target dvq:
Visualize BAR SELECT Pixel_aspect_ratio_PAR , COUNT(Pixel_aspect_ratio_PAR) FROM tv_channel WHERE LANGUAGE != 'English' GROUP BY Pixel_aspect_ratio_PAR ORDER BY COUNT(Pixel_aspect_ratio_PAR) DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a scatter chart shows the correlation between employee_id and manager_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT EMPLOYEE_ID , MANAGER_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
Visualize the number of grape of the wines whose price is bigger than 100 with a bar chart , ordered the x-axis by year .
database schema:
Table grapes, columns = [*,ID, Grape, Color]
Table wine, columns = [*,No, Grape, Winery, Appelation, State, Name, Year, Price, Score, Cases, Drink]
target dvq:
Visualize BAR SELECT Grape , COUNT(Grape) FROM WINE WHERE Price > 100 GROUP BY Grape ORDER BY YEAR
****************************************************************************************************
nl_queries:
What are the dates that have an average sea level pressure between 303 and 31 , and count them by a bar chart , and rank by the y-axis in ascending please .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) ASC BIN date BY YEAR
****************************************************************************************************
nl_queries:
Show all ministers who do not belong to Progress Party , and count them by a bar chart , sort by the x-axis from high to low .
database schema:
Table party, columns = [*,Party_ID, Minister, Took_office, Left_office, Region_ID, Party_name]
target dvq:
Visualize BAR SELECT Minister , COUNT(Minister) FROM party WHERE party_name != 'Progress Party' GROUP BY Minister ORDER BY Minister DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a scatter chart about the correlation between salary and manager_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT SALARY , MANAGER_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of manager_id over the job_id , and group by attribute job_id by a bar chart , rank by the total number from high to low .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY AVG(MANAGER_ID) DESC
****************************************************************************************************
nl_queries:
What are the first names of all employees that are professors ordered by date of birth , and count them by a bar chart
database schema:
Table EMPLOYEE, columns = [*,EMP_NUM, EMP_LNAME, EMP_FNAME, EMP_INITIAL, EMP_JOBCODE, EMP_HIREDATE, EMP_DOB]
target dvq:
Visualize BAR SELECT EMP_FNAME , COUNT(EMP_FNAME) FROM employee WHERE emp_jobcode = 'PROF' GROUP BY EMP_FNAME ORDER BY emp_dob
****************************************************************************************************
nl_queries:
Show me a bar chart for how many captains with younger than 50 are in each rank ?
database schema:
Table captain, columns = [*,Captain_ID, Name, Ship_ID, age, Class, Rank]
target dvq:
Visualize BAR SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the sum of salary over the hire_date bin hire_date by weekday by a bar chart , sort from low to high by the sum salary .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , what is the relationship between employee_id and salary ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT EMPLOYEE_ID , SALARY FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find job_id and the sum of employee_id , and group by attribute job_id , and visualize them by a bar chart , show y-axis from low to high order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY SUM(EMPLOYEE_ID) ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the sum of manager_id over the job_id , and group by attribute job_id by a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
Draw a pie chart for how many captains with younger than 50 are in each rank ?
database schema:
Table captain, columns = [*,Captain_ID, Name, Ship_ID, age, Class, Rank]
target dvq:
Visualize PIE SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank
****************************************************************************************************
nl_queries:
What are the dates with a maximum temperature higher than 85 , and count them by a line chart , and show by the X-axis in descending .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize LINE SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85 GROUP BY date ORDER BY date DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a line chart shows the change of salary over hire_date , could you show X-axis in descending order ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the change of commission_pct over hire_date in a line chart , order from low to high by the x-axis .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the amount of hire_date over the hire_date bin hire_date by weekday by a bar chart , show by the how many hire date in ascending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
A bar chart for showing the number of the musical nominee with award "Bob Fosse" or "Cleavant Derricks" , and display x-axis in desc order .
database schema:
Table musical, columns = [*,Musical_ID, Name, Year, Award, Category, Nominee, Result]
target dvq:
Visualize BAR SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = "Tony Award" OR Award = "Cleavant Derricks" GROUP BY Nominee ORDER BY Nominee DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of job_id and the sum of employee_id , and group by attribute job_id in a bar chart , sort by the x axis from low to high please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
Find the number of male students (with sex M) from each city in a bar chart , I want to sort from low to high by the city_code .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
target dvq:
Visualize BAR SELECT city_code , count(*) FROM student WHERE sex = 'M' GROUP BY city_code ORDER BY city_code ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of job_id and the average of manager_id , and group by attribute job_id in a bar chart , and could you rank in asc by the Y-axis ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY AVG(MANAGER_ID) ASC
****************************************************************************************************
nl_queries:
A bar chart for returning the number of the categories of music festivals that have the result "Awarded" , and I want to rank y-axis in desc order please .
database schema:
Table music_festival, columns = [*,ID, Music_Festival, Date_of_ceremony, Category, Volume, Result]
target dvq:
Visualize BAR SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = "Awarded" GROUP BY Category ORDER BY COUNT(Category) DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the sum of salary bin hire_date by time , and could you sort from high to low by the Y please ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the sum of manager_id over the hire_date bin hire_date by time by a bar chart , and list Y-axis from high to low order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(MANAGER_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Find the pixel aspect ratio and the nation of the tv channels that do not use English Show the number of different pixel aspect ratios with a bar chart , and I want to rank by the y-axis in descending .
database schema:
Table TV_Channel, columns = [*,id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option]
target dvq:
Visualize BAR SELECT Pixel_aspect_ratio_PAR , COUNT(Pixel_aspect_ratio_PAR) FROM tv_channel WHERE LANGUAGE != 'English' GROUP BY Pixel_aspect_ratio_PAR ORDER BY COUNT(Pixel_aspect_ratio_PAR) DESC
****************************************************************************************************
nl_queries:
A bar chart for giveing me the number of the dates when the max temperature was higher than 85 .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85 BIN date BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of job_id and the amount of job_id , and group by attribute job_id , list in descending by the Y-axis .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY COUNT(JOB_ID) DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the average of salary bin hire_date by time in a bar chart , display by the y-axis from high to low .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Show the number of companies whose headquarters are not from USA fpr each main industry in a bar chart , show X-axis in ascending order please .
database schema:
Table company, columns = [*,Company_ID, Rank, Company, Headquarters, Main_Industry, Sales_billion, Profits_billion, Assets_billion, Market_Value]
target dvq:
Visualize BAR SELECT Main_Industry , COUNT(Main_Industry) FROM company WHERE headquarters != 'USA' GROUP BY Main_Industry ORDER BY Main_Industry ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of job_id and the average of manager_id , and group by attribute job_id , and show X-axis from high to low order please .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the average of manager_id over the hire_date bin hire_date by weekday by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the sum of salary over the job_id , and group by attribute job_id , and show by the y-axis in descending .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY SUM(SALARY) DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a scatter chart shows the correlation between employee_id and manager_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT EMPLOYEE_ID , MANAGER_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of hire_date and the sum of manager_id bin hire_date by time , and rank total number of manager id in descending order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(MANAGER_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday , and could you list y axis from high to low order ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a line chart shows the trend of salary over hire_date , and rank from high to low by the x axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by weekday , and sort in desc by the y-axis please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(EMPLOYEE_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Find the total number of students enrolled in the colleges that were founded after the year of 1850 for each affiliation type Show bar chart , I want to sort X-axis from low to high order please .
database schema:
Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]
target dvq:
Visualize BAR SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation ORDER BY Affiliation ASC
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , show me about the proportion of price and price in a pie chart .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize PIE SELECT Name , Price FROM products WHERE price BETWEEN 60 AND 120
****************************************************************************************************
nl_queries:
Give me a histogram for what is the number of players who have points less than 30 for each position ? , and I want to sort bars in descending order .
database schema:
Table player, columns = [*,Player_ID, name, Position, Club_ID, Apps, Tries, Goals, Points]
target dvq:
Visualize BAR SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION ORDER BY Position DESC
****************************************************************************************************
nl_queries:
Show the number of transactions with transaction type code "SALE" for different investors if it is larger than 0 . Show the correlation .
database schema:
Table Investors, columns = [*,investor_id, Investor_details]
Table Lots, columns = [*,lot_id, investor_id, lot_details]
Table Ref_Transaction_Types, columns = [*,transaction_type_code, transaction_type_description]
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize SCATTER SELECT investor_id , COUNT(*) FROM TRANSACTIONS WHERE transaction_type_code = "SALE" GROUP BY investor_id
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of hire_date and the sum of salary bin hire_date by time , and order by the y-axis from low to high please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of manager_id over the job_id , and group by attribute job_id , rank total number in descending order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY AVG(MANAGER_ID) DESC
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , return a scatter chart about the correlation between price and manufacturer , and group by attribute name .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize SCATTER SELECT Price , Manufacturer FROM products WHERE price BETWEEN 60 AND 120 GROUP BY Name
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , visualize a scatter chart about the correlation between code and price , and group by attribute name .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize SCATTER SELECT Code , Price FROM products WHERE price BETWEEN 60 AND 120 GROUP BY Name
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , visualize a scatter chart about the correlation between code and price .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize SCATTER SELECT Code , Price FROM products WHERE price BETWEEN 60 AND 120
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the sum of manager_id over the hire_date bin hire_date by time by a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the average of department_id bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of salary over the job_id , and group by attribute job_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
List the number of invoices from the US , grouped by state Visualize by bar chart , I want to rank in ascending by the X please .
database schema:
Table invoices, columns = [*,id, customer_id, invoice_date, billing_address, billing_city, billing_state, billing_country, billing_postal_code, total]
target dvq:
Visualize BAR SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = "USA" GROUP BY billing_state ORDER BY billing_state ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by time , could you order by the Y-axis from low to high ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(MANAGER_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Compare the frequency of the decor of rooms that have a king bed using a bar chart .
database schema:
Table Rooms, columns = [*,RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor]
target dvq:
Visualize BAR SELECT decor , COUNT(decor) FROM Rooms WHERE bedtype = 'King' GROUP BY decor ORDER BY basePrice
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of job_id and the sum of department_id , and group by attribute job_id .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of job_id and the sum of employee_id , and group by attribute job_id , and list bars in asc order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the sum of salary over the job_id , and group by attribute job_id by a bar chart , list y axis in asc order please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY SUM(SALARY) ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of job_id and the average of department_id , and group by attribute job_id , and I want to show from low to high by the names .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the average of department_id bin hire_date by time in a bar chart , and rank mean department id in descending order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(DEPARTMENT_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the sum of manager_id over the hire_date bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the sum of department_id bin hire_date by weekday , and visualize them by a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find job_id and the average of employee_id , and group by attribute job_id , and visualize them by a bar chart , rank in asc by the y-axis please .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY AVG(EMPLOYEE_ID) ASC
****************************************************************************************************
nl_queries:
Show the names and total passengers for all train stations not in London . Plot them as a pie chart .
database schema:
Table station, columns = [*,Station_ID, Name, Annual_entry_exit, Annual_interchanges, Total_Passengers, Location, Main_Services, Number_of_Platforms]
Table train, columns = [*,Train_ID, Name, Time, Service]
target dvq:
Visualize PIE SELECT Name , Total_Passengers FROM station WHERE LOCATION != 'London'
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of job_id and the sum of salary , and group by attribute job_id in a bar chart , and list y axis in asc order please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY SUM(SALARY) ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the average of manager_id over the job_id , and group by attribute job_id by a bar chart , and rank JOB_ID in desc order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of job_id and the average of manager_id , and group by attribute job_id in a bar chart .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , for employee_id , hire_date , visualize the trend , and I want to order X in asc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by weekday , could you order in asc by the Y-axis ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
What is the market value of every comapny in the banking industry ordered by sales and profits ? Return a bar chart .
database schema:
Table company, columns = [*,Company_ID, Rank, Company, Headquarters, Main_Industry, Sales_billion, Profits_billion, Assets_billion, Market_Value]
target dvq:
Visualize BAR SELECT Company , Market_Value FROM company WHERE main_industry = 'Banking' ORDER BY sales_billion , profits_billion
****************************************************************************************************
nl_queries:
Find the total number of students enrolled in the colleges that were founded after the year of 1850 for each affiliation type Show bar chart , and list by the total number in ascending .
database schema:
Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]
target dvq:
Visualize BAR SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation ORDER BY sum(Enrollment) ASC
****************************************************************************************************
nl_queries:
Visualize a bar chart for how many male and female assistant professors do we have ? , and sort from low to high by the names .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
Table Faculty, columns = [*,FacID, Lname, Fname, Rank, Sex, Phone, Room, Building]
target dvq:
Visualize BAR SELECT Sex , count(*) FROM Faculty WHERE rank = "AsstProf" GROUP BY sex ORDER BY Sex ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the sum of manager_id bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of hire_date and the average of salary bin hire_date by time , and order by the y-axis from high to low .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose first name does not contain the letter M , display their average salary by binning the hire date into the day of week interval for visualizing a bar chart , show by the Y in descending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name NOT LIKE '%M%'  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a scatter chart about the correlation between employee_id and salary .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT EMPLOYEE_ID , SALARY FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
Find the pixel aspect ratio and the nation of the tv channels that do not use English . Show the proportion of the pixel aspect ratio with a pie chart .
database schema:
Table TV_Channel, columns = [*,id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option]
target dvq:
Visualize PIE SELECT Pixel_aspect_ratio_PAR , COUNT(Pixel_aspect_ratio_PAR) FROM tv_channel WHERE LANGUAGE != 'English' GROUP BY Pixel_aspect_ratio_PAR
****************************************************************************************************
nl_queries:
what is the number of players who have points less than 30 for each position ? , show y axis from low to high order .
database schema:
Table player, columns = [*,Player_ID, name, Position, Club_ID, Apps, Tries, Goals, Points]
target dvq:
Visualize BAR SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION ORDER BY count(*) ASC
****************************************************************************************************
nl_queries:
what are the job titles , and range of salaries for jobs with maximum salary between 12000 and 18000 ? , and could you display by the x-axis in asc ?
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
target dvq:
Visualize BAR SELECT JOB_TITLE , max_salary - min_salary FROM jobs WHERE max_salary BETWEEN 12000 AND 18000 ORDER BY JOB_TITLE ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the average of salary bin hire_date by time , and visualize them by a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of job_id and the average of department_id , and group by attribute job_id , sort from high to low by the x-axis .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
Visualize a bar chart about the number of winery of the wines whose price is bigger than 100 .
database schema:
Table wine, columns = [*,No, Grape, Winery, Appelation, State, Name, Year, Price, Score, Cases, Drink]
target dvq:
Visualize BAR SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Winery
****************************************************************************************************
nl_queries:
For all storms with at least 1 death , show me the dates active and the total number of deaths with a bar chart , rank by the Dates_active in desc .
database schema:
Table storm, columns = [*,Storm_ID, Name, Dates_active, Max_speed, Damage_millions_USD, Number_Deaths]
target dvq:
Visualize BAR SELECT Dates_active , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Dates_active DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of job_id and the average of salary , and group by attribute job_id in a bar chart , display in descending by the X-axis .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
Show me the proportion on what are the names and seatings for all tracks opened after 2000 ?
database schema:
Table race, columns = [*,Race_ID, Name, Class, Date, Track_ID]
Table track, columns = [*,Track_ID, Name, Location, Seating, Year_Opened]
target dvq:
Visualize PIE SELECT Name , Seating FROM track WHERE year_opened > 2000
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a bar chart shows the distribution of job_id and the sum of department_id , and group by attribute job_id , and rank from high to low by the names .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
What is the id and weight of every pet who is older than 1 , rank y axis in ascending order .
database schema:
Table Has_Pet, columns = [*,StuID, PetID]
Table Pets, columns = [*,PetID, PetType, pet_age, weight]
target dvq:
Visualize BAR SELECT PetID , weight FROM pets WHERE pet_age > 1 ORDER BY weight ASC
****************************************************************************************************
nl_queries:
What are the district names and city populations for all districts that between 200 , 000 and 2 , 000 , 000 residents ? Show a bar graph , display in descending by the y axis .
database schema:
Table district, columns = [*,District_ID, District_name, Headquartered_City, City_Population, City_Area]
target dvq:
Visualize BAR SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000 ORDER BY City_Population DESC
****************************************************************************************************
nl_queries:
Draw a pie chart for what are the names and prices of products that cost at least 180 , sorted by price decreasing and name ascending ?
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize PIE SELECT Name , Price FROM products WHERE price >= 180 ORDER BY price DESC , name ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of job_id and the sum of department_id , and group by attribute job_id , and order by the X in ascending .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a scatter chart shows the correlation between commission_pct and manager_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT COMMISSION_PCT , MANAGER_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the amount of job_id over the job_id , and group by attribute job_id , and order by the total number in ascending .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY COUNT(JOB_ID) ASC
****************************************************************************************************
nl_queries:
What are the dates of transactions with at least 100 share count or amount bigger than 100 , and count them by a bar chart , and I want to display Y-axis in ascending order .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100  ORDER BY COUNT(date_of_transaction) ASC BIN date_of_transaction BY WEEKDAY
****************************************************************************************************
nl_queries:
What is average age of male for different job title Visualize by bar chart , sort by the Y in desc please .
database schema:
Table Person, columns = [*,name, age, city, gender, job]
target dvq:
Visualize BAR SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY avg(age) DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by time , sort by the y-axis in ascending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(MANAGER_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
What is the average age of male students in each city ? Draw a bar chart , show by the names in descending .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
target dvq:
Visualize BAR SELECT city_code , avg(age) FROM student WHERE sex = 'M' GROUP BY city_code ORDER BY city_code DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the sum of department_id bin hire_date by weekday , and visualize them by a bar chart , and could you rank in asc by the total number ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(DEPARTMENT_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the amount of job_id over the job_id , and group by attribute job_id , and show Y-axis in descending order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY COUNT(JOB_ID) DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a scatter chart about the correlation between manager_id and department_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT MANAGER_ID , DEPARTMENT_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the sum of manager_id over the job_id , and group by attribute job_id by a bar chart , and list total number from low to high order please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY SUM(MANAGER_ID) ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the sum of department_id bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of job_id and the average of department_id , and group by attribute job_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
Bin the hire date into Month interval , and then compute the average salary of employees in each month for a bar chart , note that just select those employees without the letter M in their first name , and sort the average of salary in asc order please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name NOT LIKE '%M%'  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Bin the hire date into Month interval , and then calculate the total salary of employees in each month for a bar chart , note that just select those employees without the letter M in their first name .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name NOT LIKE '%M%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the sum of manager_id bin hire_date by weekday , and visualize them by a bar chart , and I want to order in asc by the total number of manager id please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(MANAGER_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of job_id and the sum of salary , and group by attribute job_id , show in asc by the y axis .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY SUM(SALARY) ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the trend about department_id over hire_date .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
What are the names of products with price at most 200 , and count them by a bar chart , and display in desc by the Name please .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , COUNT(Name) FROM products WHERE price <= 200 GROUP BY Name ORDER BY Name DESC
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , return a bar chart about the distribution of name and price , I want to sort in desc by the bar please .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Price FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Name DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the correlation between salary and department_id in a scatter chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT SALARY , DEPARTMENT_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
A bar chart about how many professors have a Ph . D . in each department ?
database schema:
Table COURSE, columns = [*,CRS_CODE, DEPT_CODE, CRS_DESCRIPTION, CRS_CREDIT]
Table DEPARTMENT, columns = [*,DEPT_CODE, DEPT_NAME, SCHOOL_CODE, EMP_NUM, DEPT_ADDRESS, DEPT_EXTENSION]
Table PROFESSOR, columns = [*,EMP_NUM, DEPT_CODE, PROF_OFFICE, PROF_EXTENSION, PROF_HIGH_DEGREE]
Table STUDENT, columns = [*,STU_NUM, STU_LNAME, STU_FNAME, STU_INIT, STU_DOB, STU_HRS, STU_CLASS, STU_GPA, STU_TRANSFER, DEPT_CODE, STU_PHONE, PROF_NUM]
target dvq:
Visualize BAR SELECT DEPT_CODE , count(*) FROM professor WHERE prof_high_degree = 'Ph.D.' GROUP BY dept_code
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the average of department_id bin hire_date by weekday , display Y-axis in desc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(DEPARTMENT_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , draw a bar chart about the distribution of name and code , could you rank by the x-axis in desc please ?
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Code FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Name DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of job_id and the amount of job_id , and group by attribute job_id , and sort JOB_ID in ascending order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the average of department_id over the hire_date bin hire_date by weekday by a bar chart , sort by the y axis from low to high please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(DEPARTMENT_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of hire_date and the average of manager_id bin hire_date by weekday in a bar chart , and sort in desc by the the average of manager id .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(MANAGER_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find hire_date and the sum of employee_id bin hire_date by time , and visualize them by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of job_id and the sum of employee_id , and group by attribute job_id in a bar chart .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by weekday , and show by the Y in desc .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(EMPLOYEE_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a line chart about the change of employee_id over hire_date , and list in ascending by the X .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the amount of hire_date bin hire_date by weekday , and visualize them by a bar chart , and show by the total number in asc please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday , list by the y-axis in desc .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of job_id and the average of salary , and group by attribute job_id in a bar chart , and rank by the X-axis in ascending .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of manager_id over the hire_date bin hire_date by time .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id , and could you display total number in descending order ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY AVG(SALARY) DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of job_id and the sum of manager_id , and group by attribute job_id in a bar chart , list by the y axis in descending .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY SUM(MANAGER_ID) DESC
****************************************************************************************************
nl_queries:
What are the category of music festivals with result "Awarded" , and count them by a bar chart , show from low to high by the y axis .
database schema:
Table music_festival, columns = [*,ID, Music_Festival, Date_of_ceremony, Category, Volume, Result]
target dvq:
Visualize BAR SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = "Awarded" GROUP BY Category ORDER BY COUNT(Category) ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the sum of department_id bin hire_date by time in a bar chart , display in desc by the sum department id .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(DEPARTMENT_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
A bar chart for what are the number of the dates that have an average sea level pressure between 303 and 31 ? , and rank in descending by the y axis please .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) DESC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
A line chart for what are the number of the dates in which the mean sea level pressure was between 30 . 3 and 31 ?
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize LINE SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31 GROUP BY date
****************************************************************************************************
nl_queries:
List how many students in each last name who majored in 600 using a bar chart , and show names from high to low order .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
target dvq:
Visualize BAR SELECT LName , COUNT(LName) FROM Student WHERE Major = 600 GROUP BY LName ORDER BY LName DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the average of employee_id bin hire_date by weekday in a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Show all director names who have a movie in the year 1999 or 2000 , and count them by a bar chart , and could you sort Y in ascending order ?
database schema:
Table book_club, columns = [*,book_club_id, Year, Author_or_Editor, Book_Title, Publisher, Category, Result]
Table movie, columns = [*,movie_id, Title, Year, Director, Budget_million, Gross_worldwide]
target dvq:
Visualize BAR SELECT Director , COUNT(Director) FROM movie WHERE YEAR = 1999 OR YEAR = 2000 GROUP BY Director ORDER BY COUNT(Director) ASC
****************************************************************************************************
nl_queries:
Show names and seatings , ordered by seating for all tracks opened after 2000 . Plot them as bar chart .
database schema:
Table race, columns = [*,Race_ID, Name, Class, Date, Track_ID]
Table track, columns = [*,Track_ID, Name, Location, Seating, Year_Opened]
target dvq:
Visualize BAR SELECT Name , Seating FROM track WHERE year_opened > 2000 ORDER BY seating
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by time , and list Y in asc order please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of hire_date and the average of salary bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
List the number of invoices from the US , grouped by state Visualize by bar chart , I want to order in descending by the y-axis .
database schema:
Table invoices, columns = [*,id, customer_id, invoice_date, billing_address, billing_city, billing_state, billing_country, billing_postal_code, total]
target dvq:
Visualize BAR SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = "USA" GROUP BY billing_state ORDER BY COUNT(*) DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of job_id and the sum of department_id , and group by attribute job_id in a bar chart , and list by the Y-axis in descending .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY SUM(DEPARTMENT_ID) DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find job_id and the sum of department_id , and group by attribute job_id , and visualize them by a bar chart .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the trend about employee_id over hire_date .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of job_id and the average of department_id , and group by attribute job_id , and list by the y-axis from high to low .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY AVG(DEPARTMENT_ID) DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of job_id and the average of salary , and group by attribute job_id in a bar chart .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a line chart about the change of commission_pct over hire_date .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Find the number of rooms with price higher than 120 for different decor Show bar chart , and list by the Y in descending .
database schema:
Table Rooms, columns = [*,RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor]
target dvq:
Visualize BAR SELECT decor , count(*) FROM Rooms WHERE basePrice > 120 GROUP BY decor ORDER BY count(*) DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of manager_id over the job_id , and group by attribute job_id by a bar chart , and rank from low to high by the x-axis .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find job_id and the average of department_id , and group by attribute job_id , and visualize them by a bar chart , display by the JOB_ID in ascending .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the average of department_id bin hire_date by weekday , and list Y from high to low order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(DEPARTMENT_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of hire_date and the average of salary bin hire_date by time , and sort by the the average of salary from high to low .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a scatter chart about the correlation between salary and commission_pct .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT SALARY , COMMISSION_PCT FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , give me the comparison about price over the name , and list from low to high by the Y-axis .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Price FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Price ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of hire_date and the average of salary bin hire_date by time , and could you sort by the Y in ascending ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
A bar chart for what are the number of the dates of the latest logon of the students with family name "Jaskolski" or "Langosh" ? , and sort in descending by the y-axis .
database schema:
Table Course_Authors_and_Tutors, columns = [*,author_id, author_tutor_ATB, login_name, password, personal_name, middle_name, family_name, gender_mf, address_line_1]
Table Students, columns = [*,student_id, date_of_registration, date_of_latest_logon, login_name, password, personal_name, middle_name, family_name]
target dvq:
Visualize BAR SELECT date_of_latest_logon , COUNT(date_of_latest_logon) FROM Students WHERE family_name = "Jaskolski" OR family_name = "Langosh"  ORDER BY COUNT(date_of_latest_logon) DESC BIN date_of_latest_logon BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the average of department_id bin hire_date by time , and visualize them by a bar chart , and display by the y-axis from high to low .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(DEPARTMENT_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of job_id and the sum of employee_id , and group by attribute job_id .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by time , and order Y from low to high order please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(DEPARTMENT_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by weekday .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
A bar chart showing the number of last name for all female students Their sex is F , list by the the number of lname in desc please .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
target dvq:
Visualize BAR SELECT LName , COUNT(LName) FROM Student WHERE Sex = 'F' GROUP BY LName ORDER BY COUNT(LName) DESC
****************************************************************************************************
nl_queries:
List the number of winery of the wines whose price is bigger than 100 in a bar chart , rank from low to high by the names please .
database schema:
Table wine, columns = [*,No, Grape, Winery, Appelation, State, Name, Year, Price, Score, Cases, Drink]
target dvq:
Visualize BAR SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Winery ORDER BY Winery ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the amount of hire_date bin hire_date by time in a bar chart , show by the y axis in desc .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Show all dates of transactions whose type code is "SALE" , and count them by a line chart , order by the X from low to high .
database schema:
Table Ref_Transaction_Types, columns = [*,transaction_type_code, transaction_type_description]
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE transaction_type_code = "SALE"  ORDER BY date_of_transaction ASC BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
Show the average age for all female students and group them by first name in a bar chart .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
target dvq:
Visualize BAR SELECT Fname , AVG(Age) FROM Student WHERE Sex = 'F' GROUP BY Fname
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of job_id and the sum of department_id , and group by attribute job_id in a bar chart .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the sum of salary bin hire_date by weekday , list total number of salary from low to high order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Show me the proportion on what is the number of players who have points less than 30 for each position ?
database schema:
Table player, columns = [*,Player_ID, name, Position, Club_ID, Apps, Tries, Goals, Points]
target dvq:
Visualize PIE SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , what is the relationship between commission_pct and department_id ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT COMMISSION_PCT , DEPARTMENT_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
What are the number of the dates in which the mean sea level pressure was between 303 and 31 ? , and could you order by the x axis from high to low ?
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize LINE SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31 GROUP BY date ORDER BY date DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the average of employee_id bin hire_date by time , and could you display in asc by the y axis ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(EMPLOYEE_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a line chart about the change of salary over hire_date , and could you rank by the X-axis from low to high ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the average of salary bin hire_date by time , and visualize them by a bar chart , order in desc by the y axis .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of department_id over the hire_date bin hire_date by time by a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of job_id and the sum of employee_id , and group by attribute job_id , show by the X in desc .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the sum of department_id bin hire_date by weekday , and visualize them by a bar chart , and list sum department id in ascending order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(DEPARTMENT_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of hire_date and the sum of salary bin hire_date by time , order by the Y-axis from high to low .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a line chart about the change of employee_id over hire_date .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
What are the number of the dates in which the mean sea level pressure was between 303 and 31 ? , and could you show total number in ascending order ?
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) ASC BIN date BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of hire_date and the sum of salary bin hire_date by time , and I want to rank from high to low by the total number .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a scatter chart about the correlation between employee_id and salary .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT EMPLOYEE_ID , SALARY FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id , display in ascending by the x-axis .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
Compare the number of winery of the wines whose price is bigger than 100 .
database schema:
Table wine, columns = [*,No, Grape, Winery, Appelation, State, Name, Year, Price, Score, Cases, Drink]
target dvq:
Visualize BAR SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Winery
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the average of employee_id bin hire_date by time , and visualize them by a bar chart , show in ascending by the Y .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(EMPLOYEE_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Give me a bar chart to show how many dates with a max temperature greater than or equal to 80 for each day , and list by the the number of date from low to high .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f >= 80  ORDER BY COUNT(date) ASC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the amount of hire_date bin hire_date by weekday , and visualize them by a bar chart , I want to list in asc by the total number .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
What is average age of male for different job title Visualize by bar chart , and rank by the x axis from high to low .
database schema:
Table Person, columns = [*,name, age, city, gender, job]
target dvq:
Visualize BAR SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY job DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the average of salary bin hire_date by time , and show by the y-axis in desc .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the sum of manager_id over the hire_date bin hire_date by time by a bar chart , and show in ascending by the y-axis please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(MANAGER_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of job_id and the sum of department_id , and group by attribute job_id .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
Who are the nominees who were nominated for either of the Bob Fosse or Cleavant Derricks awards , and count them by a bar chart , display by the y-axis in descending .
database schema:
Table musical, columns = [*,Musical_ID, Name, Year, Award, Category, Nominee, Result]
target dvq:
Visualize BAR SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = "Tony Award" OR Award = "Cleavant Derricks" GROUP BY Nominee ORDER BY COUNT(Nominee) DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of job_id and the average of manager_id , and group by attribute job_id , and rank mean manager id from high to low order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY AVG(MANAGER_ID) DESC
****************************************************************************************************
nl_queries:
A line chart for giveing me the number of the dates when the max temperature was higher than 85 .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize LINE SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85 GROUP BY date
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the average of salary bin hire_date by time in a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a scatter chart about the correlation between employee_id and salary .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT EMPLOYEE_ID , SALARY FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the amount of hire_date bin hire_date by time in a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by weekday , could you order by the Y-axis in ascending ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(EMPLOYEE_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the sum of employee_id over the hire_date bin hire_date by weekday by a bar chart , order in desc by the total number .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(EMPLOYEE_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Show the number of transactions with transaction type code "SALE" for different investors if it is larger than 0 in a scatter chart
database schema:
Table Investors, columns = [*,investor_id, Investor_details]
Table Lots, columns = [*,lot_id, investor_id, lot_details]
Table Ref_Transaction_Types, columns = [*,transaction_type_code, transaction_type_description]
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize SCATTER SELECT investor_id , COUNT(*) FROM TRANSACTIONS WHERE transaction_type_code = "SALE" GROUP BY investor_id
****************************************************************************************************
nl_queries:
For those employees whose first name does not containing the letter M , display their average salary by binning the hire date into Month interval for visualizing a bar chart , and list from high to low by the y axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name NOT LIKE '%M%'  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose first name does not contain the letter M , sum their salary by binning the hire date into the day of week interval for visualizing a bar chart , and list from high to low by the y axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name NOT LIKE '%M%'  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For employees with first names that end with the letter m , give me a bar chart to show their total salary , and could you sort by the total number in ascending please ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT FIRST_NAME , SUM(SALARY) FROM employees WHERE first_name LIKE '%m' GROUP BY FIRST_NAME ORDER BY SUM(SALARY) ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the sum of employee_id bin hire_date by time , and visualize them by a bar chart , display by the y axis in descending please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(EMPLOYEE_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a line chart about the change of manager_id over hire_date , and show from low to high by the HIRE_DATE .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
Find the id and weight of all pets whose age is older than 1 . Visualize by bar chart .
database schema:
Table Has_Pet, columns = [*,StuID, PetID]
Table Pets, columns = [*,PetID, PetType, pet_age, weight]
target dvq:
Visualize BAR SELECT PetID , weight FROM pets WHERE pet_age > 1
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday , and list in ascending by the mean salary .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
What are the number of the dates with a maximum temperature higher than 85 ? , I want to rank by the y-axis in asc .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) ASC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of hire_date and the average of salary bin hire_date by time in a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me the trend about employee_id over hire_date with a line chart , and display by the X-axis in descending .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , return a scatter chart about the correlation between code and price .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize SCATTER SELECT Code , Price FROM products WHERE price BETWEEN 60 AND 120
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a line chart about the change of manager_id over hire_date , could you show x axis from low to high order ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the average of department_id over the job_id , and group by attribute job_id by a bar chart , rank by the total number in asc .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY AVG(DEPARTMENT_ID) ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id , display in desc by the x-axis please .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
What are the number of the dates of transactions with at least 100 share count or amount bigger than 100 ? , and show total number in desc order .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100  ORDER BY COUNT(date_of_transaction) DESC BIN date_of_transaction BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of job_id and the sum of employee_id , and group by attribute job_id in a bar chart , I want to order total number of employee id in asc order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY SUM(EMPLOYEE_ID) ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the amount of job_id over the job_id , and group by attribute job_id by a bar chart , and sort y-axis in asc order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY COUNT(JOB_ID) ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the sum of manager_id over the hire_date bin hire_date by weekday , and order from low to high by the y-axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(MANAGER_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of job_id and the amount of job_id , and group by attribute job_id , could you rank from high to low by the Y ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY COUNT(JOB_ID) DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by time , could you order in ascending by the y-axis ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(EMPLOYEE_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by weekday , and I want to order in ascending by the Y .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(EMPLOYEE_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find job_id and the average of department_id , and group by attribute job_id , and visualize them by a bar chart .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
Return a bar chart on what is the average age for a male in each job ? , I want to rank by the X from high to low please .
database schema:
Table Person, columns = [*,name, age, city, gender, job]
target dvq:
Visualize BAR SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY job DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of job_id and the sum of employee_id , and group by attribute job_id , sort by the y axis from low to high .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY SUM(EMPLOYEE_ID) ASC
****************************************************************************************************
nl_queries:
Show all ministers who do not belong to Progress Party , and count them by a bar chart
database schema:
Table party, columns = [*,Party_ID, Minister, Took_office, Left_office, Region_ID, Party_name]
target dvq:
Visualize BAR SELECT Minister , COUNT(Minister) FROM party WHERE party_name != 'Progress Party' GROUP BY Minister
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the average of salary bin hire_date by weekday , and visualize them by a bar chart , and show y axis in descending order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Show the average age for all female students and group them by last name with a bar chart , and could you order the average of age in desc order ?
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
target dvq:
Visualize BAR SELECT LName , AVG(Age) FROM Student WHERE Sex = 'F' GROUP BY LName ORDER BY AVG(Age) DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id , order by the y-axis from low to high .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY SUM(MANAGER_ID) ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me the trend about salary over hire_date with a line chart , and rank in ascending by the HIRE_DATE please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me the trend about employee_id over hire_date with a line chart , and rank by the X-axis in ascending .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of salary over the hire_date bin hire_date by time .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Compare the frequency of each type of bed by a bar chart , list in ascending by the x axis .
database schema:
Table Rooms, columns = [*,RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor]
target dvq:
Visualize BAR SELECT bedType , COUNT(bedType) FROM Rooms WHERE decor = "traditional" GROUP BY bedType ORDER BY bedType ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of job_id and the sum of employee_id , and group by attribute job_id , order in asc by the y-axis please .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY SUM(EMPLOYEE_ID) ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of hire_date and the average of salary bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the sum of employee_id over the hire_date bin hire_date by time by a bar chart , I want to rank in desc by the sum employee id .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(EMPLOYEE_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , for department_id , hire_date , visualize the trend , and could you rank x axis from low to high order ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
A bar chart about how many professors have a PhD in each department ? , and I want to display by the Y from low to high .
database schema:
Table COURSE, columns = [*,CRS_CODE, DEPT_CODE, CRS_DESCRIPTION, CRS_CREDIT]
Table DEPARTMENT, columns = [*,DEPT_CODE, DEPT_NAME, SCHOOL_CODE, EMP_NUM, DEPT_ADDRESS, DEPT_EXTENSION]
Table PROFESSOR, columns = [*,EMP_NUM, DEPT_CODE, PROF_OFFICE, PROF_EXTENSION, PROF_HIGH_DEGREE]
Table STUDENT, columns = [*,STU_NUM, STU_LNAME, STU_FNAME, STU_INIT, STU_DOB, STU_HRS, STU_CLASS, STU_GPA, STU_TRANSFER, DEPT_CODE, STU_PHONE, PROF_NUM]
target dvq:
Visualize BAR SELECT DEPT_CODE , count(*) FROM professor WHERE prof_high_degree = 'Ph.D.' GROUP BY dept_code ORDER BY count(*) ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of hire_date and the average of department_id bin hire_date by weekday , list by the Y in ascending please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(DEPARTMENT_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
How many male students are there in each city ? Show a bar chart , sort by the Y in asc please .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
target dvq:
Visualize BAR SELECT city_code , count(*) FROM student WHERE sex = 'M' GROUP BY city_code ORDER BY count(*) ASC
****************************************************************************************************
nl_queries:
Find the number of employees of each gender whose salary is lower than 50000 . Visualize by bar chart .
database schema:
Table employee, columns = [*,Fname, Minit, Lname, Ssn, Bdate, Address, Sex, Salary, Super_ssn, Dno]
Table dependent, columns = [*,Essn, Dependent_name, Sex, Bdate, Relationship]
target dvq:
Visualize BAR SELECT Sex , count(*) FROM employee WHERE salary < 50000 GROUP BY sex
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a line chart about the change of manager_id over hire_date .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
A bar chart for what are the number of the names of products with price at most 200 ? , and rank by the X from low to high .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , COUNT(Name) FROM products WHERE price <= 200 GROUP BY Name ORDER BY Name ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a line chart shows the trend of salary over hire_date , and display X-axis in asc order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of hire_date and the average of salary bin hire_date by time in a bar chart , and rank by the y axis in descending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the sum of salary over the job_id , and group by attribute job_id .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a scatter chart about the correlation between salary and commission_pct .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT SALARY , COMMISSION_PCT FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
Please show the trend about the number of days with max temperature reaches 80 change over dates , display x axis from low to high order .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize LINE SELECT date , COUNT(date) FROM weather WHERE max_temperature_f >= 80 GROUP BY date ORDER BY date ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the average of employee_id bin hire_date by weekday in a bar chart , and sort total number in desc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(EMPLOYEE_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Compare the frequency of each type of bed by a bar chart .
database schema:
Table Rooms, columns = [*,RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor]
target dvq:
Visualize BAR SELECT bedType , COUNT(bedType) FROM Rooms WHERE decor = "traditional" GROUP BY bedType
****************************************************************************************************
nl_queries:
Find the number of rooms with king bed for each decor type , sort bar in desc order .
database schema:
Table Rooms, columns = [*,RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor]
target dvq:
Visualize BAR SELECT decor , count(*) FROM Rooms WHERE bedType = "King" GROUP BY decor ORDER BY decor DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of job_id and the average of manager_id , and group by attribute job_id in a bar chart , and list by the y-axis in ascending .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY AVG(MANAGER_ID) ASC
****************************************************************************************************
nl_queries:
Find the component amounts and names of all furnitures that have more than 10 components , and could you order by the bar in asc ?
database schema:
Table manufacturer, columns = [*,Manufacturer_ID, Open_Year, Name, Num_of_Factories, Num_of_Shops]
Table furniture, columns = [*,Furniture_ID, Name, Num_of_Component, Market_Rate]
target dvq:
Visualize BAR SELECT Name , Num_of_Component FROM furniture WHERE Num_of_Component > 10 ORDER BY Name ASC
****************************************************************************************************
nl_queries:
How many invoices were billed from each state Plot them as bar chart , and rank by the the total number in descending please .
database schema:
Table invoices, columns = [*,id, customer_id, invoice_date, billing_address, billing_city, billing_state, billing_country, billing_postal_code, total]
target dvq:
Visualize BAR SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = "USA" GROUP BY billing_state ORDER BY COUNT(*) DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the average of department_id over the hire_date bin hire_date by weekday , and sort Y from low to high order please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(DEPARTMENT_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , visualize a bar chart about the distribution of name and code , I want to sort in ascending by the y axis .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Code FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Code ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find job_id and the average of department_id , and group by attribute job_id , and visualize them by a bar chart , and sort in asc by the Y-axis .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY AVG(DEPARTMENT_ID) ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a scatter chart about the correlation between commission_pct and manager_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT COMMISSION_PCT , MANAGER_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the amount of hire_date bin hire_date by time , and visualize them by a bar chart , could you show in ascending by the y axis ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , what is the relationship between commission_pct and manager_id ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT COMMISSION_PCT , MANAGER_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
For those employees whose first name does not contain the letter M , display their average salary by binning the hire date into the day of week interval for visualizing a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name NOT LIKE '%M%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a bar chart shows the distribution of job_id and the sum of salary , and group by attribute job_id , show by the y-axis in descending .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY SUM(SALARY) DESC
****************************************************************************************************
nl_queries:
Return a histogram on how many invoices were billed from each state ? , and sort x axis from low to high order .
database schema:
Table invoices, columns = [*,id, customer_id, invoice_date, billing_address, billing_city, billing_state, billing_country, billing_postal_code, total]
target dvq:
Visualize BAR SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = "USA" GROUP BY billing_state ORDER BY billing_state ASC
****************************************************************************************************
nl_queries:
How many male students are there in each city ? Show a bar chart , and show from high to low by the city_code .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
target dvq:
Visualize BAR SELECT city_code , count(*) FROM student WHERE sex = 'M' GROUP BY city_code ORDER BY city_code DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of manager_id over the job_id , and group by attribute job_id .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me the trend about department_id over hire_date with a line chart , and order by the X-axis in asc please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a line chart about the change of department_id over hire_date , rank HIRE_DATE in descending order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
On what dates were employees without the letter M in their first names hired , and count them by a bar chart , and list in asc by the y axis please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name NOT LIKE '%M%'  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find job_id and the sum of employee_id , and group by attribute job_id , and visualize them by a bar chart .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , a bar chart shows the distribution of name and manufacturer .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Manufacturer FROM products WHERE price BETWEEN 60 AND 120
****************************************************************************************************
nl_queries:
Give me a histogram for what are the names and prices of products that cost at least 180 , sorted by price decreasing and name ascending ?
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Price FROM products WHERE price >= 180 ORDER BY price DESC , name ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find job_id and the sum of manager_id , and group by attribute job_id , and visualize them by a bar chart , and list by the X in desc .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find job_id and the sum of department_id , and group by attribute job_id , and visualize them by a bar chart , rank by the bars in desc please .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
What are the job titles , and range of salaries for jobs with maximum salary between 12000 and 18000 Plot them as bar chart , rank y-axis in ascending order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
target dvq:
Visualize BAR SELECT JOB_TITLE , max_salary - min_salary FROM jobs WHERE max_salary BETWEEN 12000 AND 18000 ORDER BY max_salary - min_salary ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the change of department_id over hire_date in a line chart , rank by the X-axis in asc .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , visualize a bar chart about the distribution of name and code , and display Code in desc order .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Code FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Code DESC
****************************************************************************************************
nl_queries:
For those employees whose first name does not contain the letter M , give me a line chart to show the hire date and the corresponding salaries , show in asc by the x-axis please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by weekday , order from low to high by the total number .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(MANAGER_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the sum of employee_id bin hire_date by time , and visualize them by a bar chart , and sort y axis in asc order please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(EMPLOYEE_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Count the number of captains younger than 50 of each rank by a bar chart , and order from high to low by the X .
database schema:
Table captain, columns = [*,Captain_ID, Name, Ship_ID, age, Class, Rank]
target dvq:
Visualize BAR SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank ORDER BY Rank DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by time .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of job_id and the sum of manager_id , and group by attribute job_id in a bar chart .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
Show the average age for all female students and group them by first name in a bar chart , and could you rank the average of age in asc order ?
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
target dvq:
Visualize BAR SELECT Fname , AVG(Age) FROM Student WHERE Sex = 'F' GROUP BY Fname ORDER BY AVG(Age) ASC
****************************************************************************************************
nl_queries:
when is the hire date for those employees whose first name does not containing the letter M , and count them by a bar chart , rank from high to low by the total number .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name NOT LIKE '%M%'  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by weekday , show in ascending by the y-axis .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(EMPLOYEE_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the sum of employee_id bin hire_date by time in a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the sum of employee_id over the hire_date bin hire_date by time by a bar chart , and could you display by the total number in desc ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(EMPLOYEE_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Show me a bar chart for what are the different affiliations , and what is the total enrollment of schools founded after 1850 for each enrollment type ? , could you order in descending by the x axis please ?
database schema:
Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]
target dvq:
Visualize BAR SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation ORDER BY Affiliation DESC
****************************************************************************************************
nl_queries:
Give me a bar chart showing the comparison of the pixel aspect ratio and the nation of the tv channels that do not use English , I want to display in desc by the Pixel_aspect_ratio_PAR .
database schema:
Table TV_Channel, columns = [*,id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option]
target dvq:
Visualize BAR SELECT Pixel_aspect_ratio_PAR , COUNT(Pixel_aspect_ratio_PAR) FROM tv_channel WHERE LANGUAGE != 'English' GROUP BY Pixel_aspect_ratio_PAR ORDER BY Pixel_aspect_ratio_PAR DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by time , and list in descending by the y axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(EMPLOYEE_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the amount of hire_date bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a bar chart shows the distribution of job_id and the sum of employee_id , and group by attribute job_id , rank by the x-axis in ascending .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , visualize a bar chart about the distribution of name and price , sort in ascending by the X-axis please .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Price FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Name ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the sum of employee_id bin hire_date by weekday in a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a line chart about the change of commission_pct over hire_date .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by time , order by the Y in descending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(MANAGER_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Find the number of rooms with king bed for each decor type .
database schema:
Table Rooms, columns = [*,RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor]
target dvq:
Visualize BAR SELECT decor , count(*) FROM Rooms WHERE bedType = "King" GROUP BY decor
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the sum of department_id over the job_id , and group by attribute job_id , I want to display in desc by the sum department id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY SUM(DEPARTMENT_ID) DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of salary over the hire_date bin hire_date by weekday .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Return a bar chart on what is the average age for a male in each job ? , rank from low to high by the x-axis .
database schema:
Table Person, columns = [*,name, age, city, gender, job]
target dvq:
Visualize BAR SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY job ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the average of department_id bin hire_date by weekday in a bar chart , and sort from high to low by the y-axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(DEPARTMENT_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the average of employee_id bin hire_date by weekday , and order total number in ascending order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(EMPLOYEE_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of hire_date and the sum of salary bin hire_date by time , and could you display by the y axis from low to high ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
What are the payment date of the payment with amount paid higher than 300 or with payment type is 'Check , and count them by a bar chart , and I want to rank y-axis in ascending order .
database schema:
Table Payments, columns = [*,payment_id, booking_id, customer_id, payment_type_code, amount_paid_in_full_yn, payment_date, amount_due, amount_paid]
target dvq:
Visualize BAR SELECT payment_date , COUNT(payment_date) FROM payments WHERE amount_paid > 300 OR payment_type_code = 'Check'  ORDER BY COUNT(payment_date) ASC BIN payment_date BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by weekday , and could you list y axis in asc order ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For employees with first names that end with the letter m , groups and count the first name to visualize a bar graph .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT FIRST_NAME , COUNT(FIRST_NAME) FROM employees WHERE first_name LIKE '%m' GROUP BY FIRST_NAME
****************************************************************************************************
nl_queries:
For all storms with at least 1 death , compare the total number of deaths by dates_active attribute , and list in descending by the Y-axis .
database schema:
Table storm, columns = [*,Storm_ID, Name, Dates_active, Max_speed, Damage_millions_USD, Number_Deaths]
target dvq:
Visualize BAR SELECT Dates_active , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Number_Deaths DESC
****************************************************************************************************
nl_queries:
What is the number of players who have points less than 30 for each position .
database schema:
Table player, columns = [*,Player_ID, name, Position, Club_ID, Apps, Tries, Goals, Points]
target dvq:
Visualize PIE SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION
****************************************************************************************************
nl_queries:
What are the pixel aspect ratio and country of origin for all TV channels that do not use English ? Show the comparison of the total number of pixel aspect ratio in a bar chart , order names in asc order .
database schema:
Table TV_Channel, columns = [*,id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option]
target dvq:
Visualize BAR SELECT Pixel_aspect_ratio_PAR , COUNT(Pixel_aspect_ratio_PAR) FROM tv_channel WHERE LANGUAGE != 'English' GROUP BY Pixel_aspect_ratio_PAR ORDER BY Pixel_aspect_ratio_PAR ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by weekday , sort from low to high by the Y-axis .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(MANAGER_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , give me the comparison about price over the name .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Price FROM products WHERE price BETWEEN 60 AND 120
****************************************************************************************************
nl_queries:
Scatter . what is the average salary of employees who have a commission percentage that is not null ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT DEPARTMENT_ID , AVG(salary) FROM employees WHERE commission_pct != "null" GROUP BY department_id
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find job_id and the sum of salary , and group by attribute job_id , and visualize them by a bar chart , and display by the Y-axis in desc please .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY SUM(SALARY) DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of hire_date and the average of department_id bin hire_date by weekday in a bar chart , I want to show in desc by the y-axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(DEPARTMENT_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Show the number of the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000 , and list by the date_of_transaction in desc .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000  ORDER BY date_of_transaction DESC BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a line chart about the change of employee_id over hire_date , and order by the X in ascending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
Show the number of the musical nominee with award "Bob Fosse" or "Cleavant Derricks" , I want to sort x axis from high to low order please .
database schema:
Table musical, columns = [*,Musical_ID, Name, Year, Award, Category, Nominee, Result]
target dvq:
Visualize BAR SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = "Tony Award" OR Award = "Cleavant Derricks" GROUP BY Nominee ORDER BY Nominee DESC
****************************************************************************************************
nl_queries:
Show the names and total passengers for all train stations not in London with a bar chart , rank in descending by the Name please .
database schema:
Table station, columns = [*,Station_ID, Name, Annual_entry_exit, Annual_interchanges, Total_Passengers, Location, Main_Services, Number_of_Platforms]
Table train, columns = [*,Train_ID, Name, Time, Service]
target dvq:
Visualize BAR SELECT Name , Total_Passengers FROM station WHERE LOCATION != 'London' ORDER BY Name DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of salary over the job_id , and group by attribute job_id , display in asc by the y axis .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY AVG(SALARY) ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , for salary , hire_date , visualize the trend , rank in asc by the X please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the sum of employee_id over the job_id , and group by attribute job_id , could you list bar from low to high order ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of hire_date and the sum of salary bin hire_date by weekday in a bar chart , I want to display in desc by the total number .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id , and order from high to low by the x-axis .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
Count the number of captains younger than 50 of each rank by a bar chart , show in descending by the y-axis .
database schema:
Table captain, columns = [*,Captain_ID, Name, Ship_ID, age, Class, Rank]
target dvq:
Visualize BAR SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank ORDER BY count(*) DESC
****************************************************************************************************
nl_queries:
Visualize the name and their component amounts with a bar chart for all furnitures that have more than 10 components , sort from high to low by the total number please .
database schema:
Table manufacturer, columns = [*,Manufacturer_ID, Open_Year, Name, Num_of_Factories, Num_of_Shops]
Table furniture, columns = [*,Furniture_ID, Name, Num_of_Component, Market_Rate]
target dvq:
Visualize BAR SELECT Name , Num_of_Component FROM furniture WHERE Num_of_Component > 10 ORDER BY Num_of_Component DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of department_id over the job_id , and group by attribute job_id , show x-axis in descending order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by time , could you show in ascending by the y axis ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Draw a bar chart for how many captains with younger than 50 are in each rank ? , order from high to low by the X .
database schema:
Table captain, columns = [*,Captain_ID, Name, Ship_ID, age, Class, Rank]
target dvq:
Visualize BAR SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank ORDER BY Rank DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the change of department_id over hire_date in a line chart , show by the HIRE_DATE from low to high please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday , rank in ascending by the Y .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id , order total number from high to low order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY AVG(EMPLOYEE_ID) DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the sum of department_id bin hire_date by weekday , and order y-axis in ascending order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(DEPARTMENT_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of employee_id over the hire_date bin hire_date by weekday by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of hire_date and the sum of manager_id bin hire_date by weekday in a bar chart , and sort y axis in ascending order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(MANAGER_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by weekday , and list by the total number from high to low .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(EMPLOYEE_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
what is the average age for a male in each job ? , and sort X-axis from low to high order .
database schema:
Table Person, columns = [*,name, age, city, gender, job]
target dvq:
Visualize BAR SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY job ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of hire_date and the sum of employee_id bin hire_date by weekday in a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a bar chart shows the distribution of job_id and the sum of employee_id , and group by attribute job_id , list by the Y-axis from high to low please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY SUM(EMPLOYEE_ID) DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the amount of job_id over the job_id , and group by attribute job_id , I want to rank in desc by the names .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , a bar chart shows the distribution of name and code , list Y-axis in ascending order please .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Code FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Code ASC
****************************************************************************************************
nl_queries:
Can you give me a bar chart to show the name and membership level of the visitors whose membership level is higher than 4 , and list by the Level_of_membership in desc .
database schema:
Table museum, columns = [*,Museum_ID, Name, Num_of_Staff, Open_Year]
Table visitor, columns = [*,ID, Name, Level_of_membership, Age]
target dvq:
Visualize BAR SELECT Name , Level_of_membership FROM visitor WHERE Level_of_membership > 4 ORDER BY Level_of_membership DESC
****************************************************************************************************
nl_queries:
What are the number of the dates of transactions with at least 100 share count or amount bigger than 100 ? , could you order date_of_transaction from high to low order please ?
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100  ORDER BY date_of_transaction DESC BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
How many wines with a price higher than 100 of each year ? Show a bar chart that converts year into weekday interval .
database schema:
Table wine, columns = [*,No, Grape, Winery, Appelation, State, Name, Year, Price, Score, Cases, Drink]
target dvq:
Visualize BAR SELECT Year , COUNT(Year) FROM WINE WHERE Price > 100 BIN Year BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of hire_date and the sum of salary bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me the trend about employee_id over hire_date with a line chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the sum of salary bin hire_date by weekday , and visualize them by a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose first name is ending with the letter m , compute their average salary for visualizing a bar chart , and could you order mean salary in asc order please ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT FIRST_NAME , AVG(SALARY) FROM employees WHERE first_name LIKE '%m' GROUP BY FIRST_NAME ORDER BY AVG(SALARY) ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me the trend about department_id over hire_date with a line chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by weekday .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For the transaction dates if share count is smaller than 10 , bin the dates into the year interval , and count them using a line chart .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count < 10 BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , find name and code , and visualize them by a bar chart , sort by the X from low to high .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Code FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Name ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the trend about manager_id over hire_date , display in descending by the x-axis .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the sum of department_id over the job_id , and group by attribute job_id by a bar chart , and list x axis in descending order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the average of department_id over the hire_date bin hire_date by weekday by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
What are the job titles , and range of salaries for jobs with maximum salary between 12000 and 18000 . Plot them as bar chart .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
target dvq:
Visualize BAR SELECT JOB_TITLE , max_salary - min_salary FROM jobs WHERE max_salary BETWEEN 12000 AND 18000
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the correlation between employee_id and commission_pct in a scatter chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT EMPLOYEE_ID , COMMISSION_PCT FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
Return a bar chart on how many rooms have king beds ? Report the number for each decor type , and rank from high to low by the the total number .
database schema:
Table Rooms, columns = [*,RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor]
target dvq:
Visualize BAR SELECT decor , count(*) FROM Rooms WHERE bedType = "King" GROUP BY decor ORDER BY count(*) DESC
****************************************************************************************************
nl_queries:
Give me the number of the dates when the max temperature was higher than 85 .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize LINE SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85 GROUP BY date
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a line chart about the change of salary over hire_date , and display X-axis in asc order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
What is the date of birth of every customer whose status code is 'Good Customer' , and count them by a line chart , and show from low to high by the X-axis please .
database schema:
Table Staff, columns = [*,staff_id, staff_address_id, nickname, first_name, middle_name, last_name, date_of_birth, date_joined_staff, date_left_staff]
Table Customers, columns = [*,customer_id, customer_address_id, customer_status_code, date_became_customer, date_of_birth, first_name, last_name, amount_outstanding, email_address, phone_number, cell_mobile_phone_number]
target dvq:
Visualize LINE SELECT date_of_birth , COUNT(date_of_birth) FROM Customers WHERE customer_status_code = 'Good Customer'  ORDER BY date_of_birth ASC BIN date_of_birth BY YEAR
****************************************************************************************************
nl_queries:
How many people are under 40 for each gender Plot them as bar chart , and could you show by the X in descending ?
database schema:
Table Person, columns = [*,name, age, city, gender, job]
target dvq:
Visualize BAR SELECT gender , count(*) FROM Person WHERE age < 40 GROUP BY gender ORDER BY gender DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id , list X-axis from high to low order please .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
Show the names and total passengers for all train stations not in London with a bar chart , and could you display by the x axis from low to high please ?
database schema:
Table station, columns = [*,Station_ID, Name, Annual_entry_exit, Annual_interchanges, Total_Passengers, Location, Main_Services, Number_of_Platforms]
Table train, columns = [*,Train_ID, Name, Time, Service]
target dvq:
Visualize BAR SELECT Name , Total_Passengers FROM station WHERE LOCATION != 'London' ORDER BY Name ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a line chart about the change of department_id over hire_date , list from low to high by the HIRE_DATE please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
Visualize a bar chart about the number of winery of the wines whose price is bigger than 100 , and rank by the Y-axis in asc .
database schema:
Table wine, columns = [*,No, Grape, Winery, Appelation, State, Name, Year, Price, Score, Cases, Drink]
target dvq:
Visualize BAR SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Winery ORDER BY COUNT(Winery) ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a scatter chart about the correlation between commission_pct and department_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT COMMISSION_PCT , DEPARTMENT_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of hire_date and the sum of salary bin hire_date by weekday in a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
A bar chart for finding the number of the latest logon date of the students whose family name is "Jaskolski" or "Langosh" , show in ascending by the Y .
database schema:
Table Course_Authors_and_Tutors, columns = [*,author_id, author_tutor_ATB, login_name, password, personal_name, middle_name, family_name, gender_mf, address_line_1]
Table Students, columns = [*,student_id, date_of_registration, date_of_latest_logon, login_name, password, personal_name, middle_name, family_name]
target dvq:
Visualize BAR SELECT date_of_latest_logon , COUNT(date_of_latest_logon) FROM Students WHERE family_name = "Jaskolski" OR family_name = "Langosh"  ORDER BY COUNT(date_of_latest_logon) ASC BIN date_of_latest_logon BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the sum of department_id over the job_id , and group by attribute job_id .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a line chart about the change of salary over hire_date , display HIRE_DATE from high to low order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of job_id and the sum of salary , and group by attribute job_id , display X from low to high order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of manager_id over the hire_date bin hire_date by time by a bar chart , could you sort total number from high to low order please ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(MANAGER_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id , could you order from low to high by the total number ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY AVG(EMPLOYEE_ID) ASC
****************************************************************************************************
nl_queries:
What are the dates with a maximum temperature higher than 85 , and count them by a bar chart
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85 BIN date BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the amount of hire_date over the hire_date bin hire_date by time by a bar chart , and list Y in asc order please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of job_id and the amount of job_id , and group by attribute job_id in a bar chart .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
What are the dates with a maximum temperature higher than 85 , and count them by a line chart
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize LINE SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85 GROUP BY date
****************************************************************************************************
nl_queries:
What are the dates that have an average sea level pressure between 303 and 31 , and count them by a line chart , rank in ascending by the x axis .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize LINE SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31 GROUP BY date ORDER BY date ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the correlation between salary and manager_id in a scatter chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT SALARY , MANAGER_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday , and I want to show from low to high by the Y .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(DEPARTMENT_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
What are the dates that have an average sea level pressure between 30 . 3 and 31 , and count them by a bar chart
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31 BIN date BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the change of salary over hire_date in a line chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a scatter chart about the correlation between employee_id and department_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT EMPLOYEE_ID , DEPARTMENT_ID FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
What are the dates that have an average sea level pressure between 303 and 31 , and count them by a bar chart , and I want to display by the the number of date from low to high .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) ASC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id , list from low to high by the names .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the sum of salary bin hire_date by time , show from low to high by the total number .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
What is the date of birth of every customer whose status code is 'Good Customer' , and count them by a bar chart , I want to rank by the total number from low to high .
database schema:
Table Staff, columns = [*,staff_id, staff_address_id, nickname, first_name, middle_name, last_name, date_of_birth, date_joined_staff, date_left_staff]
Table Customers, columns = [*,customer_id, customer_address_id, customer_status_code, date_became_customer, date_of_birth, first_name, last_name, amount_outstanding, email_address, phone_number, cell_mobile_phone_number]
target dvq:
Visualize BAR SELECT date_of_birth , COUNT(date_of_birth) FROM Customers WHERE customer_status_code = 'Good Customer'  ORDER BY COUNT(date_of_birth) ASC BIN date_of_birth BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the average of employee_id bin hire_date by time , and visualize them by a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the sum of employee_id over the hire_date bin hire_date by time by a bar chart , could you list by the y axis from low to high ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(EMPLOYEE_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the correlation between commission_pct and manager_id in a scatter chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT COMMISSION_PCT , MANAGER_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the average of manager_id over the job_id , and group by attribute job_id by a bar chart , and show by the total number in descending .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY AVG(MANAGER_ID) DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a scatter chart shows the correlation between salary and department_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT SALARY , DEPARTMENT_ID FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me the trend about employee_id over hire_date with a line chart , and list in desc by the x axis please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
What is the weight of each dog that was abandoned ? Show in a bar chart , could you list y-axis in ascending order ?
database schema:
Table Dogs, columns = [*,dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed]
target dvq:
Visualize BAR SELECT name , weight FROM Dogs WHERE abandoned_yn = 1 ORDER BY weight ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the sum of department_id over the hire_date bin hire_date by time .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a scatter chart about the correlation between salary and manager_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT SALARY , MANAGER_ID FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a line chart about the change of salary over hire_date , and list by the X-axis in descending .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of manager_id over the hire_date bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
A bar chart shows the number of appellations whose score is higher than 93 , and ordered by Name .
database schema:
Table appellations, columns = [*,No, Appelation, County, State, Area, isAVA]
Table wine, columns = [*,No, Grape, Winery, Appelation, State, Name, Year, Price, Score, Cases, Drink]
target dvq:
Visualize BAR SELECT Appelation , COUNT(Appelation) FROM WINE WHERE Score > 93 GROUP BY Appelation ORDER BY Name
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the sum of manager_id bin hire_date by weekday , and visualize them by a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the sum of employee_id bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find job_id and the average of department_id , and group by attribute job_id , and visualize them by a bar chart , could you rank in ascending by the names ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of job_id and the average of manager_id , and group by attribute job_id in a bar chart , rank JOB_ID in desc order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
A bar chart for what are the number of the dates that have an average sea level pressure between 30 . 3 and 31 ?
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31 BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the average of salary bin hire_date by weekday , and visualize them by a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a line chart shows the trend of manager_id over hire_date .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , for manager_id , hire_date , visualize the trend .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of hire_date and the amount of hire_date bin hire_date by weekday in a bar chart , order by the Y from low to high .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , draw a bar chart about the distribution of name and manufacturer , display by the X from low to high .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Manufacturer FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Name ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by time , and order by the mean manager id in desc .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(MANAGER_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For employees with first names that end with the letter m , give me a bar chart to show their average salary , display from high to low by the bar .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT FIRST_NAME , AVG(SALARY) FROM employees WHERE first_name LIKE '%m' GROUP BY FIRST_NAME ORDER BY FIRST_NAME DESC
****************************************************************************************************
nl_queries:
Count the number of people of each sex who have a weight higher than 85 , order y axis from low to high order .
database schema:
Table people, columns = [*,People_ID, Sex, Name, Date_of_Birth, Height, Weight]
target dvq:
Visualize BAR SELECT Sex , count(*) FROM people WHERE weight > 85 GROUP BY sex ORDER BY count(*) ASC
****************************************************************************************************
nl_queries:
What is the average age for a male in each job Visualize by bar chart , and rank by the y-axis in desc .
database schema:
Table Person, columns = [*,name, age, city, gender, job]
target dvq:
Visualize BAR SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY avg(age) DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For each grade 0 classroom , return the classroom number and the count of students . Show the correlation .
database schema:
Table list, columns = [*,LastName, FirstName, Grade, Classroom]
Table teachers, columns = [*,LastName, FirstName, Classroom]
target dvq:
Visualize SCATTER SELECT Classroom , count(*) FROM list WHERE grade = "0" GROUP BY classroom
****************************************************************************************************
nl_queries:
On which day has it neither been foggy nor rained in the zip code of 94107 , and count them by a bar chart , sort by the y axis in desc .
database schema:
Table trip, columns = [*,id, duration, start_date, start_station_name, start_station_id, end_date, end_station_name, end_station_id, bike_id, subscription_type, zip_code]
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE zip_code = 94107 AND EVENTS != "Fog" AND EVENTS != "Rain"  ORDER BY COUNT(date) DESC BIN date BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a line chart about the change of salary over hire_date , sort x axis in asc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , return a bar chart about the distribution of name and code .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Code FROM products WHERE price BETWEEN 60 AND 120
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a line chart shows the trend of manager_id over hire_date , sort HIRE_DATE in descending order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the sum of manager_id over the hire_date bin hire_date by time , and could you list by the total number in asc ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(MANAGER_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a line chart shows the trend of employee_id over hire_date .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
Bar chart , X is bed type and the Y-axis is their appearance frequency , I want to list by the y-axis in desc .
database schema:
Table Rooms, columns = [*,RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor]
target dvq:
Visualize BAR SELECT bedType , COUNT(bedType) FROM Rooms WHERE decor = "traditional" GROUP BY bedType ORDER BY COUNT(bedType) DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of job_id and the average of department_id , and group by attribute job_id , and order names from low to high order please .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the sum of department_id over the job_id , and group by attribute job_id by a bar chart , and list by the y axis in asc .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY SUM(DEPARTMENT_ID) ASC
****************************************************************************************************
nl_queries:
How many wines with a price higher than 100 of each year ? Show a bar chart that converts year into weekday interval , and I want to rank from high to low by the total number .
database schema:
Table wine, columns = [*,No, Grape, Winery, Appelation, State, Name, Year, Price, Score, Cases, Drink]
target dvq:
Visualize BAR SELECT Year , COUNT(Year) FROM WINE WHERE Price > 100  ORDER BY COUNT(Year) DESC BIN Year BY WEEKDAY
****************************************************************************************************
nl_queries:
Return a histogram on what is average age of male for different job title ? , sort bars in descending order .
database schema:
Table Person, columns = [*,name, age, city, gender, job]
target dvq:
Visualize BAR SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY job DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the average of manager_id bin hire_date by weekday in a bar chart , and could you show Y in descending order ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(MANAGER_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of department_id over the job_id , and group by attribute job_id by a bar chart , sort by the x-axis in ascending .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
When are the birthdays of customer who are classified as 'Good Customer' status , and count them by a line chart , and list from high to low by the X-axis please .
database schema:
Table Staff, columns = [*,staff_id, staff_address_id, nickname, first_name, middle_name, last_name, date_of_birth, date_joined_staff, date_left_staff]
Table Customers, columns = [*,customer_id, customer_address_id, customer_status_code, date_became_customer, date_of_birth, first_name, last_name, amount_outstanding, email_address, phone_number, cell_mobile_phone_number]
target dvq:
Visualize LINE SELECT date_of_birth , COUNT(date_of_birth) FROM Customers WHERE customer_status_code = 'Good Customer'  ORDER BY date_of_birth DESC BIN date_of_birth BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id , show in descending by the Y .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY AVG(SALARY) DESC
****************************************************************************************************
nl_queries:
Show the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000 , and count them by a bar chart , and sort y-axis in descending order .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000  ORDER BY COUNT(date_of_transaction) DESC BIN date_of_transaction BY WEEKDAY
****************************************************************************************************
nl_queries:
How many mills of 'Grondzeiler' type are built in each year ? Give me the trend , order in descending by the X .
database schema:
Table mill, columns = [*,architect_id, id, location, name, type, built_year, notes]
target dvq:
Visualize LINE SELECT built_year , COUNT(built_year) FROM mill WHERE TYPE = 'Grondzeiler'  ORDER BY built_year DESC BIN built_year BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find job_id and the average of manager_id , and group by attribute job_id , and visualize them by a bar chart , order mean manager id from low to high order please .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY AVG(MANAGER_ID) ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of job_id and the sum of salary , and group by attribute job_id in a bar chart , sort by the y-axis in desc .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY SUM(SALARY) DESC
****************************************************************************************************
nl_queries:
Visualize a pie chart about the proportion of the number of grape of the wines whose price is bigger than 100 ordered by year .
database schema:
Table grapes, columns = [*,ID, Grape, Color]
Table wine, columns = [*,No, Grape, Winery, Appelation, State, Name, Year, Price, Score, Cases, Drink]
target dvq:
Visualize PIE SELECT Grape , COUNT(Grape) FROM WINE WHERE Price > 100 GROUP BY Grape
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find job_id and the sum of employee_id , and group by attribute job_id , and visualize them by a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find job_id and the sum of department_id , and group by attribute job_id , and visualize them by a bar chart , display JOB_ID in ascending order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a line chart shows the change of manager_id over hire_date , display X-axis in descending order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the average of employee_id over the hire_date bin hire_date by weekday , I want to rank by the total number in desc .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(EMPLOYEE_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Return a histogram on what are the names and seatings for all tracks opened after 2000 , ordered by seating ?
database schema:
Table race, columns = [*,Race_ID, Name, Class, Date, Track_ID]
Table track, columns = [*,Track_ID, Name, Location, Seating, Year_Opened]
target dvq:
Visualize BAR SELECT Name , Seating FROM track WHERE year_opened > 2000 ORDER BY seating
****************************************************************************************************
nl_queries:
A bar chart about the number of last name for all female students whose sex is F , and sort in asc by the LName .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
target dvq:
Visualize BAR SELECT LName , COUNT(LName) FROM Student WHERE Sex = 'F' GROUP BY LName ORDER BY LName ASC
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , a scatter chart shows the correlation between price and manufacturer , and group by attribute name .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize SCATTER SELECT Price , Manufacturer FROM products WHERE price BETWEEN 60 AND 120 GROUP BY Name
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of job_id and the sum of department_id , and group by attribute job_id , and display y-axis from low to high order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY SUM(DEPARTMENT_ID) ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , for department_id , hire_date , visualize the trend .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , visualize a scatter chart about the correlation between code and manufacturer .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize SCATTER SELECT Code , Manufacturer FROM products WHERE price BETWEEN 60 AND 120
****************************************************************************************************
nl_queries:
Bin the hire date into the day of week interval , and then calculate the average salary of employees in each day for a bar chart , note that just select those employees without the letter M in their first name , display the average of salary from high to low order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name NOT LIKE '%M%'  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id , and sort in asc by the X please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
Give the proportion of how many people are under 40 for each gender ?
database schema:
Table Person, columns = [*,name, age, city, gender, job]
target dvq:
Visualize PIE SELECT gender , count(*) FROM Person WHERE age < 40 GROUP BY gender
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a bar chart shows the distribution of job_id and the average of manager_id , and group by attribute job_id , and could you display by the Y-axis in descending ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY AVG(MANAGER_ID) DESC
****************************************************************************************************
nl_queries:
Return the categories of music festivals that have the result "Awarded" , and count them by a bar chart , sort by the X in desc please .
database schema:
Table music_festival, columns = [*,ID, Music_Festival, Date_of_ceremony, Category, Volume, Result]
target dvq:
Visualize BAR SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = "Awarded" GROUP BY Category ORDER BY Category DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the average of salary over the hire_date bin hire_date by time by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the sum of department_id over the hire_date bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of hire_date and the average of salary bin hire_date by time , and I want to list in ascending by the Y-axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
A bar chart for what are the number of the dates that have an average sea level pressure between 303 and 31 ? , could you sort in desc by the y axis ?
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) DESC BIN date BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find job_id and the sum of manager_id , and group by attribute job_id , and visualize them by a bar chart , and display by the X-axis in ascending .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me the trend about employee_id over hire_date with a line chart , sort HIRE_DATE in asc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
A bar chart that computes the total number of wines with a price is bigger than 100 Next , Bin the year into the weekday interval , and I want to rank by the y axis in desc please .
database schema:
Table wine, columns = [*,No, Grape, Winery, Appelation, State, Name, Year, Price, Score, Cases, Drink]
target dvq:
Visualize BAR SELECT Year , COUNT(Year) FROM WINE WHERE Price > 100  ORDER BY COUNT(Year) DESC BIN Year BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id , list X-axis in descending order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , give me the comparison about price over the name , and sort Price in descending order .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Price FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Price DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find job_id and the average of employee_id , and group by attribute job_id , and visualize them by a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
A bar chart for returning the number of the categories of music festivals that have the result "Awarded" , could you show in ascending by the Y ?
database schema:
Table music_festival, columns = [*,ID, Music_Festival, Date_of_ceremony, Category, Volume, Result]
target dvq:
Visualize BAR SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = "Awarded" GROUP BY Category ORDER BY COUNT(Category) ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the sum of employee_id bin hire_date by weekday , and visualize them by a bar chart , and I want to display in asc by the y axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(EMPLOYEE_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
A bar chart showing the number of last name for all female students . Their sex is F .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
target dvq:
Visualize BAR SELECT LName , COUNT(LName) FROM Student WHERE Sex = 'F' GROUP BY LName
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of job_id and the average of manager_id , and group by attribute job_id , and show by the Y-axis from high to low .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY AVG(MANAGER_ID) DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of manager_id over the job_id , and group by attribute job_id , and could you list by the X-axis in asc ?
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
Find the number of the latest logon date of the students whose family name is "Jaskolski" or "Langosh" , and sort in descending by the Y please .
database schema:
Table Course_Authors_and_Tutors, columns = [*,author_id, author_tutor_ATB, login_name, password, personal_name, middle_name, family_name, gender_mf, address_line_1]
Table Students, columns = [*,student_id, date_of_registration, date_of_latest_logon, login_name, password, personal_name, middle_name, family_name]
target dvq:
Visualize BAR SELECT date_of_latest_logon , COUNT(date_of_latest_logon) FROM Students WHERE family_name = "Jaskolski" OR family_name = "Langosh"  ORDER BY COUNT(date_of_latest_logon) DESC BIN date_of_latest_logon BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find job_id and the average of employee_id , and group by attribute job_id , and visualize them by a bar chart , and I want to sort y-axis in descending order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY AVG(EMPLOYEE_ID) DESC
****************************************************************************************************
nl_queries:
How many male and female assistant professors do we have , order by the total number in descending .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
Table Faculty, columns = [*,FacID, Lname, Fname, Rank, Sex, Phone, Room, Building]
target dvq:
Visualize BAR SELECT Sex , count(*) FROM Faculty WHERE rank = "AsstProf" GROUP BY sex ORDER BY count(*) DESC
****************************************************************************************************
nl_queries:
On what dates were employees without the letter M in their first names hired , and count them by a bar chart
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name NOT LIKE '%M%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a line chart about the change of department_id over hire_date , order by the HIRE_DATE in ascending .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize the relationship between employee_id and manager_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT EMPLOYEE_ID , MANAGER_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
Draw a bar chart for what is average age of male for different job title ?
database schema:
Table Person, columns = [*,name, age, city, gender, job]
target dvq:
Visualize BAR SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , draw a bar chart about the distribution of name and manufacturer , show in descending by the X please .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Manufacturer FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Name DESC
****************************************************************************************************
nl_queries:
In zip code 94107 , on which day neither Fog nor Rain was not observed , and count them by a bar chart
database schema:
Table trip, columns = [*,id, duration, start_date, start_station_name, start_station_id, end_date, end_station_name, end_station_id, bike_id, subscription_type, zip_code]
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE zip_code = 94107 AND EVENTS != "Fog" AND EVENTS != "Rain" BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
A line chart for returning the number of the date of birth for all the guests with gender code "Male" , sort by the X in descending .
database schema:
Table Guests, columns = [*,guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth]
target dvq:
Visualize LINE SELECT date_of_birth , COUNT(date_of_birth) FROM Guests WHERE gender_code = "Male"  ORDER BY date_of_birth DESC BIN date_of_birth BY YEAR
****************************************************************************************************
nl_queries:
On what dates were employees without the letter M in their first names hired , and count them by a bar chart , I want to list total number in descending order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name NOT LIKE '%M%'  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
What are the number of the names of products with price at most 200 ? , and could you list in ascending by the Y ?
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , COUNT(Name) FROM products WHERE price <= 200 GROUP BY Name ORDER BY COUNT(Name) ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the average of manager_id over the hire_date bin hire_date by weekday by a bar chart , and show by the y axis in ascending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(MANAGER_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , for salary , hire_date , visualize the trend .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of job_id and the average of department_id , and group by attribute job_id .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For all storms with at least 1 death , show me the name and the total number of deaths with a bar chart , show Y-axis from high to low order .
database schema:
Table storm, columns = [*,Storm_ID, Name, Dates_active, Max_speed, Damage_millions_USD, Number_Deaths]
target dvq:
Visualize BAR SELECT Name , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Number_Deaths DESC
****************************************************************************************************
nl_queries:
How many people are under 40 for each gender Plot them as bar chart , list in ascending by the y-axis .
database schema:
Table Person, columns = [*,name, age, city, gender, job]
target dvq:
Visualize BAR SELECT gender , count(*) FROM Person WHERE age < 40 GROUP BY gender ORDER BY count(*) ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the amount of job_id over the job_id , and group by attribute job_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the sum of salary bin hire_date by time , and visualize them by a bar chart , and order by the y-axis from low to high please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of manager_id over the job_id , and group by attribute job_id by a bar chart .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize the relationship between salary and department_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT SALARY , DEPARTMENT_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
Visualize the name and their component amounts with a bar chart for all furnitures that have more than 10 components .
database schema:
Table manufacturer, columns = [*,Manufacturer_ID, Open_Year, Name, Num_of_Factories, Num_of_Shops]
Table furniture, columns = [*,Furniture_ID, Name, Num_of_Component, Market_Rate]
target dvq:
Visualize BAR SELECT Name , Num_of_Component FROM furniture WHERE Num_of_Component > 10
****************************************************************************************************
nl_queries:
A line chart for finding the number of the dates of the tests taken with result "Pass" , display x-axis from high to low order .
database schema:
Table Student_Tests_Taken, columns = [*,registration_id, date_test_taken, test_result]
target dvq:
Visualize LINE SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = "Pass"  ORDER BY date_test_taken DESC BIN date_test_taken BY DAY
****************************************************************************************************
nl_queries:
Give me the dates when the max temperature was higher than 85 , and count them by a bar chart , and display in descending by the y-axis .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) DESC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
Which directors had a movie in either 1999 or 2000 , and count them by a bar chart , and show in asc by the Director .
database schema:
Table book_club, columns = [*,book_club_id, Year, Author_or_Editor, Book_Title, Publisher, Category, Result]
Table movie, columns = [*,movie_id, Title, Year, Director, Budget_million, Gross_worldwide]
target dvq:
Visualize BAR SELECT Director , COUNT(Director) FROM movie WHERE YEAR = 1999 OR YEAR = 2000 GROUP BY Director ORDER BY Director ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of job_id and the sum of salary , and group by attribute job_id in a bar chart , show in desc by the x-axis .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of job_id and the sum of employee_id , and group by attribute job_id , show in desc by the Y .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY SUM(EMPLOYEE_ID) DESC
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , show me about the correlation between code and price , and group by attribute name in a scatter chart .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize SCATTER SELECT Code , Price FROM products WHERE price BETWEEN 60 AND 120 GROUP BY Name
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of job_id and the sum of department_id , and group by attribute job_id , could you rank bars in descending order ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of hire_date and the average of salary bin hire_date by time .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
What are the number of the dates that have an average sea level pressure between 303 and 31 ? , and sort the number of date in descending order .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) DESC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
List the name of technicians whose team is not "NYY" , and count them by a bar chart , could you list Y from high to low order ?
database schema:
Table repair, columns = [*,repair_ID, name, Launch_Date, Notes]
Table machine, columns = [*,Machine_ID, Making_Year, Class, Team, Machine_series, value_points, quality_rank]
Table technician, columns = [*,technician_id, Name, Team, Starting_Year, Age]
target dvq:
Visualize BAR SELECT Name , COUNT(Name) FROM technician WHERE Team != "NYY" GROUP BY Name ORDER BY COUNT(Name) DESC
****************************************************************************************************
nl_queries:
For each fourth-grade classroom , show the classroom number and the total number of students using it . Show the correlation .
database schema:
Table list, columns = [*,LastName, FirstName, Grade, Classroom]
Table teachers, columns = [*,LastName, FirstName, Classroom]
target dvq:
Visualize SCATTER SELECT Classroom , count(*) FROM list WHERE grade = "4" GROUP BY classroom
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the sum of department_id over the hire_date bin hire_date by weekday by a bar chart , list by the y axis in desc .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(DEPARTMENT_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Show me a scatter chart for what are the salaries and manager ids for employees who have managers ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT SALARY , MANAGER_ID FROM employees WHERE manager_id != "null"
****************************************************************************************************
nl_queries:
Give me the dates when the max temperature was higher than 85 , and count them by a line chart
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize LINE SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85 GROUP BY date
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , draw a scatter chart about the correlation between code and manufacturer .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize SCATTER SELECT Code , Manufacturer FROM products WHERE price BETWEEN 60 AND 120
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the sum of salary over the job_id , and group by attribute job_id , and list by the names from high to low please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the sum of employee_id bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a scatter chart about the correlation between employee_id and salary .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT EMPLOYEE_ID , SALARY FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
For each zip code , return how many times max wind speed reached 25 .
database schema:
Table trip, columns = [*,id, duration, start_date, start_station_name, start_station_id, end_date, end_station_name, end_station_id, bike_id, subscription_type, zip_code]
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize SCATTER SELECT zip_code , count(*) FROM weather WHERE max_wind_Speed_mph >= 25 GROUP BY zip_code
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by time .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
What are the correlation between the height and prominence of mountains which do not belong to the range 'Aberdare Range' ? Plot the result by a scatter chart .
database schema:
Table mountain, columns = [*,id, name, Height, Prominence, Range, Country]
target dvq:
Visualize SCATTER SELECT Height , Prominence FROM mountain WHERE range != 'Aberdare Range'
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of job_id and the sum of employee_id , and group by attribute job_id in a bar chart , and I want to sort by the y-axis in desc .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY SUM(EMPLOYEE_ID) DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the sum of department_id over the hire_date bin hire_date by time , sort by the total number from low to high .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(DEPARTMENT_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a bar chart shows the distribution of hire_date and the average of manager_id bin hire_date by time , list total number from high to low order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(MANAGER_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find hire_date and the sum of manager_id bin hire_date by weekday , and visualize them by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by weekday , display by the the average of manager id in ascending please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(MANAGER_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Which tests have "Pass" results ? Return the dates when the tests were taken , and count them by a bar chart , order by the Y in asc .
database schema:
Table Student_Tests_Taken, columns = [*,registration_id, date_test_taken, test_result]
target dvq:
Visualize BAR SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = "Pass" GROUP BY date_test_taken ORDER BY COUNT(date_test_taken) ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by weekday .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , a bar chart shows the distribution of name and manufacturer , display by the X from low to high .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Manufacturer FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Name ASC
****************************************************************************************************
nl_queries:
Show names and seatings for all tracks opened after 2000 by a pie chart .
database schema:
Table race, columns = [*,Race_ID, Name, Class, Date, Track_ID]
Table track, columns = [*,Track_ID, Name, Location, Seating, Year_Opened]
target dvq:
Visualize PIE SELECT Name , Seating FROM track WHERE year_opened > 2000
****************************************************************************************************
nl_queries:
What are the number of the dates of transactions with at least 100 share count or amount bigger than 100 ?
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100 BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
Show the names and total passengers for all train stations not in London with a bar chart , rank by the total number in asc .
database schema:
Table station, columns = [*,Station_ID, Name, Annual_entry_exit, Annual_interchanges, Total_Passengers, Location, Main_Services, Number_of_Platforms]
Table train, columns = [*,Train_ID, Name, Time, Service]
target dvq:
Visualize BAR SELECT Name , Total_Passengers FROM station WHERE LOCATION != 'London' ORDER BY Total_Passengers ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of department_id over the hire_date bin hire_date by time by a bar chart , sort from low to high by the Y-axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(DEPARTMENT_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by time , and list y axis in desc order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(EMPLOYEE_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me the trend about manager_id over hire_date with a line chart , show by the x-axis in descending .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a line chart about the change of commission_pct over hire_date .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the sum of manager_id bin hire_date by weekday in a bar chart , and sort from low to high by the Y-axis .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(MANAGER_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all storms with at least 1 death , show me the name and the total number of deaths with a bar chart , sort in asc by the y axis please .
database schema:
Table storm, columns = [*,Storm_ID, Name, Dates_active, Max_speed, Damage_millions_USD, Number_Deaths]
target dvq:
Visualize BAR SELECT Name , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Number_Deaths ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a scatter chart about the correlation between salary and manager_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT SALARY , MANAGER_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
Find the number of rooms with price higher than 120 for different decor Show bar chart , and could you list Y-axis from low to high order ?
database schema:
Table Rooms, columns = [*,RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor]
target dvq:
Visualize BAR SELECT decor , count(*) FROM Rooms WHERE basePrice > 120 GROUP BY decor ORDER BY count(*) ASC
****************************************************************************************************
nl_queries:
A bar chart showing the number of flights with price higher than 300 for each destination city .
database schema:
Table flight, columns = [*,flno, origin, destination, distance, departure_date, arrival_date, price, aid]
target dvq:
Visualize BAR SELECT destination , COUNT(destination) FROM Flight WHERE price > 300 GROUP BY destination
****************************************************************************************************
nl_queries:
Pie . how many rooms cost more than 120 , for each different decor ?
database schema:
Table Rooms, columns = [*,RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor]
target dvq:
Visualize PIE SELECT decor , count(*) FROM Rooms WHERE basePrice > 120 GROUP BY decor
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , a bar chart shows the distribution of name and manufacturer , and display x axis in descending order .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Manufacturer FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Name DESC
****************************************************************************************************
nl_queries:
What is the pixel aspect ratio and country of origin for all TV channels that do not use English ? Show the proportion of the pixel aspect ratio with a pie chart .
database schema:
Table TV_Channel, columns = [*,id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option]
target dvq:
Visualize PIE SELECT Pixel_aspect_ratio_PAR , COUNT(Pixel_aspect_ratio_PAR) FROM tv_channel WHERE LANGUAGE != 'English' GROUP BY Pixel_aspect_ratio_PAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of job_id and the average of manager_id , and group by attribute job_id in a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a bar chart shows the distribution of job_id and the average of manager_id , and group by attribute job_id , and rank in asc by the X-axis please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me the trend about salary over hire_date with a line chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
Find the dates of the tests taken with result "Pass" , and count them by a bar chart
database schema:
Table Student_Tests_Taken, columns = [*,registration_id, date_test_taken, test_result]
target dvq:
Visualize BAR SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = "Pass" BIN date_test_taken BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of hire_date and the average of salary bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find job_id and the average of salary , and group by attribute job_id , and visualize them by a bar chart , and could you list by the x-axis from low to high please ?
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of hire_date and the average of salary bin hire_date by weekday in a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of job_id and the average of manager_id , and group by attribute job_id in a bar chart , list from low to high by the X please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of employee_id over the job_id , and group by attribute job_id by a bar chart , show Y-axis in descending order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY AVG(EMPLOYEE_ID) DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a bar chart shows the distribution of hire_date and the amount of hire_date bin hire_date by weekday , rank by the y axis in ascending please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Return a bar chart on what are the names and prices of products that cost at least 180 , sorted by price decreasing and name ascending ?
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Price FROM products WHERE price >= 180 ORDER BY price DESC , name ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of job_id and the average of employee_id , and group by attribute job_id in a bar chart , list by the y axis in desc .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY AVG(EMPLOYEE_ID) DESC
****************************************************************************************************
nl_queries:
Line chart , let hire data as X and salary as Y , and filter for employees without the letter M in their first name , display by the x axis in ascending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a scatter chart about the correlation between salary and department_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT SALARY , DEPARTMENT_ID FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
Can you give me a bar chart to show the name and membership level of the visitors whose membership level is higher than 4 , could you order by the Name from low to high ?
database schema:
Table museum, columns = [*,Museum_ID, Name, Num_of_Staff, Open_Year]
Table visitor, columns = [*,ID, Name, Level_of_membership, Age]
target dvq:
Visualize BAR SELECT Name , Level_of_membership FROM visitor WHERE Level_of_membership > 4 ORDER BY Name ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a line chart about the change of manager_id over hire_date , could you list in ascending by the HIRE_DATE ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
List the grape and winery of the wines whose price is bigger than 100 , the x-axis is winery and group the grape , and y-axis is the number of wineries , and display by the total number from low to high .
database schema:
Table grapes, columns = [*,ID, Grape, Color]
Table wine, columns = [*,No, Grape, Winery, Appelation, State, Name, Year, Price, Score, Cases, Drink]
target dvq:
Visualize BAR SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Grape ,  Winery ORDER BY COUNT(Winery) ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a line chart about the change of department_id over hire_date .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
For those employees whose first name is ending with the letter m , compute their average salary for visualizing a bar chart , and I want to list in descending by the y-axis please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT FIRST_NAME , AVG(SALARY) FROM employees WHERE first_name LIKE '%m' GROUP BY FIRST_NAME ORDER BY AVG(SALARY) DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by weekday , and show by the y axis in ascending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(MANAGER_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the amount of job_id over the job_id , and group by attribute job_id by a bar chart , I want to order in desc by the Y please .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY COUNT(JOB_ID) DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , for salary , hire_date , visualize the trend .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
Show all director names who have a movie in the year 1999 or 2000 , and count them by a bar chart , order by the Y-axis in desc .
database schema:
Table book_club, columns = [*,book_club_id, Year, Author_or_Editor, Book_Title, Publisher, Category, Result]
Table movie, columns = [*,movie_id, Title, Year, Director, Budget_million, Gross_worldwide]
target dvq:
Visualize BAR SELECT Director , COUNT(Director) FROM movie WHERE YEAR = 1999 OR YEAR = 2000 GROUP BY Director ORDER BY COUNT(Director) DESC
****************************************************************************************************
nl_queries:
For employees without the letter M in their first name , give me a line chart to show the salary change over their hire date using a line chart , and show X-axis from high to low order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of hire_date and the sum of salary bin hire_date by time , sort total number of salary from high to low order please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of hire_date and the sum of salary bin hire_date by time , could you list by the total number in asc ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Give me the number of the dates when the max temperature was higher than 85 , sort the number of date in descending order .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) DESC BIN date BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the sum of department_id over the hire_date bin hire_date by time by a bar chart , and order in desc by the y axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(DEPARTMENT_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
A bar chart for what are the number of the dates with a maximum temperature higher than 85 ?
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85 BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize the relationship between salary and commission_pct .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT SALARY , COMMISSION_PCT FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
Take the first name of all the good customers as the X-axis and gender of all the good customers as Y-axis in a bar chart , list by the Y in asc .
database schema:
Table Customers, columns = [*,customer_id, coupon_id, good_or_bad_customer, first_name, last_name, gender_mf, date_became_customer, date_last_hire]
target dvq:
Visualize BAR SELECT first_name , gender_mf FROM customers WHERE good_or_bad_customer = 'good' ORDER BY gender_mf ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of job_id and the sum of department_id , and group by attribute job_id in a bar chart .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
Draw a bar chart for how many people are under 40 for each gender ?
database schema:
Table Person, columns = [*,name, age, city, gender, job]
target dvq:
Visualize BAR SELECT gender , count(*) FROM Person WHERE age < 40 GROUP BY gender
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , show me about the correlation between code and manufacturer in a scatter chart .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize SCATTER SELECT Code , Manufacturer FROM products WHERE price BETWEEN 60 AND 120
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of job_id and the amount of job_id , and group by attribute job_id , I want to show y-axis in descending order please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY COUNT(JOB_ID) DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a bar chart shows the distribution of job_id and the sum of salary , and group by attribute job_id , list Y-axis from low to high order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY SUM(SALARY) ASC
****************************************************************************************************
nl_queries:
Visualize a bar chart about the number of winery of the wines whose price is bigger than 100 , and order from high to low by the Y-axis .
database schema:
Table wine, columns = [*,No, Grape, Winery, Appelation, State, Name, Year, Price, Score, Cases, Drink]
target dvq:
Visualize BAR SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Winery ORDER BY COUNT(Winery) DESC
****************************************************************************************************
nl_queries:
Show me the proportion on how many rooms have king beds ? Report the number for each decor type .
database schema:
Table Rooms, columns = [*,RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor]
target dvq:
Visualize PIE SELECT decor , count(*) FROM Rooms WHERE bedType = "King" GROUP BY decor
****************************************************************************************************
nl_queries:
Return a pie chart on what are the job titles , and range of salaries for jobs with maximum salary between 12000 and 18000 ?
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
target dvq:
Visualize PIE SELECT JOB_TITLE , max_salary - min_salary FROM jobs WHERE max_salary BETWEEN 12000 AND 18000
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the trend about employee_id over hire_date .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
How old is each dog that was abandoned ? Show in a bar chart , rank names in ascending order .
database schema:
Table Dogs, columns = [*,dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed]
target dvq:
Visualize BAR SELECT name , age FROM Dogs WHERE abandoned_yn = 1 ORDER BY name ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by time , and order by the Y in asc .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(MANAGER_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the amount of job_id over the job_id , and group by attribute job_id by a bar chart , sort by the X in desc .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id , could you rank by the x-axis in ascending ?
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the sum of department_id over the job_id , and group by attribute job_id , and show in descending by the X-axis .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the average of department_id bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the sum of manager_id bin hire_date by time , and visualize them by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by weekday , I want to rank by the mean employee id in asc .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(EMPLOYEE_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of job_id and the sum of salary , and group by attribute job_id , could you show by the x-axis in asc ?
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of job_id and the sum of department_id , and group by attribute job_id , and could you sort sum department id in descending order ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY SUM(DEPARTMENT_ID) DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the amount of hire_date over the hire_date bin hire_date by weekday by a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Show the relationship between the rank and market values of the companies in the banking industry and group by company with a group scatter chart .
database schema:
Table company, columns = [*,Company_ID, Rank, Company, Headquarters, Main_Industry, Sales_billion, Profits_billion, Assets_billion, Market_Value]
target dvq:
Visualize SCATTER SELECT Rank , Market_Value FROM company WHERE main_industry = 'Banking' GROUP BY Company
****************************************************************************************************
nl_queries:
Visualize the name and their component amounts with a bar chart for all furnitures that have more than 10 components , show Y in asc order .
database schema:
Table manufacturer, columns = [*,Manufacturer_ID, Open_Year, Name, Num_of_Factories, Num_of_Shops]
Table furniture, columns = [*,Furniture_ID, Name, Num_of_Component, Market_Rate]
target dvq:
Visualize BAR SELECT Name , Num_of_Component FROM furniture WHERE Num_of_Component > 10 ORDER BY Num_of_Component ASC
****************************************************************************************************
nl_queries:
What are the payment date of the payment with amount paid higher than 300 or with payment type is 'Check , and count them by a line chart , and display in descending by the payment_date .
database schema:
Table Payments, columns = [*,payment_id, booking_id, customer_id, payment_type_code, amount_paid_in_full_yn, payment_date, amount_due, amount_paid]
target dvq:
Visualize LINE SELECT payment_date , COUNT(payment_date) FROM payments WHERE amount_paid > 300 OR payment_type_code = 'Check' GROUP BY payment_date ORDER BY payment_date DESC
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , give me the comparison about price over the name , order by the names from high to low please .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Price FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Name DESC
****************************************************************************************************
nl_queries:
Line chart , let hire data as X and salary as Y , and filter for employees without the letter M in their first name .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE first_name NOT LIKE '%M%'
****************************************************************************************************
nl_queries:
Give me a histogram for how many rooms cost more than 120 , for each different decor ? , could you order from high to low by the Y-axis ?
database schema:
Table Rooms, columns = [*,RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor]
target dvq:
Visualize BAR SELECT decor , count(*) FROM Rooms WHERE basePrice > 120 GROUP BY decor ORDER BY count(*) DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of job_id and the sum of employee_id , and group by attribute job_id , and could you list by the x-axis in descending ?
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
List the number of the name of technicians whose team is not "NYY" , and I want to order from low to high by the y-axis please .
database schema:
Table repair, columns = [*,repair_ID, name, Launch_Date, Notes]
Table machine, columns = [*,Machine_ID, Making_Year, Class, Team, Machine_series, value_points, quality_rank]
Table technician, columns = [*,technician_id, Name, Team, Starting_Year, Age]
target dvq:
Visualize BAR SELECT Name , COUNT(Name) FROM technician WHERE Team != "NYY" GROUP BY Name ORDER BY COUNT(Name) ASC
****************************************************************************************************
nl_queries:
Give me a pie chart about the proportion of the number of grape of the wines whose price is bigger than 100 ordered by year .
database schema:
Table grapes, columns = [*,ID, Grape, Color]
Table wine, columns = [*,No, Grape, Winery, Appelation, State, Name, Year, Price, Score, Cases, Drink]
target dvq:
Visualize PIE SELECT Grape , COUNT(Grape) FROM WINE WHERE Price > 100 GROUP BY Grape
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by time , display Y in desc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(EMPLOYEE_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find job_id and the average of salary , and group by attribute job_id , and visualize them by a bar chart .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by weekday , and show y axis from high to low order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by weekday , and I want to order in descending by the y axis .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find job_id and the sum of employee_id , and group by attribute job_id , and visualize them by a bar chart , could you order x-axis in desc order ?
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a line chart about the change of department_id over hire_date , and could you list in descending by the X-axis ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
when is the hire date for those employees whose first name does not containing the letter M , and count them by a bar chart , I want to display in ascending by the Y-axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name NOT LIKE '%M%'  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by weekday , could you show total number from low to high order ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the average of employee_id bin hire_date by time in a bar chart , display from high to low by the y-axis please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(EMPLOYEE_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
List the grape and winery of the wines whose price is bigger than 100 , visualize them with a stacked bar chart , the x-axis is winery and group the grape , and y-axis is the number of wineries , and display in ascending by the bars .
database schema:
Table grapes, columns = [*,ID, Grape, Color]
Table wine, columns = [*,No, Grape, Winery, Appelation, State, Name, Year, Price, Score, Cases, Drink]
target dvq:
Visualize BAR SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Grape ,  Winery ORDER BY Winery ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of hire_date and the sum of salary bin hire_date by time in a bar chart , sort from high to low by the y axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of job_id and the sum of department_id , and group by attribute job_id in a bar chart , show Y-axis in desc order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY SUM(DEPARTMENT_ID) DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the change of employee_id over hire_date in a line chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , what is the relationship between salary and commission_pct ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT SALARY , COMMISSION_PCT FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of job_id and the sum of manager_id , and group by attribute job_id in a bar chart , display from low to high by the y axis please .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY SUM(MANAGER_ID) ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of job_id and the average of employee_id , and group by attribute job_id , list by the names from high to low .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of hire_date and the sum of salary bin hire_date by time in a bar chart , could you display from low to high by the total number ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
How many professors have a PhD in each department Show bar chart , I want to rank by the X-axis in asc .
database schema:
Table COURSE, columns = [*,CRS_CODE, DEPT_CODE, CRS_DESCRIPTION, CRS_CREDIT]
Table DEPARTMENT, columns = [*,DEPT_CODE, DEPT_NAME, SCHOOL_CODE, EMP_NUM, DEPT_ADDRESS, DEPT_EXTENSION]
Table PROFESSOR, columns = [*,EMP_NUM, DEPT_CODE, PROF_OFFICE, PROF_EXTENSION, PROF_HIGH_DEGREE]
Table STUDENT, columns = [*,STU_NUM, STU_LNAME, STU_FNAME, STU_INIT, STU_DOB, STU_HRS, STU_CLASS, STU_GPA, STU_TRANSFER, DEPT_CODE, STU_PHONE, PROF_NUM]
target dvq:
Visualize BAR SELECT DEPT_CODE , count(*) FROM professor WHERE prof_high_degree = 'Ph.D.' GROUP BY dept_code ORDER BY DEPT_CODE ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a scatter chart shows the correlation between salary and department_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT SALARY , DEPARTMENT_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , give me the comparison about manufacturer over the name , and show by the names from high to low please .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Manufacturer FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Name DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of job_id and the sum of department_id , and group by attribute job_id , and sort total number in asc order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY SUM(DEPARTMENT_ID) ASC
****************************************************************************************************
nl_queries:
For those employees whose first name does not containing the letter M , display their total salary by binning the hire date into Month interval for visualizing a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name NOT LIKE '%M%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of job_id and the amount of job_id , and group by attribute job_id , and sort in desc by the JOB_ID .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
A pie chart for what are the number of the category of music festivals with result "Awarded" ?
database schema:
Table music_festival, columns = [*,ID, Music_Festival, Date_of_ceremony, Category, Volume, Result]
target dvq:
Visualize PIE SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = "Awarded" GROUP BY Category
****************************************************************************************************
nl_queries:
Bar chart , X is bed type and the Y-axis is their appearance frequency , and could you sort by the Y in asc please ?
database schema:
Table Rooms, columns = [*,RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor]
target dvq:
Visualize BAR SELECT bedType , COUNT(bedType) FROM Rooms WHERE decor = "traditional" GROUP BY bedType ORDER BY COUNT(bedType) ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of hire_date and the average of manager_id bin hire_date by time , and sort by the total number in desc please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(MANAGER_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the sum of manager_id bin hire_date by weekday , and visualize them by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of department_id over the hire_date bin hire_date by time by a bar chart , sort from high to low by the total number .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(DEPARTMENT_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Which tests have "Pass" results ? Return the dates when the tests were taken , and count them by a bar chart
database schema:
Table Student_Tests_Taken, columns = [*,registration_id, date_test_taken, test_result]
target dvq:
Visualize BAR SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = "Pass" GROUP BY date_test_taken
****************************************************************************************************
nl_queries:
A bar chart for finding the number of the last name of female (sex is F) students in the descending order of age .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
Table Faculty, columns = [*,FacID, Lname, Fname, Rank, Sex, Phone, Room, Building]
target dvq:
Visualize BAR SELECT LName , COUNT(LName) FROM STUDENT WHERE Sex = "F" GROUP BY LName ORDER BY Age DESC
****************************************************************************************************
nl_queries:
A bar chart for listing the number of the name of technicians whose team is not "NYY" .
database schema:
Table repair, columns = [*,repair_ID, name, Launch_Date, Notes]
Table machine, columns = [*,Machine_ID, Making_Year, Class, Team, Machine_series, value_points, quality_rank]
Table technician, columns = [*,technician_id, Name, Team, Starting_Year, Age]
target dvq:
Visualize BAR SELECT Name , COUNT(Name) FROM technician WHERE Team != "NYY" GROUP BY Name
****************************************************************************************************
nl_queries:
What is the date of birth of every customer whose status code is 'Good Customer' , and count them by a bar chart , and order by the Y-axis from high to low please .
database schema:
Table Staff, columns = [*,staff_id, staff_address_id, nickname, first_name, middle_name, last_name, date_of_birth, date_joined_staff, date_left_staff]
Table Customers, columns = [*,customer_id, customer_address_id, customer_status_code, date_became_customer, date_of_birth, first_name, last_name, amount_outstanding, email_address, phone_number, cell_mobile_phone_number]
target dvq:
Visualize BAR SELECT date_of_birth , COUNT(date_of_birth) FROM Customers WHERE customer_status_code = 'Good Customer'  ORDER BY COUNT(date_of_birth) DESC BIN date_of_birth BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of job_id and the average of department_id , and group by attribute job_id , rank by the total number from low to high .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY AVG(DEPARTMENT_ID) ASC
****************************************************************************************************
nl_queries:
A bar chart for returning the number of the date of birth for all the guests with gender code "Male" , and rank from low to high by the y axis .
database schema:
Table Guests, columns = [*,guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth]
target dvq:
Visualize BAR SELECT date_of_birth , COUNT(date_of_birth) FROM Guests WHERE gender_code = "Male"  ORDER BY COUNT(date_of_birth) ASC BIN date_of_birth BY WEEKDAY
****************************************************************************************************
nl_queries:
Count the number of documents with the type code BK that correspond to each product id . Plot them as scatter chart .
database schema:
Table Ref_Document_Types, columns = [*,Document_Type_Code, Document_Type_Name, Document_Type_Description]
Table Projects, columns = [*,Project_ID, Project_Details]
Table Documents, columns = [*,Document_ID, Document_Type_Code, Project_ID, Document_Date, Document_Name, Document_Description, Other_Details]
target dvq:
Visualize SCATTER SELECT count(*) , Project_ID FROM Documents WHERE document_type_code = "BK" GROUP BY project_id
****************************************************************************************************
nl_queries:
A bar chart for what are the number of the dates in which the mean sea level pressure was between 303 and 31 ? , show y axis in descending order please .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) DESC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of job_id and the average of salary , and group by attribute job_id in a bar chart , I want to display bar from high to low order please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
what is the number of players who have points less than 30 for each position ? , and list x axis in ascending order .
database schema:
Table player, columns = [*,Player_ID, name, Position, Club_ID, Apps, Tries, Goals, Points]
target dvq:
Visualize BAR SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION ORDER BY Position ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the trend about employee_id over hire_date , could you list X-axis from high to low order please ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
Which tests have "Pass" results ? Return the dates when the tests were taken , and count them by a bar chart , rank by the X in desc .
database schema:
Table Student_Tests_Taken, columns = [*,registration_id, date_test_taken, test_result]
target dvq:
Visualize BAR SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = "Pass" GROUP BY date_test_taken ORDER BY date_test_taken DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of job_id and the sum of department_id , and group by attribute job_id , and list by the Y-axis in descending .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY SUM(DEPARTMENT_ID) DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find job_id and the amount of job_id , and group by attribute job_id , and visualize them by a bar chart , I want to show by the total number in descending .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY COUNT(JOB_ID) DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the sum of employee_id over the job_id , and group by attribute job_id by a bar chart , and list in asc by the JOB_ID .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of job_id and the amount of job_id , and group by attribute job_id , could you list in descending by the names ?
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id , I want to sort by the Y-axis in descending please .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY AVG(SALARY) DESC
****************************************************************************************************
nl_queries:
What is the number of players who have points less than 30 for each position Plot them as bar chart , and list by the names in desc .
database schema:
Table player, columns = [*,Player_ID, name, Position, Club_ID, Apps, Tries, Goals, Points]
target dvq:
Visualize BAR SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION ORDER BY Position DESC
****************************************************************************************************
nl_queries:
For employees with first names that end with the letter m , give me a bar chart to show their total salary .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT FIRST_NAME , SUM(SALARY) FROM employees WHERE first_name LIKE '%m' GROUP BY FIRST_NAME
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the sum of salary bin hire_date by weekday , and visualize them by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of salary over the hire_date bin hire_date by weekday , display in descending by the Y-axis please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , show me about the correlation between price and manufacturer in a scatter chart .
database schema:
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize SCATTER SELECT Price , Manufacturer FROM products WHERE price BETWEEN 60 AND 120
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
How many captains with younger than 50 are in each rank . Visualize by pie chart .
database schema:
Table captain, columns = [*,Captain_ID, Name, Ship_ID, age, Class, Rank]
target dvq:
Visualize PIE SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the sum of salary over the job_id , and group by attribute job_id , and could you sort X-axis in descending order ?
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
What is the date of birth of every customer whose status code is 'Good Customer' , and count them by a line chart , list X-axis in descending order please .
database schema:
Table Staff, columns = [*,staff_id, staff_address_id, nickname, first_name, middle_name, last_name, date_of_birth, date_joined_staff, date_left_staff]
Table Customers, columns = [*,customer_id, customer_address_id, customer_status_code, date_became_customer, date_of_birth, first_name, last_name, amount_outstanding, email_address, phone_number, cell_mobile_phone_number]
target dvq:
Visualize LINE SELECT date_of_birth , COUNT(date_of_birth) FROM Customers WHERE customer_status_code = 'Good Customer'  ORDER BY date_of_birth DESC BIN date_of_birth BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize the relationship between salary and manager_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT SALARY , MANAGER_ID FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of job_id and the average of employee_id , and group by attribute job_id in a bar chart .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , return a bar chart about the distribution of name and manufacturer .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Manufacturer FROM products WHERE price BETWEEN 60 AND 120
****************************************************************************************************
nl_queries:
Show the number of male and female assistant professors .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
Table Faculty, columns = [*,FacID, Lname, Fname, Rank, Sex, Phone, Room, Building]
target dvq:
Visualize PIE SELECT Sex , count(*) FROM Faculty WHERE rank = "AsstProf" GROUP BY sex
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the trend about employee_id over hire_date , list from high to low by the x-axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
How many people are under 40 for each gender . Plot them as bar chart .
database schema:
Table Person, columns = [*,name, age, city, gender, job]
target dvq:
Visualize BAR SELECT gender , count(*) FROM Person WHERE age < 40 GROUP BY gender
****************************************************************************************************
nl_queries:
Show me a bar chart for what are the different affiliations , and what is the total enrollment of schools founded after 1850 for each enrollment type ?
database schema:
Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]
target dvq:
Visualize BAR SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation
****************************************************************************************************
nl_queries:
Find the number of the dates of the tests taken with result "Pass" , and could you list in ascending by the Y-axis ?
database schema:
Table Student_Tests_Taken, columns = [*,registration_id, date_test_taken, test_result]
target dvq:
Visualize BAR SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = "Pass" GROUP BY date_test_taken ORDER BY COUNT(date_test_taken) ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of hire_date and the sum of manager_id bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the sum of salary over the hire_date bin hire_date by weekday by a bar chart , rank sum salary from low to high order please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the change of manager_id over hire_date in a line chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of hire_date and the average of salary bin hire_date by time , I want to rank in descending by the Y-axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a scatter chart about the correlation between salary and commission_pct .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT SALARY , COMMISSION_PCT FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
How old is each dog that was abandoned ? Show in a pie chart .
database schema:
Table Dogs, columns = [*,dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed]
target dvq:
Visualize PIE SELECT name , weight FROM Dogs WHERE abandoned_yn = 1
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a line chart about the change of manager_id over hire_date , and could you display X-axis from high to low order ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
Visualize a bar chart for what are the district names and city populations for all districts that between 200 , 000 and 2 , 000 , 000 residents ?
database schema:
Table district, columns = [*,District_ID, District_name, Headquartered_City, City_Population, City_Area]
target dvq:
Visualize BAR SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the sum of employee_id bin hire_date by weekday , and visualize them by a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a scatter chart shows the correlation between employee_id and commission_pct .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT EMPLOYEE_ID , COMMISSION_PCT FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
A bar chart for showing the number of the musical nominee with award "Bob Fosse" or "Cleavant Derricks" , show by the y axis from low to high .
database schema:
Table musical, columns = [*,Musical_ID, Name, Year, Award, Category, Nominee, Result]
target dvq:
Visualize BAR SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = "Tony Award" OR Award = "Cleavant Derricks" GROUP BY Nominee ORDER BY COUNT(Nominee) ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of employee_id over the job_id , and group by attribute job_id by a bar chart , and rank from high to low by the names .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For those employees whose first name is ending with the letter m , sum their salary for visualizing a bar chart , could you sort by the total number in ascending please ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT FIRST_NAME , SUM(SALARY) FROM employees WHERE first_name LIKE '%m' GROUP BY FIRST_NAME ORDER BY SUM(SALARY) ASC
****************************************************************************************************
nl_queries:
For all storms with at least 1 death , compare the number of deaths by name with a bar graph , order from low to high by the Y-axis .
database schema:
Table storm, columns = [*,Storm_ID, Name, Dates_active, Max_speed, Damage_millions_USD, Number_Deaths]
target dvq:
Visualize BAR SELECT Name , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Number_Deaths ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the average of salary over the hire_date bin hire_date by time by a bar chart , I want to list in ascending by the Y-axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the average of employee_id over the hire_date bin hire_date by weekday , and display y-axis from low to high order please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(EMPLOYEE_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a line chart about the change of manager_id over hire_date , and could you display by the X from high to low ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
What are the number of the dates of transactions with at least 100 share count or amount bigger than 100 ? , order by the Y in ascending .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100  ORDER BY COUNT(date_of_transaction) ASC BIN date_of_transaction BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a scatter chart shows the correlation between commission_pct and manager_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT COMMISSION_PCT , MANAGER_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , return a scatter chart about the correlation between price and manufacturer .
database schema:
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize SCATTER SELECT Price , Manufacturer FROM products WHERE price BETWEEN 60 AND 120
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id , I want to show from low to high by the y axis .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY AVG(SALARY) ASC
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , return a scatter chart about the correlation between code and manufacturer , and group by attribute name .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize SCATTER SELECT Code , Manufacturer FROM products WHERE price BETWEEN 60 AND 120 GROUP BY Name
****************************************************************************************************
nl_queries:
Compare the frequency of each type of bed by a bar chart , and display by the y-axis from low to high .
database schema:
Table Rooms, columns = [*,RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor]
target dvq:
Visualize BAR SELECT bedType , COUNT(bedType) FROM Rooms WHERE decor = "traditional" GROUP BY bedType ORDER BY COUNT(bedType) ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by time , rank in descending by the y-axis .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(EMPLOYEE_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by time , I want to list by the sum department id in ascending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(DEPARTMENT_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
A bar chart for returning the number of the categories of music festivals that have the result "Awarded" .
database schema:
Table music_festival, columns = [*,ID, Music_Festival, Date_of_ceremony, Category, Volume, Result]
target dvq:
Visualize BAR SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = "Awarded" GROUP BY Category
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of job_id and the average of manager_id , and group by attribute job_id in a bar chart , I want to list in desc by the y axis .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY AVG(MANAGER_ID) DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a line chart shows the trend of commission_pct over hire_date , and show x-axis in desc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of manager_id over the hire_date bin hire_date by time , list in asc by the Y-axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(MANAGER_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the sum of salary over the hire_date bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Find the rank of the companies in the banking industry order by their sales and profits in billion with a bar chart .
database schema:
Table company, columns = [*,Company_ID, Rank, Company, Headquarters, Main_Industry, Sales_billion, Profits_billion, Assets_billion, Market_Value]
target dvq:
Visualize BAR SELECT Company , Rank FROM company WHERE main_industry = 'Banking' ORDER BY sales_billion, profits_billion
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of hire_date and the average of manager_id bin hire_date by time , and could you display y axis in ascending order ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(MANAGER_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Show the number of products with price higher than 1000 or lower than 500 for each product type code in a bar chart , and I want to list from high to low by the Y-axis please .
database schema:
Table Products, columns = [*,product_id, product_type_code, product_name, product_price]
target dvq:
Visualize BAR SELECT product_type_code , COUNT(product_type_code) FROM products WHERE product_price > 1000 OR product_price < 500 GROUP BY product_type_code ORDER BY COUNT(product_type_code) DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by weekday , I want to sort in descending by the total number .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(EMPLOYEE_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a bar chart shows the distribution of hire_date and the sum of salary bin hire_date by time , show in descending by the Y .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of hire_date and the average of salary bin hire_date by time , order total number from low to high order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of job_id and the sum of department_id , and group by attribute job_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the change of employee_id over hire_date in a line chart , and sort by the x axis in asc .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of hire_date and the average of salary bin hire_date by time in a bar chart , and order total number from low to high order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the average of employee_id bin hire_date by time , and visualize them by a bar chart , and could you show by the Y from low to high ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(EMPLOYEE_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by weekday , could you list by the Y-axis from low to high ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of job_id and the average of department_id , and group by attribute job_id .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For those dates with a max temperature greater than or equal to 80 , I would like a line chart to show the tendency , and order X-axis from low to high order .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize LINE SELECT date , COUNT(date) FROM weather WHERE max_temperature_f >= 80 GROUP BY date ORDER BY date ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of hire_date and the average of department_id bin hire_date by weekday in a bar chart , and rank by the the average of department id from low to high .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(DEPARTMENT_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , give me the comparison about price over the name by a bar chart , could you list by the Name in descending ?
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Price FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Name DESC
****************************************************************************************************
nl_queries:
What are the number of the names of products with price at most 200 ? , list how many name in descending order please .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , COUNT(Name) FROM products WHERE price <= 200 GROUP BY Name ORDER BY COUNT(Name) DESC
****************************************************************************************************
nl_queries:
Draw a pie chart for what is the average age for a male in each job ?
database schema:
Table Person, columns = [*,name, age, city, gender, job]
target dvq:
Visualize PIE SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of hire_date and the average of department_id bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of hire_date and the average of manager_id bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of job_id and the average of manager_id , and group by attribute job_id , and list in asc by the X .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of department_id over the job_id , and group by attribute job_id by a bar chart , display in desc by the Y .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY AVG(DEPARTMENT_ID) DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of department_id over the job_id , and group by attribute job_id , I want to display in ascending by the JOB_ID .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
What is the average age for a male in each job . Visualize by bar chart .
database schema:
Table Person, columns = [*,name, age, city, gender, job]
target dvq:
Visualize BAR SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job
****************************************************************************************************
nl_queries:
how many rooms have king beds ? Report the number for each decor type , and rank by the y axis in ascending .
database schema:
Table Rooms, columns = [*,RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor]
target dvq:
Visualize BAR SELECT decor , count(*) FROM Rooms WHERE bedType = "King" GROUP BY decor ORDER BY count(*) ASC
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , give me the comparison about manufacturer over the name , list in desc by the y-axis please .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Manufacturer FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Manufacturer DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id , and sort bar in asc order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the trend about employee_id over hire_date , show from low to high by the X-axis please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
How many invoices were billed from each state Plot them as bar chart , and I want to show by the billing_state from low to high .
database schema:
Table invoices, columns = [*,id, customer_id, invoice_date, billing_address, billing_city, billing_state, billing_country, billing_postal_code, total]
target dvq:
Visualize BAR SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = "USA" GROUP BY billing_state ORDER BY billing_state ASC
****************************************************************************************************
nl_queries:
A bar chart about what are the different affiliations , and what is the total enrollment of schools founded after 1850 for each enrollment type ? , list by the bars in desc .
database schema:
Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]
target dvq:
Visualize BAR SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation ORDER BY Affiliation DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by time , and sort by the Y from low to high .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of job_id and the average of manager_id , and group by attribute job_id , show by the total number from low to high please .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY AVG(MANAGER_ID) ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the average of employee_id bin hire_date by time , and visualize them by a bar chart , and could you rank y-axis from high to low order please ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(EMPLOYEE_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the average of manager_id bin hire_date by weekday in a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of job_id and the sum of employee_id , and group by attribute job_id in a bar chart , and show in descending by the bar .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
List the number of invoices from the US , grouped by state by a bar chart , rank by the the total number in descending please .
database schema:
Table invoices, columns = [*,id, customer_id, invoice_date, billing_address, billing_city, billing_state, billing_country, billing_postal_code, total]
target dvq:
Visualize BAR SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = "USA" GROUP BY billing_state ORDER BY COUNT(*) DESC
****************************************************************************************************
nl_queries:
List the number of the name of technicians whose team is not "NYY" .
database schema:
Table repair, columns = [*,repair_ID, name, Launch_Date, Notes]
Table machine, columns = [*,Machine_ID, Making_Year, Class, Team, Machine_series, value_points, quality_rank]
Table technician, columns = [*,technician_id, Name, Team, Starting_Year, Age]
target dvq:
Visualize BAR SELECT Name , COUNT(Name) FROM technician WHERE Team != "NYY" GROUP BY Name
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of job_id and the sum of salary , and group by attribute job_id , sort by the names in descending please .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find job_id and the average of employee_id , and group by attribute job_id , and visualize them by a bar chart .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
A bar chart for finding the number of the dates of the tests taken with result "Pass" .
database schema:
Table Student_Tests_Taken, columns = [*,registration_id, date_test_taken, test_result]
target dvq:
Visualize BAR SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = "Pass" GROUP BY date_test_taken
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of job_id and the amount of job_id , and group by attribute job_id , and could you list by the Y-axis from high to low ?
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY COUNT(JOB_ID) DESC
****************************************************************************************************
nl_queries:
Please show the trend about the number of days with max temperature reaches 80 change over dates , order x axis from high to low order .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize LINE SELECT date , COUNT(date) FROM weather WHERE max_temperature_f >= 80 GROUP BY date ORDER BY date DESC
****************************************************************************************************
nl_queries:
Find the average age of male students (with sex M) from each city , and rank the average of age in desc order .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
target dvq:
Visualize BAR SELECT city_code , avg(age) FROM student WHERE sex = 'M' GROUP BY city_code ORDER BY avg(age) DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the average of salary bin hire_date by weekday , and visualize them by a bar chart , display in descending by the Y-axis please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
What are the number of the names of products with price at most 200 ? , and I want to show by the X in desc .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , COUNT(Name) FROM products WHERE price <= 200 GROUP BY Name ORDER BY Name DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of hire_date and the sum of salary bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
How many invoices were billed from each state . Plot them as bar chart .
database schema:
Table invoices, columns = [*,id, customer_id, invoice_date, billing_address, billing_city, billing_state, billing_country, billing_postal_code, total]
target dvq:
Visualize BAR SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = "USA" GROUP BY billing_state
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the average of salary bin hire_date by weekday in a bar chart , display from low to high by the y axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a scatter chart about the correlation between salary and department_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT SALARY , DEPARTMENT_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a line chart about the change of department_id over hire_date .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the average of department_id bin hire_date by time in a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the average of employee_id over the job_id , and group by attribute job_id by a bar chart , could you show x-axis from high to low order ?
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find job_id and the sum of employee_id , and group by attribute job_id , and visualize them by a bar chart , and order names in asc order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by weekday .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of hire_date and the sum of manager_id bin hire_date by weekday in a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , draw a pie chart about the proportion of name and manufacturer .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize PIE SELECT Name , Manufacturer FROM products WHERE price BETWEEN 60 AND 120
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the change of employee_id over hire_date in a line chart , order X-axis in descending order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the sum of manager_id bin hire_date by time , and visualize them by a bar chart , and I want to show by the total number of manager id from high to low .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(MANAGER_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the sum of salary bin hire_date by weekday , and visualize them by a bar chart , sort in desc by the y-axis please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find hire_date and the sum of employee_id bin hire_date by time , and visualize them by a bar chart , order y-axis from low to high order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(EMPLOYEE_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday , display in desc by the y-axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(DEPARTMENT_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , what is the relationship between price and manufacturer ?
database schema:
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize SCATTER SELECT Price , Manufacturer FROM products WHERE price BETWEEN 60 AND 120
****************************************************************************************************
nl_queries:
Return a histogram on how many professors have a PhD in each department ? , list by the total number in desc please .
database schema:
Table COURSE, columns = [*,CRS_CODE, DEPT_CODE, CRS_DESCRIPTION, CRS_CREDIT]
Table DEPARTMENT, columns = [*,DEPT_CODE, DEPT_NAME, SCHOOL_CODE, EMP_NUM, DEPT_ADDRESS, DEPT_EXTENSION]
Table PROFESSOR, columns = [*,EMP_NUM, DEPT_CODE, PROF_OFFICE, PROF_EXTENSION, PROF_HIGH_DEGREE]
Table STUDENT, columns = [*,STU_NUM, STU_LNAME, STU_FNAME, STU_INIT, STU_DOB, STU_HRS, STU_CLASS, STU_GPA, STU_TRANSFER, DEPT_CODE, STU_PHONE, PROF_NUM]
target dvq:
Visualize BAR SELECT DEPT_CODE , count(*) FROM professor WHERE prof_high_degree = 'Ph.D.' GROUP BY dept_code ORDER BY count(*) DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find hire_date and the sum of salary bin hire_date by weekday , and visualize them by a bar chart , and list total number of salary from high to low order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of salary over the hire_date bin hire_date by time , and rank by the Y-axis in descending please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
A bar chart for finding the number of the dates of the tests taken with result "Pass" , list from low to high by the X-axis .
database schema:
Table Student_Tests_Taken, columns = [*,registration_id, date_test_taken, test_result]
target dvq:
Visualize BAR SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = "Pass" GROUP BY date_test_taken ORDER BY date_test_taken ASC
****************************************************************************************************
nl_queries:
A bar chart for what are the number of the dates in which the mean sea level pressure was between 303 and 31 ? , and show Y-axis in descending order please .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) DESC BIN date BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the sum of salary over the job_id , and group by attribute job_id , and could you rank by the x axis in desc ?
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , for employee_id , hire_date , visualize the trend .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the sum of employee_id bin hire_date by time , and rank by the y axis from low to high .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(EMPLOYEE_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of hire_date and the sum of salary bin hire_date by weekday , sort Y-axis from high to low order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a line chart about the change of department_id over hire_date .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a line chart about the change of department_id over hire_date , and sort HIRE_DATE in descending order please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
List how many students in each last name who majored in 600 using a bar chart , and sort by the bars from low to high .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
target dvq:
Visualize BAR SELECT LName , COUNT(LName) FROM Student WHERE Major = 600 GROUP BY LName ORDER BY LName ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find job_id and the sum of manager_id , and group by attribute job_id , and visualize them by a bar chart , sort sum manager id in ascending order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY SUM(MANAGER_ID) ASC
****************************************************************************************************
nl_queries:
Find the number of people who is under 40 for each gender , and could you order in ascending by the Y ?
database schema:
Table Person, columns = [*,name, age, city, gender, job]
target dvq:
Visualize BAR SELECT gender , count(*) FROM Person WHERE age < 40 GROUP BY gender ORDER BY count(*) ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by time .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
What are dates of birth of all the guests whose gender is "Male" , and count them by a bar chart , and list by the y axis in descending .
database schema:
Table Guests, columns = [*,guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth]
target dvq:
Visualize BAR SELECT date_of_birth , COUNT(date_of_birth) FROM Guests WHERE gender_code = "Male"  ORDER BY COUNT(date_of_birth) DESC BIN date_of_birth BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a scatter chart about the correlation between commission_pct and department_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT COMMISSION_PCT , DEPARTMENT_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by weekday , sort from high to low by the y-axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(MANAGER_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Count the number of people of each sex who have a weight higher than 85 by a bar chart , and list y axis in ascending order .
database schema:
Table people, columns = [*,People_ID, Sex, Name, Date_of_Birth, Height, Weight]
target dvq:
Visualize BAR SELECT Sex , count(*) FROM people WHERE weight > 85 GROUP BY sex ORDER BY count(*) ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id , could you rank total number of manager id in ascending order please ?
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY SUM(MANAGER_ID) ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of hire_date and the average of manager_id bin hire_date by weekday , and could you display y axis in ascending order ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(MANAGER_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
What is the date of birth of every customer whose status code is 'Good Customer' , and count them by a line chart
database schema:
Table Staff, columns = [*,staff_id, staff_address_id, nickname, first_name, middle_name, last_name, date_of_birth, date_joined_staff, date_left_staff]
Table Customers, columns = [*,customer_id, customer_address_id, customer_status_code, date_became_customer, date_of_birth, first_name, last_name, amount_outstanding, email_address, phone_number, cell_mobile_phone_number]
target dvq:
Visualize LINE SELECT date_of_birth , COUNT(date_of_birth) FROM Customers WHERE customer_status_code = 'Good Customer' BIN date_of_birth BY YEAR
****************************************************************************************************
nl_queries:
What are the dates in which the mean sea level pressure was between 30 . 3 and 31 , and count them by a bar chart
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31 BIN date BY YEAR
****************************************************************************************************
nl_queries:
Show me a bar chart for how many invoices were billed from each state ? , could you sort Y-axis in asc order ?
database schema:
Table invoices, columns = [*,id, customer_id, invoice_date, billing_address, billing_city, billing_state, billing_country, billing_postal_code, total]
target dvq:
Visualize BAR SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = "USA" GROUP BY billing_state ORDER BY COUNT(*) ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a bar chart shows the distribution of hire_date and the average of department_id bin hire_date by weekday , list by the Y from low to high .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(DEPARTMENT_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
List the dog name and weight of the dogs who have been abandoned in a bar chart , display in descending by the y axis .
database schema:
Table Dogs, columns = [*,dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed]
target dvq:
Visualize BAR SELECT name , weight FROM Dogs WHERE abandoned_yn = 1 ORDER BY weight DESC
****************************************************************************************************
nl_queries:
Find the number of employees of each gender whose salary is lower than 50000 Visualize by bar chart , could you rank Y-axis in ascending order ?
database schema:
Table employee, columns = [*,Fname, Minit, Lname, Ssn, Bdate, Address, Sex, Salary, Super_ssn, Dno]
Table dependent, columns = [*,Essn, Dependent_name, Sex, Bdate, Relationship]
target dvq:
Visualize BAR SELECT Sex , count(*) FROM employee WHERE salary < 50000 GROUP BY sex ORDER BY count(*) ASC
****************************************************************************************************
nl_queries:
Count the number of captains younger than 50 of each rank , show in descending by the y-axis .
database schema:
Table captain, columns = [*,Captain_ID, Name, Ship_ID, age, Class, Rank]
target dvq:
Visualize BAR SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank ORDER BY count(*) DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a scatter chart about the correlation between employee_id and manager_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT EMPLOYEE_ID , MANAGER_ID FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
In which years cars were produced weighing no less than 3000 and no more than 4000 , and count them by a bar chart , sort in ascending by the y axis .
database schema:
Table cars_data, columns = [*,Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year]
target dvq:
Visualize BAR SELECT Year , COUNT(Year) FROM cars_data where weight between 3000 and 4000  ORDER BY COUNT(Year) ASC BIN Year BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the sum of salary over the hire_date bin hire_date by weekday , sort total number of salary in descending order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday , and display by the y-axis from high to low .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(DEPARTMENT_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the average of salary bin hire_date by weekday in a bar chart , and sort in desc by the Y please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
What are the dates with a maximum temperature higher than 85 , and count them by a line chart , and rank by the X from low to high .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize LINE SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85 GROUP BY date ORDER BY date ASC
****************************************************************************************************
nl_queries:
List the number of winery of the wines whose price is bigger than 100 in a bar chart , rank names from high to low order .
database schema:
Table wine, columns = [*,No, Grape, Winery, Appelation, State, Name, Year, Price, Score, Cases, Drink]
target dvq:
Visualize BAR SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Winery ORDER BY Winery DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of employee_id over the hire_date bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me the trend about manager_id over hire_date with a line chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
A pie chart for returning the number of the categories of music festivals that have the result "Awarded" .
database schema:
Table music_festival, columns = [*,ID, Music_Festival, Date_of_ceremony, Category, Volume, Result]
target dvq:
Visualize PIE SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = "Awarded" GROUP BY Category
****************************************************************************************************
nl_queries:
Show me a bar chart for how many invoices were billed from each state ? , show by the bar in desc .
database schema:
Table invoices, columns = [*,id, customer_id, invoice_date, billing_address, billing_city, billing_state, billing_country, billing_postal_code, total]
target dvq:
Visualize BAR SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = "USA" GROUP BY billing_state ORDER BY billing_state DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday , and sort by the sum department id in ascending please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(DEPARTMENT_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
What are the category of music festivals with result "Awarded" , and count them by a bar chart , and show by the x axis in desc .
database schema:
Table music_festival, columns = [*,ID, Music_Festival, Date_of_ceremony, Category, Volume, Result]
target dvq:
Visualize BAR SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = "Awarded" GROUP BY Category ORDER BY Category DESC
****************************************************************************************************
nl_queries:
Please show the trend about the number of days with max temperature reaches 80 change over dates , I want to display x-axis from low to high order .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize LINE SELECT date , COUNT(date) FROM weather WHERE max_temperature_f >= 80 GROUP BY date ORDER BY date ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of job_id and the average of manager_id , and group by attribute job_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
Give me a histogram for how many rooms cost more than 120 , for each different decor ? , list by the names in desc .
database schema:
Table Rooms, columns = [*,RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor]
target dvq:
Visualize BAR SELECT decor , count(*) FROM Rooms WHERE basePrice > 120 GROUP BY decor ORDER BY decor DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the average of department_id over the hire_date bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Which tests have "Pass" results ? Return the dates when the tests were taken , and count them by a line chart , and order x-axis from high to low order .
database schema:
Table Student_Tests_Taken, columns = [*,registration_id, date_test_taken, test_result]
target dvq:
Visualize LINE SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = "Pass"  ORDER BY date_test_taken DESC BIN date_test_taken BY DAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the sum of employee_id over the job_id , and group by attribute job_id , could you display y axis from low to high order ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY SUM(EMPLOYEE_ID) ASC
****************************************************************************************************
nl_queries:
How many male and female assistant professors do we have .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
Table Faculty, columns = [*,FacID, Lname, Fname, Rank, Sex, Phone, Room, Building]
target dvq:
Visualize BAR SELECT Sex , count(*) FROM Faculty WHERE rank = "AsstProf" GROUP BY sex
****************************************************************************************************
nl_queries:
Count the number of captains younger than 50 of each rank by a bar chart .
database schema:
Table captain, columns = [*,Captain_ID, Name, Ship_ID, age, Class, Rank]
target dvq:
Visualize BAR SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank
****************************************************************************************************
nl_queries:
A line chart for showing the number of the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000 .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000 BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
A bar chart for giveing me the number of the dates when the max temperature was higher than 85 , and could you list y axis in ascending order please ?
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) ASC BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of department_id over the job_id , and group by attribute job_id by a bar chart .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of job_id and the sum of manager_id , and group by attribute job_id , and list total number of manager id in ascending order please .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY SUM(MANAGER_ID) ASC
****************************************************************************************************
nl_queries:
Give me a histogram for how many rooms cost more than 120 , for each different decor ?
database schema:
Table Rooms, columns = [*,RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor]
target dvq:
Visualize BAR SELECT decor , count(*) FROM Rooms WHERE basePrice > 120 GROUP BY decor
****************************************************************************************************
nl_queries:
List the dog name and age of the dogs who have been abandoned in a bar chart , rank by the X-axis in asc .
database schema:
Table Dogs, columns = [*,dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed]
target dvq:
Visualize BAR SELECT name , age FROM Dogs WHERE abandoned_yn = 1 ORDER BY name ASC
****************************************************************************************************
nl_queries:
List the number of invoices from the US , grouped by state Visualize by bar chart , list by the billing_state in descending .
database schema:
Table invoices, columns = [*,id, customer_id, invoice_date, billing_address, billing_city, billing_state, billing_country, billing_postal_code, total]
target dvq:
Visualize BAR SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = "USA" GROUP BY billing_state ORDER BY billing_state DESC
****************************************************************************************************
nl_queries:
Find the number of the latest logon date of the students whose family name is "Jaskolski" or "Langosh" , and could you list y axis in ascending order ?
database schema:
Table Course_Authors_and_Tutors, columns = [*,author_id, author_tutor_ATB, login_name, password, personal_name, middle_name, family_name, gender_mf, address_line_1]
Table Students, columns = [*,student_id, date_of_registration, date_of_latest_logon, login_name, password, personal_name, middle_name, family_name]
target dvq:
Visualize BAR SELECT date_of_latest_logon , COUNT(date_of_latest_logon) FROM Students WHERE family_name = "Jaskolski" OR family_name = "Langosh"  ORDER BY COUNT(date_of_latest_logon) ASC BIN date_of_latest_logon BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by time , and display by the Y-axis in desc .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
how many documents are with document type code BK for each product id ?
database schema:
Table Ref_Document_Types, columns = [*,Document_Type_Code, Document_Type_Name, Document_Type_Description]
Table Projects, columns = [*,Project_ID, Project_Details]
Table Documents, columns = [*,Document_ID, Document_Type_Code, Project_ID, Document_Date, Document_Name, Document_Description, Other_Details]
target dvq:
Visualize SCATTER SELECT count(*) , Project_ID FROM Documents WHERE document_type_code = "BK" GROUP BY project_id
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of job_id and the sum of department_id , and group by attribute job_id , I want to list by the X-axis in descending .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of job_id and the sum of salary , and group by attribute job_id in a bar chart , I want to display by the X in desc please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
Show me a bar chart for what are the different affiliations , and what is the total enrollment of schools founded after 1850 for each enrollment type ? , and show by the y axis in descending .
database schema:
Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]
target dvq:
Visualize BAR SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation ORDER BY sum(Enrollment) DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of hire_date and the sum of employee_id bin hire_date by weekday in a bar chart , list by the total number in descending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(EMPLOYEE_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
What is the average age for a male in each job Visualize by bar chart , and show total number in asc order .
database schema:
Table Person, columns = [*,name, age, city, gender, job]
target dvq:
Visualize BAR SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY avg(age) ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a scatter chart about the correlation between employee_id and salary .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT EMPLOYEE_ID , SALARY FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
Visualize a bar chart for how many rooms cost more than 120 , for each different decor ?
database schema:
Table Rooms, columns = [*,RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor]
target dvq:
Visualize BAR SELECT decor , count(*) FROM Rooms WHERE basePrice > 120 GROUP BY decor
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , what is the relationship between employee_id and department_id ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT EMPLOYEE_ID , DEPARTMENT_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
What are the number of dates of birth of all the guests whose gender is "Male" ? , show by the x axis in desc .
database schema:
Table Guests, columns = [*,guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth]
target dvq:
Visualize LINE SELECT date_of_birth , COUNT(date_of_birth) FROM Guests WHERE gender_code = "Male"  ORDER BY date_of_birth DESC BIN date_of_birth BY YEAR
****************************************************************************************************
nl_queries:
A bar chart for what are the number of the dates that have an average sea level pressure between 303 and 31 ? , and sort in asc by the how many date please .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) ASC BIN date BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a bar chart shows the distribution of job_id and the average of manager_id , and group by attribute job_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a line chart about the change of salary over hire_date , order in desc by the X-axis .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
For all storms with at least 1 death , compare the number of deaths by dates active with a bar graph , and I want to rank in descending by the x-axis .
database schema:
Table storm, columns = [*,Storm_ID, Name, Dates_active, Max_speed, Damage_millions_USD, Number_Deaths]
target dvq:
Visualize BAR SELECT Dates_active , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Dates_active DESC
****************************************************************************************************
nl_queries:
Using a pie chart to show the proportion of each type of bed .
database schema:
Table Rooms, columns = [*,RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor]
target dvq:
Visualize PIE SELECT bedType , COUNT(bedType) FROM Rooms WHERE decor = "traditional" GROUP BY bedType
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a scatter chart about the correlation between salary and department_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT SALARY , DEPARTMENT_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
For those employees whose first name is ending with the letter m , sum their salary for visualizing a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT FIRST_NAME , SUM(SALARY) FROM employees WHERE first_name LIKE '%m' GROUP BY FIRST_NAME
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , return a bar chart about the distribution of name and manufacturer , and rank from low to high by the Y .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Manufacturer FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Manufacturer ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find job_id and the average of department_id , and group by attribute job_id , and visualize them by a bar chart , I want to display in ascending by the total number .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY AVG(DEPARTMENT_ID) ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the change of salary over hire_date in a line chart , and could you rank by the X-axis from low to high ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the average of employee_id bin hire_date by weekday in a bar chart , order total number in ascending order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(EMPLOYEE_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of job_id and the sum of salary , and group by attribute job_id in a bar chart , and I want to order y-axis in descending order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY SUM(SALARY) DESC
****************************************************************************************************
nl_queries:
A bar chart about what is the id and weight of every pet who is older than 1 ? , could you list by the names in descending ?
database schema:
Table Has_Pet, columns = [*,StuID, PetID]
Table Pets, columns = [*,PetID, PetType, pet_age, weight]
target dvq:
Visualize BAR SELECT PetID , weight FROM pets WHERE pet_age > 1 ORDER BY PetID DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find job_id and the average of employee_id , and group by attribute job_id , and visualize them by a bar chart , and display by the names in ascending please .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the amount of job_id over the job_id , and group by attribute job_id by a bar chart , show by the Y in desc please .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY COUNT(JOB_ID) DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by weekday , could you sort in asc by the total number ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(MANAGER_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Return the date of birth for all the guests with gender code "Male" , and count them by a bar chart , list in ascending by the y axis .
database schema:
Table Guests, columns = [*,guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth]
target dvq:
Visualize BAR SELECT date_of_birth , COUNT(date_of_birth) FROM Guests WHERE gender_code = "Male"  ORDER BY COUNT(date_of_birth) ASC BIN date_of_birth BY WEEKDAY
****************************************************************************************************
nl_queries:
Find the latest logon date of the students whose family name is "Jaskolski" or "Langosh" , and count them by a bar chart
database schema:
Table Course_Authors_and_Tutors, columns = [*,author_id, author_tutor_ATB, login_name, password, personal_name, middle_name, family_name, gender_mf, address_line_1]
Table Students, columns = [*,student_id, date_of_registration, date_of_latest_logon, login_name, password, personal_name, middle_name, family_name]
target dvq:
Visualize BAR SELECT date_of_latest_logon , COUNT(date_of_latest_logon) FROM Students WHERE family_name = "Jaskolski" OR family_name = "Langosh" BIN date_of_latest_logon BY WEEKDAY
****************************************************************************************************
nl_queries:
What is the name of the technician whose team is not 'NYY' , and count them by a bar chart , show by the total number from high to low .
database schema:
Table repair, columns = [*,repair_ID, name, Launch_Date, Notes]
Table machine, columns = [*,Machine_ID, Making_Year, Class, Team, Machine_series, value_points, quality_rank]
Table technician, columns = [*,technician_id, Name, Team, Starting_Year, Age]
target dvq:
Visualize BAR SELECT Name , COUNT(Name) FROM technician WHERE Team != "NYY" GROUP BY Name ORDER BY COUNT(Name) DESC
****************************************************************************************************
nl_queries:
Find the number of employees of each gender whose salary is lower than 50000 . Show a pie chart .
database schema:
Table employee, columns = [*,Fname, Minit, Lname, Ssn, Bdate, Address, Sex, Salary, Super_ssn, Dno]
Table dependent, columns = [*,Essn, Dependent_name, Sex, Bdate, Relationship]
target dvq:
Visualize PIE SELECT Sex , count(*) FROM employee WHERE salary < 50000 GROUP BY sex
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of manager_id over the job_id , and group by attribute job_id by a bar chart , I want to order in desc by the mean manager id please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY AVG(MANAGER_ID) DESC
****************************************************************************************************
nl_queries:
Show the musical nominee with award "Bob Fosse" or "Cleavant Derricks" , and count them by a bar chart , and could you list from high to low by the X-axis ?
database schema:
Table musical, columns = [*,Musical_ID, Name, Year, Award, Category, Nominee, Result]
target dvq:
Visualize BAR SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = "Tony Award" OR Award = "Cleavant Derricks" GROUP BY Nominee ORDER BY Nominee DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of job_id and the amount of job_id , and group by attribute job_id , rank x-axis in asc order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
Please show the trend about the number of days with max temperature reaches 80 change over dates .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize LINE SELECT date , COUNT(date) FROM weather WHERE max_temperature_f >= 80 GROUP BY date
****************************************************************************************************
nl_queries:
what is the average age for a male in each job ? , and sort y axis in descending order .
database schema:
Table Person, columns = [*,name, age, city, gender, job]
target dvq:
Visualize BAR SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY avg(age) DESC
****************************************************************************************************
nl_queries:
Find the number of professors with a PhD degree in each department Show bar chart , I want to order y-axis from high to low order .
database schema:
Table COURSE, columns = [*,CRS_CODE, DEPT_CODE, CRS_DESCRIPTION, CRS_CREDIT]
Table DEPARTMENT, columns = [*,DEPT_CODE, DEPT_NAME, SCHOOL_CODE, EMP_NUM, DEPT_ADDRESS, DEPT_EXTENSION]
Table PROFESSOR, columns = [*,EMP_NUM, DEPT_CODE, PROF_OFFICE, PROF_EXTENSION, PROF_HIGH_DEGREE]
Table STUDENT, columns = [*,STU_NUM, STU_LNAME, STU_FNAME, STU_INIT, STU_DOB, STU_HRS, STU_CLASS, STU_GPA, STU_TRANSFER, DEPT_CODE, STU_PHONE, PROF_NUM]
target dvq:
Visualize BAR SELECT DEPT_CODE , count(*) FROM professor WHERE prof_high_degree = 'Ph.D.' GROUP BY dept_code ORDER BY count(*) DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by time , order by the Y in descending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(MANAGER_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
What are the pixel aspect ratio and country of origin for all TV channels that do not use English ? Show the comparison of the total number of pixel aspect ratio in a bar chart .
database schema:
Table TV_Channel, columns = [*,id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option]
target dvq:
Visualize BAR SELECT Pixel_aspect_ratio_PAR , COUNT(Pixel_aspect_ratio_PAR) FROM tv_channel WHERE LANGUAGE != 'English' GROUP BY Pixel_aspect_ratio_PAR
****************************************************************************************************
nl_queries:
Return a bar chart on what are the district names and city populations for all districts that between 200 , 000 and 2 , 000 , 000 residents ? , I want to sort by the bars in asc please .
database schema:
Table district, columns = [*,District_ID, District_name, Headquartered_City, City_Population, City_Area]
target dvq:
Visualize BAR SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000 ORDER BY District_name ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the sum of employee_id bin hire_date by weekday in a bar chart , list y-axis in ascending order please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(EMPLOYEE_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
List the number of invoices from the US , grouped by state Visualize by bar chart , sort in asc by the total number .
database schema:
Table invoices, columns = [*,id, customer_id, invoice_date, billing_address, billing_city, billing_state, billing_country, billing_postal_code, total]
target dvq:
Visualize BAR SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = "USA" GROUP BY billing_state ORDER BY COUNT(*) ASC
****************************************************************************************************
nl_queries:
Give me a pie chart showing the proportion of the pixel aspect ratio and the nation of the tv channels that do not use English .
database schema:
Table TV_Channel, columns = [*,id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option]
target dvq:
Visualize PIE SELECT Pixel_aspect_ratio_PAR , COUNT(Pixel_aspect_ratio_PAR) FROM tv_channel WHERE LANGUAGE != 'English' GROUP BY Pixel_aspect_ratio_PAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a bar chart shows the distribution of hire_date and the average of department_id bin hire_date by time , and could you rank from high to low by the total number ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(DEPARTMENT_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by weekday , and rank by the total number in desc .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(EMPLOYEE_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of department_id over the job_id , and group by attribute job_id by a bar chart , sort by the X-axis from low to high .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of job_id and the sum of salary , and group by attribute job_id , and rank total number in desc order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY SUM(SALARY) DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the sum of manager_id over the job_id , and group by attribute job_id by a bar chart , sort by the x-axis in asc .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the average of salary over the hire_date bin hire_date by time , I want to display from low to high by the Y-axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , visualize a bar chart about the distribution of name and price .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Price FROM products WHERE price BETWEEN 60 AND 120
****************************************************************************************************
nl_queries:
What are the names of products with price at most 200 , and count them by a bar chart , display by the Name in ascending .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , COUNT(Name) FROM products WHERE price <= 200 GROUP BY Name ORDER BY Name ASC
****************************************************************************************************
nl_queries:
Visualize a bar chart for how many rooms cost more than 120 , for each different decor ? , and list by the names in ascending .
database schema:
Table Rooms, columns = [*,RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor]
target dvq:
Visualize BAR SELECT decor , count(*) FROM Rooms WHERE basePrice > 120 GROUP BY decor ORDER BY decor ASC
****************************************************************************************************
nl_queries:
Show the number of the musical nominee with award "Bob Fosse" or "Cleavant Derricks" , and show by the total number in ascending please .
database schema:
Table musical, columns = [*,Musical_ID, Name, Year, Award, Category, Nominee, Result]
target dvq:
Visualize BAR SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = "Tony Award" OR Award = "Cleavant Derricks" GROUP BY Nominee ORDER BY COUNT(Nominee) ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of department_id over the hire_date bin hire_date by weekday by a bar chart , sort by the the average of department id in desc .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(DEPARTMENT_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by weekday , and I want to sort Y-axis from low to high order please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(EMPLOYEE_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the sum of salary over the job_id , and group by attribute job_id , rank in desc by the y-axis .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY SUM(SALARY) DESC
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , visualize a bar chart about the distribution of name and code , and could you rank by the x-axis in desc please ?
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Code FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Name DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the sum of employee_id bin hire_date by weekday in a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
What is the weight of each dog that was abandoned ? Show in a bar chart .
database schema:
Table Dogs, columns = [*,dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed]
target dvq:
Visualize BAR SELECT name , weight FROM Dogs WHERE abandoned_yn = 1
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of job_id and the amount of job_id , and group by attribute job_id in a bar chart , sort in asc by the X please .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id , and order y-axis in descending order please .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY SUM(MANAGER_ID) DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of manager_id over the job_id , and group by attribute job_id , and rank in asc by the X-axis please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find job_id and the average of employee_id , and group by attribute job_id , and visualize them by a bar chart , rank by the Y-axis in descending .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY AVG(EMPLOYEE_ID) DESC
****************************************************************************************************
nl_queries:
What are the different years in which there were cars produced that weighed less than 4000 and also cars that weighted more than 3000 , and count them by a bar chart
database schema:
Table cars_data, columns = [*,Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year]
target dvq:
Visualize BAR SELECT Year , COUNT(Year) FROM cars_data where weight between 3000 and 4000 BIN Year BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of hire_date and the average of employee_id bin hire_date by time in a bar chart , could you show in descending by the Y-axis ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(EMPLOYEE_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For employees with first names that end with the letter m , give me a pie chart to show their total salary .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize PIE SELECT FIRST_NAME , SUM(SALARY) FROM employees WHERE first_name LIKE '%m' GROUP BY FIRST_NAME
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the average of department_id bin hire_date by time , and visualize them by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the sum of employee_id bin hire_date by time , and rank y axis from high to low order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(EMPLOYEE_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the sum of manager_id bin hire_date by time , and visualize them by a bar chart , display in ascending by the Y-axis please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(MANAGER_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of manager_id over the job_id , and group by attribute job_id , rank by the total number in asc .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY AVG(MANAGER_ID) ASC
****************************************************************************************************
nl_queries:
Return a scatter on what is the average salary of employees who have a commission percentage that is not null ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT DEPARTMENT_ID , AVG(salary) FROM employees WHERE commission_pct != "null" GROUP BY department_id
****************************************************************************************************
nl_queries:
Show all dates of transactions whose type code is "SALE" , and count them by a bar chart
database schema:
Table Ref_Transaction_Types, columns = [*,transaction_type_code, transaction_type_description]
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE transaction_type_code = "SALE" BIN date_of_transaction BY WEEKDAY
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , show me about the proportion of code and code in a pie chart .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize PIE SELECT Name , Code FROM products WHERE price BETWEEN 60 AND 120
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by weekday , order by the y-axis in descending .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(EMPLOYEE_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Return a bar chart on how many rooms have king beds ? Report the number for each decor type , and rank Y-axis from low to high order please .
database schema:
Table Rooms, columns = [*,RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor]
target dvq:
Visualize BAR SELECT decor , count(*) FROM Rooms WHERE bedType = "King" GROUP BY decor ORDER BY count(*) ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of manager_id over the hire_date bin hire_date by weekday , and I want to show from low to high by the Y-axis please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(MANAGER_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the average of employee_id over the hire_date bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the sum of employee_id over the hire_date bin hire_date by time by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Find the dates of the tests taken with result "Pass" , and count them by a bar chart , and display y-axis in asc order .
database schema:
Table Student_Tests_Taken, columns = [*,registration_id, date_test_taken, test_result]
target dvq:
Visualize BAR SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = "Pass"  ORDER BY COUNT(date_test_taken) ASC BIN date_test_taken BY WEEKDAY
****************************************************************************************************
nl_queries:
A bar chart showing the number of flights with price higher than 300 for each destination city , order in asc by the total number .
database schema:
Table flight, columns = [*,flno, origin, destination, distance, departure_date, arrival_date, price, aid]
target dvq:
Visualize BAR SELECT destination , COUNT(destination) FROM Flight WHERE price > 300 GROUP BY destination ORDER BY COUNT(destination) ASC
****************************************************************************************************
nl_queries:
Bar chart , X is bed type and the Y-axis is their appearance frequency , list in desc by the x axis .
database schema:
Table Rooms, columns = [*,RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor]
target dvq:
Visualize BAR SELECT bedType , COUNT(bedType) FROM Rooms WHERE decor = "traditional" GROUP BY bedType ORDER BY bedType DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the sum of employee_id over the job_id , and group by attribute job_id by a bar chart , and I want to list by the y-axis from high to low please .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY SUM(EMPLOYEE_ID) DESC
****************************************************************************************************
nl_queries:
Count the number of captains younger than 50 of each rank by a bar chart , and rank by the y axis in asc .
database schema:
Table captain, columns = [*,Captain_ID, Name, Ship_ID, age, Class, Rank]
target dvq:
Visualize BAR SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank ORDER BY count(*) ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the sum of department_id bin hire_date by weekday in a bar chart , display by the y axis from low to high .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(DEPARTMENT_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
What are the different years in which there were cars produced that weighed less than 4000 and also cars that weighted more than 3000 , and count them by a bar chart , order how many year in desc order .
database schema:
Table cars_data, columns = [*,Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year]
target dvq:
Visualize BAR SELECT Year , COUNT(Year) FROM cars_data where weight between 3000 and 4000  ORDER BY COUNT(Year) DESC BIN Year BY WEEKDAY
****************************************************************************************************
nl_queries:
What are the names and prices of products that cost at least 180 , sorted by price decreasing and name ascending . Show bar chart .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Price FROM products WHERE price >= 180 ORDER BY price DESC , name ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the average of department_id bin hire_date by time , and visualize them by a bar chart , could you rank from high to low by the total number ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(DEPARTMENT_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Find the average age of male students (with sex M) from each city , and rank Y from low to high order .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
target dvq:
Visualize BAR SELECT city_code , avg(age) FROM student WHERE sex = 'M' GROUP BY city_code ORDER BY avg(age) ASC
****************************************************************************************************
nl_queries:
Show the number of products with price higher than 1000 or lower than 500 for each product type code in a bar chart , rank x axis in descending order .
database schema:
Table Products, columns = [*,product_id, product_type_code, product_name, product_price]
target dvq:
Visualize BAR SELECT product_type_code , COUNT(product_type_code) FROM products WHERE product_price > 1000 OR product_price < 500 GROUP BY product_type_code ORDER BY product_type_code DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me the trend about manager_id over hire_date with a line chart , and show from low to high by the HIRE_DATE .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
How many flights with price higher than 300 for each destination city ? Return a bar chart .
database schema:
Table flight, columns = [*,flno, origin, destination, distance, departure_date, arrival_date, price, aid]
target dvq:
Visualize BAR SELECT destination , COUNT(destination) FROM Flight WHERE price > 300 GROUP BY destination
****************************************************************************************************
nl_queries:
List the number of wines whose price is bigger than 100 ordered by year , group by grape , and visualize with a bar chart .
database schema:
Table grapes, columns = [*,ID, Grape, Color]
Table wine, columns = [*,No, Grape, Winery, Appelation, State, Name, Year, Price, Score, Cases, Drink]
target dvq:
Visualize BAR SELECT Year , COUNT(Year) FROM WINE WHERE Price > 100 GROUP BY Grape ORDER BY YEAR
****************************************************************************************************
nl_queries:
A bar chart for giveing me the number of the dates when the max temperature was higher than 85 , sort Y in asc order .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) ASC BIN date BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the change of commission_pct over hire_date in a line chart , sort by the X-axis from high to low .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a line chart shows the trend of manager_id over hire_date , could you display X-axis from high to low order ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
Show the number of male and female assistant professors Plot them as bar chart , order Y-axis in ascending order .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
Table Faculty, columns = [*,FacID, Lname, Fname, Rank, Sex, Phone, Room, Building]
target dvq:
Visualize BAR SELECT Sex , count(*) FROM Faculty WHERE rank = "AsstProf" GROUP BY sex ORDER BY count(*) ASC
****************************************************************************************************
nl_queries:
What are the number of the dates of the latest logon of the students with family name "Jaskolski" or "Langosh" ? , and show in descending by the Y .
database schema:
Table Course_Authors_and_Tutors, columns = [*,author_id, author_tutor_ATB, login_name, password, personal_name, middle_name, family_name, gender_mf, address_line_1]
Table Students, columns = [*,student_id, date_of_registration, date_of_latest_logon, login_name, password, personal_name, middle_name, family_name]
target dvq:
Visualize BAR SELECT date_of_latest_logon , COUNT(date_of_latest_logon) FROM Students WHERE family_name = "Jaskolski" OR family_name = "Langosh"  ORDER BY COUNT(date_of_latest_logon) DESC BIN date_of_latest_logon BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , for commission_pct , hire_date , visualize the trend .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
Return a bar chart on what are the district names and city populations for all districts that between 200 , 000 and 2 , 000 , 000 residents ?
database schema:
Table district, columns = [*,District_ID, District_name, Headquartered_City, City_Population, City_Area]
target dvq:
Visualize BAR SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of job_id and the amount of job_id , and group by attribute job_id , display in descending by the bars please .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the change of department_id over hire_date in a line chart , could you list in descending by the x axis ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
For all storms with at least 1 death , compare the total number of deaths by dates_active attribute , rank by the Dates_active in desc .
database schema:
Table storm, columns = [*,Storm_ID, Name, Dates_active, Max_speed, Damage_millions_USD, Number_Deaths]
target dvq:
Visualize BAR SELECT Dates_active , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Dates_active DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by time , I want to order by the Y-axis in ascending please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(MANAGER_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Return a histogram on how many invoices were billed from each state ? , and display total number from low to high order .
database schema:
Table invoices, columns = [*,id, customer_id, invoice_date, billing_address, billing_city, billing_state, billing_country, billing_postal_code, total]
target dvq:
Visualize BAR SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = "USA" GROUP BY billing_state ORDER BY COUNT(*) ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the average of manager_id bin hire_date by time , sort from low to high by the the average of manager id .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(MANAGER_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id , show by the bars in descending .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the sum of salary over the job_id , and group by attribute job_id , and order y-axis in asc order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY SUM(SALARY) ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the sum of salary bin hire_date by time in a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Show the number of male and female assistant professors with a pie chart .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
Table Faculty, columns = [*,FacID, Lname, Fname, Rank, Sex, Phone, Room, Building]
target dvq:
Visualize PIE SELECT Sex , count(*) FROM Faculty WHERE rank = "AsstProf" GROUP BY sex
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a scatter chart about the correlation between salary and manager_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT SALARY , MANAGER_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
A bar chart for what are the number of the dates in which the mean sea level pressure was between 30 . 3 and 31 ?
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31 BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find job_id and the sum of employee_id , and group by attribute job_id , and visualize them by a bar chart , and could you show bar in descending order please ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
A bar chart for showing the number of the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000 , list Y in descending order .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000  ORDER BY COUNT(date_of_transaction) DESC BIN date_of_transaction BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of hire_date and the sum of department_id bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by weekday .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose first name does not containing the letter M , display their total salary by binning the hire date into Month interval for visualizing a bar chart , and sort in asc by the total number please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name NOT LIKE '%M%'  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Show the average age for all female students and group them by last name with a bar chart , could you list by the total number in asc please ?
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
target dvq:
Visualize BAR SELECT LName , AVG(Age) FROM Student WHERE Sex = 'F' GROUP BY LName ORDER BY AVG(Age) ASC
****************************************************************************************************
nl_queries:
Draw a bar chart for how many captains with younger than 50 are in each rank ?
database schema:
Table captain, columns = [*,Captain_ID, Name, Ship_ID, age, Class, Rank]
target dvq:
Visualize BAR SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by time , list from low to high by the y axis please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(DEPARTMENT_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose first name is ending with the letter m , visualize a bar chart to show each employee's salary by the last name , and could you show in desc by the y-axis please ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT LAST_NAME , SALARY FROM employees WHERE first_name LIKE '%m' ORDER BY SALARY DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of salary over the hire_date bin hire_date by weekday , list by the mean salary in desc .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a line chart about the change of commission_pct over hire_date , list X-axis in asc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of job_id and the sum of employee_id , and group by attribute job_id , and list in asc by the JOB_ID .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize the relationship between salary and manager_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT SALARY , MANAGER_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
What is average age of male for different job title Visualize by bar chart , list by the mean age in asc .
database schema:
Table Person, columns = [*,name, age, city, gender, job]
target dvq:
Visualize BAR SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY avg(age) ASC
****************************************************************************************************
nl_queries:
Draw a bar chart for how many captains with younger than 50 are in each rank ? , and show Y-axis in descending order .
database schema:
Table captain, columns = [*,Captain_ID, Name, Ship_ID, age, Class, Rank]
target dvq:
Visualize BAR SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank ORDER BY count(*) DESC
****************************************************************************************************
nl_queries:
What is the number of players who have points less than 30 for each position Plot them as bar chart , and rank from low to high by the y-axis .
database schema:
Table player, columns = [*,Player_ID, name, Position, Club_ID, Apps, Tries, Goals, Points]
target dvq:
Visualize BAR SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION ORDER BY count(*) ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the change of department_id over hire_date in a line chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , visualize a bar chart about the distribution of name and price , and display by the total number from high to low .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Price FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Price DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of job_id and the sum of manager_id , and group by attribute job_id in a bar chart , order by the x axis in desc .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
List the dog name and weight of the dogs who have been abandoned in a bar chart .
database schema:
Table Dogs, columns = [*,dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed]
target dvq:
Visualize BAR SELECT name , weight FROM Dogs WHERE abandoned_yn = 1
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by time , rank by the Y from low to high .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(DEPARTMENT_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of job_id and the sum of employee_id , and group by attribute job_id in a bar chart , and could you list in asc by the Y-axis ?
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY SUM(EMPLOYEE_ID) ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the sum of employee_id bin hire_date by weekday , and visualize them by a bar chart , sort y-axis in ascending order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(EMPLOYEE_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Show the average age for all female students and group them by first name in a bar chart , and order by the Fname from low to high .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
target dvq:
Visualize BAR SELECT Fname , AVG(Age) FROM Student WHERE Sex = 'F' GROUP BY Fname ORDER BY Fname ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by weekday , could you sort in asc by the total number ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(MANAGER_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the average of salary over the job_id , and group by attribute job_id by a bar chart , and show y axis in descending order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY AVG(SALARY) DESC
****************************************************************************************************
nl_queries:
Find the name and population of districts with population between 200000 and 200000 . Show a bar chart .
database schema:
Table district, columns = [*,District_ID, District_name, Headquartered_City, City_Population, City_Area]
target dvq:
Visualize BAR SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , give me the comparison about price over the name , and I want to display bars in asc order .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Price FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Name ASC
****************************************************************************************************
nl_queries:
Visualize a bar chart for how many rooms cost more than 120 , for each different decor ? , show bar from high to low order please .
database schema:
Table Rooms, columns = [*,RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor]
target dvq:
Visualize BAR SELECT decor , count(*) FROM Rooms WHERE basePrice > 120 GROUP BY decor ORDER BY decor DESC
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , visualize the relationship between code and manufacturer , and group by attribute name .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize SCATTER SELECT Code , Manufacturer FROM products WHERE price BETWEEN 60 AND 120 GROUP BY Name
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the average of department_id bin hire_date by time , and visualize them by a bar chart , and could you show by the Y-axis from low to high please ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(DEPARTMENT_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a line chart shows the trend of commission_pct over hire_date , and order in descending by the HIRE_DATE please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of job_id and the amount of job_id , and group by attribute job_id in a bar chart , and order y-axis from low to high order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY COUNT(JOB_ID) ASC
****************************************************************************************************
nl_queries:
Give me the number of the dates when the max temperature was higher than 85 .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85 BIN date BY YEAR
****************************************************************************************************
nl_queries:
For those dates with a max temperature greater than or equal to 80 , I would like a line chart to show the tendency , I want to list x axis from high to low order .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize LINE SELECT date , COUNT(date) FROM weather WHERE max_temperature_f >= 80 GROUP BY date ORDER BY date DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of hire_date and the average of manager_id bin hire_date by time in a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a line chart about the change of salary over hire_date .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a line chart shows the change of commission_pct over hire_date
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the sum of salary over the hire_date bin hire_date by weekday , and list total number of salary from low to high order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Show the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000 , and count them by a line chart , and I want to order by the X-axis in descending .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000  ORDER BY date_of_transaction DESC BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of job_id and the sum of department_id , and group by attribute job_id , rank by the total number from high to low .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY SUM(DEPARTMENT_ID) DESC
****************************************************************************************************
nl_queries:
A bar chart showing the number of first name for all female students Their sex is F , display in ascending by the bar .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
target dvq:
Visualize BAR SELECT Fname , COUNT(Fname) FROM Student WHERE Sex = 'F' GROUP BY Fname ORDER BY Fname ASC
****************************************************************************************************
nl_queries:
A bar chart for how many wines whose price is bigger than 100 ordered by year .
database schema:
Table wine, columns = [*,No, Grape, Winery, Appelation, State, Name, Year, Price, Score, Cases, Drink]
target dvq:
Visualize BAR SELECT Year , COUNT(Year) FROM WINE WHERE Price > 100 GROUP BY Year ORDER BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a scatter chart about the correlation between employee_id and salary .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT EMPLOYEE_ID , SALARY FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
What are the number of the category of music festivals with result "Awarded" ?
database schema:
Table music_festival, columns = [*,ID, Music_Festival, Date_of_ceremony, Category, Volume, Result]
target dvq:
Visualize PIE SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = "Awarded" GROUP BY Category
****************************************************************************************************
nl_queries:
A bar chart for what are the number of the dates of transactions with at least 100 share count or amount bigger than 100 ? , I want to display Y-axis in ascending order .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100  ORDER BY COUNT(date_of_transaction) ASC BIN date_of_transaction BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a line chart about the change of commission_pct over hire_date , sort by the x axis in ascending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
Return a histogram on how many professors have a PhD in each department ? , and rank in ascending by the y axis .
database schema:
Table COURSE, columns = [*,CRS_CODE, DEPT_CODE, CRS_DESCRIPTION, CRS_CREDIT]
Table DEPARTMENT, columns = [*,DEPT_CODE, DEPT_NAME, SCHOOL_CODE, EMP_NUM, DEPT_ADDRESS, DEPT_EXTENSION]
Table PROFESSOR, columns = [*,EMP_NUM, DEPT_CODE, PROF_OFFICE, PROF_EXTENSION, PROF_HIGH_DEGREE]
Table STUDENT, columns = [*,STU_NUM, STU_LNAME, STU_FNAME, STU_INIT, STU_DOB, STU_HRS, STU_CLASS, STU_GPA, STU_TRANSFER, DEPT_CODE, STU_PHONE, PROF_NUM]
target dvq:
Visualize BAR SELECT DEPT_CODE , count(*) FROM professor WHERE prof_high_degree = 'Ph.D.' GROUP BY dept_code ORDER BY count(*) ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of job_id and the sum of employee_id , and group by attribute job_id , list Y from high to low order please .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY SUM(EMPLOYEE_ID) DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by weekday , and order the average of employee id in asc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(EMPLOYEE_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
What are the number of the category of music festivals with result "Awarded" ?
database schema:
Table music_festival, columns = [*,ID, Music_Festival, Date_of_ceremony, Category, Volume, Result]
target dvq:
Visualize BAR SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = "Awarded" GROUP BY Category
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a line chart shows the trend of employee_id over hire_date , and rank by the X-axis in ascending .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
For those appellations whose score is higher than 93 , return a stacked to group them by appellation , count appellation , and ordered by Name
database schema:
Table grapes, columns = [*,ID, Grape, Color]
Table appellations, columns = [*,No, Appelation, County, State, Area, isAVA]
Table wine, columns = [*,No, Grape, Winery, Appelation, State, Name, Year, Price, Score, Cases, Drink]
target dvq:
Visualize BAR SELECT Appelation , COUNT(Appelation) FROM WINE WHERE Score > 93 GROUP BY Grape ,  Appelation ORDER BY Name
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a line chart about the change of salary over hire_date .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
How many people are under 40 for each gender . Show a pie chart .
database schema:
Table Person, columns = [*,name, age, city, gender, job]
target dvq:
Visualize PIE SELECT gender , count(*) FROM Person WHERE age < 40 GROUP BY gender
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , return a bar chart about the distribution of name and manufacturer , and sort in desc by the y-axis .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Manufacturer FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Manufacturer DESC
****************************************************************************************************
nl_queries:
A bar chart for finding the number of the dates of the tests taken with result "Pass" , show X-axis in desc order .
database schema:
Table Student_Tests_Taken, columns = [*,registration_id, date_test_taken, test_result]
target dvq:
Visualize BAR SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = "Pass" GROUP BY date_test_taken ORDER BY date_test_taken DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by time , sort Y-axis from high to low order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(MANAGER_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the correlation between commission_pct and manager_id in a scatter chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT COMMISSION_PCT , MANAGER_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id , and show by the X-axis from high to low please .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the trend about manager_id over hire_date .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
How many professors have a PhD in each department Show bar chart , display from high to low by the X .
database schema:
Table COURSE, columns = [*,CRS_CODE, DEPT_CODE, CRS_DESCRIPTION, CRS_CREDIT]
Table DEPARTMENT, columns = [*,DEPT_CODE, DEPT_NAME, SCHOOL_CODE, EMP_NUM, DEPT_ADDRESS, DEPT_EXTENSION]
Table PROFESSOR, columns = [*,EMP_NUM, DEPT_CODE, PROF_OFFICE, PROF_EXTENSION, PROF_HIGH_DEGREE]
Table STUDENT, columns = [*,STU_NUM, STU_LNAME, STU_FNAME, STU_INIT, STU_DOB, STU_HRS, STU_CLASS, STU_GPA, STU_TRANSFER, DEPT_CODE, STU_PHONE, PROF_NUM]
target dvq:
Visualize BAR SELECT DEPT_CODE , count(*) FROM professor WHERE prof_high_degree = 'Ph.D.' GROUP BY dept_code ORDER BY DEPT_CODE DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find job_id and the average of salary , and group by attribute job_id , and visualize them by a bar chart , and list in descending by the X-axis .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
What are the number of the dates in which the mean sea level pressure was between 30 . 3 and 31 ?
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31 BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose first name does not contain the letter M , display their average salary by binning the hire date into the day of week interval for visualizing a bar chart , and could you list the average of salary in asc order ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name NOT LIKE '%M%'  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Show the number of the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000 .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000 BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
For those employees whose first name is ending with the letter m , show the proportion of the first name using a pie chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize PIE SELECT FIRST_NAME , COUNT(FIRST_NAME) FROM employees WHERE first_name LIKE '%m' GROUP BY FIRST_NAME
****************************************************************************************************
nl_queries:
Find the number of people who is under 40 for each gender . Show the proportion .
database schema:
Table Person, columns = [*,name, age, city, gender, job]
target dvq:
Visualize PIE SELECT gender , count(*) FROM Person WHERE age < 40 GROUP BY gender
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by time , I want to show y-axis in ascending order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(DEPARTMENT_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a bar chart shows the distribution of hire_date and the sum of salary bin hire_date by time , could you order total number in asc order ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , visualize a bar chart about the distribution of name and code .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Code FROM products WHERE price BETWEEN 60 AND 120
****************************************************************************************************
nl_queries:
Draw a bar chart for how many people are under 40 for each gender ? , and rank in desc by the x-axis .
database schema:
Table Person, columns = [*,name, age, city, gender, job]
target dvq:
Visualize BAR SELECT gender , count(*) FROM Person WHERE age < 40 GROUP BY gender ORDER BY gender DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me the trend about salary over hire_date with a line chart , and show from high to low by the HIRE_DATE .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
On what dates were employees without the letter M in their first names hired , and count them by a bar chart , and list y axis from high to low order please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name NOT LIKE '%M%'  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
How many male and female assistant professors do we have .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
Table Faculty, columns = [*,FacID, Lname, Fname, Rank, Sex, Phone, Room, Building]
target dvq:
Visualize PIE SELECT Sex , count(*) FROM Faculty WHERE rank = "AsstProf" GROUP BY sex
****************************************************************************************************
nl_queries:
Draw a bar chart for how many people are under 40 for each gender ? , display Y in desc order .
database schema:
Table Person, columns = [*,name, age, city, gender, job]
target dvq:
Visualize BAR SELECT gender , count(*) FROM Person WHERE age < 40 GROUP BY gender ORDER BY count(*) DESC
****************************************************************************************************
nl_queries:
Find the number of the dates of the tests taken with result "Pass" , order x-axis from high to low order .
database schema:
Table Student_Tests_Taken, columns = [*,registration_id, date_test_taken, test_result]
target dvq:
Visualize LINE SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = "Pass"  ORDER BY date_test_taken DESC BIN date_test_taken BY DAY
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , find name and price , and visualize them by a bar chart .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Price FROM products WHERE price BETWEEN 60 AND 120
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of job_id and the average of department_id , and group by attribute job_id , could you rank by the y-axis from low to high ?
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY AVG(DEPARTMENT_ID) ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of salary over the job_id , and group by attribute job_id , and display in ascending by the X .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
Compare the number of winery of the wines whose price is bigger than 100 , and show by the x-axis from high to low .
database schema:
Table wine, columns = [*,No, Grape, Winery, Appelation, State, Name, Year, Price, Score, Cases, Drink]
target dvq:
Visualize BAR SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Winery ORDER BY Winery DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of manager_id over the hire_date bin hire_date by time by a bar chart , and order in descending by the y-axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(MANAGER_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a scatter chart shows the correlation between employee_id and salary .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT EMPLOYEE_ID , SALARY FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the sum of department_id over the hire_date bin hire_date by weekday by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Which directors had a movie in either 1999 or 2000 , and count them by a bar chart , could you order X-axis in desc order ?
database schema:
Table book_club, columns = [*,book_club_id, Year, Author_or_Editor, Book_Title, Publisher, Category, Result]
Table movie, columns = [*,movie_id, Title, Year, Director, Budget_million, Gross_worldwide]
target dvq:
Visualize BAR SELECT Director , COUNT(Director) FROM movie WHERE YEAR = 1999 OR YEAR = 2000 GROUP BY Director ORDER BY Director DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of hire_date and the average of manager_id bin hire_date by time .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday , and sort in descending by the mean salary please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all storms with at least 1 death , compare the number of deaths by dates active with a bar graph .
database schema:
Table storm, columns = [*,Storm_ID, Name, Dates_active, Max_speed, Damage_millions_USD, Number_Deaths]
target dvq:
Visualize BAR SELECT Dates_active , Number_Deaths FROM storm WHERE number_deaths >= 1
****************************************************************************************************
nl_queries:
Display a bar chart for how many male and female assistant professors do we have ? , list by the names in desc .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
Table Faculty, columns = [*,FacID, Lname, Fname, Rank, Sex, Phone, Room, Building]
target dvq:
Visualize BAR SELECT Sex , count(*) FROM Faculty WHERE rank = "AsstProf" GROUP BY sex ORDER BY Sex DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the average of salary bin hire_date by weekday , and rank mean salary from low to high order please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Show the number of companies whose headquarters are not from USA fpr each main industry in a bar chart , and display y axis from low to high order please .
database schema:
Table company, columns = [*,Company_ID, Rank, Company, Headquarters, Main_Industry, Sales_billion, Profits_billion, Assets_billion, Market_Value]
target dvq:
Visualize BAR SELECT Main_Industry , COUNT(Main_Industry) FROM company WHERE headquarters != 'USA' GROUP BY Main_Industry ORDER BY COUNT(Main_Industry) ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , what is the relationship between employee_id and commission_pct ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT EMPLOYEE_ID , COMMISSION_PCT FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of employee_id over the hire_date bin hire_date by weekday by a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the amount of job_id over the job_id , and group by attribute job_id by a bar chart , order by the total number in asc .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY COUNT(JOB_ID) ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the amount of job_id over the job_id , and group by attribute job_id by a bar chart , and I want to rank in desc by the names .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For all storms with at least 1 death , compare the number of deaths by name with a bar graph .
database schema:
Table storm, columns = [*,Storm_ID, Name, Dates_active, Max_speed, Damage_millions_USD, Number_Deaths]
target dvq:
Visualize BAR SELECT Name , Number_Deaths FROM storm WHERE number_deaths >= 1
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the average of employee_id bin hire_date by weekday , and display y-axis in desc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(EMPLOYEE_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Select the name of the products with a price less than or equal to $200 , and count them by a bar chart , I want to list in asc by the bars .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , COUNT(Name) FROM products WHERE price <= 200 GROUP BY Name ORDER BY Name ASC
****************************************************************************************************
nl_queries:
Give me the dates when the max temperature was higher than 85 , and count them by a bar chart , and I want to show the number of date from low to high order .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) ASC BIN date BY YEAR
****************************************************************************************************
nl_queries:
Display a bar chart for how many male and female assistant professors do we have ? , display in asc by the Y-axis .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
Table Faculty, columns = [*,FacID, Lname, Fname, Rank, Sex, Phone, Room, Building]
target dvq:
Visualize BAR SELECT Sex , count(*) FROM Faculty WHERE rank = "AsstProf" GROUP BY sex ORDER BY count(*) ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id , rank in ascending by the Y .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY AVG(SALARY) ASC
****************************************************************************************************
nl_queries:
What are the district names and city populations for all districts that between 200 , 000 and 2 , 000 , 000 residents ? Show a bar graph , order x-axis in ascending order .
database schema:
Table district, columns = [*,District_ID, District_name, Headquartered_City, City_Population, City_Area]
target dvq:
Visualize BAR SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000 ORDER BY District_name ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a scatter chart shows the correlation between employee_id and department_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT EMPLOYEE_ID , DEPARTMENT_ID FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find hire_date and the average of salary bin hire_date by weekday , and visualize them by a bar chart , and rank by the y-axis from high to low please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of job_id and the average of manager_id , and group by attribute job_id in a bar chart , and could you rank by the JOB_ID in ascending please ?
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time , and could you display in ascending by the y-axis ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(DEPARTMENT_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of job_id and the amount of job_id , and group by attribute job_id .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a bar chart shows the distribution of job_id and the sum of department_id , and group by attribute job_id , and could you order bars in ascending order ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
Which ministers are not a part of the Progress Party , and count them by a pie chart
database schema:
Table party, columns = [*,Party_ID, Minister, Took_office, Left_office, Region_ID, Party_name]
target dvq:
Visualize PIE SELECT Minister , COUNT(Minister) FROM party WHERE party_name != 'Progress Party' GROUP BY Minister
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id , and order from high to low by the x axis please .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of job_id and the sum of department_id , and group by attribute job_id , rank by the total number from high to low .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY SUM(DEPARTMENT_ID) DESC
****************************************************************************************************
nl_queries:
For those dates with a max temperature greater than or equal to 80 , I want to see the number of days for each year using a bar chart , rank by the y axis in desc .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f >= 80  ORDER BY COUNT(date) DESC BIN date BY YEAR
****************************************************************************************************
nl_queries:
Find the number of people who is under 40 for each gender , sort from high to low by the the total number .
database schema:
Table Person, columns = [*,name, age, city, gender, job]
target dvq:
Visualize BAR SELECT gender , count(*) FROM Person WHERE age < 40 GROUP BY gender ORDER BY count(*) DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the amount of job_id over the job_id , and group by attribute job_id by a bar chart .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
How many rooms have king beds ? Report the number for each decor type . Plot them as bar chart .
database schema:
Table Rooms, columns = [*,RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor]
target dvq:
Visualize BAR SELECT decor , count(*) FROM Rooms WHERE bedType = "King" GROUP BY decor
****************************************************************************************************
nl_queries:
List the number of the first name of all employees with job code PROF ordered by their date of birth .
database schema:
Table EMPLOYEE, columns = [*,EMP_NUM, EMP_LNAME, EMP_FNAME, EMP_INITIAL, EMP_JOBCODE, EMP_HIREDATE, EMP_DOB]
target dvq:
Visualize BAR SELECT EMP_FNAME , COUNT(EMP_FNAME) FROM employee WHERE emp_jobcode = 'PROF' GROUP BY EMP_FNAME ORDER BY emp_dob
****************************************************************************************************
nl_queries:
What are the dates that have an average sea level pressure between 303 and 31 , and count them by a line chart , order in desc by the date .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize LINE SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31 GROUP BY date ORDER BY date DESC
****************************************************************************************************
nl_queries:
What are the number of the first names of all employees that are professors ordered by date of birth ?
database schema:
Table EMPLOYEE, columns = [*,EMP_NUM, EMP_LNAME, EMP_FNAME, EMP_INITIAL, EMP_JOBCODE, EMP_HIREDATE, EMP_DOB]
target dvq:
Visualize BAR SELECT EMP_FNAME , COUNT(EMP_FNAME) FROM employee WHERE emp_jobcode = 'PROF' GROUP BY EMP_FNAME ORDER BY emp_dob
****************************************************************************************************
nl_queries:
What are the dates with a maximum temperature higher than 85 , and count them by a bar chart , display from low to high by the Y .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) ASC BIN date BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of department_id over the hire_date bin hire_date by weekday by a bar chart , rank by the Y-axis from low to high .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(DEPARTMENT_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the sum of manager_id over the hire_date bin hire_date by time , show in asc by the Y-axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(MANAGER_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Visualize a bar chart for what is the id and weight of every pet who is older than 1 ? , display bar from low to high order .
database schema:
Table Has_Pet, columns = [*,StuID, PetID]
Table Pets, columns = [*,PetID, PetType, pet_age, weight]
target dvq:
Visualize BAR SELECT PetID , weight FROM pets WHERE pet_age > 1 ORDER BY PetID ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the sum of department_id over the hire_date bin hire_date by weekday by a bar chart , sort sum department id in ascending order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(DEPARTMENT_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find job_id and the amount of job_id , and group by attribute job_id , and visualize them by a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For employees with first names that end with the letter m , give me a bar chart to show their average salary , and list FIRST_NAME in asc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT FIRST_NAME , AVG(SALARY) FROM employees WHERE first_name LIKE '%m' GROUP BY FIRST_NAME ORDER BY FIRST_NAME ASC
****************************************************************************************************
nl_queries:
Compare the frequency of each type of bed by a bar chart , and I want to list by the y-axis in desc .
database schema:
Table Rooms, columns = [*,RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor]
target dvq:
Visualize BAR SELECT bedType , COUNT(bedType) FROM Rooms WHERE decor = "traditional" GROUP BY bedType ORDER BY COUNT(bedType) DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of job_id and the sum of salary , and group by attribute job_id , display X from low to high order please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
Show me a bar chart for how many invoices were billed from each state ?
database schema:
Table invoices, columns = [*,id, customer_id, invoice_date, billing_address, billing_city, billing_state, billing_country, billing_postal_code, total]
target dvq:
Visualize BAR SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = "USA" GROUP BY billing_state
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the amount of job_id over the job_id , and group by attribute job_id by a bar chart , sort JOB_ID in ascending order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id , and order by the x axis in desc .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
Find the number of the dates of the tests taken with result "Pass" , and I want to list by the bars from high to low .
database schema:
Table Student_Tests_Taken, columns = [*,registration_id, date_test_taken, test_result]
target dvq:
Visualize BAR SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = "Pass" GROUP BY date_test_taken ORDER BY date_test_taken DESC
****************************************************************************************************
nl_queries:
What are the number of dates of birth of all the guests whose gender is "Male" ? , and sort Y in ascending order please .
database schema:
Table Guests, columns = [*,guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth]
target dvq:
Visualize BAR SELECT date_of_birth , COUNT(date_of_birth) FROM Guests WHERE gender_code = "Male"  ORDER BY COUNT(date_of_birth) ASC BIN date_of_birth BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the sum of employee_id bin hire_date by weekday in a bar chart , could you sort Y in ascending order ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(EMPLOYEE_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a line chart about the change of manager_id over hire_date .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a scatter chart shows the correlation between salary and commission_pct .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT SALARY , COMMISSION_PCT FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a scatter chart shows the correlation between manager_id and department_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT MANAGER_ID , DEPARTMENT_ID FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , give me the comparison about price over the name by a bar chart , order by the x axis in ascending .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Price FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Name ASC
****************************************************************************************************
nl_queries:
Show the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000 , and count them by a bar chart
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000 BIN date_of_transaction BY WEEKDAY
****************************************************************************************************
nl_queries:
How many flights with price higher than 300 for each destination city ? Return a bar chart , and order in ascending by the total number .
database schema:
Table flight, columns = [*,flno, origin, destination, distance, departure_date, arrival_date, price, aid]
target dvq:
Visualize BAR SELECT destination , COUNT(destination) FROM Flight WHERE price > 300 GROUP BY destination ORDER BY COUNT(destination) ASC
****************************************************************************************************
nl_queries:
For all storms with at least 1 death , show me the dates active and the total number of deaths with a bar chart .
database schema:
Table storm, columns = [*,Storm_ID, Name, Dates_active, Max_speed, Damage_millions_USD, Number_Deaths]
target dvq:
Visualize BAR SELECT Dates_active , Number_Deaths FROM storm WHERE number_deaths >= 1
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find job_id and the average of employee_id , and group by attribute job_id , and visualize them by a bar chart , and rank by the X from high to low please .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
What are the number of the different years in which there were cars produced that weighed less than 4000 and also cars that weighted more than 3000 ? , sort by the y-axis in ascending .
database schema:
Table cars_data, columns = [*,Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year]
target dvq:
Visualize BAR SELECT Year , COUNT(Year) FROM cars_data where weight between 3000 and 4000  ORDER BY COUNT(Year) ASC BIN Year BY WEEKDAY
****************************************************************************************************
nl_queries:
How many companies that are not headquartered in the United States for each main industry ? Show me a bar chart , and could you display by the total number from high to low ?
database schema:
Table company, columns = [*,Company_ID, Rank, Company, Headquarters, Main_Industry, Sales_billion, Profits_billion, Assets_billion, Market_Value]
target dvq:
Visualize BAR SELECT Main_Industry , COUNT(Main_Industry) FROM company WHERE headquarters != 'USA' GROUP BY Main_Industry ORDER BY COUNT(Main_Industry) DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find hire_date and the sum of employee_id bin hire_date by weekday , and visualize them by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the average of department_id bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find job_id and the sum of department_id , and group by attribute job_id , and visualize them by a bar chart , display by the total number of department id from high to low .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY SUM(DEPARTMENT_ID) DESC
****************************************************************************************************
nl_queries:
What are the job titles , and range of salaries for jobs with maximum salary between 12000 and 18000 Plot them as bar chart , and rank by the Y-axis from high to low .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
target dvq:
Visualize BAR SELECT JOB_TITLE , max_salary - min_salary FROM jobs WHERE max_salary BETWEEN 12000 AND 18000 ORDER BY max_salary - min_salary DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the change of employee_id over hire_date in a line chart , and list by the x-axis from low to high .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the amount of hire_date bin hire_date by time , and visualize them by a bar chart , and show by the y axis in desc .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of job_id and the sum of salary , and group by attribute job_id in a bar chart , order x axis in ascending order please .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the sum of department_id bin hire_date by time in a bar chart , I want to list by the sum department id in ascending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(DEPARTMENT_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of hire_date and the sum of salary bin hire_date by weekday , and display sum salary in desc order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a scatter chart about the correlation between manager_id and department_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT MANAGER_ID , DEPARTMENT_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a scatter chart about the correlation between salary and department_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT SALARY , DEPARTMENT_ID FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
what is average age of male for different job title ?
database schema:
Table Person, columns = [*,name, age, city, gender, job]
target dvq:
Visualize PIE SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job
****************************************************************************************************
nl_queries:
Return the categories of music festivals that have the result "Awarded" , and count them by a bar chart , and sort by the y-axis from low to high .
database schema:
Table music_festival, columns = [*,ID, Music_Festival, Date_of_ceremony, Category, Volume, Result]
target dvq:
Visualize BAR SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = "Awarded" GROUP BY Category ORDER BY COUNT(Category) ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of hire_date and the sum of salary bin hire_date by weekday .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the change of commission_pct over hire_date in a line chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
Return a histogram on what is average age of male for different job title ? , I want to rank in asc by the Y-axis .
database schema:
Table Person, columns = [*,name, age, city, gender, job]
target dvq:
Visualize BAR SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY avg(age) ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the trend about salary over hire_date , and could you order by the x axis from high to low ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a line chart about the change of department_id over hire_date , and rank from high to low by the X-axis .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
For all storms with at least 1 death , compare the number of deaths by name , rank by the X-axis in ascending .
database schema:
Table storm, columns = [*,Storm_ID, Name, Dates_active, Max_speed, Damage_millions_USD, Number_Deaths]
target dvq:
Visualize BAR SELECT Name , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Name ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me the trend about department_id over hire_date with a line chart , rank from high to low by the X-axis .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , what is the relationship between commission_pct and department_id ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT COMMISSION_PCT , DEPARTMENT_ID FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id , sort by the JOB_ID from low to high .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id , and could you list the average of salary in desc order please ?
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY AVG(SALARY) DESC
****************************************************************************************************
nl_queries:
For all storms with at least 1 death , compare the number of deaths by name , order by the Y from high to low .
database schema:
Table storm, columns = [*,Storm_ID, Name, Dates_active, Max_speed, Damage_millions_USD, Number_Deaths]
target dvq:
Visualize BAR SELECT Name , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Number_Deaths DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of job_id and the sum of manager_id , and group by attribute job_id in a bar chart , and sort by the x-axis in asc .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
A line chart for what are the number of the dates that have an average sea level pressure between 303 and 31 ? , and I want to display date from low to high order .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize LINE SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31 GROUP BY date ORDER BY date ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find job_id and the sum of employee_id , and group by attribute job_id , and visualize them by a bar chart , display in descending by the sum employee id .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY SUM(EMPLOYEE_ID) DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the correlation between commission_pct and department_id in a scatter chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT COMMISSION_PCT , DEPARTMENT_ID FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of job_id and the sum of salary , and group by attribute job_id in a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of job_id and the sum of employee_id , and group by attribute job_id , and list in descending by the JOB_ID please .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a line chart shows the change of commission_pct over hire_date , display x axis from low to high order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of job_id and the sum of manager_id , and group by attribute job_id , and list in asc by the X .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
How many professors have a PhD in each department Show bar chart , and could you order by the y-axis from low to high ?
database schema:
Table COURSE, columns = [*,CRS_CODE, DEPT_CODE, CRS_DESCRIPTION, CRS_CREDIT]
Table DEPARTMENT, columns = [*,DEPT_CODE, DEPT_NAME, SCHOOL_CODE, EMP_NUM, DEPT_ADDRESS, DEPT_EXTENSION]
Table PROFESSOR, columns = [*,EMP_NUM, DEPT_CODE, PROF_OFFICE, PROF_EXTENSION, PROF_HIGH_DEGREE]
Table STUDENT, columns = [*,STU_NUM, STU_LNAME, STU_FNAME, STU_INIT, STU_DOB, STU_HRS, STU_CLASS, STU_GPA, STU_TRANSFER, DEPT_CODE, STU_PHONE, PROF_NUM]
target dvq:
Visualize BAR SELECT DEPT_CODE , count(*) FROM professor WHERE prof_high_degree = 'Ph.D.' GROUP BY dept_code ORDER BY count(*) ASC
****************************************************************************************************
nl_queries:
Visualize a bar chart for what are the district names and city populations for all districts that between 200 , 000 and 2 , 000 , 000 residents ? , and I want to sort Y-axis in descending order .
database schema:
Table district, columns = [*,District_ID, District_name, Headquartered_City, City_Population, City_Area]
target dvq:
Visualize BAR SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000 ORDER BY City_Population DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a line chart about the change of salary over hire_date , sort x axis in ascending order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
What are the number of the category of music festivals with result "Awarded" ? , I want to rank y-axis in desc order please .
database schema:
Table music_festival, columns = [*,ID, Music_Festival, Date_of_ceremony, Category, Volume, Result]
target dvq:
Visualize BAR SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = "Awarded" GROUP BY Category ORDER BY COUNT(Category) DESC
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , return a pie chart about the proportion of name and price .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize PIE SELECT Name , Price FROM products WHERE price BETWEEN 60 AND 120
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of manager_id over the hire_date bin hire_date by weekday by a bar chart , and could you sort by the Y-axis in ascending ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(MANAGER_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Return a bar chart on what are the district names and city populations for all districts that between 200 , 000 and 2 , 000 , 000 residents ? , and display in desc by the bars .
database schema:
Table district, columns = [*,District_ID, District_name, Headquartered_City, City_Population, City_Area]
target dvq:
Visualize BAR SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000 ORDER BY District_name DESC
****************************************************************************************************
nl_queries:
Give me a bar chart showing the comparison of the pixel aspect ratio and the nation of the tv channels that do not use English , could you sort by the X-axis in ascending please ?
database schema:
Table TV_Channel, columns = [*,id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option]
target dvq:
Visualize BAR SELECT Pixel_aspect_ratio_PAR , COUNT(Pixel_aspect_ratio_PAR) FROM tv_channel WHERE LANGUAGE != 'English' GROUP BY Pixel_aspect_ratio_PAR ORDER BY Pixel_aspect_ratio_PAR ASC
****************************************************************************************************
nl_queries:
Count the number of captains younger than 50 of each rank , list by the y-axis in asc .
database schema:
Table captain, columns = [*,Captain_ID, Name, Ship_ID, age, Class, Rank]
target dvq:
Visualize BAR SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank ORDER BY count(*) ASC
****************************************************************************************************
nl_queries:
Visualize a pie chart with what are the names and seatings for all tracks opened after 2000 ?
database schema:
Table race, columns = [*,Race_ID, Name, Class, Date, Track_ID]
Table track, columns = [*,Track_ID, Name, Location, Seating, Year_Opened]
target dvq:
Visualize PIE SELECT Name , Seating FROM track WHERE year_opened > 2000
****************************************************************************************************
nl_queries:
Find the number of the dates of the tests taken with result "Pass" , sort from low to high by the y axis .
database schema:
Table Student_Tests_Taken, columns = [*,registration_id, date_test_taken, test_result]
target dvq:
Visualize BAR SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = "Pass"  ORDER BY COUNT(date_test_taken) ASC BIN date_test_taken BY WEEKDAY
****************************************************************************************************
nl_queries:
For all storms with at least 1 death , compare the total number of deaths by dates_active attribute , and order in ascending by the Y .
database schema:
Table storm, columns = [*,Storm_ID, Name, Dates_active, Max_speed, Damage_millions_USD, Number_Deaths]
target dvq:
Visualize BAR SELECT Dates_active , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Number_Deaths ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the sum of department_id bin hire_date by time in a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a line chart about the change of salary over hire_date , sort HIRE_DATE in desc order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a scatter chart about the correlation between salary and commission_pct .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT SALARY , COMMISSION_PCT FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me the trend about commission_pct over hire_date with a line chart , and order from high to low by the x axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the amount of hire_date bin hire_date by weekday , and visualize them by a bar chart , and I want to order in descending by the y axis .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by time , and list by the sum department id from high to low .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(DEPARTMENT_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Return the date of birth for all the guests with gender code "Male" , and count them by a line chart
database schema:
Table Guests, columns = [*,guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth]
target dvq:
Visualize LINE SELECT date_of_birth , COUNT(date_of_birth) FROM Guests WHERE gender_code = "Male" BIN date_of_birth BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of job_id and the sum of salary , and group by attribute job_id in a bar chart .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a line chart shows the trend of commission_pct over hire_date .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
For those employees whose first name does not contain the letter M , give me a line chart to show the hire date and the corresponding salaries .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE first_name NOT LIKE '%M%'
****************************************************************************************************
nl_queries:
What is the average age for a male in each job Visualize by bar chart , and sort X-axis from low to high order .
database schema:
Table Person, columns = [*,name, age, city, gender, job]
target dvq:
Visualize BAR SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY job ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id , and I want to sort in ascending by the bar .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For those employees whose first name does not containing the letter M , display their average salary by binning the hire date into Month interval for visualizing a bar chart , and order in asc by the y axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name NOT LIKE '%M%'  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
A bar chart for what are the number of the names of products with price at most 200 ?
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , COUNT(Name) FROM products WHERE price <= 200 GROUP BY Name
****************************************************************************************************
nl_queries:
What is the name of the technician whose team is not 'NYY' , and count them by a bar chart , show by the y-axis in ascending .
database schema:
Table repair, columns = [*,repair_ID, name, Launch_Date, Notes]
Table machine, columns = [*,Machine_ID, Making_Year, Class, Team, Machine_series, value_points, quality_rank]
Table technician, columns = [*,technician_id, Name, Team, Starting_Year, Age]
target dvq:
Visualize BAR SELECT Name , COUNT(Name) FROM technician WHERE Team != "NYY" GROUP BY Name ORDER BY COUNT(Name) ASC
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , visualize a pie chart about the proportion of name and price .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize PIE SELECT Name , Price FROM products WHERE price BETWEEN 60 AND 120
****************************************************************************************************
nl_queries:
Show the number of male and female assistant professors with a bar chart , and sort from high to low by the y-axis .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
Table Faculty, columns = [*,FacID, Lname, Fname, Rank, Sex, Phone, Room, Building]
target dvq:
Visualize BAR SELECT Sex , count(*) FROM Faculty WHERE rank = "AsstProf" GROUP BY sex ORDER BY count(*) DESC
****************************************************************************************************
nl_queries:
Show the number of products with price higher than 1000 or lower than 500 for each product name in a bar chart , and display from high to low by the x axis please .
database schema:
Table Products, columns = [*,product_id, product_type_code, product_name, product_price]
target dvq:
Visualize BAR SELECT product_name , COUNT(product_name) FROM products WHERE product_price > 1000 OR product_price < 500 GROUP BY product_name ORDER BY product_name DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of manager_id over the job_id , and group by attribute job_id by a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a scatter chart about the correlation between salary and commission_pct .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT SALARY , COMMISSION_PCT FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of manager_id over the job_id , and group by attribute job_id by a bar chart , and could you order bar in asc order ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by time , could you rank by the Y in asc ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(EMPLOYEE_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the sum of department_id bin hire_date by weekday , and visualize them by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Show me the proportion on how many captains with younger than 50 are in each rank ?
database schema:
Table captain, columns = [*,Captain_ID, Name, Ship_ID, age, Class, Rank]
target dvq:
Visualize PIE SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank
****************************************************************************************************
nl_queries:
Can you give me a bar chart to show the name and membership level of the visitors whose membership level is higher than 4 , list in desc by the x axis please .
database schema:
Table museum, columns = [*,Museum_ID, Name, Num_of_Staff, Open_Year]
Table visitor, columns = [*,ID, Name, Level_of_membership, Age]
target dvq:
Visualize BAR SELECT Name , Level_of_membership FROM visitor WHERE Level_of_membership > 4 ORDER BY Name DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a scatter chart about the correlation between manager_id and department_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT MANAGER_ID , DEPARTMENT_ID FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the sum of employee_id over the hire_date bin hire_date by weekday by a bar chart , and display from low to high by the y axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(EMPLOYEE_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
What are the payment date of the payment with amount paid higher than 300 or with payment type is 'Check , and count them by a line chart , and show X from high to low order .
database schema:
Table Payments, columns = [*,payment_id, booking_id, customer_id, payment_type_code, amount_paid_in_full_yn, payment_date, amount_due, amount_paid]
target dvq:
Visualize LINE SELECT payment_date , COUNT(payment_date) FROM payments WHERE amount_paid > 300 OR payment_type_code = 'Check' GROUP BY payment_date ORDER BY payment_date DESC
****************************************************************************************************
nl_queries:
A bar chart about how many professors have a PhD in each department ? , sort by the Y in desc .
database schema:
Table COURSE, columns = [*,CRS_CODE, DEPT_CODE, CRS_DESCRIPTION, CRS_CREDIT]
Table DEPARTMENT, columns = [*,DEPT_CODE, DEPT_NAME, SCHOOL_CODE, EMP_NUM, DEPT_ADDRESS, DEPT_EXTENSION]
Table PROFESSOR, columns = [*,EMP_NUM, DEPT_CODE, PROF_OFFICE, PROF_EXTENSION, PROF_HIGH_DEGREE]
Table STUDENT, columns = [*,STU_NUM, STU_LNAME, STU_FNAME, STU_INIT, STU_DOB, STU_HRS, STU_CLASS, STU_GPA, STU_TRANSFER, DEPT_CODE, STU_PHONE, PROF_NUM]
target dvq:
Visualize BAR SELECT DEPT_CODE , count(*) FROM professor WHERE prof_high_degree = 'Ph.D.' GROUP BY dept_code ORDER BY count(*) DESC
****************************************************************************************************
nl_queries:
Return a bar chart on what are the names and seatings for all tracks opened after 2000 , ordered by seating ?
database schema:
Table race, columns = [*,Race_ID, Name, Class, Date, Track_ID]
Table track, columns = [*,Track_ID, Name, Location, Seating, Year_Opened]
target dvq:
Visualize BAR SELECT Name , Seating FROM track WHERE year_opened > 2000 ORDER BY seating
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of job_id and the sum of department_id , and group by attribute job_id , and sort by the bar from low to high please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me the trend about manager_id over hire_date with a line chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
Show the proportion of the number of grape of the wines whose price is bigger than 100 ordered by year .
database schema:
Table grapes, columns = [*,ID, Grape, Color]
Table wine, columns = [*,No, Grape, Winery, Appelation, State, Name, Year, Price, Score, Cases, Drink]
target dvq:
Visualize PIE SELECT Grape , COUNT(Grape) FROM WINE WHERE Price > 100 GROUP BY Grape
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find hire_date and the average of salary bin hire_date by weekday , and visualize them by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Who are the nominees who were nominated for either of the Bob Fosse or Cleavant Derricks awards , and count them by a bar chart , could you show y-axis in ascending order ?
database schema:
Table musical, columns = [*,Musical_ID, Name, Year, Award, Category, Nominee, Result]
target dvq:
Visualize BAR SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = "Tony Award" OR Award = "Cleavant Derricks" GROUP BY Nominee ORDER BY COUNT(Nominee) ASC
****************************************************************************************************
nl_queries:
Find the number of the dates of the tests taken with result "Pass" .
database schema:
Table Student_Tests_Taken, columns = [*,registration_id, date_test_taken, test_result]
target dvq:
Visualize BAR SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = "Pass" GROUP BY date_test_taken
****************************************************************************************************
nl_queries:
A bar chart for what are the number of the category of music festivals with result "Awarded" ? , and I want to order by the X-axis from high to low .
database schema:
Table music_festival, columns = [*,ID, Music_Festival, Date_of_ceremony, Category, Volume, Result]
target dvq:
Visualize BAR SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = "Awarded" GROUP BY Category ORDER BY Category DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of job_id and the amount of job_id , and group by attribute job_id .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a line chart about the change of employee_id over hire_date , rank by the X-axis in ascending .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the amount of job_id over the job_id , and group by attribute job_id by a bar chart , and display X-axis in asc order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
What is the number of grapes with scores above 93 , sorted by Name ? Visualize by a bar chart .
database schema:
Table grapes, columns = [*,ID, Grape, Color]
Table wine, columns = [*,No, Grape, Winery, Appelation, State, Name, Year, Price, Score, Cases, Drink]
target dvq:
Visualize BAR SELECT Grape , COUNT(Grape) FROM WINE WHERE Score > 93 GROUP BY Grape ORDER BY Name
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a bar chart shows the distribution of job_id and the sum of manager_id , and group by attribute job_id , and could you order x axis in asc order ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by time , could you display by the Y in ascending ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(MANAGER_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the sum of department_id over the job_id , and group by attribute job_id by a bar chart , list in ascending by the X .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
Which tests have "Pass" results ? Return the dates when the tests were taken , and count them by a line chart
database schema:
Table Student_Tests_Taken, columns = [*,registration_id, date_test_taken, test_result]
target dvq:
Visualize LINE SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = "Pass" BIN date_test_taken BY DAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of hire_date and the sum of employee_id bin hire_date by time in a bar chart , and list Y-axis in descending order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(EMPLOYEE_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of job_id and the sum of employee_id , and group by attribute job_id , and sort y axis in ascending order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY SUM(EMPLOYEE_ID) ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of hire_date and the average of department_id bin hire_date by weekday , I want to show in desc by the y-axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(DEPARTMENT_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those dates with a max temperature greater than or equal to 80 , I want to see the number of days for each year using a bar chart , and show in asc by the total number .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f >= 80  ORDER BY COUNT(date) ASC BIN date BY YEAR
****************************************************************************************************
nl_queries:
List the dog name and age of the dogs who have been abandoned in a pie chart .
database schema:
Table Dogs, columns = [*,dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed]
target dvq:
Visualize PIE SELECT name , weight FROM Dogs WHERE abandoned_yn = 1
****************************************************************************************************
nl_queries:
For all storms with at least 1 death , compare the number of deaths by name , and I want to order by the names from high to low .
database schema:
Table storm, columns = [*,Storm_ID, Name, Dates_active, Max_speed, Damage_millions_USD, Number_Deaths]
target dvq:
Visualize BAR SELECT Name , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Name DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , for manager_id , hire_date , visualize the trend .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a line chart shows the change of commission_pct over hire_date , and I want to display in desc by the x-axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of job_id and the sum of department_id , and group by attribute job_id .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
Bin the hire date into the day of week interval , and then calculate the total salary of employees in each day for a bar chart , note that just select those employees without the letter M in their first name .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name NOT LIKE '%M%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
A line chart for finding the number of the dates of the tests taken with result "Pass" , order X in asc order .
database schema:
Table Student_Tests_Taken, columns = [*,registration_id, date_test_taken, test_result]
target dvq:
Visualize LINE SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = "Pass"  ORDER BY date_test_taken ASC BIN date_test_taken BY DAY
****************************************************************************************************
nl_queries:
What are the dates of transactions with at least 100 share count or amount bigger than 100 , and count them by a bar chart , and order in desc by the the number of date of transaction .
database schema:
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100  ORDER BY COUNT(date_of_transaction) DESC BIN date_of_transaction BY WEEKDAY
****************************************************************************************************
nl_queries:
Count the number of captains younger than 50 of each rank by a bar chart , rank in ascending by the Rank .
database schema:
Table captain, columns = [*,Captain_ID, Name, Ship_ID, age, Class, Rank]
target dvq:
Visualize BAR SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank ORDER BY Rank ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the change of manager_id over hire_date in a line chart , and rank x axis from high to low order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
For those employees whose first name is ending with the letter m , show the frequency of the first name using a bar chart , and rank total number in ascending order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT FIRST_NAME , COUNT(FIRST_NAME) FROM employees WHERE first_name LIKE '%m' GROUP BY FIRST_NAME ORDER BY COUNT(FIRST_NAME) ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id , sort by the JOB_ID from low to high .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , draw a scatter chart about the correlation between code and price , and group by attribute name .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize SCATTER SELECT Code , Price FROM products WHERE price BETWEEN 60 AND 120 GROUP BY Name
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of job_id and the sum of employee_id , and group by attribute job_id .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of job_id and the amount of job_id , and group by attribute job_id in a bar chart , I want to display y-axis in asc order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY COUNT(JOB_ID) ASC
****************************************************************************************************
nl_queries:
What is the number of players who have points less than 30 for each position Plot them as bar chart , list in asc by the x axis please .
database schema:
Table player, columns = [*,Player_ID, name, Position, Club_ID, Apps, Tries, Goals, Points]
target dvq:
Visualize BAR SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION ORDER BY Position ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id , order in asc by the Y .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY SUM(MANAGER_ID) ASC
****************************************************************************************************
nl_queries:
What are the dates that have an average sea level pressure between 30 . 3 and 31 , and count them by a line chart
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize LINE SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31 GROUP BY date
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , for department_id , hire_date , visualize the trend , and could you order X in desc order ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
Give me a bar chart to show how many days with a max temperature greater than or equal to 80 for each year , and could you list total number in ascending order ?
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f >= 80  ORDER BY COUNT(date) ASC BIN date BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of job_id and the sum of employee_id , and group by attribute job_id , and show bars from high to low order please .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of job_id and the average of department_id , and group by attribute job_id , and order the average of department id in ascending order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY AVG(DEPARTMENT_ID) ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of hire_date and the average of department_id bin hire_date by weekday in a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by weekday , and I want to order from low to high by the y axis .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(MANAGER_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Return the number of the categories of music festivals that have the result "Awarded" .
database schema:
Table music_festival, columns = [*,ID, Music_Festival, Date_of_ceremony, Category, Volume, Result]
target dvq:
Visualize BAR SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = "Awarded" GROUP BY Category
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , return a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by time , and could you list total number in desc order ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the sum of manager_id over the hire_date bin hire_date by weekday , and I want to list in desc by the y axis .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(MANAGER_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of job_id and the sum of employee_id , and group by attribute job_id , and sort x axis from high to low order please .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
Show the number of male and female assistant professors Plot them as bar chart , and display in asc by the Sex .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
Table Faculty, columns = [*,FacID, Lname, Fname, Rank, Sex, Phone, Room, Building]
target dvq:
Visualize BAR SELECT Sex , count(*) FROM Faculty WHERE rank = "AsstProf" GROUP BY sex ORDER BY Sex ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the trend about manager_id over hire_date , sort from high to low by the X-axis .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the amount of hire_date bin hire_date by time , list by the Y from low to high please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , give me the comparison about price over the name by a bar chart , and sort by the Y from high to low please .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Price FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Price DESC
****************************************************************************************************
nl_queries:
What are the number of the names of products with price at most 200 ?
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , COUNT(Name) FROM products WHERE price <= 200 GROUP BY Name
****************************************************************************************************
nl_queries:
Find the number of people who is under 40 for each gender , and list x axis in asc order .
database schema:
Table Person, columns = [*,name, age, city, gender, job]
target dvq:
Visualize BAR SELECT gender , count(*) FROM Person WHERE age < 40 GROUP BY gender ORDER BY gender ASC
****************************************************************************************************
nl_queries:
Find the number of employees of each gender whose salary is lower than 50000 Visualize by bar chart , could you rank in descending by the Sex ?
database schema:
Table employee, columns = [*,Fname, Minit, Lname, Ssn, Bdate, Address, Sex, Salary, Super_ssn, Dno]
Table dependent, columns = [*,Essn, Dependent_name, Sex, Bdate, Relationship]
target dvq:
Visualize BAR SELECT Sex , count(*) FROM employee WHERE salary < 50000 GROUP BY sex ORDER BY Sex DESC
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , return a bar chart about the distribution of name and code , I want to sort from low to high by the Y .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Code FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Code ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the average of salary bin hire_date by time , and visualize them by a bar chart , display Y in desc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
What is the market value of every comapny in the banking industry ? Return a pie chart .
database schema:
Table company, columns = [*,Company_ID, Rank, Company, Headquarters, Main_Industry, Sales_billion, Profits_billion, Assets_billion, Market_Value]
target dvq:
Visualize PIE SELECT Company , Market_Value FROM company WHERE main_industry = 'Banking'
****************************************************************************************************
nl_queries:
A bar chart about what is the id and weight of every pet who is older than 1 ?
database schema:
Table Has_Pet, columns = [*,StuID, PetID]
Table Pets, columns = [*,PetID, PetType, pet_age, weight]
target dvq:
Visualize BAR SELECT PetID , weight FROM pets WHERE pet_age > 1
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , find hire_date and the sum of manager_id bin hire_date by time , and visualize them by a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , draw a bar chart about the distribution of name and manufacturer .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Manufacturer FROM products WHERE price BETWEEN 60 AND 120
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of hire_date and the amount of hire_date bin hire_date by weekday in a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the average of employee_id over the hire_date bin hire_date by time , display in desc by the the average of employee id .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(EMPLOYEE_ID) DESC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For employees with first names that end with the letter m , give me a bar chart to show their total salary , I want to display by the bar in ascending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT FIRST_NAME , SUM(SALARY) FROM employees WHERE first_name LIKE '%m' GROUP BY FIRST_NAME ORDER BY FIRST_NAME ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of job_id and the sum of department_id , and group by attribute job_id , and show Y in asc order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY SUM(DEPARTMENT_ID) ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me the trend about salary over hire_date with a line chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
In which years cars were produced weighing no less than 3000 and no more than 4000 , and count them by a bar chart , and order by the Y in desc .
database schema:
Table cars_data, columns = [*,Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year]
target dvq:
Visualize BAR SELECT Year , COUNT(Year) FROM cars_data where weight between 3000 and 4000  ORDER BY COUNT(Year) DESC BIN Year BY WEEKDAY
****************************************************************************************************
nl_queries:
Select the name of the products with a price less than or equal to $200 , and count them by a bar chart
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , COUNT(Name) FROM products WHERE price <= 200 GROUP BY Name
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of job_id and the average of department_id , and group by attribute job_id , order Y from high to low order .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY AVG(DEPARTMENT_ID) DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of job_id and the sum of department_id , and group by attribute job_id in a bar chart , and order in ascending by the names .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , return a bar chart about the distribution of name and price , order in desc by the y axis .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Price FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Price DESC
****************************************************************************************************
nl_queries:
A bar chart about what are the different affiliations , and what is the total enrollment of schools founded after 1850 for each enrollment type ? , list y-axis in asc order .
database schema:
Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]
target dvq:
Visualize BAR SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation ORDER BY sum(Enrollment) ASC
****************************************************************************************************
nl_queries:
How many professors have a Ph . D . in each department . Show bar chart .
database schema:
Table COURSE, columns = [*,CRS_CODE, DEPT_CODE, CRS_DESCRIPTION, CRS_CREDIT]
Table DEPARTMENT, columns = [*,DEPT_CODE, DEPT_NAME, SCHOOL_CODE, EMP_NUM, DEPT_ADDRESS, DEPT_EXTENSION]
Table PROFESSOR, columns = [*,EMP_NUM, DEPT_CODE, PROF_OFFICE, PROF_EXTENSION, PROF_HIGH_DEGREE]
Table STUDENT, columns = [*,STU_NUM, STU_LNAME, STU_FNAME, STU_INIT, STU_DOB, STU_HRS, STU_CLASS, STU_GPA, STU_TRANSFER, DEPT_CODE, STU_PHONE, PROF_NUM]
target dvq:
Visualize BAR SELECT DEPT_CODE , count(*) FROM professor WHERE prof_high_degree = 'Ph.D.' GROUP BY dept_code
****************************************************************************************************
nl_queries:
Give me the number of the dates when the max temperature was higher than 85 , and order by the X from low to high .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize LINE SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85 GROUP BY date ORDER BY date ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the sum of salary over the job_id , and group by attribute job_id , and sort in asc by the y-axis .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY SUM(SALARY) ASC
****************************************************************************************************
nl_queries:
Count the number of captains younger than 50 of each rank , and rank in ascending by the Rank .
database schema:
Table captain, columns = [*,Captain_ID, Name, Ship_ID, age, Class, Rank]
target dvq:
Visualize BAR SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank ORDER BY Rank ASC
****************************************************************************************************
nl_queries:
What are the number of dates of birth of all the guests whose gender is "Male" ? , list by the y-axis in descending .
database schema:
Table Guests, columns = [*,guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth]
target dvq:
Visualize BAR SELECT date_of_birth , COUNT(date_of_birth) FROM Guests WHERE gender_code = "Male"  ORDER BY COUNT(date_of_birth) DESC BIN date_of_birth BY WEEKDAY
****************************************************************************************************
nl_queries:
What are the number of the dates with a maximum temperature higher than 85 ?
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize LINE SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85 GROUP BY date
****************************************************************************************************
nl_queries:
How many wines with a price higher than 100 of each year ? Show a bar chart that converts year into weekday interval , and I want to show by the Y in ascending .
database schema:
Table wine, columns = [*,No, Grape, Winery, Appelation, State, Name, Year, Price, Score, Cases, Drink]
target dvq:
Visualize BAR SELECT Year , COUNT(Year) FROM WINE WHERE Price > 100  ORDER BY COUNT(Year) ASC BIN Year BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday , and order by the y-axis in descending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(DEPARTMENT_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of department_id over the job_id , and group by attribute job_id , could you order y-axis in ascending order ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY AVG(DEPARTMENT_ID) ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the distribution of hire_date and the average of manager_id bin hire_date by weekday in a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a bar chart shows the distribution of job_id and the sum of salary , and group by attribute job_id , and order by the JOB_ID from low to high .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the trend about employee_id over hire_date .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
What are the dates in which the mean sea level pressure was between 30 . 3 and 31 , and count them by a bar chart
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31 BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
List the physicians' employee ids together with their primary affiliation departments' ids with a scatter chart .
database schema:
Table Physician, columns = [*,EmployeeID, Name, Position, SSN]
Table Department, columns = [*,DepartmentID, Name, Head]
Table Affiliated_With, columns = [*,Physician, Department, PrimaryAffiliation]
Table Trained_In, columns = [*,Physician, Treatment, CertificationDate, CertificationExpires]
Table Appointment, columns = [*,AppointmentID, Patient, PrepNurse, Physician, Start, End, ExaminationRoom]
Table Prescribes, columns = [*,Physician, Patient, Medication, Date, Appointment, Dose]
Table Undergoes, columns = [*,Patient, Procedures, Stay, DateUndergoes, Physician, AssistingNurse]
target dvq:
Visualize SCATTER SELECT Physician , Department FROM affiliated_with WHERE primaryaffiliation = 1
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find hire_date and the amount of hire_date bin hire_date by time , and visualize them by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the amount of job_id over the job_id , and group by attribute job_id , and sort by the y axis in desc .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY COUNT(JOB_ID) DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a line chart shows the trend of salary over hire_date , and I want to order HIRE_DATE from low to high order please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time , could you sort by the the average of department id in asc ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(DEPARTMENT_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
What are the number of the category of music festivals with result "Awarded" ? , could you order in ascending by the X-axis ?
database schema:
Table music_festival, columns = [*,ID, Music_Festival, Date_of_ceremony, Category, Volume, Result]
target dvq:
Visualize BAR SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = "Awarded" GROUP BY Category ORDER BY Category ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of department_id over the job_id , and group by attribute job_id , could you rank from high to low by the y axis ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY AVG(DEPARTMENT_ID) DESC
****************************************************************************************************
nl_queries:
What are the dates in which the mean sea level pressure was between 303 and 31 , and count them by a line chart , and list X-axis in desc order .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize LINE SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31 GROUP BY date ORDER BY date DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , find job_id and the average of manager_id , and group by attribute job_id , and visualize them by a bar chart , could you display JOB_ID in asc order ?
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday , and order by the Y-axis in descending .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those dates with a max temperature greater than or equal to 80 , I want to know the number of days on the day of the week interval using a bar chart .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f >= 80 BIN date BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the sum of salary over the hire_date bin hire_date by weekday by a bar chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose first name is ending with the letter m , sum their salary for visualizing a bar chart , and order by the names from low to high please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT FIRST_NAME , SUM(SALARY) FROM employees WHERE first_name LIKE '%m' GROUP BY FIRST_NAME ORDER BY FIRST_NAME ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the average of salary over the hire_date bin hire_date by time , show by the y-axis in ascending please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
What are the payment date of the payment with amount paid higher than 300 or with payment type is 'Check , and count them by a line chart , show X from low to high order .
database schema:
Table Payments, columns = [*,payment_id, booking_id, customer_id, payment_type_code, amount_paid_in_full_yn, payment_date, amount_due, amount_paid]
target dvq:
Visualize LINE SELECT payment_date , COUNT(payment_date) FROM payments WHERE amount_paid > 300 OR payment_type_code = 'Check' GROUP BY payment_date ORDER BY payment_date ASC
****************************************************************************************************
nl_queries:
Show all dates of transactions whose type code is "SALE" , and count them by a line chart , show from low to high by the x-axis .
database schema:
Table Ref_Transaction_Types, columns = [*,transaction_type_code, transaction_type_description]
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE transaction_type_code = "SALE"  ORDER BY date_of_transaction ASC BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , give me the comparison about the sum of employee_id over the hire_date bin hire_date by weekday , and sort Y-axis in desc order please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(EMPLOYEE_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , draw a bar chart about the distribution of job_id and the average of department_id , and group by attribute job_id , and order total number in desc order .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY AVG(DEPARTMENT_ID) DESC
****************************************************************************************************
nl_queries:
A bar chart about what is the id and weight of every pet who is older than 1 ? , and could you show in ascending by the y-axis please ?
database schema:
Table Has_Pet, columns = [*,StuID, PetID]
Table Pets, columns = [*,PetID, PetType, pet_age, weight]
target dvq:
Visualize BAR SELECT PetID , weight FROM pets WHERE pet_age > 1 ORDER BY weight ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , show me about the correlation between employee_id and manager_id in a scatter chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT EMPLOYEE_ID , MANAGER_ID FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
Draw a bar chart for what is average age of male for different job title ? , and sort in desc by the x axis .
database schema:
Table Person, columns = [*,name, age, city, gender, job]
target dvq:
Visualize BAR SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY job DESC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a bar chart about the distribution of hire_date and the sum of salary bin hire_date by weekday , I want to display by the Y-axis in desc .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by weekday , display in descending by the Y please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(EMPLOYEE_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a bar chart shows the distribution of hire_date and the average of manager_id bin hire_date by time .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by weekday , and could you list y axis in desc order ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(MANAGER_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , find name and price , and visualize them by a bar chart , I want to rank by the y-axis in asc please .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Price FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Price ASC
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , draw a line chart about the change of manager_id over hire_date .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of hire_date and the average of salary bin hire_date by weekday , and sort in descending by the mean salary please .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
Show the number of products with price higher than 1000 or lower than 500 for each product type code in a pie chart .
database schema:
Table Products, columns = [*,product_id, product_type_code, product_name, product_price]
target dvq:
Visualize PIE SELECT product_type_code , COUNT(product_type_code) FROM products WHERE product_price > 1000 OR product_price < 500 GROUP BY product_type_code
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , draw a bar chart about the distribution of name and manufacturer , and I want to sort from high to low by the total number .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Manufacturer FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Manufacturer DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , give me the comparison about the amount of hire_date over the hire_date bin hire_date by weekday by a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
List how many students in each last name who majored in 600 using a bar chart , I want to show from low to high by the y-axis .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
target dvq:
Visualize BAR SELECT LName , COUNT(LName) FROM Student WHERE Major = 600 GROUP BY LName ORDER BY COUNT(LName) ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize the relationship between employee_id and commission_pct .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT EMPLOYEE_ID , COMMISSION_PCT FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id , and I want to rank y-axis in desc order please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY AVG(EMPLOYEE_ID) DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the distribution of hire_date and the average of manager_id bin hire_date by time in a bar chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Return the date of birth for all the guests with gender code "Male" , and count them by a line chart , and display from high to low by the X .
database schema:
Table Guests, columns = [*,guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth]
target dvq:
Visualize LINE SELECT date_of_birth , COUNT(date_of_birth) FROM Guests WHERE gender_code = "Male"  ORDER BY date_of_birth DESC BIN date_of_birth BY YEAR
****************************************************************************************************
nl_queries:
What are the names and prices of products that cost at least 180 , sorted by price decreasing and name ascending . Visualize by pie chart .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize PIE SELECT Name , Price FROM products WHERE price >= 180 ORDER BY price DESC , name ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the correlation between employee_id and department_id in a scatter chart .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT EMPLOYEE_ID , DEPARTMENT_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , return a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id , and rank in asc by the y-axis .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY AVG(EMPLOYEE_ID) ASC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , show me about the distribution of job_id and the average of salary , and group by attribute job_id in a bar chart , display in ascending by the Y .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY AVG(SALARY) ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a bar chart shows the distribution of job_id and the average of department_id , and group by attribute job_id , sort in descending by the bar .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by time , and I want to order y-axis in asc order .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(EMPLOYEE_ID) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
What are the dates with a maximum temperature higher than 85 , and count them by a bar chart , sort by the the number of date in descending please .
database schema:
Table weather, columns = [*,date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_Speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]
target dvq:
Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) DESC BIN date BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , visualize a scatter chart about the correlation between employee_id and commission_pct .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT EMPLOYEE_ID , COMMISSION_PCT FROM employees WHERE hire_date < '2002-06-21'
****************************************************************************************************
nl_queries:
Display a bar chart for how many male and female assistant professors do we have ? , list by the Sex from low to high .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
Table Faculty, columns = [*,FacID, Lname, Fname, Rank, Sex, Phone, Room, Building]
target dvq:
Visualize BAR SELECT Sex , count(*) FROM Faculty WHERE rank = "AsstProf" GROUP BY sex ORDER BY Sex ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , a line chart shows the change of salary over hire_date , and could you sort HIRE_DATE from high to low order ?
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , a bar chart shows the distribution of hire_date and the sum of manager_id bin hire_date by weekday , order in ascending by the y axis .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY SUM(MANAGER_ID) ASC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , return a bar chart about the distribution of job_id and the average of department_id , and group by attribute job_id , could you rank from high to low by the y axis ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY AVG(DEPARTMENT_ID) DESC
****************************************************************************************************
nl_queries:
Show all dates of transactions whose type code is "SALE" , and count them by a line chart , and display by the x-axis from high to low .
database schema:
Table Ref_Transaction_Types, columns = [*,transaction_type_code, transaction_type_description]
Table Transactions, columns = [*,transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]
target dvq:
Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE transaction_type_code = "SALE"  ORDER BY date_of_transaction DESC BIN date_of_transaction BY YEAR
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , find job_id and the average of salary , and group by attribute job_id , and visualize them by a bar chart , I want to list in ascending by the X-axis .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
nl_queries:
Find the dates of the tests taken with result "Pass" , and count them by a bar chart , and order by the Y in asc .
database schema:
Table Student_Tests_Taken, columns = [*,registration_id, date_test_taken, test_result]
target dvq:
Visualize BAR SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = "Pass" GROUP BY date_test_taken ORDER BY COUNT(date_test_taken) ASC
****************************************************************************************************
nl_queries:
Show a bar chart about the number of results of the battles when the bulgarian commander is not 'Boril' , and I want to order by the the number of result from high to low .
database schema:
Table battle, columns = [*,id, name, date, bulgarian_commander, latin_commander, result]
target dvq:
Visualize BAR SELECT result , COUNT(result) FROM battle WHERE bulgarian_commander != 'Boril' GROUP BY result ORDER BY COUNT(result) DESC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , visualize a line chart about the change of salary over hire_date .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
List the number of winery of the wines whose price is bigger than 100 in a bar chart .
database schema:
Table wine, columns = [*,No, Grape, Winery, Appelation, State, Name, Year, Price, Score, Cases, Drink]
target dvq:
Visualize BAR SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Winery
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , give me the comparison about the amount of hire_date over the hire_date bin hire_date by time , and rank in asc by the total number please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY MONTH
****************************************************************************************************
nl_queries:
Show the average age for all female students and group them by last name with a bar chart .
database schema:
Table Student, columns = [*,StuID, LName, Fname, Age, Sex, Major, Advisor, city_code]
target dvq:
Visualize BAR SELECT LName , AVG(Age) FROM Student WHERE Sex = 'F' GROUP BY LName
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me the trend about manager_id over hire_date with a line chart , could you list by the HIRE_DATE from low to high please ?
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize LINE SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , show me about the correlation between salary and commission_pct in a scatter chart .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize SCATTER SELECT SALARY , COMMISSION_PCT FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
****************************************************************************************************
nl_queries:
For those products with a price between 60 and 120 , visualize a bar chart about the distribution of name and manufacturer , order in descending by the X-axis .
database schema:
Table Manufacturers, columns = [*,Code, Name, Headquarter, Founder, Revenue]
Table Products, columns = [*,Code, Name, Price, Manufacturer]
target dvq:
Visualize BAR SELECT Name , Manufacturer FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Name DESC
****************************************************************************************************
nl_queries:
For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40 , visualize a bar chart about the distribution of job_id and the sum of salary , and group by attribute job_id , and list Y-axis from low to high order please .
database schema:
Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != "null" OR department_id != 40 GROUP BY JOB_ID ORDER BY SUM(SALARY) ASC
****************************************************************************************************
nl_queries:
For all employees who have the letters D or S in their first name , draw a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by weekday , show by the the average of manager id in descending .
database schema:
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(MANAGER_ID) DESC BIN HIRE_DATE BY WEEKDAY
****************************************************************************************************
nl_queries:
For those employees who was hired before 2002-06-21 , a bar chart shows the distribution of job_id and the average of employee_id , and group by attribute job_id , and rank by the X in asc .
database schema:
Table jobs, columns = [*,JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY]
Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]
Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]
target dvq:
Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID ASC
****************************************************************************************************
