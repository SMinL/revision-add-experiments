[
    {
        "nl_queries": "Show me about the distribution of name and meter_100 in a bar chart .",
        "VQL": "Visualize BAR SELECT name , meter_100 FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT name , meter_100 FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT name , meter_100 FROM swimmer'}",
        "record_name": "2915",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Show me about the distribution of name and meter_100 in a bar chart .",
        "question_toks": [
            "Show",
            "me",
            "about",
            "the",
            "distribution",
            "of",
            "name",
            "and",
            "meter_100",
            "in",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT name , meter_100 FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "name",
            ",",
            "meter_100",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]@SEP@Table stadium, columns = [*,ID, name, Capacity, City, Country, Opening_year]@SEP@Table event, columns = [*,ID, Name, Stadium_ID, Year]",
        "choose_schema_rat_link": "swimmer.name@SEP@stadium.name@SEP@event.name@SEP@swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_400@SEP@swimmer.meter_500@SEP@swimmer.meter_600@SEP@swimmer.meter_700"
    },
    {
        "nl_queries": "Show the product ids and the number of unique orders containing each product . Plot them as scatter chart .",
        "VQL": "Visualize SCATTER SELECT product_id , count(DISTINCT order_id) FROM Order_items",
        "db_id": "customers_and_invoices",
        "hardness": "Medium",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT product_id , count(DISTINCT order_id) FROM Order_items', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT product_id , count(DISTINCT order_id) FROM Order_items'}",
        "record_name": "966",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        7
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                45,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                44,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Show the product ids and the number of unique orders containing each product . Plot them as scatter chart .",
        "question_toks": [
            "Show",
            "the",
            "product",
            "ids",
            "and",
            "the",
            "number",
            "of",
            "unique",
            "orders",
            "containing",
            "each",
            "product",
            ".",
            "Plot",
            "them",
            "as",
            "scatter",
            "chart",
            "."
        ],
        "query": "Visualize SCATTER SELECT product_id , count(DISTINCT order_id) FROM Order_items",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "product_id",
            ",",
            "count",
            "(",
            "DISTINCT",
            "order_id",
            ")",
            "FROM",
            "Order_items"
        ],
        "choose_schema": "Table Products, columns = [*,product_id, parent_product_id, production_type_code, unit_price, product_name, product_color, product_size]@SEP@Table Order_Items, columns = [*,order_item_id, order_id, product_id, product_quantity, other_order_item_details]@SEP@Table Invoice_Line_Items, columns = [*,order_item_id, invoice_number, product_id, product_title, product_quantity, product_price, derived_product_cost, derived_vat_payable, derived_total_cost]",
        "choose_schema_rat_link": "products.product_id@SEP@order_items.product_id@SEP@invoice_line_items.product_id@SEP@product_categories.product_type_description@SEP@products.product_name@SEP@products.product_color@SEP@products.product_size@SEP@order_items.product_quantity@SEP@invoice_line_items.product_title@SEP@invoice_line_items.product_quantity@SEP@invoice_line_items.product_price@SEP@orders.order_id@SEP@orders.order_details@SEP@invoices.order_id@SEP@order_items.order_item_id@SEP@order_items.order_id@SEP@invoice_line_items.order_item_id"
    },
    {
        "nl_queries": "List the snatch score and clean jerk score of body builders in ascending order of snatch score in a scatter chart",
        "VQL": "Visualize SCATTER SELECT Snatch , Clean_Jerk FROM body_builder",
        "db_id": "body_builder",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Snatch , Clean_Jerk FROM body_builder', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Snatch , Clean_Jerk FROM body_builder'}",
        "record_name": "362",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "List the snatch score and clean jerk score of body builders in ascending order of snatch score in a scatter chart",
        "question_toks": [
            "List",
            "the",
            "snatch",
            "score",
            "and",
            "clean",
            "jerk",
            "score",
            "of",
            "body",
            "builders",
            "in",
            "ascending",
            "order",
            "of",
            "snatch",
            "score",
            "in",
            "a",
            "scatter",
            "chart"
        ],
        "query": "Visualize SCATTER SELECT Snatch , Clean_Jerk FROM body_builder",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Snatch",
            ",",
            "Clean_Jerk",
            "FROM",
            "body_builder"
        ],
        "choose_schema": "Table body_builder, columns = [*,Body_Builder_ID, People_ID, Snatch, Clean_Jerk, Total]",
        "choose_schema_rat_link": "body_builder.clean_jerk@SEP@body_builder.body_builder_id@SEP@body_builder.snatch"
    },
    {
        "nl_queries": "A bar chart shows the distribution of meter_700 and meter_100 .",
        "VQL": "Visualize BAR SELECT meter_700 , meter_100 FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT meter_700 , meter_100 FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT meter_700 , meter_100 FROM swimmer'}",
        "record_name": "2925",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "A bar chart shows the distribution of meter_700 and meter_100 .",
        "question_toks": [
            "A",
            "bar",
            "chart",
            "shows",
            "the",
            "distribution",
            "of",
            "meter_700",
            "and",
            "meter_100",
            "."
        ],
        "query": "Visualize BAR SELECT meter_700 , meter_100 FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "meter_700",
            ",",
            "meter_100",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]",
        "choose_schema_rat_link": "swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_400@SEP@swimmer.meter_500@SEP@swimmer.meter_600@SEP@swimmer.meter_700"
    },
    {
        "nl_queries": "Draw a scatter chart about the correlation between Team_ID and All_Games_Percent .",
        "VQL": "Visualize SCATTER SELECT Team_ID , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Team_ID , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Team_ID , All_Games_Percent FROM basketball_match'}",
        "record_name": "3106",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Draw a scatter chart about the correlation between Team_ID and All_Games_Percent .",
        "question_toks": [
            "Draw",
            "a",
            "scatter",
            "chart",
            "about",
            "the",
            "correlation",
            "between",
            "Team_ID",
            "and",
            "All_Games_Percent",
            "."
        ],
        "query": "Visualize SCATTER SELECT Team_ID , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Team_ID",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name"
    },
    {
        "nl_queries": "Visualize a scatter chart about the correlation between People_ID and Clean_Jerk .",
        "VQL": "Visualize SCATTER SELECT People_ID , Clean_Jerk FROM body_builder",
        "db_id": "body_builder",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT People_ID , Clean_Jerk FROM body_builder', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT People_ID , Clean_Jerk FROM body_builder'}",
        "record_name": "361",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Visualize a scatter chart about the correlation between People_ID and Clean_Jerk .",
        "question_toks": [
            "Visualize",
            "a",
            "scatter",
            "chart",
            "about",
            "the",
            "correlation",
            "between",
            "People_ID",
            "and",
            "Clean_Jerk",
            "."
        ],
        "query": "Visualize SCATTER SELECT People_ID , Clean_Jerk FROM body_builder",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "People_ID",
            ",",
            "Clean_Jerk",
            "FROM",
            "body_builder"
        ],
        "choose_schema": "Table body_builder, columns = [*,Body_Builder_ID, People_ID, Snatch, Clean_Jerk, Total]@SEP@Table people, columns = [*,People_ID, Name, Height, Weight, Birth_Date, Birth_Place]",
        "choose_schema_rat_link": "body_builder.people_id@SEP@people.people_id@SEP@body_builder.clean_jerk"
    },
    {
        "nl_queries": "What are the names and distances for all airplanes . Visualize by bar chart .",
        "VQL": "Visualize BAR SELECT name , distance FROM Aircraft",
        "db_id": "flight_1",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT name , distance FROM Aircraft', 'binning': ''}, 'VQL': 'Visualize BAR SELECT name , distance FROM Aircraft'}",
        "record_name": "1414",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "What are the names and distances for all airplanes . Visualize by bar chart .",
        "question_toks": [
            "What",
            "are",
            "the",
            "names",
            "and",
            "distances",
            "for",
            "all",
            "airplanes",
            ".",
            "Visualize",
            "by",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT name , distance FROM Aircraft",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "name",
            ",",
            "distance",
            "FROM",
            "Aircraft"
        ],
        "choose_schema": "Table flight, columns = [*,flno, origin, destination, distance, departure_date, arrival_date, price, aid]@SEP@Table aircraft, columns = [*,aid, name, distance]@SEP@Table employee, columns = [*,eid, name, salary]",
        "choose_schema_rat_link": "aircraft.name@SEP@employee.name@SEP@flight.distance@SEP@aircraft.distance"
    },
    {
        "nl_queries": "Use a histogram to show the department's id and corresponding employees' first name .",
        "VQL": "Visualize BAR SELECT FIRST_NAME , DEPARTMENT_ID FROM employees",
        "db_id": "hr_1",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT FIRST_NAME , DEPARTMENT_ID FROM employees', 'binning': ''}, 'VQL': 'Visualize BAR SELECT FIRST_NAME , DEPARTMENT_ID FROM employees'}",
        "record_name": "1899",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                24,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Use a histogram to show the department's id and corresponding employees' first name .",
        "question_toks": [
            "Use",
            "a",
            "histogram",
            "to",
            "show",
            "the",
            "department's",
            "id",
            "and",
            "corresponding",
            "employees'",
            "first",
            "name",
            "."
        ],
        "query": "Visualize BAR SELECT FIRST_NAME , DEPARTMENT_ID FROM employees",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "FIRST_NAME",
            ",",
            "DEPARTMENT_ID",
            "FROM",
            "employees"
        ],
        "choose_schema": "Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]@SEP@Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]@SEP@Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]",
        "choose_schema_rat_link": "employees.first_name@SEP@departments.department_id@SEP@departments.department_name@SEP@employees.department_id@SEP@job_history.department_id@SEP@employees.employee_id@SEP@job_history.employee_id"
    },
    {
        "nl_queries": "Create a bar chart showing capacity across name",
        "VQL": "Visualize BAR SELECT Name , Capacity FROM cinema",
        "db_id": "cinema",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Name , Capacity FROM cinema', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Name , Capacity FROM cinema'}",
        "record_name": "474",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Create a bar chart showing capacity across name",
        "question_toks": [
            "Create",
            "a",
            "bar",
            "chart",
            "showing",
            "capacity",
            "across",
            "name"
        ],
        "query": "Visualize BAR SELECT Name , Capacity FROM cinema",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Name",
            ",",
            "Capacity",
            "FROM",
            "cinema"
        ],
        "choose_schema": "Table cinema, columns = [*,Cinema_ID, Name, Openning_year, Capacity, Location]",
        "choose_schema_rat_link": "schedule.show_times_per_day@SEP@cinema.capacity@SEP@cinema.name"
    },
    {
        "nl_queries": "Show me a scatter plot of people id and weight for .",
        "VQL": "Visualize SCATTER SELECT People_ID , Weight FROM people",
        "db_id": "candidate_poll",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT People_ID , Weight FROM people', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT People_ID , Weight FROM people'}",
        "record_name": "391",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Show me a scatter plot of people id and weight for .",
        "question_toks": [
            "Show",
            "me",
            "a",
            "scatter",
            "plot",
            "of",
            "people",
            "id",
            "and",
            "weight",
            "for",
            "."
        ],
        "query": "Visualize SCATTER SELECT People_ID , Weight FROM people",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "People_ID",
            ",",
            "Weight",
            "FROM",
            "people"
        ],
        "choose_schema": "Table candidate, columns = [*,Candidate_ID, People_ID, Poll_Source, Date, Support_rate, Consider_rate, Oppose_rate, Unsure_rate]@SEP@Table people, columns = [*,People_ID, Sex, Name, Date_of_Birth, Height, Weight]",
        "choose_schema_rat_link": "candidate.people_id@SEP@people.people_id@SEP@people.weight"
    },
    {
        "nl_queries": "Show the name and age for all drivers with a bar chart .",
        "VQL": "Visualize BAR SELECT Name , Age FROM driver",
        "db_id": "school_bus",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Name , Age FROM driver', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Name , Age FROM driver'}",
        "record_name": "2699",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Show the name and age for all drivers with a bar chart .",
        "question_toks": [
            "Show",
            "the",
            "name",
            "and",
            "age",
            "for",
            "all",
            "drivers",
            "with",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT Name , Age FROM driver",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Name",
            ",",
            "Age",
            "FROM",
            "driver"
        ],
        "choose_schema": "Table driver, columns = [*,Driver_ID, Name, Party, Home_city, Age]",
        "choose_schema_rat_link": "driver.name@SEP@driver.age@SEP@driver.driver_id@SEP@school_bus.driver_id"
    },
    {
        "nl_queries": "Display a bar chart for the names and the ages of editors .",
        "VQL": "Visualize BAR SELECT Name , Age FROM editor",
        "db_id": "journal_committee",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Name , Age FROM editor', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Name , Age FROM editor'}",
        "record_name": "2053",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Display a bar chart for the names and the ages of editors .",
        "question_toks": [
            "Display",
            "a",
            "bar",
            "chart",
            "for",
            "the",
            "names",
            "and",
            "the",
            "ages",
            "of",
            "editors",
            "."
        ],
        "query": "Visualize BAR SELECT Name , Age FROM editor",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Name",
            ",",
            "Age",
            "FROM",
            "editor"
        ],
        "choose_schema": "Table editor, columns = [*,Editor_ID, Name, Age]",
        "choose_schema_rat_link": "editor.name@SEP@editor.age@SEP@editor.editor_id@SEP@journal_committee.editor_id"
    },
    {
        "nl_queries": "Draw a bar chart about the distribution of All_Road and ACC_Percent .",
        "VQL": "Visualize BAR SELECT All_Road , ACC_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT All_Road , ACC_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT All_Road , ACC_Percent FROM basketball_match'}",
        "record_name": "3141",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Draw a bar chart about the distribution of All_Road and ACC_Percent .",
        "question_toks": [
            "Draw",
            "a",
            "bar",
            "chart",
            "about",
            "the",
            "distribution",
            "of",
            "All_Road",
            "and",
            "ACC_Percent",
            "."
        ],
        "query": "Visualize BAR SELECT All_Road , ACC_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "All_Road",
            ",",
            "ACC_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "How many departments are in each school . Show bar chart .",
        "VQL": "Visualize BAR SELECT SCHOOL_CODE , count(DISTINCT dept_name) FROM department",
        "db_id": "college_1",
        "hardness": "Medium",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT SCHOOL_CODE , count(DISTINCT dept_name) FROM department', 'binning': ''}, 'VQL': 'Visualize BAR SELECT SCHOOL_CODE , count(DISTINCT dept_name) FROM department'}",
        "record_name": "515",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                12,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "How many departments are in each school . Show bar chart .",
        "question_toks": [
            "How",
            "many",
            "departments",
            "are",
            "in",
            "each",
            "school",
            ".",
            "Show",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT SCHOOL_CODE , count(DISTINCT dept_name) FROM department",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "SCHOOL_CODE",
            ",",
            "count",
            "(",
            "DISTINCT",
            "dept_name",
            ")",
            "FROM",
            "department"
        ],
        "choose_schema": "Table DEPARTMENT, columns = [*,DEPT_CODE, DEPT_NAME, SCHOOL_CODE, EMP_NUM, DEPT_ADDRESS, DEPT_EXTENSION]",
        "choose_schema_rat_link": "course.dept_code@SEP@department.dept_code@SEP@department.dept_name@SEP@department.dept_address@SEP@department.dept_extension@SEP@professor.dept_code@SEP@student.dept_code@SEP@department.school_code"
    },
    {
        "nl_queries": "Draw a pie chart about the proportion of All_Neutral and Team_ID .",
        "VQL": "Visualize PIE SELECT All_Neutral , Team_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT All_Neutral , Team_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT All_Neutral , Team_ID FROM basketball_match'}",
        "record_name": "3130",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Draw a pie chart about the proportion of All_Neutral and Team_ID .",
        "question_toks": [
            "Draw",
            "a",
            "pie",
            "chart",
            "about",
            "the",
            "proportion",
            "of",
            "All_Neutral",
            "and",
            "Team_ID",
            "."
        ],
        "query": "Visualize PIE SELECT All_Neutral , Team_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "All_Neutral",
            ",",
            "Team_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name"
    },
    {
        "nl_queries": "What is the relationship between Body_Builder_ID and Snatch ?",
        "VQL": "Visualize SCATTER SELECT Body_Builder_ID , Snatch FROM body_builder",
        "db_id": "body_builder",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Body_Builder_ID , Snatch FROM body_builder', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Body_Builder_ID , Snatch FROM body_builder'}",
        "record_name": "355",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "What is the relationship between Body_Builder_ID and Snatch ?",
        "question_toks": [
            "What",
            "is",
            "the",
            "relationship",
            "between",
            "Body_Builder_ID",
            "and",
            "Snatch",
            "?"
        ],
        "query": "Visualize SCATTER SELECT Body_Builder_ID , Snatch FROM body_builder",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Body_Builder_ID",
            ",",
            "Snatch",
            "FROM",
            "body_builder"
        ],
        "choose_schema": "Table body_builder, columns = [*,Body_Builder_ID, People_ID, Snatch, Clean_Jerk, Total]",
        "choose_schema_rat_link": "body_builder.body_builder_id@SEP@body_builder.snatch"
    },
    {
        "nl_queries": "List the final tables made and the best finishes of poker players . Show the correlation .",
        "VQL": "Visualize SCATTER SELECT Final_Table_Made , Best_Finish FROM poker_player",
        "db_id": "poker_player",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Final_Table_Made , Best_Finish FROM poker_player', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Final_Table_Made , Best_Finish FROM poker_player'}",
        "record_name": "2592",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "List the final tables made and the best finishes of poker players . Show the correlation .",
        "question_toks": [
            "List",
            "the",
            "final",
            "tables",
            "made",
            "and",
            "the",
            "best",
            "finishes",
            "of",
            "poker",
            "players",
            ".",
            "Show",
            "the",
            "correlation",
            "."
        ],
        "query": "Visualize SCATTER SELECT Final_Table_Made , Best_Finish FROM poker_player",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Final_Table_Made",
            ",",
            "Best_Finish",
            "FROM",
            "poker_player"
        ],
        "choose_schema": "Table poker_player, columns = [*,Poker_Player_ID, People_ID, Final_Table_Made, Best_Finish, Money_Rank, Earnings]",
        "choose_schema_rat_link": "poker_player.final_table_made@SEP@poker_player.best_finish@SEP@poker_player.poker_player_id"
    },
    {
        "nl_queries": "Show me about the distribution of ACC_Regular_Season and All_Games_Percent in a bar chart .",
        "VQL": "Visualize BAR SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match'}",
        "record_name": "3137",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Show me about the distribution of ACC_Regular_Season and All_Games_Percent in a bar chart .",
        "question_toks": [
            "Show",
            "me",
            "about",
            "the",
            "distribution",
            "of",
            "ACC_Regular_Season",
            "and",
            "All_Games_Percent",
            "in",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "ACC_Regular_Season",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Visualize a pie chart about the proportion of All_Road and School_ID .",
        "VQL": "Visualize PIE SELECT All_Road , School_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT All_Road , School_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT All_Road , School_ID FROM basketball_match'}",
        "record_name": "3153",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Visualize a pie chart about the proportion of All_Road and School_ID .",
        "question_toks": [
            "Visualize",
            "a",
            "pie",
            "chart",
            "about",
            "the",
            "proportion",
            "of",
            "All_Road",
            "and",
            "School_ID",
            "."
        ],
        "query": "Visualize PIE SELECT All_Road , School_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "All_Road",
            ",",
            "School_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "university.school@SEP@basketball_match.school_id@SEP@university.school_id"
    },
    {
        "nl_queries": "A scatter chart shows the correlation between Body_Builder_ID and People_ID .",
        "VQL": "Visualize SCATTER SELECT Body_Builder_ID , People_ID FROM body_builder",
        "db_id": "body_builder",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Body_Builder_ID , People_ID FROM body_builder', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Body_Builder_ID , People_ID FROM body_builder'}",
        "record_name": "352",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "A scatter chart shows the correlation between Body_Builder_ID and People_ID .",
        "question_toks": [
            "A",
            "scatter",
            "chart",
            "shows",
            "the",
            "correlation",
            "between",
            "Body_Builder_ID",
            "and",
            "People_ID",
            "."
        ],
        "query": "Visualize SCATTER SELECT Body_Builder_ID , People_ID FROM body_builder",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Body_Builder_ID",
            ",",
            "People_ID",
            "FROM",
            "body_builder"
        ],
        "choose_schema": "Table body_builder, columns = [*,Body_Builder_ID, People_ID, Snatch, Clean_Jerk, Total]@SEP@Table people, columns = [*,People_ID, Name, Height, Weight, Birth_Date, Birth_Place]",
        "choose_schema_rat_link": "body_builder.body_builder_id@SEP@body_builder.people_id@SEP@people.people_id"
    },
    {
        "nl_queries": "What is the relationship between People_ID and Clean_Jerk ?",
        "VQL": "Visualize SCATTER SELECT People_ID , Clean_Jerk FROM body_builder",
        "db_id": "body_builder",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT People_ID , Clean_Jerk FROM body_builder', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT People_ID , Clean_Jerk FROM body_builder'}",
        "record_name": "361",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "What is the relationship between People_ID and Clean_Jerk ?",
        "question_toks": [
            "What",
            "is",
            "the",
            "relationship",
            "between",
            "People_ID",
            "and",
            "Clean_Jerk",
            "?"
        ],
        "query": "Visualize SCATTER SELECT People_ID , Clean_Jerk FROM body_builder",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "People_ID",
            ",",
            "Clean_Jerk",
            "FROM",
            "body_builder"
        ],
        "choose_schema": "Table body_builder, columns = [*,Body_Builder_ID, People_ID, Snatch, Clean_Jerk, Total]@SEP@Table people, columns = [*,People_ID, Name, Height, Weight, Birth_Date, Birth_Place]",
        "choose_schema_rat_link": "body_builder.people_id@SEP@people.people_id@SEP@body_builder.clean_jerk"
    },
    {
        "nl_queries": "Visualize a pie chart with how much does each charge type costs ? List both charge type and amount .",
        "VQL": "Visualize PIE SELECT charge_type , charge_amount FROM Charges",
        "db_id": "dog_kennels",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT charge_type , charge_amount FROM Charges', 'binning': ''}, 'VQL': 'Visualize PIE SELECT charge_type , charge_amount FROM Charges'}",
        "record_name": "1173",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Visualize a pie chart with how much does each charge type costs ? List both charge type and amount .",
        "question_toks": [
            "Visualize",
            "a",
            "pie",
            "chart",
            "with",
            "how",
            "much",
            "does",
            "each",
            "charge",
            "type",
            "costs",
            "?",
            "List",
            "both",
            "charge",
            "type",
            "and",
            "amount",
            "."
        ],
        "query": "Visualize PIE SELECT charge_type , charge_amount FROM Charges",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "charge_type",
            ",",
            "charge_amount",
            "FROM",
            "Charges"
        ],
        "choose_schema": "Table Charges, columns = [*,charge_id, charge_type, charge_amount]",
        "choose_schema_rat_link": "charges.charge_type@SEP@charges.charge_id@SEP@charges.charge_amount@SEP@treatments.cost_of_treatment"
    },
    {
        "nl_queries": "Return a pie chart about the proportion of All_Road and All_Games_Percent .",
        "VQL": "Visualize PIE SELECT All_Road , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT All_Road , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT All_Road , All_Games_Percent FROM basketball_match'}",
        "record_name": "3142",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Return a pie chart about the proportion of All_Road and All_Games_Percent .",
        "question_toks": [
            "Return",
            "a",
            "pie",
            "chart",
            "about",
            "the",
            "proportion",
            "of",
            "All_Road",
            "and",
            "All_Games_Percent",
            "."
        ],
        "query": "Visualize PIE SELECT All_Road , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "All_Road",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]"
    },
    {
        "nl_queries": "Visualize a bar chart for what is the age and hometown of every teacher ?",
        "VQL": "Visualize BAR SELECT Hometown , Age FROM teacher",
        "db_id": "course_teach",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Hometown , Age FROM teacher', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Hometown , Age FROM teacher'}",
        "record_name": "711",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Visualize a bar chart for what is the age and hometown of every teacher ?",
        "question_toks": [
            "Visualize",
            "a",
            "bar",
            "chart",
            "for",
            "what",
            "is",
            "the",
            "age",
            "and",
            "hometown",
            "of",
            "every",
            "teacher",
            "?"
        ],
        "query": "Visualize BAR SELECT Hometown , Age FROM teacher",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Hometown",
            ",",
            "Age",
            "FROM",
            "teacher"
        ],
        "choose_schema": "Table teacher, columns = [*,Teacher_ID, Name, Age, Hometown]",
        "choose_schema_rat_link": "teacher.age@SEP@teacher.hometown@SEP@teacher.teacher_id@SEP@course_arrange.teacher_id"
    },
    {
        "nl_queries": "Visualize a scatter chart about the correlation between School_ID and ACC_Percent .",
        "VQL": "Visualize SCATTER SELECT School_ID , ACC_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT School_ID , ACC_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT School_ID , ACC_Percent FROM basketball_match'}",
        "record_name": "3107",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Visualize a scatter chart about the correlation between School_ID and ACC_Percent .",
        "question_toks": [
            "Visualize",
            "a",
            "scatter",
            "chart",
            "about",
            "the",
            "correlation",
            "between",
            "School_ID",
            "and",
            "ACC_Percent",
            "."
        ],
        "query": "Visualize SCATTER SELECT School_ID , ACC_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "School_ID",
            ",",
            "ACC_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "university.school@SEP@basketball_match.school_id@SEP@university.school_id@SEP@basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "What is the relationship between Body_Builder_ID and People_ID ?",
        "VQL": "Visualize SCATTER SELECT Body_Builder_ID , People_ID FROM body_builder",
        "db_id": "body_builder",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Body_Builder_ID , People_ID FROM body_builder', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Body_Builder_ID , People_ID FROM body_builder'}",
        "record_name": "352",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "What is the relationship between Body_Builder_ID and People_ID ?",
        "question_toks": [
            "What",
            "is",
            "the",
            "relationship",
            "between",
            "Body_Builder_ID",
            "and",
            "People_ID",
            "?"
        ],
        "query": "Visualize SCATTER SELECT Body_Builder_ID , People_ID FROM body_builder",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Body_Builder_ID",
            ",",
            "People_ID",
            "FROM",
            "body_builder"
        ],
        "choose_schema": "Table body_builder, columns = [*,Body_Builder_ID, People_ID, Snatch, Clean_Jerk, Total]@SEP@Table people, columns = [*,People_ID, Name, Height, Weight, Birth_Date, Birth_Place]",
        "choose_schema_rat_link": "body_builder.body_builder_id@SEP@body_builder.people_id@SEP@people.people_id"
    },
    {
        "nl_queries": "Show me a scatter plot of account id and account_details for .",
        "VQL": "Visualize SCATTER SELECT Account_ID , Account_Details FROM Accounts",
        "db_id": "cre_Docs_and_Epenses",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Account_ID , Account_Details FROM Accounts', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Account_ID , Account_Details FROM Accounts'}",
        "record_name": "822",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Show me a scatter plot of account id and account_details for .",
        "question_toks": [
            "Show",
            "me",
            "a",
            "scatter",
            "plot",
            "of",
            "account",
            "id",
            "and",
            "account_details",
            "for",
            "."
        ],
        "query": "Visualize SCATTER SELECT Account_ID , Account_Details FROM Accounts",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Account_ID",
            ",",
            "Account_Details",
            "FROM",
            "Accounts"
        ],
        "choose_schema": "Table Accounts, columns = [*,Account_ID, Statement_ID, Account_Details]",
        "choose_schema_rat_link": "accounts.account_id@SEP@accounts.account_details"
    },
    {
        "nl_queries": "Show me about the correlation between Height and Weight in a scatter chart .",
        "VQL": "Visualize SCATTER SELECT Height , Weight FROM people",
        "db_id": "candidate_poll",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Height , Weight FROM people', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Height , Weight FROM people'}",
        "record_name": "390",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Show me about the correlation between Height and Weight in a scatter chart .",
        "question_toks": [
            "Show",
            "me",
            "about",
            "the",
            "correlation",
            "between",
            "Height",
            "and",
            "Weight",
            "in",
            "a",
            "scatter",
            "chart",
            "."
        ],
        "query": "Visualize SCATTER SELECT Height , Weight FROM people",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Height",
            ",",
            "Weight",
            "FROM",
            "people"
        ],
        "choose_schema": "Table people, columns = [*,People_ID, Sex, Name, Date_of_Birth, Height, Weight]",
        "choose_schema_rat_link": "people.height@SEP@people.weight"
    },
    {
        "nl_queries": "Find All_Neutral and All_Games_Percent , and visualize them by a bar chart .",
        "VQL": "Visualize BAR SELECT All_Neutral , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT All_Neutral , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT All_Neutral , All_Games_Percent FROM basketball_match'}",
        "record_name": "3146",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Find All_Neutral and All_Games_Percent , and visualize them by a bar chart .",
        "question_toks": [
            "Find",
            "All_Neutral",
            "and",
            "All_Games_Percent",
            ",",
            "and",
            "visualize",
            "them",
            "by",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT All_Neutral , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "All_Neutral",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]"
    },
    {
        "nl_queries": "For the attribute All_Road and School_ID , show their proportion by a pie chart .",
        "VQL": "Visualize PIE SELECT All_Road , School_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT All_Road , School_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT All_Road , School_ID FROM basketball_match'}",
        "record_name": "3153",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "For the attribute All_Road and School_ID , show their proportion by a pie chart .",
        "question_toks": [
            "For",
            "the",
            "attribute",
            "All_Road",
            "and",
            "School_ID",
            ",",
            "show",
            "their",
            "proportion",
            "by",
            "a",
            "pie",
            "chart",
            "."
        ],
        "query": "Visualize PIE SELECT All_Road , School_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "All_Road",
            ",",
            "School_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "university.school@SEP@basketball_match.school_id@SEP@university.school_id"
    },
    {
        "nl_queries": "Show the trend about salary change over hire date using a line chart .",
        "VQL": "Visualize LINE SELECT HIRE_DATE , SALARY FROM employees",
        "db_id": "hr_1",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize LINE', 'data_part': {'sql_part': 'SELECT HIRE_DATE , SALARY FROM employees', 'binning': ''}, 'VQL': 'Visualize LINE SELECT HIRE_DATE , SALARY FROM employees'}",
        "record_name": "1869",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                19,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 2
        },
        "question": "Show the trend about salary change over hire date using a line chart .",
        "question_toks": [
            "Show",
            "the",
            "trend",
            "about",
            "salary",
            "change",
            "over",
            "hire",
            "date",
            "using",
            "a",
            "line",
            "chart",
            "."
        ],
        "query": "Visualize LINE SELECT HIRE_DATE , SALARY FROM employees",
        "query_toks": [
            "Visualize",
            "LINE",
            "SELECT",
            "HIRE_DATE",
            ",",
            "SALARY",
            "FROM",
            "employees"
        ],
        "choose_schema": "Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]",
        "choose_schema_rat_link": "employees.hire_date@SEP@employees.salary"
    },
    {
        "nl_queries": "Show me about the correlation between ACC_Percent and All_Games_Percent in a scatter chart .",
        "VQL": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT ACC_Percent , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match'}",
        "record_name": "3121",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Show me about the correlation between ACC_Percent and All_Games_Percent in a scatter chart .",
        "question_toks": [
            "Show",
            "me",
            "about",
            "the",
            "correlation",
            "between",
            "ACC_Percent",
            "and",
            "All_Games_Percent",
            "in",
            "a",
            "scatter",
            "chart",
            "."
        ],
        "query": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "ACC_Percent",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Visualize a bar chart about the distribution of meter_300 and meter_100 .",
        "VQL": "Visualize BAR SELECT meter_300 , meter_100 FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT meter_300 , meter_100 FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT meter_300 , meter_100 FROM swimmer'}",
        "record_name": "2917",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Visualize a bar chart about the distribution of meter_300 and meter_100 .",
        "question_toks": [
            "Visualize",
            "a",
            "bar",
            "chart",
            "about",
            "the",
            "distribution",
            "of",
            "meter_300",
            "and",
            "meter_100",
            "."
        ],
        "query": "Visualize BAR SELECT meter_300 , meter_100 FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "meter_300",
            ",",
            "meter_100",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]",
        "choose_schema_rat_link": "swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_400@SEP@swimmer.meter_500@SEP@swimmer.meter_600@SEP@swimmer.meter_700"
    },
    {
        "nl_queries": "Return a bar chart about the distribution of All_Road and School_ID .",
        "VQL": "Visualize BAR SELECT All_Road , School_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT All_Road , School_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT All_Road , School_ID FROM basketball_match'}",
        "record_name": "3117",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Return a bar chart about the distribution of All_Road and School_ID .",
        "question_toks": [
            "Return",
            "a",
            "bar",
            "chart",
            "about",
            "the",
            "distribution",
            "of",
            "All_Road",
            "and",
            "School_ID",
            "."
        ],
        "query": "Visualize BAR SELECT All_Road , School_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "All_Road",
            ",",
            "School_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "university.school@SEP@basketball_match.school_id@SEP@university.school_id"
    },
    {
        "nl_queries": "Return a histogram on what are the names and distances for all airplanes ?",
        "VQL": "Visualize BAR SELECT name , distance FROM Aircraft",
        "db_id": "flight_1",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT name , distance FROM Aircraft', 'binning': ''}, 'VQL': 'Visualize BAR SELECT name , distance FROM Aircraft'}",
        "record_name": "1414",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Return a histogram on what are the names and distances for all airplanes ?",
        "question_toks": [
            "Return",
            "a",
            "histogram",
            "on",
            "what",
            "are",
            "the",
            "names",
            "and",
            "distances",
            "for",
            "all",
            "airplanes",
            "?"
        ],
        "query": "Visualize BAR SELECT name , distance FROM Aircraft",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "name",
            ",",
            "distance",
            "FROM",
            "Aircraft"
        ],
        "choose_schema": "Table flight, columns = [*,flno, origin, destination, distance, departure_date, arrival_date, price, aid]@SEP@Table aircraft, columns = [*,aid, name, distance]@SEP@Table employee, columns = [*,eid, name, salary]",
        "choose_schema_rat_link": "aircraft.name@SEP@employee.name@SEP@flight.distance@SEP@aircraft.distance"
    },
    {
        "nl_queries": "Return a bar chart about the distribution of All_Games and All_Games_Percent .",
        "VQL": "Visualize BAR SELECT All_Games , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT All_Games , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT All_Games , All_Games_Percent FROM basketball_match'}",
        "record_name": "3140",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Return a bar chart about the distribution of All_Games and All_Games_Percent .",
        "question_toks": [
            "Return",
            "a",
            "bar",
            "chart",
            "about",
            "the",
            "distribution",
            "of",
            "All_Games",
            "and",
            "All_Games_Percent",
            "."
        ],
        "query": "Visualize BAR SELECT All_Games , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "All_Games",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]"
    },
    {
        "nl_queries": "A bar chart shows the distribution of All_Games and ACC_Percent .",
        "VQL": "Visualize BAR SELECT All_Games , ACC_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT All_Games , ACC_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT All_Games , ACC_Percent FROM basketball_match'}",
        "record_name": "3138",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "A bar chart shows the distribution of All_Games and ACC_Percent .",
        "question_toks": [
            "A",
            "bar",
            "chart",
            "shows",
            "the",
            "distribution",
            "of",
            "All_Games",
            "and",
            "ACC_Percent",
            "."
        ],
        "query": "Visualize BAR SELECT All_Games , ACC_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "All_Games",
            ",",
            "ACC_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Visualize a scatter chart about the correlation between Body_Builder_ID and People_ID .",
        "VQL": "Visualize SCATTER SELECT Body_Builder_ID , People_ID FROM body_builder",
        "db_id": "body_builder",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Body_Builder_ID , People_ID FROM body_builder', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Body_Builder_ID , People_ID FROM body_builder'}",
        "record_name": "352",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Visualize a scatter chart about the correlation between Body_Builder_ID and People_ID .",
        "question_toks": [
            "Visualize",
            "a",
            "scatter",
            "chart",
            "about",
            "the",
            "correlation",
            "between",
            "Body_Builder_ID",
            "and",
            "People_ID",
            "."
        ],
        "query": "Visualize SCATTER SELECT Body_Builder_ID , People_ID FROM body_builder",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Body_Builder_ID",
            ",",
            "People_ID",
            "FROM",
            "body_builder"
        ],
        "choose_schema": "Table body_builder, columns = [*,Body_Builder_ID, People_ID, Snatch, Clean_Jerk, Total]@SEP@Table people, columns = [*,People_ID, Name, Height, Weight, Birth_Date, Birth_Place]",
        "choose_schema_rat_link": "body_builder.body_builder_id@SEP@body_builder.people_id@SEP@people.people_id"
    },
    {
        "nl_queries": "Visualize a pie chart about the proportion of All_Games and All_Games_Percent .",
        "VQL": "Visualize PIE SELECT All_Games , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT All_Games , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT All_Games , All_Games_Percent FROM basketball_match'}",
        "record_name": "3139",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Visualize a pie chart about the proportion of All_Games and All_Games_Percent .",
        "question_toks": [
            "Visualize",
            "a",
            "pie",
            "chart",
            "about",
            "the",
            "proportion",
            "of",
            "All_Games",
            "and",
            "All_Games_Percent",
            "."
        ],
        "query": "Visualize PIE SELECT All_Games , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "All_Games",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]"
    },
    {
        "nl_queries": "Show the county name and population of all counties with a bar chart .",
        "VQL": "Visualize BAR SELECT County_name , Population FROM county",
        "db_id": "election",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT County_name , Population FROM county', 'binning': ''}, 'VQL': 'Visualize BAR SELECT County_name , Population FROM county'}",
        "record_name": "1304",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Show the county name and population of all counties with a bar chart .",
        "question_toks": [
            "Show",
            "the",
            "county",
            "name",
            "and",
            "population",
            "of",
            "all",
            "counties",
            "with",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT County_name , Population FROM county",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "County_name",
            ",",
            "Population",
            "FROM",
            "county"
        ],
        "choose_schema": "Table county, columns = [*,County_Id, County_name, Population, Zip_code]",
        "choose_schema_rat_link": "county.county_name@SEP@county.county_id@SEP@election.counties_represented@SEP@county.population"
    },
    {
        "nl_queries": "A bar chart shows the distribution of meter_700 and ID .",
        "VQL": "Visualize BAR SELECT meter_700 , ID FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT meter_700 , ID FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT meter_700 , ID FROM swimmer'}",
        "record_name": "2924",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "A bar chart shows the distribution of meter_700 and ID .",
        "question_toks": [
            "A",
            "bar",
            "chart",
            "shows",
            "the",
            "distribution",
            "of",
            "meter_700",
            "and",
            "ID",
            "."
        ],
        "query": "Visualize BAR SELECT meter_700 , ID FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "meter_700",
            ",",
            "ID",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]@SEP@Table stadium, columns = [*,ID, name, Capacity, City, Country, Opening_year]@SEP@Table event, columns = [*,ID, Name, Stadium_ID, Year]@SEP@Table record, columns = [*,ID, Result, Swimmer_ID, Event_ID]",
        "choose_schema_rat_link": "swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_400@SEP@swimmer.meter_500@SEP@swimmer.meter_600@SEP@swimmer.meter_700@SEP@swimmer.id@SEP@stadium.id@SEP@event.id@SEP@record.id"
    },
    {
        "nl_queries": "Draw a pie chart about the proportion of All_Road and Team_ID .",
        "VQL": "Visualize PIE SELECT All_Road , Team_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT All_Road , Team_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT All_Road , Team_ID FROM basketball_match'}",
        "record_name": "3129",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Draw a pie chart about the proportion of All_Road and Team_ID .",
        "question_toks": [
            "Draw",
            "a",
            "pie",
            "chart",
            "about",
            "the",
            "proportion",
            "of",
            "All_Road",
            "and",
            "Team_ID",
            "."
        ],
        "query": "Visualize PIE SELECT All_Road , Team_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "All_Road",
            ",",
            "Team_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name"
    },
    {
        "nl_queries": "A scatter chart shows the correlation between People_ID and Height .",
        "VQL": "Visualize SCATTER SELECT People_ID , Height FROM people",
        "db_id": "candidate_poll",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT People_ID , Height FROM people', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT People_ID , Height FROM people'}",
        "record_name": "392",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "A scatter chart shows the correlation between People_ID and Height .",
        "question_toks": [
            "A",
            "scatter",
            "chart",
            "shows",
            "the",
            "correlation",
            "between",
            "People_ID",
            "and",
            "Height",
            "."
        ],
        "query": "Visualize SCATTER SELECT People_ID , Height FROM people",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "People_ID",
            ",",
            "Height",
            "FROM",
            "people"
        ],
        "choose_schema": "Table candidate, columns = [*,Candidate_ID, People_ID, Poll_Source, Date, Support_rate, Consider_rate, Oppose_rate, Unsure_rate]@SEP@Table people, columns = [*,People_ID, Sex, Name, Date_of_Birth, Height, Weight]",
        "choose_schema_rat_link": "candidate.people_id@SEP@people.people_id@SEP@people.height"
    },
    {
        "nl_queries": "Show me a scatter plot of council tax id and cmi_cross_ref_id for .",
        "VQL": "Visualize SCATTER SELECT council_tax_id , cmi_cross_ref_id FROM parking_fines",
        "db_id": "local_govt_mdm",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT council_tax_id , cmi_cross_ref_id FROM parking_fines', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT council_tax_id , cmi_cross_ref_id FROM parking_fines'}",
        "record_name": "2158",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Show me a scatter plot of council tax id and cmi_cross_ref_id for .",
        "question_toks": [
            "Show",
            "me",
            "a",
            "scatter",
            "plot",
            "of",
            "council",
            "tax",
            "id",
            "and",
            "cmi_cross_ref_id",
            "for",
            "."
        ],
        "query": "Visualize SCATTER SELECT council_tax_id , cmi_cross_ref_id FROM parking_fines",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "council_tax_id",
            ",",
            "cmi_cross_ref_id",
            "FROM",
            "parking_fines"
        ],
        "choose_schema": "Table CMI_Cross_References, columns = [*,cmi_cross_ref_id, master_customer_id, source_system_code]@SEP@Table Council_Tax, columns = [*,council_tax_id, cmi_cross_ref_id]@SEP@Table Business_Rates, columns = [*,business_rates_id, cmi_cross_ref_id]@SEP@Table Benefits_Overpayments, columns = [*,council_tax_id, cmi_cross_ref_id]@SEP@Table Parking_Fines, columns = [*,council_tax_id, cmi_cross_ref_id]@SEP@Table Rent_Arrears, columns = [*,council_tax_id, cmi_cross_ref_id]@SEP@Table Electoral_Register, columns = [*,electoral_register_id, cmi_cross_ref_id]",
        "choose_schema_rat_link": "council_tax.council_tax_id@SEP@benefits_overpayments.council_tax_id@SEP@parking_fines.council_tax_id@SEP@rent_arrears.council_tax_id@SEP@customer_master_index.cmi_details@SEP@cmi_cross_references.cmi_cross_ref_id@SEP@council_tax.cmi_cross_ref_id@SEP@business_rates.cmi_cross_ref_id@SEP@benefits_overpayments.cmi_cross_ref_id@SEP@parking_fines.cmi_cross_ref_id@SEP@rent_arrears.cmi_cross_ref_id@SEP@electoral_register.cmi_cross_ref_id"
    },
    {
        "nl_queries": "A bar chart shows the distribution of All_Road and ACC_Percent .",
        "VQL": "Visualize BAR SELECT All_Road , ACC_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT All_Road , ACC_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT All_Road , ACC_Percent FROM basketball_match'}",
        "record_name": "3141",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "A bar chart shows the distribution of All_Road and ACC_Percent .",
        "question_toks": [
            "A",
            "bar",
            "chart",
            "shows",
            "the",
            "distribution",
            "of",
            "All_Road",
            "and",
            "ACC_Percent",
            "."
        ],
        "query": "Visualize BAR SELECT All_Road , ACC_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "All_Road",
            ",",
            "ACC_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Show me population by county name in a histogram",
        "VQL": "Visualize BAR SELECT County_name , Population FROM county",
        "db_id": "election",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT County_name , Population FROM county', 'binning': ''}, 'VQL': 'Visualize BAR SELECT County_name , Population FROM county'}",
        "record_name": "1304",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Show me population by county name in a histogram",
        "question_toks": [
            "Show",
            "me",
            "population",
            "by",
            "county",
            "name",
            "in",
            "a",
            "histogram"
        ],
        "query": "Visualize BAR SELECT County_name , Population FROM county",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "County_name",
            ",",
            "Population",
            "FROM",
            "county"
        ],
        "choose_schema": "Table county, columns = [*,County_Id, County_name, Population, Zip_code]",
        "choose_schema_rat_link": "county.county_name@SEP@county.population@SEP@county.county_id@SEP@election.counties_represented"
    },
    {
        "nl_queries": "List the final tables made and the best finishes of poker players in a scatter chart",
        "VQL": "Visualize SCATTER SELECT Final_Table_Made , Best_Finish FROM poker_player",
        "db_id": "poker_player",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Final_Table_Made , Best_Finish FROM poker_player', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Final_Table_Made , Best_Finish FROM poker_player'}",
        "record_name": "2592",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "List the final tables made and the best finishes of poker players in a scatter chart",
        "question_toks": [
            "List",
            "the",
            "final",
            "tables",
            "made",
            "and",
            "the",
            "best",
            "finishes",
            "of",
            "poker",
            "players",
            "in",
            "a",
            "scatter",
            "chart"
        ],
        "query": "Visualize SCATTER SELECT Final_Table_Made , Best_Finish FROM poker_player",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Final_Table_Made",
            ",",
            "Best_Finish",
            "FROM",
            "poker_player"
        ],
        "choose_schema": "Table poker_player, columns = [*,Poker_Player_ID, People_ID, Final_Table_Made, Best_Finish, Money_Rank, Earnings]",
        "choose_schema_rat_link": "poker_player.final_table_made@SEP@poker_player.best_finish@SEP@poker_player.poker_player_id"
    },
    {
        "nl_queries": "Give me a pie chart to reflect the proportion of All_Road and School_ID .",
        "VQL": "Visualize PIE SELECT All_Road , School_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT All_Road , School_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT All_Road , School_ID FROM basketball_match'}",
        "record_name": "3153",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Give me a pie chart to reflect the proportion of All_Road and School_ID .",
        "question_toks": [
            "Give",
            "me",
            "a",
            "pie",
            "chart",
            "to",
            "reflect",
            "the",
            "proportion",
            "of",
            "All_Road",
            "and",
            "School_ID",
            "."
        ],
        "query": "Visualize PIE SELECT All_Road , School_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "All_Road",
            ",",
            "School_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "university.school@SEP@basketball_match.school_id@SEP@university.school_id"
    },
    {
        "nl_queries": "Visualize the relationship between Shop_ID and Employee_ID .",
        "VQL": "Visualize SCATTER SELECT Shop_ID , Employee_ID FROM hiring",
        "db_id": "employee_hire_evaluation",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Shop_ID , Employee_ID FROM hiring', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Shop_ID , Employee_ID FROM hiring'}",
        "record_name": "1357",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Visualize the relationship between Shop_ID and Employee_ID .",
        "question_toks": [
            "Visualize",
            "the",
            "relationship",
            "between",
            "Shop_ID",
            "and",
            "Employee_ID",
            "."
        ],
        "query": "Visualize SCATTER SELECT Shop_ID , Employee_ID FROM hiring",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Shop_ID",
            ",",
            "Employee_ID",
            "FROM",
            "hiring"
        ],
        "choose_schema": "Table employee, columns = [*,Employee_ID, Name, Age, City]@SEP@Table shop, columns = [*,Shop_ID, Name, Location, District, Number_products, Manager_name]@SEP@Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]@SEP@Table evaluation, columns = [*,Employee_ID, Year_awarded, Bonus]",
        "choose_schema_rat_link": "shop.shop_id@SEP@hiring.shop_id@SEP@employee.employee_id@SEP@hiring.employee_id@SEP@evaluation.employee_id"
    },
    {
        "nl_queries": "Show me start_station_id by start station name in a histogram",
        "VQL": "Visualize BAR SELECT start_station_name , start_station_id FROM trip",
        "db_id": "bike_1",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT start_station_name , start_station_id FROM trip', 'binning': ''}, 'VQL': 'Visualize BAR SELECT start_station_name , start_station_id FROM trip'}",
        "record_name": "310",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Show me start_station_id by start station name in a histogram",
        "question_toks": [
            "Show",
            "me",
            "start_station_id",
            "by",
            "start",
            "station",
            "name",
            "in",
            "a",
            "histogram"
        ],
        "query": "Visualize BAR SELECT start_station_name , start_station_id FROM trip",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "start_station_name",
            ",",
            "start_station_id",
            "FROM",
            "trip"
        ],
        "choose_schema": "Table trip, columns = [*,id, duration, start_date, start_station_name, start_station_id, end_date, end_station_name, end_station_id, bike_id, subscription_type, zip_code]",
        "choose_schema_rat_link": "trip.start_station_name@SEP@trip.start_station_id@SEP@trip.start_date@SEP@status.station_id@SEP@station.id@SEP@trip.id@SEP@station.name"
    },
    {
        "nl_queries": "Plot salary by grouped by email as a bar graph",
        "VQL": "Visualize BAR SELECT EMAIL , SALARY FROM employees",
        "db_id": "hr_1",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT EMAIL , SALARY FROM employees', 'binning': ''}, 'VQL': 'Visualize BAR SELECT EMAIL , SALARY FROM employees'}",
        "record_name": "1910",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                17,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Plot salary by grouped by email as a bar graph",
        "question_toks": [
            "Plot",
            "salary",
            "by",
            "grouped",
            "by",
            "email",
            "as",
            "a",
            "bar",
            "graph"
        ],
        "query": "Visualize BAR SELECT EMAIL , SALARY FROM employees",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "EMAIL",
            ",",
            "SALARY",
            "FROM",
            "employees"
        ],
        "choose_schema": "Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]",
        "choose_schema_rat_link": "employees.salary@SEP@employees.email"
    },
    {
        "nl_queries": "Visualize a bar chart about the distribution of All_Neutral and Team_ID .",
        "VQL": "Visualize BAR SELECT All_Neutral , Team_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT All_Neutral , Team_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT All_Neutral , Team_ID FROM basketball_match'}",
        "record_name": "3118",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Visualize a bar chart about the distribution of All_Neutral and Team_ID .",
        "question_toks": [
            "Visualize",
            "a",
            "bar",
            "chart",
            "about",
            "the",
            "distribution",
            "of",
            "All_Neutral",
            "and",
            "Team_ID",
            "."
        ],
        "query": "Visualize BAR SELECT All_Neutral , Team_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "All_Neutral",
            ",",
            "Team_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name"
    },
    {
        "nl_queries": "Draw a bar chart of name versus height",
        "VQL": "Visualize BAR SELECT Name , Height FROM people",
        "db_id": "candidate_poll",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Name , Height FROM people', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Name , Height FROM people'}",
        "record_name": "394",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Draw a bar chart of name versus height",
        "question_toks": [
            "Draw",
            "a",
            "bar",
            "chart",
            "of",
            "name",
            "versus",
            "height"
        ],
        "query": "Visualize BAR SELECT Name , Height FROM people",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Name",
            ",",
            "Height",
            "FROM",
            "people"
        ],
        "choose_schema": "Table people, columns = [*,People_ID, Sex, Name, Date_of_Birth, Height, Weight]",
        "choose_schema_rat_link": "people.name@SEP@people.height"
    },
    {
        "nl_queries": "Visualize a scatter chart about the correlation between Snatch and Clean_Jerk .",
        "VQL": "Visualize SCATTER SELECT Snatch , Clean_Jerk FROM body_builder",
        "db_id": "body_builder",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Snatch , Clean_Jerk FROM body_builder', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Snatch , Clean_Jerk FROM body_builder'}",
        "record_name": "356",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Visualize a scatter chart about the correlation between Snatch and Clean_Jerk .",
        "question_toks": [
            "Visualize",
            "a",
            "scatter",
            "chart",
            "about",
            "the",
            "correlation",
            "between",
            "Snatch",
            "and",
            "Clean_Jerk",
            "."
        ],
        "query": "Visualize SCATTER SELECT Snatch , Clean_Jerk FROM body_builder",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Snatch",
            ",",
            "Clean_Jerk",
            "FROM",
            "body_builder"
        ],
        "choose_schema": "Table body_builder, columns = [*,Body_Builder_ID, People_ID, Snatch, Clean_Jerk, Total]",
        "choose_schema_rat_link": "body_builder.snatch@SEP@body_builder.clean_jerk"
    },
    {
        "nl_queries": "Scatter . how many different products correspond to each order id ?",
        "VQL": "Visualize SCATTER SELECT order_id , count(DISTINCT product_id) FROM Order_items",
        "db_id": "customers_and_invoices",
        "hardness": "Medium",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT order_id , count(DISTINCT product_id) FROM Order_items', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT order_id , count(DISTINCT product_id) FROM Order_items'}",
        "record_name": "962",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        7
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                44,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                45,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Scatter . how many different products correspond to each order id ?",
        "question_toks": [
            "Scatter",
            ".",
            "how",
            "many",
            "different",
            "products",
            "correspond",
            "to",
            "each",
            "order",
            "id",
            "?"
        ],
        "query": "Visualize SCATTER SELECT order_id , count(DISTINCT product_id) FROM Order_items",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "order_id",
            ",",
            "count",
            "(",
            "DISTINCT",
            "product_id",
            ")",
            "FROM",
            "Order_items"
        ],
        "choose_schema": "Table Orders, columns = [*,order_id, customer_id, date_order_placed, order_details]@SEP@Table Invoices, columns = [*,invoice_number, order_id, invoice_date]@SEP@Table Order_Items, columns = [*,order_item_id, order_id, product_id, product_quantity, other_order_item_details]",
        "choose_schema_rat_link": "orders.order_id@SEP@invoices.order_id@SEP@order_items.order_id@SEP@product_categories.product_type_description@SEP@products.product_id@SEP@products.product_name@SEP@products.product_color@SEP@products.product_size@SEP@order_items.product_id@SEP@order_items.product_quantity@SEP@invoice_line_items.product_id@SEP@invoice_line_items.product_title@SEP@invoice_line_items.product_quantity@SEP@invoice_line_items.product_price@SEP@orders.order_details@SEP@order_items.order_item_id@SEP@invoice_line_items.order_item_id"
    },
    {
        "nl_queries": "plot scatter on what is the maximum accelerate for different number of cylinders ?",
        "VQL": "Visualize SCATTER SELECT max(Accelerate) , Cylinders FROM CARS_DATA",
        "db_id": "car_1",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT max(Accelerate) , Cylinders FROM CARS_DATA', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT max(Accelerate) , Cylinders FROM CARS_DATA'}",
        "record_name": "432",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "plot scatter on what is the maximum accelerate for different number of cylinders ?",
        "question_toks": [
            "plot",
            "scatter",
            "on",
            "what",
            "is",
            "the",
            "maximum",
            "accelerate",
            "for",
            "different",
            "number",
            "of",
            "cylinders",
            "?"
        ],
        "query": "Visualize SCATTER SELECT max(Accelerate) , Cylinders FROM CARS_DATA",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "max",
            "(",
            "Accelerate",
            ")",
            ",",
            "Cylinders",
            "FROM",
            "CARS_DATA"
        ],
        "choose_schema": "Table cars_data, columns = [*,Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year]",
        "choose_schema_rat_link": "cars_data.accelerate@SEP@cars_data.cylinders"
    },
    {
        "nl_queries": "Give me a pie chart to reflect the proportion of All_Neutral and School_ID .",
        "VQL": "Visualize PIE SELECT All_Neutral , School_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT All_Neutral , School_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT All_Neutral , School_ID FROM basketball_match'}",
        "record_name": "3155",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Give me a pie chart to reflect the proportion of All_Neutral and School_ID .",
        "question_toks": [
            "Give",
            "me",
            "a",
            "pie",
            "chart",
            "to",
            "reflect",
            "the",
            "proportion",
            "of",
            "All_Neutral",
            "and",
            "School_ID",
            "."
        ],
        "query": "Visualize PIE SELECT All_Neutral , School_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "All_Neutral",
            ",",
            "School_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "university.school@SEP@basketball_match.school_id@SEP@university.school_id"
    },
    {
        "nl_queries": "Scatter plot to show snatch on x axis and clean_jerk on y axis .",
        "VQL": "Visualize SCATTER SELECT Snatch , Clean_Jerk FROM body_builder",
        "db_id": "body_builder",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Snatch , Clean_Jerk FROM body_builder', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Snatch , Clean_Jerk FROM body_builder'}",
        "record_name": "362",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Scatter plot to show snatch on x axis and clean_jerk on y axis .",
        "question_toks": [
            "Scatter",
            "plot",
            "to",
            "show",
            "snatch",
            "on",
            "x",
            "axis",
            "and",
            "clean_jerk",
            "on",
            "y",
            "axis",
            "."
        ],
        "query": "Visualize SCATTER SELECT Snatch , Clean_Jerk FROM body_builder",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Snatch",
            ",",
            "Clean_Jerk",
            "FROM",
            "body_builder"
        ],
        "choose_schema": "Table body_builder, columns = [*,Body_Builder_ID, People_ID, Snatch, Clean_Jerk, Total]",
        "choose_schema_rat_link": "body_builder.snatch@SEP@body_builder.clean_jerk"
    },
    {
        "nl_queries": "Give me the comparison about Team_ID over the All_Road by a bar chart .",
        "VQL": "Visualize BAR SELECT All_Road , Team_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT All_Road , Team_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT All_Road , Team_ID FROM basketball_match'}",
        "record_name": "3116",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Give me the comparison about Team_ID over the All_Road by a bar chart .",
        "question_toks": [
            "Give",
            "me",
            "the",
            "comparison",
            "about",
            "Team_ID",
            "over",
            "the",
            "All_Road",
            "by",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT All_Road , Team_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "All_Road",
            ",",
            "Team_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name"
    },
    {
        "nl_queries": "A pie chart shows the proportion of All_Road and ACC_Percent .",
        "VQL": "Visualize PIE SELECT All_Road , ACC_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT All_Road , ACC_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT All_Road , ACC_Percent FROM basketball_match'}",
        "record_name": "3154",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "A pie chart shows the proportion of All_Road and ACC_Percent .",
        "question_toks": [
            "A",
            "pie",
            "chart",
            "shows",
            "the",
            "proportion",
            "of",
            "All_Road",
            "and",
            "ACC_Percent",
            "."
        ],
        "query": "Visualize PIE SELECT All_Road , ACC_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "All_Road",
            ",",
            "ACC_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Show me about the distribution of ACC_Regular_Season and School_ID in a bar chart .",
        "VQL": "Visualize BAR SELECT ACC_Regular_Season , School_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT ACC_Regular_Season , School_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT ACC_Regular_Season , School_ID FROM basketball_match'}",
        "record_name": "3113",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Show me about the distribution of ACC_Regular_Season and School_ID in a bar chart .",
        "question_toks": [
            "Show",
            "me",
            "about",
            "the",
            "distribution",
            "of",
            "ACC_Regular_Season",
            "and",
            "School_ID",
            "in",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT ACC_Regular_Season , School_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "ACC_Regular_Season",
            ",",
            "School_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road@SEP@university.school@SEP@basketball_match.school_id@SEP@university.school_id"
    },
    {
        "nl_queries": "Give me the comparison about meter_100 over the meter_500 .",
        "VQL": "Visualize BAR SELECT meter_500 , meter_100 FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT meter_500 , meter_100 FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT meter_500 , meter_100 FROM swimmer'}",
        "record_name": "2921",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Give me the comparison about meter_100 over the meter_500 .",
        "question_toks": [
            "Give",
            "me",
            "the",
            "comparison",
            "about",
            "meter_100",
            "over",
            "the",
            "meter_500",
            "."
        ],
        "query": "Visualize BAR SELECT meter_500 , meter_100 FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "meter_500",
            ",",
            "meter_100",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]",
        "choose_schema_rat_link": "swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_400@SEP@swimmer.meter_500@SEP@swimmer.meter_600@SEP@swimmer.meter_700"
    },
    {
        "nl_queries": "Return a pie on what are the name and population of each county ?",
        "VQL": "Visualize PIE SELECT County_name , Population FROM county",
        "db_id": "election",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT County_name , Population FROM county', 'binning': ''}, 'VQL': 'Visualize PIE SELECT County_name , Population FROM county'}",
        "record_name": "1303",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Return a pie on what are the name and population of each county ?",
        "question_toks": [
            "Return",
            "a",
            "pie",
            "on",
            "what",
            "are",
            "the",
            "name",
            "and",
            "population",
            "of",
            "each",
            "county",
            "?"
        ],
        "query": "Visualize PIE SELECT County_name , Population FROM county",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "County_name",
            ",",
            "Population",
            "FROM",
            "county"
        ],
        "choose_schema": "Table county, columns = [*,County_Id, County_name, Population, Zip_code]",
        "choose_schema_rat_link": "county.population@SEP@county.county_id@SEP@county.county_name@SEP@election.counties_represented"
    },
    {
        "nl_queries": "A pie chart shows the proportion of All_Neutral and All_Games_Percent .",
        "VQL": "Visualize PIE SELECT All_Neutral , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT All_Neutral , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT All_Neutral , All_Games_Percent FROM basketball_match'}",
        "record_name": "3145",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "A pie chart shows the proportion of All_Neutral and All_Games_Percent .",
        "question_toks": [
            "A",
            "pie",
            "chart",
            "shows",
            "the",
            "proportion",
            "of",
            "All_Neutral",
            "and",
            "All_Games_Percent",
            "."
        ],
        "query": "Visualize PIE SELECT All_Neutral , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "All_Neutral",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]"
    },
    {
        "nl_queries": "A scatter chart shows the correlation between Team_ID and All_Games_Percent .",
        "VQL": "Visualize SCATTER SELECT Team_ID , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Team_ID , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Team_ID , All_Games_Percent FROM basketball_match'}",
        "record_name": "3106",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "A scatter chart shows the correlation between Team_ID and All_Games_Percent .",
        "question_toks": [
            "A",
            "scatter",
            "chart",
            "shows",
            "the",
            "correlation",
            "between",
            "Team_ID",
            "and",
            "All_Games_Percent",
            "."
        ],
        "query": "Visualize SCATTER SELECT Team_ID , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Team_ID",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name"
    },
    {
        "nl_queries": "Create a pie chart showing team_id across team name .",
        "VQL": "Visualize PIE SELECT Team_Name , Team_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT Team_Name , Team_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT Team_Name , Team_ID FROM basketball_match'}",
        "record_name": "3126",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Create a pie chart showing team_id across team name .",
        "question_toks": [
            "Create",
            "a",
            "pie",
            "chart",
            "showing",
            "team_id",
            "across",
            "team",
            "name",
            "."
        ],
        "query": "Visualize PIE SELECT Team_Name , Team_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "Team_Name",
            ",",
            "Team_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_name@SEP@basketball_match.team_id"
    },
    {
        "nl_queries": "What are the name and population of each county . Plot them as bar chart .",
        "VQL": "Visualize BAR SELECT County_name , Population FROM county",
        "db_id": "election",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT County_name , Population FROM county', 'binning': ''}, 'VQL': 'Visualize BAR SELECT County_name , Population FROM county'}",
        "record_name": "1304",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "What are the name and population of each county . Plot them as bar chart .",
        "question_toks": [
            "What",
            "are",
            "the",
            "name",
            "and",
            "population",
            "of",
            "each",
            "county",
            ".",
            "Plot",
            "them",
            "as",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT County_name , Population FROM county",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "County_name",
            ",",
            "Population",
            "FROM",
            "county"
        ],
        "choose_schema": "Table county, columns = [*,County_Id, County_name, Population, Zip_code]",
        "choose_schema_rat_link": "county.population@SEP@county.county_id@SEP@county.county_name@SEP@election.counties_represented"
    },
    {
        "nl_queries": "Show me a scatter plot of school id and all_games_percent for .",
        "VQL": "Visualize SCATTER SELECT School_ID , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT School_ID , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT School_ID , All_Games_Percent FROM basketball_match'}",
        "record_name": "3109",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Show me a scatter plot of school id and all_games_percent for .",
        "question_toks": [
            "Show",
            "me",
            "a",
            "scatter",
            "plot",
            "of",
            "school",
            "id",
            "and",
            "all_games_percent",
            "for",
            "."
        ],
        "query": "Visualize SCATTER SELECT School_ID , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "School_ID",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "basketball_match.school_id@SEP@university.school_id@SEP@university.school"
    },
    {
        "nl_queries": "Draw a bar chart about the distribution of Name and Weight .",
        "VQL": "Visualize BAR SELECT Name , Weight FROM people",
        "db_id": "candidate_poll",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Name , Weight FROM people', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Name , Weight FROM people'}",
        "record_name": "395",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Draw a bar chart about the distribution of Name and Weight .",
        "question_toks": [
            "Draw",
            "a",
            "bar",
            "chart",
            "about",
            "the",
            "distribution",
            "of",
            "Name",
            "and",
            "Weight",
            "."
        ],
        "query": "Visualize BAR SELECT Name , Weight FROM people",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Name",
            ",",
            "Weight",
            "FROM",
            "people"
        ],
        "choose_schema": "Table people, columns = [*,People_ID, Sex, Name, Date_of_Birth, Height, Weight]",
        "choose_schema_rat_link": "people.name@SEP@people.weight"
    },
    {
        "nl_queries": "Visualize a pie chart about the proportion of ACC_Regular_Season and ACC_Percent .",
        "VQL": "Visualize PIE SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match'}",
        "record_name": "3150",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Visualize a pie chart about the proportion of ACC_Regular_Season and ACC_Percent .",
        "question_toks": [
            "Visualize",
            "a",
            "pie",
            "chart",
            "about",
            "the",
            "proportion",
            "of",
            "ACC_Regular_Season",
            "and",
            "ACC_Percent",
            "."
        ],
        "query": "Visualize PIE SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "ACC_Regular_Season",
            ",",
            "ACC_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Draw a pie chart about the proportion of ACC_Regular_Season and All_Games_Percent .",
        "VQL": "Visualize PIE SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match'}",
        "record_name": "3136",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Draw a pie chart about the proportion of ACC_Regular_Season and All_Games_Percent .",
        "question_toks": [
            "Draw",
            "a",
            "pie",
            "chart",
            "about",
            "the",
            "proportion",
            "of",
            "ACC_Regular_Season",
            "and",
            "All_Games_Percent",
            "."
        ],
        "query": "Visualize PIE SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "ACC_Regular_Season",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Return a bar chart about the distribution of Time and meter_100 .",
        "VQL": "Visualize BAR SELECT Time , meter_100 FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Time , meter_100 FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Time , meter_100 FROM swimmer'}",
        "record_name": "2927",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Return a bar chart about the distribution of Time and meter_100 .",
        "question_toks": [
            "Return",
            "a",
            "bar",
            "chart",
            "about",
            "the",
            "distribution",
            "of",
            "Time",
            "and",
            "meter_100",
            "."
        ],
        "query": "Visualize BAR SELECT Time , meter_100 FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Time",
            ",",
            "meter_100",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]",
        "choose_schema_rat_link": "swimmer.time@SEP@swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_400@SEP@swimmer.meter_500@SEP@swimmer.meter_600@SEP@swimmer.meter_700"
    },
    {
        "nl_queries": "What are the ids and details of all accounts . Show scatter chart .",
        "VQL": "Visualize SCATTER SELECT Account_ID , Account_Details FROM Accounts",
        "db_id": "cre_Docs_and_Epenses",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Account_ID , Account_Details FROM Accounts', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Account_ID , Account_Details FROM Accounts'}",
        "record_name": "822",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "What are the ids and details of all accounts . Show scatter chart .",
        "question_toks": [
            "What",
            "are",
            "the",
            "ids",
            "and",
            "details",
            "of",
            "all",
            "accounts",
            ".",
            "Show",
            "scatter",
            "chart",
            "."
        ],
        "query": "Visualize SCATTER SELECT Account_ID , Account_Details FROM Accounts",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Account_ID",
            ",",
            "Account_Details",
            "FROM",
            "Accounts"
        ],
        "choose_schema": "Table Accounts, columns = [*,Account_ID, Statement_ID, Account_Details]",
        "choose_schema_rat_link": "accounts.account_id@SEP@accounts.account_details"
    },
    {
        "nl_queries": "Show me about the change of Employee_ID over Start_from in a line chart .",
        "VQL": "Visualize LINE SELECT Start_from , Employee_ID FROM hiring",
        "db_id": "employee_hire_evaluation",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize LINE', 'data_part': {'sql_part': 'SELECT Start_from , Employee_ID FROM hiring', 'binning': ''}, 'VQL': 'Visualize LINE SELECT Start_from , Employee_ID FROM hiring'}",
        "record_name": "1339",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 2
        },
        "question": "Show me about the change of Employee_ID over Start_from in a line chart .",
        "question_toks": [
            "Show",
            "me",
            "about",
            "the",
            "change",
            "of",
            "Employee_ID",
            "over",
            "Start_from",
            "in",
            "a",
            "line",
            "chart",
            "."
        ],
        "query": "Visualize LINE SELECT Start_from , Employee_ID FROM hiring",
        "query_toks": [
            "Visualize",
            "LINE",
            "SELECT",
            "Start_from",
            ",",
            "Employee_ID",
            "FROM",
            "hiring"
        ],
        "choose_schema": "Table employee, columns = [*,Employee_ID, Name, Age, City]@SEP@Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]@SEP@Table evaluation, columns = [*,Employee_ID, Year_awarded, Bonus]",
        "choose_schema_rat_link": "employee.employee_id@SEP@hiring.employee_id@SEP@evaluation.employee_id@SEP@hiring.start_from"
    },
    {
        "nl_queries": "What is the minimum salary in each department . Show scatter chart .",
        "VQL": "Visualize SCATTER SELECT MIN(salary) , DEPARTMENT_ID FROM employees",
        "db_id": "hr_1",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT MIN(salary) , DEPARTMENT_ID FROM employees', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT MIN(salary) , DEPARTMENT_ID FROM employees'}",
        "record_name": "1708",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                24,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "What is the minimum salary in each department . Show scatter chart .",
        "question_toks": [
            "What",
            "is",
            "the",
            "minimum",
            "salary",
            "in",
            "each",
            "department",
            ".",
            "Show",
            "scatter",
            "chart",
            "."
        ],
        "query": "Visualize SCATTER SELECT MIN(salary) , DEPARTMENT_ID FROM employees",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "MIN",
            "(",
            "salary",
            ")",
            ",",
            "DEPARTMENT_ID",
            "FROM",
            "employees"
        ],
        "choose_schema": "Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]@SEP@Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]@SEP@Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]",
        "choose_schema_rat_link": "employees.salary@SEP@departments.department_id@SEP@departments.department_name@SEP@employees.department_id@SEP@job_history.department_id"
    },
    {
        "nl_queries": "Give me a pie chart to reflect the proportion of Team_Name and Team_ID .",
        "VQL": "Visualize PIE SELECT Team_Name , Team_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT Team_Name , Team_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT Team_Name , Team_ID FROM basketball_match'}",
        "record_name": "3126",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Give me a pie chart to reflect the proportion of Team_Name and Team_ID .",
        "question_toks": [
            "Give",
            "me",
            "a",
            "pie",
            "chart",
            "to",
            "reflect",
            "the",
            "proportion",
            "of",
            "Team_Name",
            "and",
            "Team_ID",
            "."
        ],
        "query": "Visualize PIE SELECT Team_Name , Team_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "Team_Name",
            ",",
            "Team_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name"
    },
    {
        "nl_queries": "Draw a scatter chart for what is the maximum accelerate for all the different cylinders ?",
        "VQL": "Visualize SCATTER SELECT max(Accelerate) , Cylinders FROM CARS_DATA",
        "db_id": "car_1",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT max(Accelerate) , Cylinders FROM CARS_DATA', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT max(Accelerate) , Cylinders FROM CARS_DATA'}",
        "record_name": "432",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Draw a scatter chart for what is the maximum accelerate for all the different cylinders ?",
        "question_toks": [
            "Draw",
            "a",
            "scatter",
            "chart",
            "for",
            "what",
            "is",
            "the",
            "maximum",
            "accelerate",
            "for",
            "all",
            "the",
            "different",
            "cylinders",
            "?"
        ],
        "query": "Visualize SCATTER SELECT max(Accelerate) , Cylinders FROM CARS_DATA",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "max",
            "(",
            "Accelerate",
            ")",
            ",",
            "Cylinders",
            "FROM",
            "CARS_DATA"
        ],
        "choose_schema": "Table cars_data, columns = [*,Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year]",
        "choose_schema_rat_link": "cars_data.accelerate@SEP@cars_data.cylinders"
    },
    {
        "nl_queries": "Show me about the correlation between School_ID and ACC_Percent in a scatter chart .",
        "VQL": "Visualize SCATTER SELECT School_ID , ACC_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT School_ID , ACC_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT School_ID , ACC_Percent FROM basketball_match'}",
        "record_name": "3107",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Show me about the correlation between School_ID and ACC_Percent in a scatter chart .",
        "question_toks": [
            "Show",
            "me",
            "about",
            "the",
            "correlation",
            "between",
            "School_ID",
            "and",
            "ACC_Percent",
            "in",
            "a",
            "scatter",
            "chart",
            "."
        ],
        "query": "Visualize SCATTER SELECT School_ID , ACC_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "School_ID",
            ",",
            "ACC_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "university.school@SEP@basketball_match.school_id@SEP@university.school_id@SEP@basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Show me about the correlation between Snatch and Clean_Jerk in a scatter chart .",
        "VQL": "Visualize SCATTER SELECT Snatch , Clean_Jerk FROM body_builder",
        "db_id": "body_builder",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Snatch , Clean_Jerk FROM body_builder', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Snatch , Clean_Jerk FROM body_builder'}",
        "record_name": "356",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Show me about the correlation between Snatch and Clean_Jerk in a scatter chart .",
        "question_toks": [
            "Show",
            "me",
            "about",
            "the",
            "correlation",
            "between",
            "Snatch",
            "and",
            "Clean_Jerk",
            "in",
            "a",
            "scatter",
            "chart",
            "."
        ],
        "query": "Visualize SCATTER SELECT Snatch , Clean_Jerk FROM body_builder",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Snatch",
            ",",
            "Clean_Jerk",
            "FROM",
            "body_builder"
        ],
        "choose_schema": "Table body_builder, columns = [*,Body_Builder_ID, People_ID, Snatch, Clean_Jerk, Total]",
        "choose_schema_rat_link": "body_builder.snatch@SEP@body_builder.clean_jerk"
    },
    {
        "nl_queries": "List each charge type and its amount in a pie chart .",
        "VQL": "Visualize PIE SELECT charge_type , charge_amount FROM Charges",
        "db_id": "dog_kennels",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT charge_type , charge_amount FROM Charges', 'binning': ''}, 'VQL': 'Visualize PIE SELECT charge_type , charge_amount FROM Charges'}",
        "record_name": "1173",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "List each charge type and its amount in a pie chart .",
        "question_toks": [
            "List",
            "each",
            "charge",
            "type",
            "and",
            "its",
            "amount",
            "in",
            "a",
            "pie",
            "chart",
            "."
        ],
        "query": "Visualize PIE SELECT charge_type , charge_amount FROM Charges",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "charge_type",
            ",",
            "charge_amount",
            "FROM",
            "Charges"
        ],
        "choose_schema": "Table Charges, columns = [*,charge_id, charge_type, charge_amount]",
        "choose_schema_rat_link": "charges.charge_type@SEP@charges.charge_id@SEP@charges.charge_amount"
    },
    {
        "nl_queries": "Show weight from each date of birth",
        "VQL": "Visualize BAR SELECT Date_of_Birth , Weight FROM people",
        "db_id": "candidate_poll",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Date_of_Birth , Weight FROM people', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Date_of_Birth , Weight FROM people'}",
        "record_name": "398",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Show weight from each date of birth",
        "question_toks": [
            "Show",
            "weight",
            "from",
            "each",
            "date",
            "of",
            "birth"
        ],
        "query": "Visualize BAR SELECT Date_of_Birth , Weight FROM people",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Date_of_Birth",
            ",",
            "Weight",
            "FROM",
            "people"
        ],
        "choose_schema": "Table people, columns = [*,People_ID, Sex, Name, Date_of_Birth, Height, Weight]",
        "choose_schema_rat_link": "people.date_of_birth@SEP@people.weight@SEP@candidate.date"
    },
    {
        "nl_queries": "For the attribute All_Road and All_Games_Percent , show their proportion by a pie chart .",
        "VQL": "Visualize PIE SELECT All_Road , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT All_Road , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT All_Road , All_Games_Percent FROM basketball_match'}",
        "record_name": "3142",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "For the attribute All_Road and All_Games_Percent , show their proportion by a pie chart .",
        "question_toks": [
            "For",
            "the",
            "attribute",
            "All_Road",
            "and",
            "All_Games_Percent",
            ",",
            "show",
            "their",
            "proportion",
            "by",
            "a",
            "pie",
            "chart",
            "."
        ],
        "query": "Visualize PIE SELECT All_Road , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "All_Road",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]"
    },
    {
        "nl_queries": "Give me a pie chart to reflect the proportion of Team_Name and School_ID .",
        "VQL": "Visualize PIE SELECT Team_Name , School_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT Team_Name , School_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT Team_Name , School_ID FROM basketball_match'}",
        "record_name": "3147",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Give me a pie chart to reflect the proportion of Team_Name and School_ID .",
        "question_toks": [
            "Give",
            "me",
            "a",
            "pie",
            "chart",
            "to",
            "reflect",
            "the",
            "proportion",
            "of",
            "Team_Name",
            "and",
            "School_ID",
            "."
        ],
        "query": "Visualize PIE SELECT Team_Name , School_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "Team_Name",
            ",",
            "School_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name@SEP@university.school@SEP@basketball_match.school_id@SEP@university.school_id"
    },
    {
        "nl_queries": "Visualize a line chart about the change of Shop_ID over Start_from .",
        "VQL": "Visualize LINE SELECT Start_from , Shop_ID FROM hiring",
        "db_id": "employee_hire_evaluation",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize LINE', 'data_part': {'sql_part': 'SELECT Start_from , Shop_ID FROM hiring', 'binning': ''}, 'VQL': 'Visualize LINE SELECT Start_from , Shop_ID FROM hiring'}",
        "record_name": "1338",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 2
        },
        "question": "Visualize a line chart about the change of Shop_ID over Start_from .",
        "question_toks": [
            "Visualize",
            "a",
            "line",
            "chart",
            "about",
            "the",
            "change",
            "of",
            "Shop_ID",
            "over",
            "Start_from",
            "."
        ],
        "query": "Visualize LINE SELECT Start_from , Shop_ID FROM hiring",
        "query_toks": [
            "Visualize",
            "LINE",
            "SELECT",
            "Start_from",
            ",",
            "Shop_ID",
            "FROM",
            "hiring"
        ],
        "choose_schema": "Table shop, columns = [*,Shop_ID, Name, Location, District, Number_products, Manager_name]@SEP@Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]",
        "choose_schema_rat_link": "shop.shop_id@SEP@hiring.shop_id@SEP@hiring.start_from"
    },
    {
        "nl_queries": "What are the ids and names of all start stations that were the beginning of at least 200 trips . Show bar chart .",
        "VQL": "Visualize BAR SELECT start_station_name , start_station_id FROM trip",
        "db_id": "bike_1",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT start_station_name , start_station_id FROM trip', 'binning': ''}, 'VQL': 'Visualize BAR SELECT start_station_name , start_station_id FROM trip'}",
        "record_name": "310",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "What are the ids and names of all start stations that were the beginning of at least 200 trips . Show bar chart .",
        "question_toks": [
            "What",
            "are",
            "the",
            "ids",
            "and",
            "names",
            "of",
            "all",
            "start",
            "stations",
            "that",
            "were",
            "the",
            "beginning",
            "of",
            "at",
            "least",
            "200",
            "trips",
            ".",
            "Show",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT start_station_name , start_station_id FROM trip",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "start_station_name",
            ",",
            "start_station_id",
            "FROM",
            "trip"
        ],
        "choose_schema": "Table trip, columns = [*,id, duration, start_date, start_station_name, start_station_id, end_date, end_station_name, end_station_id, bike_id, subscription_type, zip_code]",
        "choose_schema_rat_link": "trip.start_station_name@SEP@trip.start_station_id@SEP@station.id@SEP@trip.id@SEP@station.name@SEP@trip.start_date@SEP@status.station_id"
    },
    {
        "nl_queries": "Draw a pie chart about the proportion of Team_Name and ACC_Percent .",
        "VQL": "Visualize PIE SELECT Team_Name , ACC_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT Team_Name , ACC_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT Team_Name , ACC_Percent FROM basketball_match'}",
        "record_name": "3148",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Draw a pie chart about the proportion of Team_Name and ACC_Percent .",
        "question_toks": [
            "Draw",
            "a",
            "pie",
            "chart",
            "about",
            "the",
            "proportion",
            "of",
            "Team_Name",
            "and",
            "ACC_Percent",
            "."
        ],
        "query": "Visualize PIE SELECT Team_Name , ACC_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "Team_Name",
            ",",
            "ACC_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name@SEP@basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Draw a bar chart of first name versus manager_id",
        "VQL": "Visualize BAR SELECT FIRST_NAME , MANAGER_ID FROM employees",
        "db_id": "hr_1",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT FIRST_NAME , MANAGER_ID FROM employees', 'binning': ''}, 'VQL': 'Visualize BAR SELECT FIRST_NAME , MANAGER_ID FROM employees'}",
        "record_name": "1897",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                23,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Draw a bar chart of first name versus manager_id",
        "question_toks": [
            "Draw",
            "a",
            "bar",
            "chart",
            "of",
            "first",
            "name",
            "versus",
            "manager_id"
        ],
        "query": "Visualize BAR SELECT FIRST_NAME , MANAGER_ID FROM employees",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "FIRST_NAME",
            ",",
            "MANAGER_ID",
            "FROM",
            "employees"
        ],
        "choose_schema": "Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]@SEP@Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]",
        "choose_schema_rat_link": "employees.first_name@SEP@departments.manager_id@SEP@employees.manager_id"
    },
    {
        "nl_queries": "Bar chart x axis time y axis meter_100",
        "VQL": "Visualize BAR SELECT Time , meter_100 FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Time , meter_100 FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Time , meter_100 FROM swimmer'}",
        "record_name": "2927",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Bar chart x axis time y axis meter_100",
        "question_toks": [
            "Bar",
            "chart",
            "x",
            "axis",
            "time",
            "y",
            "axis",
            "meter_100"
        ],
        "query": "Visualize BAR SELECT Time , meter_100 FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Time",
            ",",
            "meter_100",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]",
        "choose_schema_rat_link": "swimmer.time@SEP@swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_400@SEP@swimmer.meter_500@SEP@swimmer.meter_600@SEP@swimmer.meter_700"
    },
    {
        "nl_queries": "Give me a pie to show team_id from different all road .",
        "VQL": "Visualize PIE SELECT All_Road , Team_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT All_Road , Team_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT All_Road , Team_ID FROM basketball_match'}",
        "record_name": "3129",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Give me a pie to show team_id from different all road .",
        "question_toks": [
            "Give",
            "me",
            "a",
            "pie",
            "to",
            "show",
            "team_id",
            "from",
            "different",
            "all",
            "road",
            "."
        ],
        "query": "Visualize PIE SELECT All_Road , Team_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "All_Road",
            ",",
            "Team_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.all_road@SEP@basketball_match.team_id@SEP@basketball_match.team_name"
    },
    {
        "nl_queries": "Return a scatter chart about the correlation between Snatch and Total .",
        "VQL": "Visualize SCATTER SELECT Snatch , Total FROM body_builder",
        "db_id": "body_builder",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Snatch , Total FROM body_builder', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Snatch , Total FROM body_builder'}",
        "record_name": "354",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Return a scatter chart about the correlation between Snatch and Total .",
        "question_toks": [
            "Return",
            "a",
            "scatter",
            "chart",
            "about",
            "the",
            "correlation",
            "between",
            "Snatch",
            "and",
            "Total",
            "."
        ],
        "query": "Visualize SCATTER SELECT Snatch , Total FROM body_builder",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Snatch",
            ",",
            "Total",
            "FROM",
            "body_builder"
        ],
        "choose_schema": "Table body_builder, columns = [*,Body_Builder_ID, People_ID, Snatch, Clean_Jerk, Total]",
        "choose_schema_rat_link": "body_builder.snatch@SEP@body_builder.total"
    },
    {
        "nl_queries": "Give me the comparison about ACC_Percent over the ACC_Regular_Season .",
        "VQL": "Visualize BAR SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match'}",
        "record_name": "3135",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Give me the comparison about ACC_Percent over the ACC_Regular_Season .",
        "question_toks": [
            "Give",
            "me",
            "the",
            "comparison",
            "about",
            "ACC_Percent",
            "over",
            "the",
            "ACC_Regular_Season",
            "."
        ],
        "query": "Visualize BAR SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "ACC_Regular_Season",
            ",",
            "ACC_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Visualize the relationship between People_ID and Snatch .",
        "VQL": "Visualize SCATTER SELECT People_ID , Snatch FROM body_builder",
        "db_id": "body_builder",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT People_ID , Snatch FROM body_builder', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT People_ID , Snatch FROM body_builder'}",
        "record_name": "357",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Visualize the relationship between People_ID and Snatch .",
        "question_toks": [
            "Visualize",
            "the",
            "relationship",
            "between",
            "People_ID",
            "and",
            "Snatch",
            "."
        ],
        "query": "Visualize SCATTER SELECT People_ID , Snatch FROM body_builder",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "People_ID",
            ",",
            "Snatch",
            "FROM",
            "body_builder"
        ],
        "choose_schema": "Table body_builder, columns = [*,Body_Builder_ID, People_ID, Snatch, Clean_Jerk, Total]@SEP@Table people, columns = [*,People_ID, Name, Height, Weight, Birth_Date, Birth_Place]",
        "choose_schema_rat_link": "body_builder.people_id@SEP@people.people_id@SEP@body_builder.snatch"
    },
    {
        "nl_queries": "Count different addresses of each school by a pie chart .",
        "VQL": "Visualize PIE SELECT SCHOOL_CODE , count(DISTINCT dept_address) FROM department",
        "db_id": "college_1",
        "hardness": "Medium",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT SCHOOL_CODE , count(DISTINCT dept_address) FROM department', 'binning': ''}, 'VQL': 'Visualize PIE SELECT SCHOOL_CODE , count(DISTINCT dept_address) FROM department'}",
        "record_name": "542",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                15,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Count different addresses of each school by a pie chart .",
        "question_toks": [
            "Count",
            "different",
            "addresses",
            "of",
            "each",
            "school",
            "by",
            "a",
            "pie",
            "chart",
            "."
        ],
        "query": "Visualize PIE SELECT SCHOOL_CODE , count(DISTINCT dept_address) FROM department",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "SCHOOL_CODE",
            ",",
            "count",
            "(",
            "DISTINCT",
            "dept_address",
            ")",
            "FROM",
            "department"
        ],
        "choose_schema": "Table DEPARTMENT, columns = [*,DEPT_CODE, DEPT_NAME, SCHOOL_CODE, EMP_NUM, DEPT_ADDRESS, DEPT_EXTENSION]",
        "choose_schema_rat_link": "department.school_code"
    },
    {
        "nl_queries": "For each classroom report the grade that is taught in it . Report just the classroom number and the grade number .",
        "VQL": "Visualize SCATTER SELECT Classroom , Grade FROM list",
        "db_id": "student_1",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Classroom , Grade FROM list', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Classroom , Grade FROM list'}",
        "record_name": "2872",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "For each classroom report the grade that is taught in it . Report just the classroom number and the grade number .",
        "question_toks": [
            "For",
            "each",
            "classroom",
            "report",
            "the",
            "grade",
            "that",
            "is",
            "taught",
            "in",
            "it",
            ".",
            "Report",
            "just",
            "the",
            "classroom",
            "number",
            "and",
            "the",
            "grade",
            "number",
            "."
        ],
        "query": "Visualize SCATTER SELECT Classroom , Grade FROM list",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Classroom",
            ",",
            "Grade",
            "FROM",
            "list"
        ],
        "choose_schema": "Table list, columns = [*,LastName, FirstName, Grade, Classroom]@SEP@Table teachers, columns = [*,LastName, FirstName, Classroom]",
        "choose_schema_rat_link": "list.grade"
    },
    {
        "nl_queries": "Visualize a bar chart about the distribution of meter_700 and meter_100 .",
        "VQL": "Visualize BAR SELECT meter_700 , meter_100 FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT meter_700 , meter_100 FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT meter_700 , meter_100 FROM swimmer'}",
        "record_name": "2925",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Visualize a bar chart about the distribution of meter_700 and meter_100 .",
        "question_toks": [
            "Visualize",
            "a",
            "bar",
            "chart",
            "about",
            "the",
            "distribution",
            "of",
            "meter_700",
            "and",
            "meter_100",
            "."
        ],
        "query": "Visualize BAR SELECT meter_700 , meter_100 FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "meter_700",
            ",",
            "meter_100",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]",
        "choose_schema_rat_link": "swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_400@SEP@swimmer.meter_500@SEP@swimmer.meter_600@SEP@swimmer.meter_700"
    },
    {
        "nl_queries": "Visualize a bar chart about the distribution of Team_Name and School_ID .",
        "VQL": "Visualize BAR SELECT Team_Name , School_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Team_Name , School_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Team_Name , School_ID FROM basketball_match'}",
        "record_name": "3111",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Visualize a bar chart about the distribution of Team_Name and School_ID .",
        "question_toks": [
            "Visualize",
            "a",
            "bar",
            "chart",
            "about",
            "the",
            "distribution",
            "of",
            "Team_Name",
            "and",
            "School_ID",
            "."
        ],
        "query": "Visualize BAR SELECT Team_Name , School_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Team_Name",
            ",",
            "School_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name@SEP@university.school@SEP@basketball_match.school_id@SEP@university.school_id"
    },
    {
        "nl_queries": "How many different locations does each school have . Show the proportion .",
        "VQL": "Visualize PIE SELECT SCHOOL_CODE , count(DISTINCT dept_address) FROM department",
        "db_id": "college_1",
        "hardness": "Medium",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT SCHOOL_CODE , count(DISTINCT dept_address) FROM department', 'binning': ''}, 'VQL': 'Visualize PIE SELECT SCHOOL_CODE , count(DISTINCT dept_address) FROM department'}",
        "record_name": "542",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                15,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "How many different locations does each school have . Show the proportion .",
        "question_toks": [
            "How",
            "many",
            "different",
            "locations",
            "does",
            "each",
            "school",
            "have",
            ".",
            "Show",
            "the",
            "proportion",
            "."
        ],
        "query": "Visualize PIE SELECT SCHOOL_CODE , count(DISTINCT dept_address) FROM department",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "SCHOOL_CODE",
            ",",
            "count",
            "(",
            "DISTINCT",
            "dept_address",
            ")",
            "FROM",
            "department"
        ],
        "choose_schema": "Table DEPARTMENT, columns = [*,DEPT_CODE, DEPT_NAME, SCHOOL_CODE, EMP_NUM, DEPT_ADDRESS, DEPT_EXTENSION]",
        "choose_schema_rat_link": "department.school_code"
    },
    {
        "nl_queries": "Plot id by grouped by name as a bar graph",
        "VQL": "Visualize BAR SELECT name , ID FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT name , ID FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT name , ID FROM swimmer'}",
        "record_name": "2914",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Plot id by grouped by name as a bar graph",
        "question_toks": [
            "Plot",
            "id",
            "by",
            "grouped",
            "by",
            "name",
            "as",
            "a",
            "bar",
            "graph"
        ],
        "query": "Visualize BAR SELECT name , ID FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "name",
            ",",
            "ID",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]@SEP@Table stadium, columns = [*,ID, name, Capacity, City, Country, Opening_year]@SEP@Table event, columns = [*,ID, Name, Stadium_ID, Year]@SEP@Table record, columns = [*,ID, Result, Swimmer_ID, Event_ID]",
        "choose_schema_rat_link": "swimmer.id@SEP@stadium.id@SEP@event.id@SEP@record.id@SEP@swimmer.name@SEP@stadium.name@SEP@event.name"
    },
    {
        "nl_queries": "Show me about the correlation between School_ID and All_Games_Percent in a scatter chart .",
        "VQL": "Visualize SCATTER SELECT School_ID , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT School_ID , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT School_ID , All_Games_Percent FROM basketball_match'}",
        "record_name": "3109",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Show me about the correlation between School_ID and All_Games_Percent in a scatter chart .",
        "question_toks": [
            "Show",
            "me",
            "about",
            "the",
            "correlation",
            "between",
            "School_ID",
            "and",
            "All_Games_Percent",
            "in",
            "a",
            "scatter",
            "chart",
            "."
        ],
        "query": "Visualize SCATTER SELECT School_ID , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "School_ID",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "university.school@SEP@basketball_match.school_id@SEP@university.school_id"
    },
    {
        "nl_queries": "A pie chart shows the proportion of All_Road and School_ID .",
        "VQL": "Visualize PIE SELECT All_Road , School_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT All_Road , School_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT All_Road , School_ID FROM basketball_match'}",
        "record_name": "3153",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "A pie chart shows the proportion of All_Road and School_ID .",
        "question_toks": [
            "A",
            "pie",
            "chart",
            "shows",
            "the",
            "proportion",
            "of",
            "All_Road",
            "and",
            "School_ID",
            "."
        ],
        "query": "Visualize PIE SELECT All_Road , School_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "All_Road",
            ",",
            "School_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "university.school@SEP@basketball_match.school_id@SEP@university.school_id"
    },
    {
        "nl_queries": "Return a bar chart about the distribution of name and meter_100 .",
        "VQL": "Visualize BAR SELECT name , meter_100 FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT name , meter_100 FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT name , meter_100 FROM swimmer'}",
        "record_name": "2915",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Return a bar chart about the distribution of name and meter_100 .",
        "question_toks": [
            "Return",
            "a",
            "bar",
            "chart",
            "about",
            "the",
            "distribution",
            "of",
            "name",
            "and",
            "meter_100",
            "."
        ],
        "query": "Visualize BAR SELECT name , meter_100 FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "name",
            ",",
            "meter_100",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]@SEP@Table stadium, columns = [*,ID, name, Capacity, City, Country, Opening_year]@SEP@Table event, columns = [*,ID, Name, Stadium_ID, Year]",
        "choose_schema_rat_link": "swimmer.name@SEP@stadium.name@SEP@event.name@SEP@swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_400@SEP@swimmer.meter_500@SEP@swimmer.meter_600@SEP@swimmer.meter_700"
    },
    {
        "nl_queries": "Return a scatter chart about the correlation between People_ID and Total .",
        "VQL": "Visualize SCATTER SELECT People_ID , Total FROM body_builder",
        "db_id": "body_builder",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT People_ID , Total FROM body_builder', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT People_ID , Total FROM body_builder'}",
        "record_name": "359",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Return a scatter chart about the correlation between People_ID and Total .",
        "question_toks": [
            "Return",
            "a",
            "scatter",
            "chart",
            "about",
            "the",
            "correlation",
            "between",
            "People_ID",
            "and",
            "Total",
            "."
        ],
        "query": "Visualize SCATTER SELECT People_ID , Total FROM body_builder",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "People_ID",
            ",",
            "Total",
            "FROM",
            "body_builder"
        ],
        "choose_schema": "Table body_builder, columns = [*,Body_Builder_ID, People_ID, Snatch, Clean_Jerk, Total]@SEP@Table people, columns = [*,People_ID, Name, Height, Weight, Birth_Date, Birth_Place]",
        "choose_schema_rat_link": "body_builder.people_id@SEP@people.people_id@SEP@body_builder.total"
    },
    {
        "nl_queries": "Visualize a bar chart about the distribution of ACC_Regular_Season and ACC_Percent .",
        "VQL": "Visualize BAR SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match'}",
        "record_name": "3135",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Visualize a bar chart about the distribution of ACC_Regular_Season and ACC_Percent .",
        "question_toks": [
            "Visualize",
            "a",
            "bar",
            "chart",
            "about",
            "the",
            "distribution",
            "of",
            "ACC_Regular_Season",
            "and",
            "ACC_Percent",
            "."
        ],
        "query": "Visualize BAR SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "ACC_Regular_Season",
            ",",
            "ACC_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Return a scatter chart about the correlation between Body_Builder_ID and Snatch .",
        "VQL": "Visualize SCATTER SELECT Body_Builder_ID , Snatch FROM body_builder",
        "db_id": "body_builder",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Body_Builder_ID , Snatch FROM body_builder', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Body_Builder_ID , Snatch FROM body_builder'}",
        "record_name": "355",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Return a scatter chart about the correlation between Body_Builder_ID and Snatch .",
        "question_toks": [
            "Return",
            "a",
            "scatter",
            "chart",
            "about",
            "the",
            "correlation",
            "between",
            "Body_Builder_ID",
            "and",
            "Snatch",
            "."
        ],
        "query": "Visualize SCATTER SELECT Body_Builder_ID , Snatch FROM body_builder",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Body_Builder_ID",
            ",",
            "Snatch",
            "FROM",
            "body_builder"
        ],
        "choose_schema": "Table body_builder, columns = [*,Body_Builder_ID, People_ID, Snatch, Clean_Jerk, Total]",
        "choose_schema_rat_link": "body_builder.body_builder_id@SEP@body_builder.snatch"
    },
    {
        "nl_queries": "Show me manager_id by last name in a histogram",
        "VQL": "Visualize BAR SELECT LAST_NAME , MANAGER_ID FROM employees",
        "db_id": "hr_1",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT LAST_NAME , MANAGER_ID FROM employees', 'binning': ''}, 'VQL': 'Visualize BAR SELECT LAST_NAME , MANAGER_ID FROM employees'}",
        "record_name": "1904",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                23,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Show me manager_id by last name in a histogram",
        "question_toks": [
            "Show",
            "me",
            "manager_id",
            "by",
            "last",
            "name",
            "in",
            "a",
            "histogram"
        ],
        "query": "Visualize BAR SELECT LAST_NAME , MANAGER_ID FROM employees",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "LAST_NAME",
            ",",
            "MANAGER_ID",
            "FROM",
            "employees"
        ],
        "choose_schema": "Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]@SEP@Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]",
        "choose_schema_rat_link": "employees.last_name@SEP@departments.manager_id@SEP@employees.manager_id"
    },
    {
        "nl_queries": "A bar chart shows the distribution of Team_Name and Team_ID .",
        "VQL": "Visualize BAR SELECT Team_Name , Team_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Team_Name , Team_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Team_Name , Team_ID FROM basketball_match'}",
        "record_name": "3110",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "A bar chart shows the distribution of Team_Name and Team_ID .",
        "question_toks": [
            "A",
            "bar",
            "chart",
            "shows",
            "the",
            "distribution",
            "of",
            "Team_Name",
            "and",
            "Team_ID",
            "."
        ],
        "query": "Visualize BAR SELECT Team_Name , Team_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Team_Name",
            ",",
            "Team_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name"
    },
    {
        "nl_queries": "Visualize a bar chart about the distribution of meter_400 and meter_100 .",
        "VQL": "Visualize BAR SELECT meter_400 , meter_100 FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT meter_400 , meter_100 FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT meter_400 , meter_100 FROM swimmer'}",
        "record_name": "2919",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Visualize a bar chart about the distribution of meter_400 and meter_100 .",
        "question_toks": [
            "Visualize",
            "a",
            "bar",
            "chart",
            "about",
            "the",
            "distribution",
            "of",
            "meter_400",
            "and",
            "meter_100",
            "."
        ],
        "query": "Visualize BAR SELECT meter_400 , meter_100 FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "meter_400",
            ",",
            "meter_100",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]",
        "choose_schema_rat_link": "swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_400@SEP@swimmer.meter_500@SEP@swimmer.meter_600@SEP@swimmer.meter_700"
    },
    {
        "nl_queries": "Plot a scatter chart , low estimate by high_estimate .",
        "VQL": "Visualize SCATTER SELECT Low_Estimate , High_Estimate FROM film_market_estimation",
        "db_id": "film_rank",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Low_Estimate , High_Estimate FROM film_market_estimation', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Low_Estimate , High_Estimate FROM film_market_estimation'}",
        "record_name": "1398",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Plot a scatter chart , low estimate by high_estimate .",
        "question_toks": [
            "Plot",
            "a",
            "scatter",
            "chart",
            ",",
            "low",
            "estimate",
            "by",
            "high_estimate",
            "."
        ],
        "query": "Visualize SCATTER SELECT Low_Estimate , High_Estimate FROM film_market_estimation",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Low_Estimate",
            ",",
            "High_Estimate",
            "FROM",
            "film_market_estimation"
        ],
        "choose_schema": "Table film_market_estimation, columns = [*,Estimation_ID, Low_Estimate, High_Estimate, Film_ID, Type, Market_ID, Year]",
        "choose_schema_rat_link": "film_market_estimation.low_estimate@SEP@film_market_estimation.high_estimate"
    },
    {
        "nl_queries": "Show the capacity for each cinema in a bar chart .",
        "VQL": "Visualize BAR SELECT Name , Capacity FROM cinema",
        "db_id": "cinema",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Name , Capacity FROM cinema', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Name , Capacity FROM cinema'}",
        "record_name": "474",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Show the capacity for each cinema in a bar chart .",
        "question_toks": [
            "Show",
            "the",
            "capacity",
            "for",
            "each",
            "cinema",
            "in",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT Name , Capacity FROM cinema",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Name",
            ",",
            "Capacity",
            "FROM",
            "cinema"
        ],
        "choose_schema": "Table cinema, columns = [*,Cinema_ID, Name, Openning_year, Capacity, Location]",
        "choose_schema_rat_link": "schedule.show_times_per_day@SEP@cinema.capacity@SEP@cinema.cinema_id@SEP@schedule.cinema_id"
    },
    {
        "nl_queries": "Give me a bar chart for employee_id of each last name",
        "VQL": "Visualize BAR SELECT LAST_NAME , EMPLOYEE_ID FROM employees",
        "db_id": "hr_1",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT LAST_NAME , EMPLOYEE_ID FROM employees', 'binning': ''}, 'VQL': 'Visualize BAR SELECT LAST_NAME , EMPLOYEE_ID FROM employees'}",
        "record_name": "1902",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Give me a bar chart for employee_id of each last name",
        "question_toks": [
            "Give",
            "me",
            "a",
            "bar",
            "chart",
            "for",
            "employee_id",
            "of",
            "each",
            "last",
            "name"
        ],
        "query": "Visualize BAR SELECT LAST_NAME , EMPLOYEE_ID FROM employees",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "LAST_NAME",
            ",",
            "EMPLOYEE_ID",
            "FROM",
            "employees"
        ],
        "choose_schema": "Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]@SEP@Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]",
        "choose_schema_rat_link": "employees.last_name@SEP@employees.employee_id@SEP@job_history.employee_id"
    },
    {
        "nl_queries": "Show me department_id by first name in a histogram",
        "VQL": "Visualize BAR SELECT FIRST_NAME , DEPARTMENT_ID FROM employees",
        "db_id": "hr_1",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT FIRST_NAME , DEPARTMENT_ID FROM employees', 'binning': ''}, 'VQL': 'Visualize BAR SELECT FIRST_NAME , DEPARTMENT_ID FROM employees'}",
        "record_name": "1899",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                24,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Show me department_id by first name in a histogram",
        "question_toks": [
            "Show",
            "me",
            "department_id",
            "by",
            "first",
            "name",
            "in",
            "a",
            "histogram"
        ],
        "query": "Visualize BAR SELECT FIRST_NAME , DEPARTMENT_ID FROM employees",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "FIRST_NAME",
            ",",
            "DEPARTMENT_ID",
            "FROM",
            "employees"
        ],
        "choose_schema": "Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]@SEP@Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]@SEP@Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]",
        "choose_schema_rat_link": "employees.first_name@SEP@departments.department_id@SEP@departments.department_name@SEP@employees.department_id@SEP@job_history.department_id"
    },
    {
        "nl_queries": "Return a scatter chart about the correlation between People_ID and Snatch .",
        "VQL": "Visualize SCATTER SELECT People_ID , Snatch FROM body_builder",
        "db_id": "body_builder",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT People_ID , Snatch FROM body_builder', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT People_ID , Snatch FROM body_builder'}",
        "record_name": "357",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Return a scatter chart about the correlation between People_ID and Snatch .",
        "question_toks": [
            "Return",
            "a",
            "scatter",
            "chart",
            "about",
            "the",
            "correlation",
            "between",
            "People_ID",
            "and",
            "Snatch",
            "."
        ],
        "query": "Visualize SCATTER SELECT People_ID , Snatch FROM body_builder",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "People_ID",
            ",",
            "Snatch",
            "FROM",
            "body_builder"
        ],
        "choose_schema": "Table body_builder, columns = [*,Body_Builder_ID, People_ID, Snatch, Clean_Jerk, Total]@SEP@Table people, columns = [*,People_ID, Name, Height, Weight, Birth_Date, Birth_Place]",
        "choose_schema_rat_link": "body_builder.people_id@SEP@people.people_id@SEP@body_builder.snatch"
    },
    {
        "nl_queries": "what are the ids and names of all start stations that were the beginning of at least 200 trips ?",
        "VQL": "Visualize BAR SELECT start_station_name , start_station_id FROM trip",
        "db_id": "bike_1",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT start_station_name , start_station_id FROM trip', 'binning': ''}, 'VQL': 'Visualize BAR SELECT start_station_name , start_station_id FROM trip'}",
        "record_name": "310",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "what are the ids and names of all start stations that were the beginning of at least 200 trips ?",
        "question_toks": [
            "what",
            "are",
            "the",
            "ids",
            "and",
            "names",
            "of",
            "all",
            "start",
            "stations",
            "that",
            "were",
            "the",
            "beginning",
            "of",
            "at",
            "least",
            "200",
            "trips",
            "?"
        ],
        "query": "Visualize BAR SELECT start_station_name , start_station_id FROM trip",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "start_station_name",
            ",",
            "start_station_id",
            "FROM",
            "trip"
        ],
        "choose_schema": "Table trip, columns = [*,id, duration, start_date, start_station_name, start_station_id, end_date, end_station_name, end_station_id, bike_id, subscription_type, zip_code]",
        "choose_schema_rat_link": "trip.start_station_name@SEP@trip.start_station_id@SEP@station.id@SEP@trip.id@SEP@station.name@SEP@trip.start_date@SEP@status.station_id"
    },
    {
        "nl_queries": "Visualize a pie chart about the proportion of All_Neutral and ACC_Percent .",
        "VQL": "Visualize PIE SELECT All_Neutral , ACC_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT All_Neutral , ACC_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT All_Neutral , ACC_Percent FROM basketball_match'}",
        "record_name": "3156",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Visualize a pie chart about the proportion of All_Neutral and ACC_Percent .",
        "question_toks": [
            "Visualize",
            "a",
            "pie",
            "chart",
            "about",
            "the",
            "proportion",
            "of",
            "All_Neutral",
            "and",
            "ACC_Percent",
            "."
        ],
        "query": "Visualize PIE SELECT All_Neutral , ACC_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "All_Neutral",
            ",",
            "ACC_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Visualize a pie chart about the proportion of All_Road and Team_ID .",
        "VQL": "Visualize PIE SELECT All_Road , Team_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT All_Road , Team_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT All_Road , Team_ID FROM basketball_match'}",
        "record_name": "3129",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Visualize a pie chart about the proportion of All_Road and Team_ID .",
        "question_toks": [
            "Visualize",
            "a",
            "pie",
            "chart",
            "about",
            "the",
            "proportion",
            "of",
            "All_Road",
            "and",
            "Team_ID",
            "."
        ],
        "query": "Visualize PIE SELECT All_Road , Team_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "All_Road",
            ",",
            "Team_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name"
    },
    {
        "nl_queries": "Scatter . what are the ids and details of all accounts ?",
        "VQL": "Visualize SCATTER SELECT Account_ID , Account_Details FROM Accounts",
        "db_id": "cre_Docs_and_Epenses",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Account_ID , Account_Details FROM Accounts', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Account_ID , Account_Details FROM Accounts'}",
        "record_name": "822",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Scatter . what are the ids and details of all accounts ?",
        "question_toks": [
            "Scatter",
            ".",
            "what",
            "are",
            "the",
            "ids",
            "and",
            "details",
            "of",
            "all",
            "accounts",
            "?"
        ],
        "query": "Visualize SCATTER SELECT Account_ID , Account_Details FROM Accounts",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Account_ID",
            ",",
            "Account_Details",
            "FROM",
            "Accounts"
        ],
        "choose_schema": "Table Accounts, columns = [*,Account_ID, Statement_ID, Account_Details]",
        "choose_schema_rat_link": "accounts.account_id@SEP@accounts.account_details"
    },
    {
        "nl_queries": "Plot all_games_percent by grouped by all games as a bar graph",
        "VQL": "Visualize BAR SELECT All_Games , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT All_Games , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT All_Games , All_Games_Percent FROM basketball_match'}",
        "record_name": "3140",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Plot all_games_percent by grouped by all games as a bar graph",
        "question_toks": [
            "Plot",
            "all_games_percent",
            "by",
            "grouped",
            "by",
            "all",
            "games",
            "as",
            "a",
            "bar",
            "graph"
        ],
        "query": "Visualize BAR SELECT All_Games , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "All_Games",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.all_games@SEP@basketball_match.all_games_percent"
    },
    {
        "nl_queries": "How many different products correspond to each order id . Plot them as scatter chart .",
        "VQL": "Visualize SCATTER SELECT order_id , count(DISTINCT product_id) FROM Order_items",
        "db_id": "customers_and_invoices",
        "hardness": "Medium",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT order_id , count(DISTINCT product_id) FROM Order_items', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT order_id , count(DISTINCT product_id) FROM Order_items'}",
        "record_name": "962",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        7
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                44,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                45,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "How many different products correspond to each order id . Plot them as scatter chart .",
        "question_toks": [
            "How",
            "many",
            "different",
            "products",
            "correspond",
            "to",
            "each",
            "order",
            "id",
            ".",
            "Plot",
            "them",
            "as",
            "scatter",
            "chart",
            "."
        ],
        "query": "Visualize SCATTER SELECT order_id , count(DISTINCT product_id) FROM Order_items",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "order_id",
            ",",
            "count",
            "(",
            "DISTINCT",
            "product_id",
            ")",
            "FROM",
            "Order_items"
        ],
        "choose_schema": "Table Orders, columns = [*,order_id, customer_id, date_order_placed, order_details]@SEP@Table Invoices, columns = [*,invoice_number, order_id, invoice_date]@SEP@Table Order_Items, columns = [*,order_item_id, order_id, product_id, product_quantity, other_order_item_details]",
        "choose_schema_rat_link": "orders.order_id@SEP@invoices.order_id@SEP@order_items.order_id@SEP@product_categories.product_type_description@SEP@products.product_id@SEP@products.product_name@SEP@products.product_color@SEP@products.product_size@SEP@order_items.product_id@SEP@order_items.product_quantity@SEP@invoice_line_items.product_id@SEP@invoice_line_items.product_title@SEP@invoice_line_items.product_quantity@SEP@invoice_line_items.product_price@SEP@orders.order_details@SEP@order_items.order_item_id@SEP@invoice_line_items.order_item_id"
    },
    {
        "nl_queries": "Show all account ids and account details . Plot them as scatter chart .",
        "VQL": "Visualize SCATTER SELECT Account_ID , Account_Details FROM Accounts",
        "db_id": "cre_Docs_and_Epenses",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Account_ID , Account_Details FROM Accounts', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Account_ID , Account_Details FROM Accounts'}",
        "record_name": "822",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Show all account ids and account details . Plot them as scatter chart .",
        "question_toks": [
            "Show",
            "all",
            "account",
            "ids",
            "and",
            "account",
            "details",
            ".",
            "Plot",
            "them",
            "as",
            "scatter",
            "chart",
            "."
        ],
        "query": "Visualize SCATTER SELECT Account_ID , Account_Details FROM Accounts",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Account_ID",
            ",",
            "Account_Details",
            "FROM",
            "Accounts"
        ],
        "choose_schema": "Table Accounts, columns = [*,Account_ID, Statement_ID, Account_Details]",
        "choose_schema_rat_link": "accounts.account_id@SEP@accounts.account_details"
    },
    {
        "nl_queries": "Show each employee's salary using a bar chart , note that use the last name of each employee .",
        "VQL": "Visualize BAR SELECT LAST_NAME , SALARY FROM employees",
        "db_id": "hr_1",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT LAST_NAME , SALARY FROM employees', 'binning': ''}, 'VQL': 'Visualize BAR SELECT LAST_NAME , SALARY FROM employees'}",
        "record_name": "1903",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Show each employee's salary using a bar chart , note that use the last name of each employee .",
        "question_toks": [
            "Show",
            "each",
            "employee's",
            "salary",
            "using",
            "a",
            "bar",
            "chart",
            ",",
            "note",
            "that",
            "use",
            "the",
            "last",
            "name",
            "of",
            "each",
            "employee",
            "."
        ],
        "query": "Visualize BAR SELECT LAST_NAME , SALARY FROM employees",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "LAST_NAME",
            ",",
            "SALARY",
            "FROM",
            "employees"
        ],
        "choose_schema": "Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]",
        "choose_schema_rat_link": "employees.last_name@SEP@employees.employee_id@SEP@job_history.employee_id@SEP@employees.salary"
    },
    {
        "nl_queries": "Return a bar chart about the distribution of All_Road and ACC_Percent .",
        "VQL": "Visualize BAR SELECT All_Road , ACC_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT All_Road , ACC_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT All_Road , ACC_Percent FROM basketball_match'}",
        "record_name": "3141",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Return a bar chart about the distribution of All_Road and ACC_Percent .",
        "question_toks": [
            "Return",
            "a",
            "bar",
            "chart",
            "about",
            "the",
            "distribution",
            "of",
            "All_Road",
            "and",
            "ACC_Percent",
            "."
        ],
        "query": "Visualize BAR SELECT All_Road , ACC_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "All_Road",
            ",",
            "ACC_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "For the attribute ACC_Regular_Season and ACC_Percent , show their proportion by a pie chart .",
        "VQL": "Visualize PIE SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match'}",
        "record_name": "3150",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "For the attribute ACC_Regular_Season and ACC_Percent , show their proportion by a pie chart .",
        "question_toks": [
            "For",
            "the",
            "attribute",
            "ACC_Regular_Season",
            "and",
            "ACC_Percent",
            ",",
            "show",
            "their",
            "proportion",
            "by",
            "a",
            "pie",
            "chart",
            "."
        ],
        "query": "Visualize PIE SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "ACC_Regular_Season",
            ",",
            "ACC_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "A pie chart shows the proportion of All_Neutral and team id .",
        "VQL": "Visualize PIE SELECT All_Neutral , Team_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT All_Neutral , Team_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT All_Neutral , Team_ID FROM basketball_match'}",
        "record_name": "3130",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "A pie chart shows the proportion of All_Neutral and team id .",
        "question_toks": [
            "A",
            "pie",
            "chart",
            "shows",
            "the",
            "proportion",
            "of",
            "All_Neutral",
            "and",
            "team",
            "id",
            "."
        ],
        "query": "Visualize PIE SELECT All_Neutral , Team_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "All_Neutral",
            ",",
            "Team_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name"
    },
    {
        "nl_queries": "Find All_Games and Team_ID , and visualize them by a bar chart .",
        "VQL": "Visualize BAR SELECT All_Games , Team_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT All_Games , Team_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT All_Games , Team_ID FROM basketball_match'}",
        "record_name": "3114",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Find All_Games and Team_ID , and visualize them by a bar chart .",
        "question_toks": [
            "Find",
            "All_Games",
            "and",
            "Team_ID",
            ",",
            "and",
            "visualize",
            "them",
            "by",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT All_Games , Team_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "All_Games",
            ",",
            "Team_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name"
    },
    {
        "nl_queries": "Pie . how many departments are in each school ?",
        "VQL": "Visualize PIE SELECT SCHOOL_CODE , count(DISTINCT dept_name) FROM department",
        "db_id": "college_1",
        "hardness": "Medium",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT SCHOOL_CODE , count(DISTINCT dept_name) FROM department', 'binning': ''}, 'VQL': 'Visualize PIE SELECT SCHOOL_CODE , count(DISTINCT dept_name) FROM department'}",
        "record_name": "514",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                12,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Pie . how many departments are in each school ?",
        "question_toks": [
            "Pie",
            ".",
            "how",
            "many",
            "departments",
            "are",
            "in",
            "each",
            "school",
            "?"
        ],
        "query": "Visualize PIE SELECT SCHOOL_CODE , count(DISTINCT dept_name) FROM department",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "SCHOOL_CODE",
            ",",
            "count",
            "(",
            "DISTINCT",
            "dept_name",
            ")",
            "FROM",
            "department"
        ],
        "choose_schema": "Table DEPARTMENT, columns = [*,DEPT_CODE, DEPT_NAME, SCHOOL_CODE, EMP_NUM, DEPT_ADDRESS, DEPT_EXTENSION]",
        "choose_schema_rat_link": "course.dept_code@SEP@department.dept_code@SEP@department.dept_name@SEP@department.dept_address@SEP@department.dept_extension@SEP@professor.dept_code@SEP@student.dept_code@SEP@department.school_code"
    },
    {
        "nl_queries": "Show all account ids and account details by a scatter chart .",
        "VQL": "Visualize SCATTER SELECT Account_ID , Account_Details FROM Accounts",
        "db_id": "cre_Docs_and_Epenses",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Account_ID , Account_Details FROM Accounts', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Account_ID , Account_Details FROM Accounts'}",
        "record_name": "822",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Show all account ids and account details by a scatter chart .",
        "question_toks": [
            "Show",
            "all",
            "account",
            "ids",
            "and",
            "account",
            "details",
            "by",
            "a",
            "scatter",
            "chart",
            "."
        ],
        "query": "Visualize SCATTER SELECT Account_ID , Account_Details FROM Accounts",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Account_ID",
            ",",
            "Account_Details",
            "FROM",
            "Accounts"
        ],
        "choose_schema": "Table Accounts, columns = [*,Account_ID, Statement_ID, Account_Details]",
        "choose_schema_rat_link": "accounts.account_id@SEP@accounts.account_details"
    },
    {
        "nl_queries": "Draw a bar chart for how many different locations does each school have ?",
        "VQL": "Visualize BAR SELECT SCHOOL_CODE , count(DISTINCT dept_address) FROM department",
        "db_id": "college_1",
        "hardness": "Medium",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT SCHOOL_CODE , count(DISTINCT dept_address) FROM department', 'binning': ''}, 'VQL': 'Visualize BAR SELECT SCHOOL_CODE , count(DISTINCT dept_address) FROM department'}",
        "record_name": "543",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                15,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Draw a bar chart for how many different locations does each school have ?",
        "question_toks": [
            "Draw",
            "a",
            "bar",
            "chart",
            "for",
            "how",
            "many",
            "different",
            "locations",
            "does",
            "each",
            "school",
            "have",
            "?"
        ],
        "query": "Visualize BAR SELECT SCHOOL_CODE , count(DISTINCT dept_address) FROM department",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "SCHOOL_CODE",
            ",",
            "count",
            "(",
            "DISTINCT",
            "dept_address",
            ")",
            "FROM",
            "department"
        ],
        "choose_schema": "Table DEPARTMENT, columns = [*,DEPT_CODE, DEPT_NAME, SCHOOL_CODE, EMP_NUM, DEPT_ADDRESS, DEPT_EXTENSION]",
        "choose_schema_rat_link": "department.school_code"
    },
    {
        "nl_queries": "Give me the trend about Shop_ID over Start_from .",
        "VQL": "Visualize LINE SELECT Start_from , Shop_ID FROM hiring",
        "db_id": "employee_hire_evaluation",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize LINE', 'data_part': {'sql_part': 'SELECT Start_from , Shop_ID FROM hiring', 'binning': ''}, 'VQL': 'Visualize LINE SELECT Start_from , Shop_ID FROM hiring'}",
        "record_name": "1338",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 2
        },
        "question": "Give me the trend about Shop_ID over Start_from .",
        "question_toks": [
            "Give",
            "me",
            "the",
            "trend",
            "about",
            "Shop_ID",
            "over",
            "Start_from",
            "."
        ],
        "query": "Visualize LINE SELECT Start_from , Shop_ID FROM hiring",
        "query_toks": [
            "Visualize",
            "LINE",
            "SELECT",
            "Start_from",
            ",",
            "Shop_ID",
            "FROM",
            "hiring"
        ],
        "choose_schema": "Table shop, columns = [*,Shop_ID, Name, Location, District, Number_products, Manager_name]@SEP@Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]",
        "choose_schema_rat_link": "shop.shop_id@SEP@hiring.shop_id@SEP@hiring.start_from"
    },
    {
        "nl_queries": "Show me about the distribution of meter_700 and meter_100 in a bar chart .",
        "VQL": "Visualize BAR SELECT meter_700 , meter_100 FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT meter_700 , meter_100 FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT meter_700 , meter_100 FROM swimmer'}",
        "record_name": "2925",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Show me about the distribution of meter_700 and meter_100 in a bar chart .",
        "question_toks": [
            "Show",
            "me",
            "about",
            "the",
            "distribution",
            "of",
            "meter_700",
            "and",
            "meter_100",
            "in",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT meter_700 , meter_100 FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "meter_700",
            ",",
            "meter_100",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]",
        "choose_schema_rat_link": "swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_400@SEP@swimmer.meter_500@SEP@swimmer.meter_600@SEP@swimmer.meter_700"
    },
    {
        "nl_queries": "Show me about the proportion of Team_ID and Team_ID in a pie chart .",
        "VQL": "Visualize PIE SELECT ACC_Regular_Season , Team_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT ACC_Regular_Season , Team_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT ACC_Regular_Season , Team_ID FROM basketball_match'}",
        "record_name": "3127",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Show me about the proportion of Team_ID and Team_ID in a pie chart .",
        "question_toks": [
            "Show",
            "me",
            "about",
            "the",
            "proportion",
            "of",
            "Team_ID",
            "and",
            "Team_ID",
            "in",
            "a",
            "pie",
            "chart",
            "."
        ],
        "query": "Visualize PIE SELECT ACC_Regular_Season , Team_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "ACC_Regular_Season",
            ",",
            "Team_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name"
    },
    {
        "nl_queries": "A bar chart shows the distribution of All_Neutral and ACC_Percent .",
        "VQL": "Visualize BAR SELECT All_Neutral , ACC_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT All_Neutral , ACC_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT All_Neutral , ACC_Percent FROM basketball_match'}",
        "record_name": "3144",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "A bar chart shows the distribution of All_Neutral and ACC_Percent .",
        "question_toks": [
            "A",
            "bar",
            "chart",
            "shows",
            "the",
            "distribution",
            "of",
            "All_Neutral",
            "and",
            "ACC_Percent",
            "."
        ],
        "query": "Visualize BAR SELECT All_Neutral , ACC_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "All_Neutral",
            ",",
            "ACC_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "A scatter showing the correlation between support and consider rates for each candidate .",
        "VQL": "Visualize SCATTER SELECT Support_rate , Consider_rate FROM candidate",
        "db_id": "candidate_poll",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Support_rate , Consider_rate FROM candidate', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Support_rate , Consider_rate FROM candidate'}",
        "record_name": "399",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "A scatter showing the correlation between support and consider rates for each candidate .",
        "question_toks": [
            "A",
            "scatter",
            "showing",
            "the",
            "correlation",
            "between",
            "support",
            "and",
            "consider",
            "rates",
            "for",
            "each",
            "candidate",
            "."
        ],
        "query": "Visualize SCATTER SELECT Support_rate , Consider_rate FROM candidate",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Support_rate",
            ",",
            "Consider_rate",
            "FROM",
            "candidate"
        ],
        "choose_schema": "Table candidate, columns = [*,Candidate_ID, People_ID, Poll_Source, Date, Support_rate, Consider_rate, Oppose_rate, Unsure_rate]",
        "choose_schema_rat_link": "candidate.consider_rate@SEP@candidate.support_rate@SEP@candidate.candidate_id"
    },
    {
        "nl_queries": "What is the maximum accelerate for all the different cylinders .",
        "VQL": "Visualize SCATTER SELECT max(Accelerate) , Cylinders FROM CARS_DATA",
        "db_id": "car_1",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT max(Accelerate) , Cylinders FROM CARS_DATA', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT max(Accelerate) , Cylinders FROM CARS_DATA'}",
        "record_name": "432",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "What is the maximum accelerate for all the different cylinders .",
        "question_toks": [
            "What",
            "is",
            "the",
            "maximum",
            "accelerate",
            "for",
            "all",
            "the",
            "different",
            "cylinders",
            "."
        ],
        "query": "Visualize SCATTER SELECT max(Accelerate) , Cylinders FROM CARS_DATA",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "max",
            "(",
            "Accelerate",
            ")",
            ",",
            "Cylinders",
            "FROM",
            "CARS_DATA"
        ],
        "choose_schema": "Table cars_data, columns = [*,Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year]",
        "choose_schema_rat_link": "cars_data.accelerate@SEP@cars_data.cylinders"
    },
    {
        "nl_queries": "Give me the comparison about ID over the name .",
        "VQL": "Visualize BAR SELECT name , ID FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT name , ID FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT name , ID FROM swimmer'}",
        "record_name": "2914",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Give me the comparison about ID over the name .",
        "question_toks": [
            "Give",
            "me",
            "the",
            "comparison",
            "about",
            "ID",
            "over",
            "the",
            "name",
            "."
        ],
        "query": "Visualize BAR SELECT name , ID FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "name",
            ",",
            "ID",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]@SEP@Table stadium, columns = [*,ID, name, Capacity, City, Country, Opening_year]@SEP@Table event, columns = [*,ID, Name, Stadium_ID, Year]@SEP@Table record, columns = [*,ID, Result, Swimmer_ID, Event_ID]",
        "choose_schema_rat_link": "swimmer.id@SEP@stadium.id@SEP@event.id@SEP@record.id@SEP@swimmer.name@SEP@stadium.name@SEP@event.name"
    },
    {
        "nl_queries": "Return a line on what are all the calendar dates and day Numbers ?",
        "VQL": "Visualize LINE SELECT Calendar_Date , Day_Number FROM Ref_calendar",
        "db_id": "cre_Doc_Tracking_DB",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize LINE', 'data_part': {'sql_part': 'SELECT Calendar_Date , Day_Number FROM Ref_calendar', 'binning': ''}, 'VQL': 'Visualize LINE SELECT Calendar_Date , Day_Number FROM Ref_calendar'}",
        "record_name": "789",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 2
        },
        "question": "Return a line on what are all the calendar dates and day Numbers ?",
        "question_toks": [
            "Return",
            "a",
            "line",
            "on",
            "what",
            "are",
            "all",
            "the",
            "calendar",
            "dates",
            "and",
            "day",
            "Numbers",
            "?"
        ],
        "query": "Visualize LINE SELECT Calendar_Date , Day_Number FROM Ref_calendar",
        "query_toks": [
            "Visualize",
            "LINE",
            "SELECT",
            "Calendar_Date",
            ",",
            "Day_Number",
            "FROM",
            "Ref_calendar"
        ],
        "choose_schema": "Table Ref_Calendar, columns = [*,Calendar_Date, Day_Number]",
        "choose_schema_rat_link": "all_documents.date_stored@SEP@employees.date_of_birth@SEP@document_locations.date_in_location_from@SEP@document_locations.date_in_locaton_to"
    },
    {
        "nl_queries": "School_ID across all road attribute in a pie chart .",
        "VQL": "Visualize PIE SELECT All_Road , School_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT All_Road , School_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT All_Road , School_ID FROM basketball_match'}",
        "record_name": "3153",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "School_ID across all road attribute in a pie chart .",
        "question_toks": [
            "School_ID",
            "across",
            "all",
            "road",
            "attribute",
            "in",
            "a",
            "pie",
            "chart",
            "."
        ],
        "query": "Visualize PIE SELECT All_Road , School_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "All_Road",
            ",",
            "School_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "basketball_match.all_road@SEP@university.school@SEP@basketball_match.school_id@SEP@university.school_id"
    },
    {
        "nl_queries": "Show me team_id by acc regular season in a histogram",
        "VQL": "Visualize BAR SELECT ACC_Regular_Season , Team_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT ACC_Regular_Season , Team_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT ACC_Regular_Season , Team_ID FROM basketball_match'}",
        "record_name": "3112",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Show me team_id by acc regular season in a histogram",
        "question_toks": [
            "Show",
            "me",
            "team_id",
            "by",
            "acc",
            "regular",
            "season",
            "in",
            "a",
            "histogram"
        ],
        "query": "Visualize BAR SELECT ACC_Regular_Season , Team_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "ACC_Regular_Season",
            ",",
            "Team_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.team_id@SEP@basketball_match.team_name@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "A scatter chart shows the correlation between Shop_ID and Employee_ID .",
        "VQL": "Visualize SCATTER SELECT Shop_ID , Employee_ID FROM hiring",
        "db_id": "employee_hire_evaluation",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Shop_ID , Employee_ID FROM hiring', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Shop_ID , Employee_ID FROM hiring'}",
        "record_name": "1357",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "A scatter chart shows the correlation between Shop_ID and Employee_ID .",
        "question_toks": [
            "A",
            "scatter",
            "chart",
            "shows",
            "the",
            "correlation",
            "between",
            "Shop_ID",
            "and",
            "Employee_ID",
            "."
        ],
        "query": "Visualize SCATTER SELECT Shop_ID , Employee_ID FROM hiring",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Shop_ID",
            ",",
            "Employee_ID",
            "FROM",
            "hiring"
        ],
        "choose_schema": "Table employee, columns = [*,Employee_ID, Name, Age, City]@SEP@Table shop, columns = [*,Shop_ID, Name, Location, District, Number_products, Manager_name]@SEP@Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]@SEP@Table evaluation, columns = [*,Employee_ID, Year_awarded, Bonus]",
        "choose_schema_rat_link": "shop.shop_id@SEP@hiring.shop_id@SEP@employee.employee_id@SEP@hiring.employee_id@SEP@evaluation.employee_id"
    },
    {
        "nl_queries": "Draw a pie chart about the proportion of All_Games and Team_ID .",
        "VQL": "Visualize PIE SELECT All_Games , Team_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT All_Games , Team_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT All_Games , Team_ID FROM basketball_match'}",
        "record_name": "3128",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Draw a pie chart about the proportion of All_Games and Team_ID .",
        "question_toks": [
            "Draw",
            "a",
            "pie",
            "chart",
            "about",
            "the",
            "proportion",
            "of",
            "All_Games",
            "and",
            "Team_ID",
            "."
        ],
        "query": "Visualize PIE SELECT All_Games , Team_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "All_Games",
            ",",
            "Team_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name"
    },
    {
        "nl_queries": "Find All_Neutral and Team_ID , and visualize them by a bar chart .",
        "VQL": "Visualize BAR SELECT All_Neutral , Team_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT All_Neutral , Team_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT All_Neutral , Team_ID FROM basketball_match'}",
        "record_name": "3118",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Find All_Neutral and Team_ID , and visualize them by a bar chart .",
        "question_toks": [
            "Find",
            "All_Neutral",
            "and",
            "Team_ID",
            ",",
            "and",
            "visualize",
            "them",
            "by",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT All_Neutral , Team_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "All_Neutral",
            ",",
            "Team_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name"
    },
    {
        "nl_queries": "Give me the comparison about Team_ID over the All_Games by a bar chart .",
        "VQL": "Visualize BAR SELECT All_Games , Team_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT All_Games , Team_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT All_Games , Team_ID FROM basketball_match'}",
        "record_name": "3114",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Give me the comparison about Team_ID over the All_Games by a bar chart .",
        "question_toks": [
            "Give",
            "me",
            "the",
            "comparison",
            "about",
            "Team_ID",
            "over",
            "the",
            "All_Games",
            "by",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT All_Games , Team_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "All_Games",
            ",",
            "Team_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name"
    },
    {
        "nl_queries": "Just show the employee's last name and their department's id using a bar chart .",
        "VQL": "Visualize BAR SELECT LAST_NAME , DEPARTMENT_ID FROM employees",
        "db_id": "hr_1",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT LAST_NAME , DEPARTMENT_ID FROM employees', 'binning': ''}, 'VQL': 'Visualize BAR SELECT LAST_NAME , DEPARTMENT_ID FROM employees'}",
        "record_name": "1905",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                24,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Just show the employee's last name and their department's id using a bar chart .",
        "question_toks": [
            "Just",
            "show",
            "the",
            "employee's",
            "last",
            "name",
            "and",
            "their",
            "department's",
            "id",
            "using",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT LAST_NAME , DEPARTMENT_ID FROM employees",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "LAST_NAME",
            ",",
            "DEPARTMENT_ID",
            "FROM",
            "employees"
        ],
        "choose_schema": "Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]@SEP@Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]@SEP@Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]",
        "choose_schema_rat_link": "employees.last_name@SEP@employees.employee_id@SEP@job_history.employee_id@SEP@departments.department_id@SEP@departments.department_name@SEP@employees.department_id@SEP@job_history.department_id"
    },
    {
        "nl_queries": "Draw a bar chart about the distribution of Time and meter_100 .",
        "VQL": "Visualize BAR SELECT Time , meter_100 FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Time , meter_100 FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Time , meter_100 FROM swimmer'}",
        "record_name": "2927",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Draw a bar chart about the distribution of Time and meter_100 .",
        "question_toks": [
            "Draw",
            "a",
            "bar",
            "chart",
            "about",
            "the",
            "distribution",
            "of",
            "Time",
            "and",
            "meter_100",
            "."
        ],
        "query": "Visualize BAR SELECT Time , meter_100 FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Time",
            ",",
            "meter_100",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]",
        "choose_schema_rat_link": "swimmer.time@SEP@swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_400@SEP@swimmer.meter_500@SEP@swimmer.meter_600@SEP@swimmer.meter_700"
    },
    {
        "nl_queries": "Return a scatter chart about the correlation between School_ID and All_Games_Percent .",
        "VQL": "Visualize SCATTER SELECT School_ID , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT School_ID , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT School_ID , All_Games_Percent FROM basketball_match'}",
        "record_name": "3109",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Return a scatter chart about the correlation between School_ID and All_Games_Percent .",
        "question_toks": [
            "Return",
            "a",
            "scatter",
            "chart",
            "about",
            "the",
            "correlation",
            "between",
            "School_ID",
            "and",
            "All_Games_Percent",
            "."
        ],
        "query": "Visualize SCATTER SELECT School_ID , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "School_ID",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "university.school@SEP@basketball_match.school_id@SEP@university.school_id"
    },
    {
        "nl_queries": "Draw a scatter chart for what are the grade number and classroom number of each class in the list ?",
        "VQL": "Visualize SCATTER SELECT Classroom , Grade FROM list",
        "db_id": "student_1",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Classroom , Grade FROM list', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Classroom , Grade FROM list'}",
        "record_name": "2872",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Draw a scatter chart for what are the grade number and classroom number of each class in the list ?",
        "question_toks": [
            "Draw",
            "a",
            "scatter",
            "chart",
            "for",
            "what",
            "are",
            "the",
            "grade",
            "number",
            "and",
            "classroom",
            "number",
            "of",
            "each",
            "class",
            "in",
            "the",
            "list",
            "?"
        ],
        "query": "Visualize SCATTER SELECT Classroom , Grade FROM list",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Classroom",
            ",",
            "Grade",
            "FROM",
            "list"
        ],
        "choose_schema": "Table list, columns = [*,LastName, FirstName, Grade, Classroom]@SEP@Table teachers, columns = [*,LastName, FirstName, Classroom]",
        "choose_schema_rat_link": "list.grade@SEP@list.classroom@SEP@teachers.classroom"
    },
    {
        "nl_queries": "Give me the comparison about All_Games_Percent over the All_Neutral .",
        "VQL": "Visualize BAR SELECT All_Neutral , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT All_Neutral , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT All_Neutral , All_Games_Percent FROM basketball_match'}",
        "record_name": "3146",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Give me the comparison about All_Games_Percent over the All_Neutral .",
        "question_toks": [
            "Give",
            "me",
            "the",
            "comparison",
            "about",
            "All_Games_Percent",
            "over",
            "the",
            "All_Neutral",
            "."
        ],
        "query": "Visualize BAR SELECT All_Neutral , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "All_Neutral",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]"
    },
    {
        "nl_queries": "Give me the comparison about meter_100 over the meter_600 by a bar chart .",
        "VQL": "Visualize BAR SELECT meter_600 , meter_100 FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT meter_600 , meter_100 FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT meter_600 , meter_100 FROM swimmer'}",
        "record_name": "2923",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Give me the comparison about meter_100 over the meter_600 by a bar chart .",
        "question_toks": [
            "Give",
            "me",
            "the",
            "comparison",
            "about",
            "meter_100",
            "over",
            "the",
            "meter_600",
            "by",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT meter_600 , meter_100 FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "meter_600",
            ",",
            "meter_100",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]",
        "choose_schema_rat_link": "swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_400@SEP@swimmer.meter_500@SEP@swimmer.meter_600@SEP@swimmer.meter_700"
    },
    {
        "nl_queries": "List each charge type and its amount . Show bar chart .",
        "VQL": "Visualize BAR SELECT charge_type , charge_amount FROM Charges",
        "db_id": "dog_kennels",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT charge_type , charge_amount FROM Charges', 'binning': ''}, 'VQL': 'Visualize BAR SELECT charge_type , charge_amount FROM Charges'}",
        "record_name": "1174",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "List each charge type and its amount . Show bar chart .",
        "question_toks": [
            "List",
            "each",
            "charge",
            "type",
            "and",
            "its",
            "amount",
            ".",
            "Show",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT charge_type , charge_amount FROM Charges",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "charge_type",
            ",",
            "charge_amount",
            "FROM",
            "Charges"
        ],
        "choose_schema": "Table Charges, columns = [*,charge_id, charge_type, charge_amount]",
        "choose_schema_rat_link": "charges.charge_type@SEP@charges.charge_id@SEP@charges.charge_amount"
    },
    {
        "nl_queries": "A scatter showing the correlation between consider and oppose rates for each candidate .",
        "VQL": "Visualize SCATTER SELECT Consider_rate , Oppose_rate FROM candidate",
        "db_id": "candidate_poll",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Consider_rate , Oppose_rate FROM candidate', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Consider_rate , Oppose_rate FROM candidate'}",
        "record_name": "400",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "A scatter showing the correlation between consider and oppose rates for each candidate .",
        "question_toks": [
            "A",
            "scatter",
            "showing",
            "the",
            "correlation",
            "between",
            "consider",
            "and",
            "oppose",
            "rates",
            "for",
            "each",
            "candidate",
            "."
        ],
        "query": "Visualize SCATTER SELECT Consider_rate , Oppose_rate FROM candidate",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Consider_rate",
            ",",
            "Oppose_rate",
            "FROM",
            "candidate"
        ],
        "choose_schema": "Table candidate, columns = [*,Candidate_ID, People_ID, Poll_Source, Date, Support_rate, Consider_rate, Oppose_rate, Unsure_rate]",
        "choose_schema_rat_link": "candidate.oppose_rate@SEP@candidate.consider_rate@SEP@candidate.candidate_id"
    },
    {
        "nl_queries": "Draw a bar chart about the distribution of name and ID .",
        "VQL": "Visualize BAR SELECT name , ID FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT name , ID FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT name , ID FROM swimmer'}",
        "record_name": "2914",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Draw a bar chart about the distribution of name and ID .",
        "question_toks": [
            "Draw",
            "a",
            "bar",
            "chart",
            "about",
            "the",
            "distribution",
            "of",
            "name",
            "and",
            "ID",
            "."
        ],
        "query": "Visualize BAR SELECT name , ID FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "name",
            ",",
            "ID",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]@SEP@Table stadium, columns = [*,ID, name, Capacity, City, Country, Opening_year]@SEP@Table event, columns = [*,ID, Name, Stadium_ID, Year]@SEP@Table record, columns = [*,ID, Result, Swimmer_ID, Event_ID]",
        "choose_schema_rat_link": "swimmer.name@SEP@stadium.name@SEP@event.name@SEP@swimmer.id@SEP@stadium.id@SEP@event.id@SEP@record.id"
    },
    {
        "nl_queries": "Return a pie chart about the proportion of All_Road and ACC_Percent .",
        "VQL": "Visualize PIE SELECT All_Road , ACC_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT All_Road , ACC_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT All_Road , ACC_Percent FROM basketball_match'}",
        "record_name": "3154",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Return a pie chart about the proportion of All_Road and ACC_Percent .",
        "question_toks": [
            "Return",
            "a",
            "pie",
            "chart",
            "about",
            "the",
            "proportion",
            "of",
            "All_Road",
            "and",
            "ACC_Percent",
            "."
        ],
        "query": "Visualize PIE SELECT All_Road , ACC_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "All_Road",
            ",",
            "ACC_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Visualize a scatter chart about the correlation between People_ID and Weight .",
        "VQL": "Visualize SCATTER SELECT People_ID , Weight FROM people",
        "db_id": "candidate_poll",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT People_ID , Weight FROM people', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT People_ID , Weight FROM people'}",
        "record_name": "391",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Visualize a scatter chart about the correlation between People_ID and Weight .",
        "question_toks": [
            "Visualize",
            "a",
            "scatter",
            "chart",
            "about",
            "the",
            "correlation",
            "between",
            "People_ID",
            "and",
            "Weight",
            "."
        ],
        "query": "Visualize SCATTER SELECT People_ID , Weight FROM people",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "People_ID",
            ",",
            "Weight",
            "FROM",
            "people"
        ],
        "choose_schema": "Table candidate, columns = [*,Candidate_ID, People_ID, Poll_Source, Date, Support_rate, Consider_rate, Oppose_rate, Unsure_rate]@SEP@Table people, columns = [*,People_ID, Sex, Name, Date_of_Birth, Height, Weight]",
        "choose_schema_rat_link": "candidate.people_id@SEP@people.people_id@SEP@people.weight"
    },
    {
        "nl_queries": "Show me about the correlation between Body_Builder_ID and Total in a scatter chart .",
        "VQL": "Visualize SCATTER SELECT Body_Builder_ID , Total FROM body_builder",
        "db_id": "body_builder",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Body_Builder_ID , Total FROM body_builder', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Body_Builder_ID , Total FROM body_builder'}",
        "record_name": "358",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Show me about the correlation between Body_Builder_ID and Total in a scatter chart .",
        "question_toks": [
            "Show",
            "me",
            "about",
            "the",
            "correlation",
            "between",
            "Body_Builder_ID",
            "and",
            "Total",
            "in",
            "a",
            "scatter",
            "chart",
            "."
        ],
        "query": "Visualize SCATTER SELECT Body_Builder_ID , Total FROM body_builder",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Body_Builder_ID",
            ",",
            "Total",
            "FROM",
            "body_builder"
        ],
        "choose_schema": "Table body_builder, columns = [*,Body_Builder_ID, People_ID, Snatch, Clean_Jerk, Total]",
        "choose_schema_rat_link": "body_builder.body_builder_id@SEP@body_builder.total"
    },
    {
        "nl_queries": "Bar chart of department_id from each first name",
        "VQL": "Visualize BAR SELECT FIRST_NAME , DEPARTMENT_ID FROM employees",
        "db_id": "hr_1",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT FIRST_NAME , DEPARTMENT_ID FROM employees', 'binning': ''}, 'VQL': 'Visualize BAR SELECT FIRST_NAME , DEPARTMENT_ID FROM employees'}",
        "record_name": "1898",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                24,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Bar chart of department_id from each first name",
        "question_toks": [
            "Bar",
            "chart",
            "of",
            "department_id",
            "from",
            "each",
            "first",
            "name"
        ],
        "query": "Visualize BAR SELECT FIRST_NAME , DEPARTMENT_ID FROM employees",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "FIRST_NAME",
            ",",
            "DEPARTMENT_ID",
            "FROM",
            "employees"
        ],
        "choose_schema": "Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]@SEP@Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]@SEP@Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]",
        "choose_schema_rat_link": "employees.first_name@SEP@departments.department_id@SEP@departments.department_name@SEP@employees.department_id@SEP@job_history.department_id"
    },
    {
        "nl_queries": "Return the apartment number and the number of rooms for each apartment by a bar chart .",
        "VQL": "Visualize BAR SELECT apt_number , room_count FROM Apartments",
        "db_id": "apartment_rentals",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT apt_number , room_count FROM Apartments', 'binning': ''}, 'VQL': 'Visualize BAR SELECT apt_number , room_count FROM Apartments'}",
        "record_name": "97",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Return the apartment number and the number of rooms for each apartment by a bar chart .",
        "question_toks": [
            "Return",
            "the",
            "apartment",
            "number",
            "and",
            "the",
            "number",
            "of",
            "rooms",
            "for",
            "each",
            "apartment",
            "by",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT apt_number , room_count FROM Apartments",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "apt_number",
            ",",
            "room_count",
            "FROM",
            "Apartments"
        ],
        "choose_schema": "Table Apartments, columns = [*,apt_id, building_id, apt_type_code, apt_number, bathroom_count, bedroom_count, room_count]",
        "choose_schema_rat_link": "apartments.apt_number@SEP@apartments.apt_id@SEP@apartments.apt_type_code@SEP@apartment_facilities.apt_id@SEP@apartment_bookings.apt_booking_id@SEP@apartment_bookings.apt_id@SEP@view_unit_status.apt_id@SEP@view_unit_status.apt_booking_id@SEP@apartments.room_count"
    },
    {
        "nl_queries": "A scatter chart shows the correlation between Height and Weight .",
        "VQL": "Visualize SCATTER SELECT Height , Weight FROM people",
        "db_id": "candidate_poll",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Height , Weight FROM people', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Height , Weight FROM people'}",
        "record_name": "390",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "A scatter chart shows the correlation between Height and Weight .",
        "question_toks": [
            "A",
            "scatter",
            "chart",
            "shows",
            "the",
            "correlation",
            "between",
            "Height",
            "and",
            "Weight",
            "."
        ],
        "query": "Visualize SCATTER SELECT Height , Weight FROM people",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Height",
            ",",
            "Weight",
            "FROM",
            "people"
        ],
        "choose_schema": "Table people, columns = [*,People_ID, Sex, Name, Date_of_Birth, Height, Weight]",
        "choose_schema_rat_link": "people.height@SEP@people.weight"
    },
    {
        "nl_queries": "Draw a line chart about the change of Employee_ID over Start_from .",
        "VQL": "Visualize LINE SELECT Start_from , Employee_ID FROM hiring",
        "db_id": "employee_hire_evaluation",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize LINE', 'data_part': {'sql_part': 'SELECT Start_from , Employee_ID FROM hiring', 'binning': ''}, 'VQL': 'Visualize LINE SELECT Start_from , Employee_ID FROM hiring'}",
        "record_name": "1339",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 2
        },
        "question": "Draw a line chart about the change of Employee_ID over Start_from .",
        "question_toks": [
            "Draw",
            "a",
            "line",
            "chart",
            "about",
            "the",
            "change",
            "of",
            "Employee_ID",
            "over",
            "Start_from",
            "."
        ],
        "query": "Visualize LINE SELECT Start_from , Employee_ID FROM hiring",
        "query_toks": [
            "Visualize",
            "LINE",
            "SELECT",
            "Start_from",
            ",",
            "Employee_ID",
            "FROM",
            "hiring"
        ],
        "choose_schema": "Table employee, columns = [*,Employee_ID, Name, Age, City]@SEP@Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]@SEP@Table evaluation, columns = [*,Employee_ID, Year_awarded, Bonus]",
        "choose_schema_rat_link": "employee.employee_id@SEP@hiring.employee_id@SEP@evaluation.employee_id@SEP@hiring.start_from"
    },
    {
        "nl_queries": "Visualize a scatter chart about the correlation between Shop_ID and Employee_ID .",
        "VQL": "Visualize SCATTER SELECT Shop_ID , Employee_ID FROM hiring",
        "db_id": "employee_hire_evaluation",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Shop_ID , Employee_ID FROM hiring', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Shop_ID , Employee_ID FROM hiring'}",
        "record_name": "1357",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Visualize a scatter chart about the correlation between Shop_ID and Employee_ID .",
        "question_toks": [
            "Visualize",
            "a",
            "scatter",
            "chart",
            "about",
            "the",
            "correlation",
            "between",
            "Shop_ID",
            "and",
            "Employee_ID",
            "."
        ],
        "query": "Visualize SCATTER SELECT Shop_ID , Employee_ID FROM hiring",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Shop_ID",
            ",",
            "Employee_ID",
            "FROM",
            "hiring"
        ],
        "choose_schema": "Table employee, columns = [*,Employee_ID, Name, Age, City]@SEP@Table shop, columns = [*,Shop_ID, Name, Location, District, Number_products, Manager_name]@SEP@Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]@SEP@Table evaluation, columns = [*,Employee_ID, Year_awarded, Bonus]",
        "choose_schema_rat_link": "shop.shop_id@SEP@hiring.shop_id@SEP@employee.employee_id@SEP@hiring.employee_id@SEP@evaluation.employee_id"
    },
    {
        "nl_queries": "A bar chart shows the distribution of Date_of_Birth and Height .",
        "VQL": "Visualize BAR SELECT Date_of_Birth , Height FROM people",
        "db_id": "candidate_poll",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Date_of_Birth , Height FROM people', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Date_of_Birth , Height FROM people'}",
        "record_name": "397",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "A bar chart shows the distribution of Date_of_Birth and Height .",
        "question_toks": [
            "A",
            "bar",
            "chart",
            "shows",
            "the",
            "distribution",
            "of",
            "Date_of_Birth",
            "and",
            "Height",
            "."
        ],
        "query": "Visualize BAR SELECT Date_of_Birth , Height FROM people",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Date_of_Birth",
            ",",
            "Height",
            "FROM",
            "people"
        ],
        "choose_schema": "Table people, columns = [*,People_ID, Sex, Name, Date_of_Birth, Height, Weight]",
        "choose_schema_rat_link": "candidate.date@SEP@people.date_of_birth@SEP@people.height"
    },
    {
        "nl_queries": "Return a line chart about the change of Shop_ID over Start_from .",
        "VQL": "Visualize LINE SELECT Start_from , Shop_ID FROM hiring",
        "db_id": "employee_hire_evaluation",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize LINE', 'data_part': {'sql_part': 'SELECT Start_from , Shop_ID FROM hiring', 'binning': ''}, 'VQL': 'Visualize LINE SELECT Start_from , Shop_ID FROM hiring'}",
        "record_name": "1338",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 2
        },
        "question": "Return a line chart about the change of Shop_ID over Start_from .",
        "question_toks": [
            "Return",
            "a",
            "line",
            "chart",
            "about",
            "the",
            "change",
            "of",
            "Shop_ID",
            "over",
            "Start_from",
            "."
        ],
        "query": "Visualize LINE SELECT Start_from , Shop_ID FROM hiring",
        "query_toks": [
            "Visualize",
            "LINE",
            "SELECT",
            "Start_from",
            ",",
            "Shop_ID",
            "FROM",
            "hiring"
        ],
        "choose_schema": "Table shop, columns = [*,Shop_ID, Name, Location, District, Number_products, Manager_name]@SEP@Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]",
        "choose_schema_rat_link": "shop.shop_id@SEP@hiring.shop_id@SEP@hiring.start_from"
    },
    {
        "nl_queries": "List the council tax ids and their related cmi cross references of all the parking fines by a scatter chart .",
        "VQL": "Visualize SCATTER SELECT council_tax_id , cmi_cross_ref_id FROM parking_fines",
        "db_id": "local_govt_mdm",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT council_tax_id , cmi_cross_ref_id FROM parking_fines', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT council_tax_id , cmi_cross_ref_id FROM parking_fines'}",
        "record_name": "2158",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "List the council tax ids and their related cmi cross references of all the parking fines by a scatter chart .",
        "question_toks": [
            "List",
            "the",
            "council",
            "tax",
            "ids",
            "and",
            "their",
            "related",
            "cmi",
            "cross",
            "references",
            "of",
            "all",
            "the",
            "parking",
            "fines",
            "by",
            "a",
            "scatter",
            "chart",
            "."
        ],
        "query": "Visualize SCATTER SELECT council_tax_id , cmi_cross_ref_id FROM parking_fines",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "council_tax_id",
            ",",
            "cmi_cross_ref_id",
            "FROM",
            "parking_fines"
        ],
        "choose_schema": "Table CMI_Cross_References, columns = [*,cmi_cross_ref_id, master_customer_id, source_system_code]@SEP@Table Council_Tax, columns = [*,council_tax_id, cmi_cross_ref_id]@SEP@Table Business_Rates, columns = [*,business_rates_id, cmi_cross_ref_id]@SEP@Table Benefits_Overpayments, columns = [*,council_tax_id, cmi_cross_ref_id]@SEP@Table Parking_Fines, columns = [*,council_tax_id, cmi_cross_ref_id]@SEP@Table Rent_Arrears, columns = [*,council_tax_id, cmi_cross_ref_id]@SEP@Table Electoral_Register, columns = [*,electoral_register_id, cmi_cross_ref_id]",
        "choose_schema_rat_link": "council_tax.council_tax_id@SEP@benefits_overpayments.council_tax_id@SEP@parking_fines.council_tax_id@SEP@rent_arrears.council_tax_id@SEP@cmi_cross_references.cmi_cross_ref_id@SEP@council_tax.cmi_cross_ref_id@SEP@business_rates.cmi_cross_ref_id@SEP@parking_fines.cmi_cross_ref_id@SEP@rent_arrears.cmi_cross_ref_id@SEP@electoral_register.cmi_cross_ref_id@SEP@benefits_overpayments.cmi_cross_ref_id@SEP@customer_master_index.cmi_details"
    },
    {
        "nl_queries": "A pie chart shows the proportion of Team_Name and School_ID .",
        "VQL": "Visualize PIE SELECT Team_Name , School_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT Team_Name , School_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT Team_Name , School_ID FROM basketball_match'}",
        "record_name": "3147",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "A pie chart shows the proportion of Team_Name and School_ID .",
        "question_toks": [
            "A",
            "pie",
            "chart",
            "shows",
            "the",
            "proportion",
            "of",
            "Team_Name",
            "and",
            "School_ID",
            "."
        ],
        "query": "Visualize PIE SELECT Team_Name , School_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "Team_Name",
            ",",
            "School_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name@SEP@university.school@SEP@basketball_match.school_id@SEP@university.school_id"
    },
    {
        "nl_queries": "Visualize a scatter chart about the correlation between People_ID and Snatch .",
        "VQL": "Visualize SCATTER SELECT People_ID , Snatch FROM body_builder",
        "db_id": "body_builder",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT People_ID , Snatch FROM body_builder', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT People_ID , Snatch FROM body_builder'}",
        "record_name": "357",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Visualize a scatter chart about the correlation between People_ID and Snatch .",
        "question_toks": [
            "Visualize",
            "a",
            "scatter",
            "chart",
            "about",
            "the",
            "correlation",
            "between",
            "People_ID",
            "and",
            "Snatch",
            "."
        ],
        "query": "Visualize SCATTER SELECT People_ID , Snatch FROM body_builder",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "People_ID",
            ",",
            "Snatch",
            "FROM",
            "body_builder"
        ],
        "choose_schema": "Table body_builder, columns = [*,Body_Builder_ID, People_ID, Snatch, Clean_Jerk, Total]@SEP@Table people, columns = [*,People_ID, Name, Height, Weight, Birth_Date, Birth_Place]",
        "choose_schema_rat_link": "body_builder.people_id@SEP@people.people_id@SEP@body_builder.snatch"
    },
    {
        "nl_queries": "Just show employees' salaries by their first name in a bar chart .",
        "VQL": "Visualize BAR SELECT FIRST_NAME , SALARY FROM employees",
        "db_id": "hr_1",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT FIRST_NAME , SALARY FROM employees', 'binning': ''}, 'VQL': 'Visualize BAR SELECT FIRST_NAME , SALARY FROM employees'}",
        "record_name": "1896",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Just show employees' salaries by their first name in a bar chart .",
        "question_toks": [
            "Just",
            "show",
            "employees'",
            "salaries",
            "by",
            "their",
            "first",
            "name",
            "in",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT FIRST_NAME , SALARY FROM employees",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "FIRST_NAME",
            ",",
            "SALARY",
            "FROM",
            "employees"
        ],
        "choose_schema": "Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]",
        "choose_schema_rat_link": "employees.first_name@SEP@employees.employee_id@SEP@job_history.employee_id@SEP@employees.salary"
    },
    {
        "nl_queries": "Draw a bar chart about the distribution of meter_700 and ID .",
        "VQL": "Visualize BAR SELECT meter_700 , ID FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT meter_700 , ID FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT meter_700 , ID FROM swimmer'}",
        "record_name": "2924",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Draw a bar chart about the distribution of meter_700 and ID .",
        "question_toks": [
            "Draw",
            "a",
            "bar",
            "chart",
            "about",
            "the",
            "distribution",
            "of",
            "meter_700",
            "and",
            "ID",
            "."
        ],
        "query": "Visualize BAR SELECT meter_700 , ID FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "meter_700",
            ",",
            "ID",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]@SEP@Table stadium, columns = [*,ID, name, Capacity, City, Country, Opening_year]@SEP@Table event, columns = [*,ID, Name, Stadium_ID, Year]@SEP@Table record, columns = [*,ID, Result, Swimmer_ID, Event_ID]",
        "choose_schema_rat_link": "swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_400@SEP@swimmer.meter_500@SEP@swimmer.meter_600@SEP@swimmer.meter_700@SEP@swimmer.id@SEP@stadium.id@SEP@event.id@SEP@record.id"
    },
    {
        "nl_queries": "Can you draw the trend of shop_id over the start from ?",
        "VQL": "Visualize LINE SELECT Start_from , Shop_ID FROM hiring",
        "db_id": "employee_hire_evaluation",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize LINE', 'data_part': {'sql_part': 'SELECT Start_from , Shop_ID FROM hiring', 'binning': ''}, 'VQL': 'Visualize LINE SELECT Start_from , Shop_ID FROM hiring'}",
        "record_name": "1338",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 2
        },
        "question": "Can you draw the trend of shop_id over the start from ?",
        "question_toks": [
            "Can",
            "you",
            "draw",
            "the",
            "trend",
            "of",
            "shop_id",
            "over",
            "the",
            "start",
            "from",
            "?"
        ],
        "query": "Visualize LINE SELECT Start_from , Shop_ID FROM hiring",
        "query_toks": [
            "Visualize",
            "LINE",
            "SELECT",
            "Start_from",
            ",",
            "Shop_ID",
            "FROM",
            "hiring"
        ],
        "choose_schema": "Table shop, columns = [*,Shop_ID, Name, Location, District, Number_products, Manager_name]@SEP@Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]",
        "choose_schema_rat_link": "hiring.start_from@SEP@shop.shop_id@SEP@hiring.shop_id"
    },
    {
        "nl_queries": "A pie chart shows the proportion of All_Games and Team_ID .",
        "VQL": "Visualize PIE SELECT All_Games , Team_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT All_Games , Team_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT All_Games , Team_ID FROM basketball_match'}",
        "record_name": "3128",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "A pie chart shows the proportion of All_Games and Team_ID .",
        "question_toks": [
            "A",
            "pie",
            "chart",
            "shows",
            "the",
            "proportion",
            "of",
            "All_Games",
            "and",
            "Team_ID",
            "."
        ],
        "query": "Visualize PIE SELECT All_Games , Team_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "All_Games",
            ",",
            "Team_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name"
    },
    {
        "nl_queries": "What is the relationship between Snatch and Total ?",
        "VQL": "Visualize SCATTER SELECT Snatch , Total FROM body_builder",
        "db_id": "body_builder",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Snatch , Total FROM body_builder', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Snatch , Total FROM body_builder'}",
        "record_name": "354",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "What is the relationship between Snatch and Total ?",
        "question_toks": [
            "What",
            "is",
            "the",
            "relationship",
            "between",
            "Snatch",
            "and",
            "Total",
            "?"
        ],
        "query": "Visualize SCATTER SELECT Snatch , Total FROM body_builder",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Snatch",
            ",",
            "Total",
            "FROM",
            "body_builder"
        ],
        "choose_schema": "Table body_builder, columns = [*,Body_Builder_ID, People_ID, Snatch, Clean_Jerk, Total]",
        "choose_schema_rat_link": "body_builder.snatch@SEP@body_builder.total"
    },
    {
        "nl_queries": "Give me the comparison about Team_ID over the Team_Name by a bar chart .",
        "VQL": "Visualize BAR SELECT Team_Name , Team_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Team_Name , Team_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Team_Name , Team_ID FROM basketball_match'}",
        "record_name": "3110",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Give me the comparison about Team_ID over the Team_Name by a bar chart .",
        "question_toks": [
            "Give",
            "me",
            "the",
            "comparison",
            "about",
            "Team_ID",
            "over",
            "the",
            "Team_Name",
            "by",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT Team_Name , Team_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Team_Name",
            ",",
            "Team_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name"
    },
    {
        "nl_queries": "Scatter plot to show school id on x axis and acc_percent on y axis .",
        "VQL": "Visualize SCATTER SELECT School_ID , ACC_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT School_ID , ACC_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT School_ID , ACC_Percent FROM basketball_match'}",
        "record_name": "3107",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Scatter plot to show school id on x axis and acc_percent on y axis .",
        "question_toks": [
            "Scatter",
            "plot",
            "to",
            "show",
            "school",
            "id",
            "on",
            "x",
            "axis",
            "and",
            "acc_percent",
            "on",
            "y",
            "axis",
            "."
        ],
        "query": "Visualize SCATTER SELECT School_ID , ACC_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "School_ID",
            ",",
            "ACC_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "basketball_match.school_id@SEP@university.school_id@SEP@university.school@SEP@basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Give me the comparison about All_Games_Percent over the ACC_Regular_Season .",
        "VQL": "Visualize BAR SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match'}",
        "record_name": "3137",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Give me the comparison about All_Games_Percent over the ACC_Regular_Season .",
        "question_toks": [
            "Give",
            "me",
            "the",
            "comparison",
            "about",
            "All_Games_Percent",
            "over",
            "the",
            "ACC_Regular_Season",
            "."
        ],
        "query": "Visualize BAR SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "ACC_Regular_Season",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Show all calendar dates and day Numbers . Plot them as line chart .",
        "VQL": "Visualize LINE SELECT Calendar_Date , Day_Number FROM Ref_calendar",
        "db_id": "cre_Doc_Tracking_DB",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize LINE', 'data_part': {'sql_part': 'SELECT Calendar_Date , Day_Number FROM Ref_calendar', 'binning': ''}, 'VQL': 'Visualize LINE SELECT Calendar_Date , Day_Number FROM Ref_calendar'}",
        "record_name": "789",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 2
        },
        "question": "Show all calendar dates and day Numbers . Plot them as line chart .",
        "question_toks": [
            "Show",
            "all",
            "calendar",
            "dates",
            "and",
            "day",
            "Numbers",
            ".",
            "Plot",
            "them",
            "as",
            "line",
            "chart",
            "."
        ],
        "query": "Visualize LINE SELECT Calendar_Date , Day_Number FROM Ref_calendar",
        "query_toks": [
            "Visualize",
            "LINE",
            "SELECT",
            "Calendar_Date",
            ",",
            "Day_Number",
            "FROM",
            "Ref_calendar"
        ],
        "choose_schema": "Table Ref_Calendar, columns = [*,Calendar_Date, Day_Number]",
        "choose_schema_rat_link": "all_documents.date_stored@SEP@employees.date_of_birth@SEP@document_locations.date_in_location_from@SEP@document_locations.date_in_locaton_to"
    },
    {
        "nl_queries": "Show me about the distribution of All_Road and ACC_Percent in a bar chart .",
        "VQL": "Visualize BAR SELECT All_Road , ACC_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT All_Road , ACC_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT All_Road , ACC_Percent FROM basketball_match'}",
        "record_name": "3141",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Show me about the distribution of All_Road and ACC_Percent in a bar chart .",
        "question_toks": [
            "Show",
            "me",
            "about",
            "the",
            "distribution",
            "of",
            "All_Road",
            "and",
            "ACC_Percent",
            "in",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT All_Road , ACC_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "All_Road",
            ",",
            "ACC_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Visualize a scatter chart about the correlation between People_ID and Height .",
        "VQL": "Visualize SCATTER SELECT People_ID , Height FROM people",
        "db_id": "candidate_poll",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT People_ID , Height FROM people', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT People_ID , Height FROM people'}",
        "record_name": "392",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Visualize a scatter chart about the correlation between People_ID and Height .",
        "question_toks": [
            "Visualize",
            "a",
            "scatter",
            "chart",
            "about",
            "the",
            "correlation",
            "between",
            "People_ID",
            "and",
            "Height",
            "."
        ],
        "query": "Visualize SCATTER SELECT People_ID , Height FROM people",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "People_ID",
            ",",
            "Height",
            "FROM",
            "people"
        ],
        "choose_schema": "Table candidate, columns = [*,Candidate_ID, People_ID, Poll_Source, Date, Support_rate, Consider_rate, Oppose_rate, Unsure_rate]@SEP@Table people, columns = [*,People_ID, Sex, Name, Date_of_Birth, Height, Weight]",
        "choose_schema_rat_link": "candidate.people_id@SEP@people.people_id@SEP@people.height"
    },
    {
        "nl_queries": "Show employee_id from each email",
        "VQL": "Visualize BAR SELECT EMAIL , EMPLOYEE_ID FROM employees",
        "db_id": "hr_1",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT EMAIL , EMPLOYEE_ID FROM employees', 'binning': ''}, 'VQL': 'Visualize BAR SELECT EMAIL , EMPLOYEE_ID FROM employees'}",
        "record_name": "1909",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                17,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Show employee_id from each email",
        "question_toks": [
            "Show",
            "employee_id",
            "from",
            "each",
            "email"
        ],
        "query": "Visualize BAR SELECT EMAIL , EMPLOYEE_ID FROM employees",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "EMAIL",
            ",",
            "EMPLOYEE_ID",
            "FROM",
            "employees"
        ],
        "choose_schema": "Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]@SEP@Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]",
        "choose_schema_rat_link": "employees.employee_id@SEP@job_history.employee_id@SEP@employees.email"
    },
    {
        "nl_queries": "Return a scatter chart about the correlation between Team_ID and ACC_Percent .",
        "VQL": "Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Team_ID , ACC_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match'}",
        "record_name": "3120",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Return a scatter chart about the correlation between Team_ID and ACC_Percent .",
        "question_toks": [
            "Return",
            "a",
            "scatter",
            "chart",
            "about",
            "the",
            "correlation",
            "between",
            "Team_ID",
            "and",
            "ACC_Percent",
            "."
        ],
        "query": "Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Team_ID",
            ",",
            "ACC_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name@SEP@basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Show me about the distribution of meter_500 and meter_100 in a bar chart .",
        "VQL": "Visualize BAR SELECT meter_500 , meter_100 FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT meter_500 , meter_100 FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT meter_500 , meter_100 FROM swimmer'}",
        "record_name": "2921",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Show me about the distribution of meter_500 and meter_100 in a bar chart .",
        "question_toks": [
            "Show",
            "me",
            "about",
            "the",
            "distribution",
            "of",
            "meter_500",
            "and",
            "meter_100",
            "in",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT meter_500 , meter_100 FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "meter_500",
            ",",
            "meter_100",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]",
        "choose_schema_rat_link": "swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_400@SEP@swimmer.meter_500@SEP@swimmer.meter_600@SEP@swimmer.meter_700"
    },
    {
        "nl_queries": "Find meter_300 and meter_100 , and visualize them by a bar chart .",
        "VQL": "Visualize BAR SELECT meter_300 , meter_100 FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT meter_300 , meter_100 FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT meter_300 , meter_100 FROM swimmer'}",
        "record_name": "2917",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Find meter_300 and meter_100 , and visualize them by a bar chart .",
        "question_toks": [
            "Find",
            "meter_300",
            "and",
            "meter_100",
            ",",
            "and",
            "visualize",
            "them",
            "by",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT meter_300 , meter_100 FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "meter_300",
            ",",
            "meter_100",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]",
        "choose_schema_rat_link": "swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_400@SEP@swimmer.meter_500@SEP@swimmer.meter_600@SEP@swimmer.meter_700"
    },
    {
        "nl_queries": "What is the relationship between ACC_Percent and All_Games_Percent ?",
        "VQL": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT ACC_Percent , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match'}",
        "record_name": "3121",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "What is the relationship between ACC_Percent and All_Games_Percent ?",
        "question_toks": [
            "What",
            "is",
            "the",
            "relationship",
            "between",
            "ACC_Percent",
            "and",
            "All_Games_Percent",
            "?"
        ],
        "query": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "ACC_Percent",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Draw a pie chart about the proportion of All_Games and School_ID .",
        "VQL": "Visualize PIE SELECT All_Games , School_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT All_Games , School_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT All_Games , School_ID FROM basketball_match'}",
        "record_name": "3151",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Draw a pie chart about the proportion of All_Games and School_ID .",
        "question_toks": [
            "Draw",
            "a",
            "pie",
            "chart",
            "about",
            "the",
            "proportion",
            "of",
            "All_Games",
            "and",
            "School_ID",
            "."
        ],
        "query": "Visualize PIE SELECT All_Games , School_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "All_Games",
            ",",
            "School_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "university.school@SEP@basketball_match.school_id@SEP@university.school_id"
    },
    {
        "nl_queries": "Find the number of departments in each school . Visualize by pie chart .",
        "VQL": "Visualize PIE SELECT SCHOOL_CODE , count(DISTINCT dept_name) FROM department",
        "db_id": "college_1",
        "hardness": "Medium",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT SCHOOL_CODE , count(DISTINCT dept_name) FROM department', 'binning': ''}, 'VQL': 'Visualize PIE SELECT SCHOOL_CODE , count(DISTINCT dept_name) FROM department'}",
        "record_name": "514",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                12,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Find the number of departments in each school . Visualize by pie chart .",
        "question_toks": [
            "Find",
            "the",
            "number",
            "of",
            "departments",
            "in",
            "each",
            "school",
            ".",
            "Visualize",
            "by",
            "pie",
            "chart",
            "."
        ],
        "query": "Visualize PIE SELECT SCHOOL_CODE , count(DISTINCT dept_name) FROM department",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "SCHOOL_CODE",
            ",",
            "count",
            "(",
            "DISTINCT",
            "dept_name",
            ")",
            "FROM",
            "department"
        ],
        "choose_schema": "Table DEPARTMENT, columns = [*,DEPT_CODE, DEPT_NAME, SCHOOL_CODE, EMP_NUM, DEPT_ADDRESS, DEPT_EXTENSION]",
        "choose_schema_rat_link": "course.dept_code@SEP@department.dept_code@SEP@department.dept_name@SEP@department.dept_address@SEP@department.dept_extension@SEP@professor.dept_code@SEP@student.dept_code@SEP@department.school_code"
    },
    {
        "nl_queries": "Visualize a bar chart about the distribution of Team_Name and All_Games_Percent .",
        "VQL": "Visualize BAR SELECT Team_Name , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Team_Name , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Team_Name , All_Games_Percent FROM basketball_match'}",
        "record_name": "3134",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Visualize a bar chart about the distribution of Team_Name and All_Games_Percent .",
        "question_toks": [
            "Visualize",
            "a",
            "bar",
            "chart",
            "about",
            "the",
            "distribution",
            "of",
            "Team_Name",
            "and",
            "All_Games_Percent",
            "."
        ],
        "query": "Visualize BAR SELECT Team_Name , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Team_Name",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name"
    },
    {
        "nl_queries": "Show order ids and the number of products in each order by a scatter chart .",
        "VQL": "Visualize SCATTER SELECT order_id , count(DISTINCT product_id) FROM Order_items",
        "db_id": "customers_and_invoices",
        "hardness": "Medium",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT order_id , count(DISTINCT product_id) FROM Order_items', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT order_id , count(DISTINCT product_id) FROM Order_items'}",
        "record_name": "962",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        7
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                44,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                45,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Show order ids and the number of products in each order by a scatter chart .",
        "question_toks": [
            "Show",
            "order",
            "ids",
            "and",
            "the",
            "number",
            "of",
            "products",
            "in",
            "each",
            "order",
            "by",
            "a",
            "scatter",
            "chart",
            "."
        ],
        "query": "Visualize SCATTER SELECT order_id , count(DISTINCT product_id) FROM Order_items",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "order_id",
            ",",
            "count",
            "(",
            "DISTINCT",
            "product_id",
            ")",
            "FROM",
            "Order_items"
        ],
        "choose_schema": "Table Orders, columns = [*,order_id, customer_id, date_order_placed, order_details]@SEP@Table Invoices, columns = [*,invoice_number, order_id, invoice_date]@SEP@Table Order_Items, columns = [*,order_item_id, order_id, product_id, product_quantity, other_order_item_details]",
        "choose_schema_rat_link": "orders.order_id@SEP@invoices.order_id@SEP@order_items.order_id@SEP@orders.order_details@SEP@order_items.order_item_id@SEP@invoice_line_items.order_item_id@SEP@product_categories.product_type_description@SEP@products.product_id@SEP@products.product_name@SEP@products.product_color@SEP@products.product_size@SEP@order_items.product_id@SEP@order_items.product_quantity@SEP@invoice_line_items.product_id@SEP@invoice_line_items.product_title@SEP@invoice_line_items.product_quantity@SEP@invoice_line_items.product_price"
    },
    {
        "nl_queries": "What are the reigns and days held of all wrestlers . Visualize by scatter chart .",
        "VQL": "Visualize SCATTER SELECT Reign , Days_held FROM wrestler",
        "db_id": "wrestler",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Reign , Days_held FROM wrestler', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Reign , Days_held FROM wrestler'}",
        "record_name": "3284",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "What are the reigns and days held of all wrestlers . Visualize by scatter chart .",
        "question_toks": [
            "What",
            "are",
            "the",
            "reigns",
            "and",
            "days",
            "held",
            "of",
            "all",
            "wrestlers",
            ".",
            "Visualize",
            "by",
            "scatter",
            "chart",
            "."
        ],
        "query": "Visualize SCATTER SELECT Reign , Days_held FROM wrestler",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Reign",
            ",",
            "Days_held",
            "FROM",
            "wrestler"
        ],
        "choose_schema": "Table wrestler, columns = [*,Wrestler_ID, Name, Reign, Days_held, Location, Event]",
        "choose_schema_rat_link": "wrestler.days_held@SEP@wrestler.reign@SEP@wrestler.wrestler_id@SEP@elimination.wrestler_id"
    },
    {
        "nl_queries": "Show me about the correlation between People_ID and Height in a scatter chart .",
        "VQL": "Visualize SCATTER SELECT People_ID , Height FROM people",
        "db_id": "candidate_poll",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT People_ID , Height FROM people', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT People_ID , Height FROM people'}",
        "record_name": "392",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Show me about the correlation between People_ID and Height in a scatter chart .",
        "question_toks": [
            "Show",
            "me",
            "about",
            "the",
            "correlation",
            "between",
            "People_ID",
            "and",
            "Height",
            "in",
            "a",
            "scatter",
            "chart",
            "."
        ],
        "query": "Visualize SCATTER SELECT People_ID , Height FROM people",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "People_ID",
            ",",
            "Height",
            "FROM",
            "people"
        ],
        "choose_schema": "Table candidate, columns = [*,Candidate_ID, People_ID, Poll_Source, Date, Support_rate, Consider_rate, Oppose_rate, Unsure_rate]@SEP@Table people, columns = [*,People_ID, Sex, Name, Date_of_Birth, Height, Weight]",
        "choose_schema_rat_link": "candidate.people_id@SEP@people.people_id@SEP@people.height"
    },
    {
        "nl_queries": "Return a bar chart on what are the apartment number and the room count of each apartment ?",
        "VQL": "Visualize BAR SELECT apt_number , room_count FROM Apartments",
        "db_id": "apartment_rentals",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT apt_number , room_count FROM Apartments', 'binning': ''}, 'VQL': 'Visualize BAR SELECT apt_number , room_count FROM Apartments'}",
        "record_name": "97",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Return a bar chart on what are the apartment number and the room count of each apartment ?",
        "question_toks": [
            "Return",
            "a",
            "bar",
            "chart",
            "on",
            "what",
            "are",
            "the",
            "apartment",
            "number",
            "and",
            "the",
            "room",
            "count",
            "of",
            "each",
            "apartment",
            "?"
        ],
        "query": "Visualize BAR SELECT apt_number , room_count FROM Apartments",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "apt_number",
            ",",
            "room_count",
            "FROM",
            "Apartments"
        ],
        "choose_schema": "Table Apartments, columns = [*,apt_id, building_id, apt_type_code, apt_number, bathroom_count, bedroom_count, room_count]",
        "choose_schema_rat_link": "apartments.apt_number@SEP@apartments.room_count@SEP@apartments.apt_id@SEP@apartments.apt_type_code@SEP@apartment_facilities.apt_id@SEP@apartment_bookings.apt_booking_id@SEP@apartment_bookings.apt_id@SEP@view_unit_status.apt_id@SEP@view_unit_status.apt_booking_id"
    },
    {
        "nl_queries": "Give me a bar chart to show the name and age for all drivers .",
        "VQL": "Visualize BAR SELECT Name , Age FROM driver",
        "db_id": "school_bus",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Name , Age FROM driver', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Name , Age FROM driver'}",
        "record_name": "2699",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Give me a bar chart to show the name and age for all drivers .",
        "question_toks": [
            "Give",
            "me",
            "a",
            "bar",
            "chart",
            "to",
            "show",
            "the",
            "name",
            "and",
            "age",
            "for",
            "all",
            "drivers",
            "."
        ],
        "query": "Visualize BAR SELECT Name , Age FROM driver",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Name",
            ",",
            "Age",
            "FROM",
            "driver"
        ],
        "choose_schema": "Table driver, columns = [*,Driver_ID, Name, Party, Home_city, Age]",
        "choose_schema_rat_link": "driver.name@SEP@driver.age@SEP@driver.driver_id@SEP@school_bus.driver_id"
    },
    {
        "nl_queries": "Plot a scatter chart , final table made by best_finish .",
        "VQL": "Visualize SCATTER SELECT Final_Table_Made , Best_Finish FROM poker_player",
        "db_id": "poker_player",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Final_Table_Made , Best_Finish FROM poker_player', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Final_Table_Made , Best_Finish FROM poker_player'}",
        "record_name": "2592",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Plot a scatter chart , final table made by best_finish .",
        "question_toks": [
            "Plot",
            "a",
            "scatter",
            "chart",
            ",",
            "final",
            "table",
            "made",
            "by",
            "best_finish",
            "."
        ],
        "query": "Visualize SCATTER SELECT Final_Table_Made , Best_Finish FROM poker_player",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Final_Table_Made",
            ",",
            "Best_Finish",
            "FROM",
            "poker_player"
        ],
        "choose_schema": "Table poker_player, columns = [*,Poker_Player_ID, People_ID, Final_Table_Made, Best_Finish, Money_Rank, Earnings]",
        "choose_schema_rat_link": "poker_player.final_table_made@SEP@poker_player.best_finish"
    },
    {
        "nl_queries": "List the snatch score and clean jerk score of body builders in ascending order of snatch score . Plot them as scatter chart .",
        "VQL": "Visualize SCATTER SELECT Snatch , Clean_Jerk FROM body_builder",
        "db_id": "body_builder",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Snatch , Clean_Jerk FROM body_builder', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Snatch , Clean_Jerk FROM body_builder'}",
        "record_name": "362",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "List the snatch score and clean jerk score of body builders in ascending order of snatch score . Plot them as scatter chart .",
        "question_toks": [
            "List",
            "the",
            "snatch",
            "score",
            "and",
            "clean",
            "jerk",
            "score",
            "of",
            "body",
            "builders",
            "in",
            "ascending",
            "order",
            "of",
            "snatch",
            "score",
            ".",
            "Plot",
            "them",
            "as",
            "scatter",
            "chart",
            "."
        ],
        "query": "Visualize SCATTER SELECT Snatch , Clean_Jerk FROM body_builder",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Snatch",
            ",",
            "Clean_Jerk",
            "FROM",
            "body_builder"
        ],
        "choose_schema": "Table body_builder, columns = [*,Body_Builder_ID, People_ID, Snatch, Clean_Jerk, Total]",
        "choose_schema_rat_link": "body_builder.clean_jerk@SEP@body_builder.body_builder_id@SEP@body_builder.snatch"
    },
    {
        "nl_queries": "Return a bar chart about the distribution of meter_600 and meter_100 .",
        "VQL": "Visualize BAR SELECT meter_600 , meter_100 FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT meter_600 , meter_100 FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT meter_600 , meter_100 FROM swimmer'}",
        "record_name": "2923",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Return a bar chart about the distribution of meter_600 and meter_100 .",
        "question_toks": [
            "Return",
            "a",
            "bar",
            "chart",
            "about",
            "the",
            "distribution",
            "of",
            "meter_600",
            "and",
            "meter_100",
            "."
        ],
        "query": "Visualize BAR SELECT meter_600 , meter_100 FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "meter_600",
            ",",
            "meter_100",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]",
        "choose_schema_rat_link": "swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_400@SEP@swimmer.meter_500@SEP@swimmer.meter_600@SEP@swimmer.meter_700"
    },
    {
        "nl_queries": "What is the relationship between support and consider rates of each candidate ?",
        "VQL": "Visualize SCATTER SELECT Support_rate , Consider_rate FROM candidate",
        "db_id": "candidate_poll",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Support_rate , Consider_rate FROM candidate', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Support_rate , Consider_rate FROM candidate'}",
        "record_name": "399",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "What is the relationship between support and consider rates of each candidate ?",
        "question_toks": [
            "What",
            "is",
            "the",
            "relationship",
            "between",
            "support",
            "and",
            "consider",
            "rates",
            "of",
            "each",
            "candidate",
            "?"
        ],
        "query": "Visualize SCATTER SELECT Support_rate , Consider_rate FROM candidate",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Support_rate",
            ",",
            "Consider_rate",
            "FROM",
            "candidate"
        ],
        "choose_schema": "Table candidate, columns = [*,Candidate_ID, People_ID, Poll_Source, Date, Support_rate, Consider_rate, Oppose_rate, Unsure_rate]",
        "choose_schema_rat_link": "candidate.consider_rate@SEP@candidate.support_rate@SEP@candidate.candidate_id"
    },
    {
        "nl_queries": "Return a bar chart on how many departments are in each school ?",
        "VQL": "Visualize BAR SELECT SCHOOL_CODE , count(DISTINCT dept_name) FROM department",
        "db_id": "college_1",
        "hardness": "Medium",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT SCHOOL_CODE , count(DISTINCT dept_name) FROM department', 'binning': ''}, 'VQL': 'Visualize BAR SELECT SCHOOL_CODE , count(DISTINCT dept_name) FROM department'}",
        "record_name": "515",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                12,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Return a bar chart on how many departments are in each school ?",
        "question_toks": [
            "Return",
            "a",
            "bar",
            "chart",
            "on",
            "how",
            "many",
            "departments",
            "are",
            "in",
            "each",
            "school",
            "?"
        ],
        "query": "Visualize BAR SELECT SCHOOL_CODE , count(DISTINCT dept_name) FROM department",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "SCHOOL_CODE",
            ",",
            "count",
            "(",
            "DISTINCT",
            "dept_name",
            ")",
            "FROM",
            "department"
        ],
        "choose_schema": "Table DEPARTMENT, columns = [*,DEPT_CODE, DEPT_NAME, SCHOOL_CODE, EMP_NUM, DEPT_ADDRESS, DEPT_EXTENSION]",
        "choose_schema_rat_link": "course.dept_code@SEP@department.dept_code@SEP@department.dept_name@SEP@department.dept_address@SEP@department.dept_extension@SEP@professor.dept_code@SEP@student.dept_code@SEP@department.school_code"
    },
    {
        "nl_queries": "Bar chart x axis all games y axis acc_percent",
        "VQL": "Visualize BAR SELECT All_Games , ACC_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT All_Games , ACC_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT All_Games , ACC_Percent FROM basketball_match'}",
        "record_name": "3138",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Bar chart x axis all games y axis acc_percent",
        "question_toks": [
            "Bar",
            "chart",
            "x",
            "axis",
            "all",
            "games",
            "y",
            "axis",
            "acc_percent"
        ],
        "query": "Visualize BAR SELECT All_Games , ACC_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "All_Games",
            ",",
            "ACC_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.all_games@SEP@basketball_match.all_games_percent@SEP@basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "What are the name and population of each county . Visualize by pie chart .",
        "VQL": "Visualize PIE SELECT County_name , Population FROM county",
        "db_id": "election",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT County_name , Population FROM county', 'binning': ''}, 'VQL': 'Visualize PIE SELECT County_name , Population FROM county'}",
        "record_name": "1303",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "What are the name and population of each county . Visualize by pie chart .",
        "question_toks": [
            "What",
            "are",
            "the",
            "name",
            "and",
            "population",
            "of",
            "each",
            "county",
            ".",
            "Visualize",
            "by",
            "pie",
            "chart",
            "."
        ],
        "query": "Visualize PIE SELECT County_name , Population FROM county",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "County_name",
            ",",
            "Population",
            "FROM",
            "county"
        ],
        "choose_schema": "Table county, columns = [*,County_Id, County_name, Population, Zip_code]",
        "choose_schema_rat_link": "county.population@SEP@county.county_id@SEP@county.county_name@SEP@election.counties_represented"
    },
    {
        "nl_queries": "Plot start from by employee_id as a line chart",
        "VQL": "Visualize LINE SELECT Start_from , Employee_ID FROM hiring",
        "db_id": "employee_hire_evaluation",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize LINE', 'data_part': {'sql_part': 'SELECT Start_from , Employee_ID FROM hiring', 'binning': ''}, 'VQL': 'Visualize LINE SELECT Start_from , Employee_ID FROM hiring'}",
        "record_name": "1339",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 2
        },
        "question": "Plot start from by employee_id as a line chart",
        "question_toks": [
            "Plot",
            "start",
            "from",
            "by",
            "employee_id",
            "as",
            "a",
            "line",
            "chart"
        ],
        "query": "Visualize LINE SELECT Start_from , Employee_ID FROM hiring",
        "query_toks": [
            "Visualize",
            "LINE",
            "SELECT",
            "Start_from",
            ",",
            "Employee_ID",
            "FROM",
            "hiring"
        ],
        "choose_schema": "Table employee, columns = [*,Employee_ID, Name, Age, City]@SEP@Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]@SEP@Table evaluation, columns = [*,Employee_ID, Year_awarded, Bonus]",
        "choose_schema_rat_link": "hiring.start_from@SEP@employee.employee_id@SEP@hiring.employee_id@SEP@evaluation.employee_id"
    },
    {
        "nl_queries": "Visualize a bar chart for simply displaying the email address of the employee and the corresponding employee id .",
        "VQL": "Visualize BAR SELECT EMAIL , EMPLOYEE_ID FROM employees",
        "db_id": "hr_1",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT EMAIL , EMPLOYEE_ID FROM employees', 'binning': ''}, 'VQL': 'Visualize BAR SELECT EMAIL , EMPLOYEE_ID FROM employees'}",
        "record_name": "1909",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                17,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Visualize a bar chart for simply displaying the email address of the employee and the corresponding employee id .",
        "question_toks": [
            "Visualize",
            "a",
            "bar",
            "chart",
            "for",
            "simply",
            "displaying",
            "the",
            "email",
            "address",
            "of",
            "the",
            "employee",
            "and",
            "the",
            "corresponding",
            "employee",
            "id",
            "."
        ],
        "query": "Visualize BAR SELECT EMAIL , EMPLOYEE_ID FROM employees",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "EMAIL",
            ",",
            "EMPLOYEE_ID",
            "FROM",
            "employees"
        ],
        "choose_schema": "Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]@SEP@Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]",
        "choose_schema_rat_link": "employees.employee_id@SEP@job_history.employee_id@SEP@employees.email"
    },
    {
        "nl_queries": "Bar graph to show age from different name",
        "VQL": "Visualize BAR SELECT Name , Age FROM driver",
        "db_id": "school_bus",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Name , Age FROM driver', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Name , Age FROM driver'}",
        "record_name": "2699",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Bar graph to show age from different name",
        "question_toks": [
            "Bar",
            "graph",
            "to",
            "show",
            "age",
            "from",
            "different",
            "name"
        ],
        "query": "Visualize BAR SELECT Name , Age FROM driver",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Name",
            ",",
            "Age",
            "FROM",
            "driver"
        ],
        "choose_schema": "Table driver, columns = [*,Driver_ID, Name, Party, Home_city, Age]",
        "choose_schema_rat_link": "driver.age@SEP@driver.name"
    },
    {
        "nl_queries": "What are the names and ages of editors ? Show me a bar chart .",
        "VQL": "Visualize BAR SELECT Name , Age FROM editor",
        "db_id": "journal_committee",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Name , Age FROM editor', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Name , Age FROM editor'}",
        "record_name": "2053",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "What are the names and ages of editors ? Show me a bar chart .",
        "question_toks": [
            "What",
            "are",
            "the",
            "names",
            "and",
            "ages",
            "of",
            "editors",
            "?",
            "Show",
            "me",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT Name , Age FROM editor",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Name",
            ",",
            "Age",
            "FROM",
            "editor"
        ],
        "choose_schema": "Table editor, columns = [*,Editor_ID, Name, Age]",
        "choose_schema_rat_link": "editor.name@SEP@editor.age@SEP@editor.editor_id@SEP@journal_committee.editor_id"
    },
    {
        "nl_queries": "Give me the comparison about ACC_Percent over the Team_Name .",
        "VQL": "Visualize BAR SELECT Team_Name , ACC_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Team_Name , ACC_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Team_Name , ACC_Percent FROM basketball_match'}",
        "record_name": "3132",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Give me the comparison about ACC_Percent over the Team_Name .",
        "question_toks": [
            "Give",
            "me",
            "the",
            "comparison",
            "about",
            "ACC_Percent",
            "over",
            "the",
            "Team_Name",
            "."
        ],
        "query": "Visualize BAR SELECT Team_Name , ACC_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Team_Name",
            ",",
            "ACC_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road@SEP@basketball_match.team_id@SEP@basketball_match.team_name"
    },
    {
        "nl_queries": "A bar chart about how many different locations does each school have ?",
        "VQL": "Visualize BAR SELECT SCHOOL_CODE , count(DISTINCT dept_address) FROM department",
        "db_id": "college_1",
        "hardness": "Medium",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT SCHOOL_CODE , count(DISTINCT dept_address) FROM department', 'binning': ''}, 'VQL': 'Visualize BAR SELECT SCHOOL_CODE , count(DISTINCT dept_address) FROM department'}",
        "record_name": "543",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                15,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "A bar chart about how many different locations does each school have ?",
        "question_toks": [
            "A",
            "bar",
            "chart",
            "about",
            "how",
            "many",
            "different",
            "locations",
            "does",
            "each",
            "school",
            "have",
            "?"
        ],
        "query": "Visualize BAR SELECT SCHOOL_CODE , count(DISTINCT dept_address) FROM department",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "SCHOOL_CODE",
            ",",
            "count",
            "(",
            "DISTINCT",
            "dept_address",
            ")",
            "FROM",
            "department"
        ],
        "choose_schema": "Table DEPARTMENT, columns = [*,DEPT_CODE, DEPT_NAME, SCHOOL_CODE, EMP_NUM, DEPT_ADDRESS, DEPT_EXTENSION]",
        "choose_schema_rat_link": "department.school_code"
    },
    {
        "nl_queries": "Give me a pie to show school_id from different acc regular season .",
        "VQL": "Visualize PIE SELECT ACC_Regular_Season , School_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT ACC_Regular_Season , School_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT ACC_Regular_Season , School_ID FROM basketball_match'}",
        "record_name": "3149",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Give me a pie to show school_id from different acc regular season .",
        "question_toks": [
            "Give",
            "me",
            "a",
            "pie",
            "to",
            "show",
            "school_id",
            "from",
            "different",
            "acc",
            "regular",
            "season",
            "."
        ],
        "query": "Visualize PIE SELECT ACC_Regular_Season , School_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "ACC_Regular_Season",
            ",",
            "School_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@university.school@SEP@basketball_match.school_id@SEP@university.school_id@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Return a bar chart about the distribution of meter_500 and ID .",
        "VQL": "Visualize BAR SELECT meter_500 , ID FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT meter_500 , ID FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT meter_500 , ID FROM swimmer'}",
        "record_name": "2920",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Return a bar chart about the distribution of meter_500 and ID .",
        "question_toks": [
            "Return",
            "a",
            "bar",
            "chart",
            "about",
            "the",
            "distribution",
            "of",
            "meter_500",
            "and",
            "ID",
            "."
        ],
        "query": "Visualize BAR SELECT meter_500 , ID FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "meter_500",
            ",",
            "ID",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]@SEP@Table stadium, columns = [*,ID, name, Capacity, City, Country, Opening_year]@SEP@Table event, columns = [*,ID, Name, Stadium_ID, Year]@SEP@Table record, columns = [*,ID, Result, Swimmer_ID, Event_ID]",
        "choose_schema_rat_link": "swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_400@SEP@swimmer.meter_500@SEP@swimmer.meter_600@SEP@swimmer.meter_700@SEP@swimmer.id@SEP@stadium.id@SEP@event.id@SEP@record.id"
    },
    {
        "nl_queries": "Display a bar chart for what are the age and hometown of teachers ?",
        "VQL": "Visualize BAR SELECT Hometown , Age FROM teacher",
        "db_id": "course_teach",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Hometown , Age FROM teacher', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Hometown , Age FROM teacher'}",
        "record_name": "711",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Display a bar chart for what are the age and hometown of teachers ?",
        "question_toks": [
            "Display",
            "a",
            "bar",
            "chart",
            "for",
            "what",
            "are",
            "the",
            "age",
            "and",
            "hometown",
            "of",
            "teachers",
            "?"
        ],
        "query": "Visualize BAR SELECT Hometown , Age FROM teacher",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Hometown",
            ",",
            "Age",
            "FROM",
            "teacher"
        ],
        "choose_schema": "Table teacher, columns = [*,Teacher_ID, Name, Age, Hometown]",
        "choose_schema_rat_link": "teacher.age@SEP@teacher.hometown@SEP@teacher.teacher_id@SEP@course_arrange.teacher_id"
    },
    {
        "nl_queries": "Create a bar chart showing meter_100 across meter 600",
        "VQL": "Visualize BAR SELECT meter_600 , meter_100 FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT meter_600 , meter_100 FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT meter_600 , meter_100 FROM swimmer'}",
        "record_name": "2923",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Create a bar chart showing meter_100 across meter 600",
        "question_toks": [
            "Create",
            "a",
            "bar",
            "chart",
            "showing",
            "meter_100",
            "across",
            "meter",
            "600"
        ],
        "query": "Visualize BAR SELECT meter_600 , meter_100 FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "meter_600",
            ",",
            "meter_100",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]",
        "choose_schema_rat_link": "swimmer.meter_600@SEP@swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_400@SEP@swimmer.meter_500@SEP@swimmer.meter_700"
    },
    {
        "nl_queries": "Find Time and ID , and visualize them by a bar chart .",
        "VQL": "Visualize BAR SELECT Time , ID FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Time , ID FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Time , ID FROM swimmer'}",
        "record_name": "2926",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Find Time and ID , and visualize them by a bar chart .",
        "question_toks": [
            "Find",
            "Time",
            "and",
            "ID",
            ",",
            "and",
            "visualize",
            "them",
            "by",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT Time , ID FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Time",
            ",",
            "ID",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]@SEP@Table stadium, columns = [*,ID, name, Capacity, City, Country, Opening_year]@SEP@Table event, columns = [*,ID, Name, Stadium_ID, Year]@SEP@Table record, columns = [*,ID, Result, Swimmer_ID, Event_ID]",
        "choose_schema_rat_link": "swimmer.time@SEP@swimmer.id@SEP@stadium.id@SEP@event.id@SEP@record.id"
    },
    {
        "nl_queries": "Show me about the distribution of All_Games and ACC_Percent in a bar chart .",
        "VQL": "Visualize BAR SELECT All_Games , ACC_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT All_Games , ACC_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT All_Games , ACC_Percent FROM basketball_match'}",
        "record_name": "3138",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Show me about the distribution of All_Games and ACC_Percent in a bar chart .",
        "question_toks": [
            "Show",
            "me",
            "about",
            "the",
            "distribution",
            "of",
            "All_Games",
            "and",
            "ACC_Percent",
            "in",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT All_Games , ACC_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "All_Games",
            ",",
            "ACC_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Plot a scatter chart , people id by snatch .",
        "VQL": "Visualize SCATTER SELECT People_ID , Snatch FROM body_builder",
        "db_id": "body_builder",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT People_ID , Snatch FROM body_builder', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT People_ID , Snatch FROM body_builder'}",
        "record_name": "357",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Plot a scatter chart , people id by snatch .",
        "question_toks": [
            "Plot",
            "a",
            "scatter",
            "chart",
            ",",
            "people",
            "id",
            "by",
            "snatch",
            "."
        ],
        "query": "Visualize SCATTER SELECT People_ID , Snatch FROM body_builder",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "People_ID",
            ",",
            "Snatch",
            "FROM",
            "body_builder"
        ],
        "choose_schema": "Table body_builder, columns = [*,Body_Builder_ID, People_ID, Snatch, Clean_Jerk, Total]@SEP@Table people, columns = [*,People_ID, Name, Height, Weight, Birth_Date, Birth_Place]",
        "choose_schema_rat_link": "body_builder.people_id@SEP@people.people_id@SEP@body_builder.snatch"
    },
    {
        "nl_queries": "Show me a scatter plot of people id and clean_jerk for .",
        "VQL": "Visualize SCATTER SELECT People_ID , Clean_Jerk FROM body_builder",
        "db_id": "body_builder",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT People_ID , Clean_Jerk FROM body_builder', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT People_ID , Clean_Jerk FROM body_builder'}",
        "record_name": "361",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Show me a scatter plot of people id and clean_jerk for .",
        "question_toks": [
            "Show",
            "me",
            "a",
            "scatter",
            "plot",
            "of",
            "people",
            "id",
            "and",
            "clean_jerk",
            "for",
            "."
        ],
        "query": "Visualize SCATTER SELECT People_ID , Clean_Jerk FROM body_builder",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "People_ID",
            ",",
            "Clean_Jerk",
            "FROM",
            "body_builder"
        ],
        "choose_schema": "Table body_builder, columns = [*,Body_Builder_ID, People_ID, Snatch, Clean_Jerk, Total]@SEP@Table people, columns = [*,People_ID, Name, Height, Weight, Birth_Date, Birth_Place]",
        "choose_schema_rat_link": "body_builder.people_id@SEP@people.people_id@SEP@body_builder.clean_jerk"
    },
    {
        "nl_queries": "Draw a scatter chart about the correlation between ID and meter_100 .",
        "VQL": "Visualize SCATTER SELECT ID , meter_100 FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT ID , meter_100 FROM swimmer', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT ID , meter_100 FROM swimmer'}",
        "record_name": "2905",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Draw a scatter chart about the correlation between ID and meter_100 .",
        "question_toks": [
            "Draw",
            "a",
            "scatter",
            "chart",
            "about",
            "the",
            "correlation",
            "between",
            "ID",
            "and",
            "meter_100",
            "."
        ],
        "query": "Visualize SCATTER SELECT ID , meter_100 FROM swimmer",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "ID",
            ",",
            "meter_100",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]@SEP@Table stadium, columns = [*,ID, name, Capacity, City, Country, Opening_year]@SEP@Table event, columns = [*,ID, Name, Stadium_ID, Year]@SEP@Table record, columns = [*,ID, Result, Swimmer_ID, Event_ID]",
        "choose_schema_rat_link": "swimmer.id@SEP@stadium.id@SEP@event.id@SEP@record.id@SEP@swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_400@SEP@swimmer.meter_500@SEP@swimmer.meter_600@SEP@swimmer.meter_700"
    },
    {
        "nl_queries": "Give me a pie to show charge_amount from different charge type .",
        "VQL": "Visualize PIE SELECT charge_type , charge_amount FROM Charges",
        "db_id": "dog_kennels",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT charge_type , charge_amount FROM Charges', 'binning': ''}, 'VQL': 'Visualize PIE SELECT charge_type , charge_amount FROM Charges'}",
        "record_name": "1173",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Give me a pie to show charge_amount from different charge type .",
        "question_toks": [
            "Give",
            "me",
            "a",
            "pie",
            "to",
            "show",
            "charge_amount",
            "from",
            "different",
            "charge",
            "type",
            "."
        ],
        "query": "Visualize PIE SELECT charge_type , charge_amount FROM Charges",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "charge_type",
            ",",
            "charge_amount",
            "FROM",
            "Charges"
        ],
        "choose_schema": "Table Charges, columns = [*,charge_id, charge_type, charge_amount]",
        "choose_schema_rat_link": "charges.charge_type@SEP@charges.charge_id@SEP@charges.charge_amount"
    },
    {
        "nl_queries": "For the attribute ACC_Regular_Season and All_Games_Percent , show their proportion by a pie chart .",
        "VQL": "Visualize PIE SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match'}",
        "record_name": "3136",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "For the attribute ACC_Regular_Season and All_Games_Percent , show their proportion by a pie chart .",
        "question_toks": [
            "For",
            "the",
            "attribute",
            "ACC_Regular_Season",
            "and",
            "All_Games_Percent",
            ",",
            "show",
            "their",
            "proportion",
            "by",
            "a",
            "pie",
            "chart",
            "."
        ],
        "query": "Visualize PIE SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "ACC_Regular_Season",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Give me a pie chart to reflect the proportion of All_Neutral and All_Games_Percent .",
        "VQL": "Visualize PIE SELECT All_Neutral , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT All_Neutral , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT All_Neutral , All_Games_Percent FROM basketball_match'}",
        "record_name": "3145",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Give me a pie chart to reflect the proportion of All_Neutral and All_Games_Percent .",
        "question_toks": [
            "Give",
            "me",
            "a",
            "pie",
            "chart",
            "to",
            "reflect",
            "the",
            "proportion",
            "of",
            "All_Neutral",
            "and",
            "All_Games_Percent",
            "."
        ],
        "query": "Visualize PIE SELECT All_Neutral , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "All_Neutral",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]"
    },
    {
        "nl_queries": "List each charge type and its amount in a bar chart .",
        "VQL": "Visualize BAR SELECT charge_type , charge_amount FROM Charges",
        "db_id": "dog_kennels",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT charge_type , charge_amount FROM Charges', 'binning': ''}, 'VQL': 'Visualize BAR SELECT charge_type , charge_amount FROM Charges'}",
        "record_name": "1174",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "List each charge type and its amount in a bar chart .",
        "question_toks": [
            "List",
            "each",
            "charge",
            "type",
            "and",
            "its",
            "amount",
            "in",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT charge_type , charge_amount FROM Charges",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "charge_type",
            ",",
            "charge_amount",
            "FROM",
            "Charges"
        ],
        "choose_schema": "Table Charges, columns = [*,charge_id, charge_type, charge_amount]",
        "choose_schema_rat_link": "charges.charge_type@SEP@charges.charge_id@SEP@charges.charge_amount"
    },
    {
        "nl_queries": "Find All_Road and School_ID , and visualize them by a bar chart .",
        "VQL": "Visualize BAR SELECT All_Road , School_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT All_Road , School_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT All_Road , School_ID FROM basketball_match'}",
        "record_name": "3117",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Find All_Road and School_ID , and visualize them by a bar chart .",
        "question_toks": [
            "Find",
            "All_Road",
            "and",
            "School_ID",
            ",",
            "and",
            "visualize",
            "them",
            "by",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT All_Road , School_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "All_Road",
            ",",
            "School_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "university.school@SEP@basketball_match.school_id@SEP@university.school_id"
    },
    {
        "nl_queries": "Return a bar chart about the distribution of ACC_Regular_Season and School_ID .",
        "VQL": "Visualize BAR SELECT ACC_Regular_Season , School_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT ACC_Regular_Season , School_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT ACC_Regular_Season , School_ID FROM basketball_match'}",
        "record_name": "3113",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Return a bar chart about the distribution of ACC_Regular_Season and School_ID .",
        "question_toks": [
            "Return",
            "a",
            "bar",
            "chart",
            "about",
            "the",
            "distribution",
            "of",
            "ACC_Regular_Season",
            "and",
            "School_ID",
            "."
        ],
        "query": "Visualize BAR SELECT ACC_Regular_Season , School_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "ACC_Regular_Season",
            ",",
            "School_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road@SEP@university.school@SEP@basketball_match.school_id@SEP@university.school_id"
    },
    {
        "nl_queries": "Draw a bar chart about the distribution of All_Neutral and School_ID .",
        "VQL": "Visualize BAR SELECT All_Neutral , School_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT All_Neutral , School_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT All_Neutral , School_ID FROM basketball_match'}",
        "record_name": "3119",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Draw a bar chart about the distribution of All_Neutral and School_ID .",
        "question_toks": [
            "Draw",
            "a",
            "bar",
            "chart",
            "about",
            "the",
            "distribution",
            "of",
            "All_Neutral",
            "and",
            "School_ID",
            "."
        ],
        "query": "Visualize BAR SELECT All_Neutral , School_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "All_Neutral",
            ",",
            "School_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "university.school@SEP@basketball_match.school_id@SEP@university.school_id"
    },
    {
        "nl_queries": "Create a pie chart showing all_games_percent across all games .",
        "VQL": "Visualize PIE SELECT All_Games , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT All_Games , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT All_Games , All_Games_Percent FROM basketball_match'}",
        "record_name": "3139",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Create a pie chart showing all_games_percent across all games .",
        "question_toks": [
            "Create",
            "a",
            "pie",
            "chart",
            "showing",
            "all_games_percent",
            "across",
            "all",
            "games",
            "."
        ],
        "query": "Visualize PIE SELECT All_Games , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "All_Games",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.all_games@SEP@basketball_match.all_games_percent"
    },
    {
        "nl_queries": "Bar chart x axis first name y axis salary",
        "VQL": "Visualize BAR SELECT FIRST_NAME , SALARY FROM employees",
        "db_id": "hr_1",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT FIRST_NAME , SALARY FROM employees', 'binning': ''}, 'VQL': 'Visualize BAR SELECT FIRST_NAME , SALARY FROM employees'}",
        "record_name": "1896",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Bar chart x axis first name y axis salary",
        "question_toks": [
            "Bar",
            "chart",
            "x",
            "axis",
            "first",
            "name",
            "y",
            "axis",
            "salary"
        ],
        "query": "Visualize BAR SELECT FIRST_NAME , SALARY FROM employees",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "FIRST_NAME",
            ",",
            "SALARY",
            "FROM",
            "employees"
        ],
        "choose_schema": "Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]",
        "choose_schema_rat_link": "employees.first_name@SEP@employees.salary"
    },
    {
        "nl_queries": "A bar chart shows the distribution of ACC_Regular_Season and All_Games_Percent .",
        "VQL": "Visualize BAR SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match'}",
        "record_name": "3137",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "A bar chart shows the distribution of ACC_Regular_Season and All_Games_Percent .",
        "question_toks": [
            "A",
            "bar",
            "chart",
            "shows",
            "the",
            "distribution",
            "of",
            "ACC_Regular_Season",
            "and",
            "All_Games_Percent",
            "."
        ],
        "query": "Visualize BAR SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "ACC_Regular_Season",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Scatter plot to show acc percent on x axis and all_games_percent on y axis .",
        "VQL": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT ACC_Percent , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match'}",
        "record_name": "3121",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Scatter plot to show acc percent on x axis and all_games_percent on y axis .",
        "question_toks": [
            "Scatter",
            "plot",
            "to",
            "show",
            "acc",
            "percent",
            "on",
            "x",
            "axis",
            "and",
            "all_games_percent",
            "on",
            "y",
            "axis",
            "."
        ],
        "query": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "ACC_Percent",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.acc_percent@SEP@basketball_match.acc_regular_season@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Visualize a pie chart about the proportion of All_Neutral and Team ID .",
        "VQL": "Visualize PIE SELECT All_Neutral , Team_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT All_Neutral , Team_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT All_Neutral , Team_ID FROM basketball_match'}",
        "record_name": "3130",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Visualize a pie chart about the proportion of All_Neutral and Team ID .",
        "question_toks": [
            "Visualize",
            "a",
            "pie",
            "chart",
            "about",
            "the",
            "proportion",
            "of",
            "All_Neutral",
            "and",
            "Team",
            "ID",
            "."
        ],
        "query": "Visualize PIE SELECT All_Neutral , Team_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "All_Neutral",
            ",",
            "Team_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name"
    },
    {
        "nl_queries": "What are all the calendar dates and day Numbers . Show the trend .",
        "VQL": "Visualize LINE SELECT Calendar_Date , Day_Number FROM Ref_calendar",
        "db_id": "cre_Doc_Tracking_DB",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize LINE', 'data_part': {'sql_part': 'SELECT Calendar_Date , Day_Number FROM Ref_calendar', 'binning': ''}, 'VQL': 'Visualize LINE SELECT Calendar_Date , Day_Number FROM Ref_calendar'}",
        "record_name": "789",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 2
        },
        "question": "What are all the calendar dates and day Numbers . Show the trend .",
        "question_toks": [
            "What",
            "are",
            "all",
            "the",
            "calendar",
            "dates",
            "and",
            "day",
            "Numbers",
            ".",
            "Show",
            "the",
            "trend",
            "."
        ],
        "query": "Visualize LINE SELECT Calendar_Date , Day_Number FROM Ref_calendar",
        "query_toks": [
            "Visualize",
            "LINE",
            "SELECT",
            "Calendar_Date",
            ",",
            "Day_Number",
            "FROM",
            "Ref_calendar"
        ],
        "choose_schema": "Table Ref_Calendar, columns = [*,Calendar_Date, Day_Number]",
        "choose_schema_rat_link": "all_documents.date_stored@SEP@employees.date_of_birth@SEP@document_locations.date_in_location_from@SEP@document_locations.date_in_locaton_to"
    },
    {
        "nl_queries": "A bar chart shows the distribution of Team_Name and School_ID .",
        "VQL": "Visualize BAR SELECT Team_Name , School_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Team_Name , School_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Team_Name , School_ID FROM basketball_match'}",
        "record_name": "3111",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "A bar chart shows the distribution of Team_Name and School_ID .",
        "question_toks": [
            "A",
            "bar",
            "chart",
            "shows",
            "the",
            "distribution",
            "of",
            "Team_Name",
            "and",
            "School_ID",
            "."
        ],
        "query": "Visualize BAR SELECT Team_Name , School_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Team_Name",
            ",",
            "School_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name@SEP@university.school@SEP@basketball_match.school_id@SEP@university.school_id"
    },
    {
        "nl_queries": "I want to know the proportion of team id for each all neutral .",
        "VQL": "Visualize PIE SELECT All_Neutral , Team_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT All_Neutral , Team_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT All_Neutral , Team_ID FROM basketball_match'}",
        "record_name": "3130",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "I want to know the proportion of team id for each all neutral .",
        "question_toks": [
            "I",
            "want",
            "to",
            "know",
            "the",
            "proportion",
            "of",
            "team",
            "id",
            "for",
            "each",
            "all",
            "neutral",
            "."
        ],
        "query": "Visualize PIE SELECT All_Neutral , Team_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "All_Neutral",
            ",",
            "Team_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.all_neutral@SEP@basketball_match.team_name"
    },
    {
        "nl_queries": "Show me about the proportion of ACC_Percent and ACC_Percent in a pie chart .",
        "VQL": "Visualize PIE SELECT Team_Name , ACC_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT Team_Name , ACC_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT Team_Name , ACC_Percent FROM basketball_match'}",
        "record_name": "3148",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Show me about the proportion of ACC_Percent and ACC_Percent in a pie chart .",
        "question_toks": [
            "Show",
            "me",
            "about",
            "the",
            "proportion",
            "of",
            "ACC_Percent",
            "and",
            "ACC_Percent",
            "in",
            "a",
            "pie",
            "chart",
            "."
        ],
        "query": "Visualize PIE SELECT Team_Name , ACC_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "Team_Name",
            ",",
            "ACC_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Give me the comparison about School_ID over the Team_Name .",
        "VQL": "Visualize BAR SELECT Team_Name , School_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Team_Name , School_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Team_Name , School_ID FROM basketball_match'}",
        "record_name": "3111",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Give me the comparison about School_ID over the Team_Name .",
        "question_toks": [
            "Give",
            "me",
            "the",
            "comparison",
            "about",
            "School_ID",
            "over",
            "the",
            "Team_Name",
            "."
        ],
        "query": "Visualize BAR SELECT Team_Name , School_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Team_Name",
            ",",
            "School_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "university.school@SEP@basketball_match.school_id@SEP@university.school_id@SEP@basketball_match.team_id@SEP@basketball_match.team_name"
    },
    {
        "nl_queries": "A bar chart shows the distribution of meter_500 and ID .",
        "VQL": "Visualize BAR SELECT meter_500 , ID FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT meter_500 , ID FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT meter_500 , ID FROM swimmer'}",
        "record_name": "2920",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "A bar chart shows the distribution of meter_500 and ID .",
        "question_toks": [
            "A",
            "bar",
            "chart",
            "shows",
            "the",
            "distribution",
            "of",
            "meter_500",
            "and",
            "ID",
            "."
        ],
        "query": "Visualize BAR SELECT meter_500 , ID FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "meter_500",
            ",",
            "ID",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]@SEP@Table stadium, columns = [*,ID, name, Capacity, City, Country, Opening_year]@SEP@Table event, columns = [*,ID, Name, Stadium_ID, Year]@SEP@Table record, columns = [*,ID, Result, Swimmer_ID, Event_ID]",
        "choose_schema_rat_link": "swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_400@SEP@swimmer.meter_500@SEP@swimmer.meter_600@SEP@swimmer.meter_700@SEP@swimmer.id@SEP@stadium.id@SEP@event.id@SEP@record.id"
    },
    {
        "nl_queries": "Visualize a bar chart about the distribution of All_Games and ACC_Percent .",
        "VQL": "Visualize BAR SELECT All_Games , ACC_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT All_Games , ACC_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT All_Games , ACC_Percent FROM basketball_match'}",
        "record_name": "3138",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Visualize a bar chart about the distribution of All_Games and ACC_Percent .",
        "question_toks": [
            "Visualize",
            "a",
            "bar",
            "chart",
            "about",
            "the",
            "distribution",
            "of",
            "All_Games",
            "and",
            "ACC_Percent",
            "."
        ],
        "query": "Visualize BAR SELECT All_Games , ACC_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "All_Games",
            ",",
            "ACC_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Return a histogram on what are the age and hometown of teachers ?",
        "VQL": "Visualize BAR SELECT Hometown , Age FROM teacher",
        "db_id": "course_teach",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Hometown , Age FROM teacher', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Hometown , Age FROM teacher'}",
        "record_name": "711",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Return a histogram on what are the age and hometown of teachers ?",
        "question_toks": [
            "Return",
            "a",
            "histogram",
            "on",
            "what",
            "are",
            "the",
            "age",
            "and",
            "hometown",
            "of",
            "teachers",
            "?"
        ],
        "query": "Visualize BAR SELECT Hometown , Age FROM teacher",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Hometown",
            ",",
            "Age",
            "FROM",
            "teacher"
        ],
        "choose_schema": "Table teacher, columns = [*,Teacher_ID, Name, Age, Hometown]",
        "choose_schema_rat_link": "teacher.age@SEP@teacher.hometown@SEP@teacher.teacher_id@SEP@course_arrange.teacher_id"
    },
    {
        "nl_queries": "Plot a scatter chart , team id by school_id .",
        "VQL": "Visualize SCATTER SELECT Team_ID , School_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Team_ID , School_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Team_ID , School_ID FROM basketball_match'}",
        "record_name": "3108",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Plot a scatter chart , team id by school_id .",
        "question_toks": [
            "Plot",
            "a",
            "scatter",
            "chart",
            ",",
            "team",
            "id",
            "by",
            "school_id",
            "."
        ],
        "query": "Visualize SCATTER SELECT Team_ID , School_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Team_ID",
            ",",
            "School_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name@SEP@university.school@SEP@basketball_match.school_id@SEP@university.school_id"
    },
    {
        "nl_queries": "Bar graph to show meter_100 from different meter 400",
        "VQL": "Visualize BAR SELECT meter_400 , meter_100 FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT meter_400 , meter_100 FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT meter_400 , meter_100 FROM swimmer'}",
        "record_name": "2919",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Bar graph to show meter_100 from different meter 400",
        "question_toks": [
            "Bar",
            "graph",
            "to",
            "show",
            "meter_100",
            "from",
            "different",
            "meter",
            "400"
        ],
        "query": "Visualize BAR SELECT meter_400 , meter_100 FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "meter_400",
            ",",
            "meter_100",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]",
        "choose_schema_rat_link": "swimmer.meter_400@SEP@swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_500@SEP@swimmer.meter_600@SEP@swimmer.meter_700"
    },
    {
        "nl_queries": "Visualize a bar chart about the distribution of Name and Weight .",
        "VQL": "Visualize BAR SELECT Name , Weight FROM people",
        "db_id": "candidate_poll",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Name , Weight FROM people', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Name , Weight FROM people'}",
        "record_name": "395",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Visualize a bar chart about the distribution of Name and Weight .",
        "question_toks": [
            "Visualize",
            "a",
            "bar",
            "chart",
            "about",
            "the",
            "distribution",
            "of",
            "Name",
            "and",
            "Weight",
            "."
        ],
        "query": "Visualize BAR SELECT Name , Weight FROM people",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Name",
            ",",
            "Weight",
            "FROM",
            "people"
        ],
        "choose_schema": "Table people, columns = [*,People_ID, Sex, Name, Date_of_Birth, Height, Weight]",
        "choose_schema_rat_link": "people.name@SEP@people.weight"
    },
    {
        "nl_queries": "Show the product ids and the number of unique orders containing each product by a scatter chart .",
        "VQL": "Visualize SCATTER SELECT product_id , count(DISTINCT order_id) FROM Order_items",
        "db_id": "customers_and_invoices",
        "hardness": "Medium",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT product_id , count(DISTINCT order_id) FROM Order_items', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT product_id , count(DISTINCT order_id) FROM Order_items'}",
        "record_name": "966",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        7
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                45,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                44,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Show the product ids and the number of unique orders containing each product by a scatter chart .",
        "question_toks": [
            "Show",
            "the",
            "product",
            "ids",
            "and",
            "the",
            "number",
            "of",
            "unique",
            "orders",
            "containing",
            "each",
            "product",
            "by",
            "a",
            "scatter",
            "chart",
            "."
        ],
        "query": "Visualize SCATTER SELECT product_id , count(DISTINCT order_id) FROM Order_items",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "product_id",
            ",",
            "count",
            "(",
            "DISTINCT",
            "order_id",
            ")",
            "FROM",
            "Order_items"
        ],
        "choose_schema": "Table Products, columns = [*,product_id, parent_product_id, production_type_code, unit_price, product_name, product_color, product_size]@SEP@Table Order_Items, columns = [*,order_item_id, order_id, product_id, product_quantity, other_order_item_details]@SEP@Table Invoice_Line_Items, columns = [*,order_item_id, invoice_number, product_id, product_title, product_quantity, product_price, derived_product_cost, derived_vat_payable, derived_total_cost]",
        "choose_schema_rat_link": "products.product_id@SEP@order_items.product_id@SEP@invoice_line_items.product_id@SEP@product_categories.product_type_description@SEP@products.product_name@SEP@products.product_color@SEP@products.product_size@SEP@order_items.product_quantity@SEP@invoice_line_items.product_title@SEP@invoice_line_items.product_quantity@SEP@invoice_line_items.product_price@SEP@orders.order_id@SEP@orders.order_details@SEP@invoices.order_id@SEP@order_items.order_item_id@SEP@order_items.order_id@SEP@invoice_line_items.order_item_id"
    },
    {
        "nl_queries": "Return a pie chart about the proportion of All_Games and All_Games_Percent .",
        "VQL": "Visualize PIE SELECT All_Games , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT All_Games , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT All_Games , All_Games_Percent FROM basketball_match'}",
        "record_name": "3139",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Return a pie chart about the proportion of All_Games and All_Games_Percent .",
        "question_toks": [
            "Return",
            "a",
            "pie",
            "chart",
            "about",
            "the",
            "proportion",
            "of",
            "All_Games",
            "and",
            "All_Games_Percent",
            "."
        ],
        "query": "Visualize PIE SELECT All_Games , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "All_Games",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]"
    },
    {
        "nl_queries": "For the attribute All_Neutral and School_ID , show their proportion by a pie chart .",
        "VQL": "Visualize PIE SELECT All_Neutral , School_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT All_Neutral , School_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT All_Neutral , School_ID FROM basketball_match'}",
        "record_name": "3155",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "For the attribute All_Neutral and School_ID , show their proportion by a pie chart .",
        "question_toks": [
            "For",
            "the",
            "attribute",
            "All_Neutral",
            "and",
            "School_ID",
            ",",
            "show",
            "their",
            "proportion",
            "by",
            "a",
            "pie",
            "chart",
            "."
        ],
        "query": "Visualize PIE SELECT All_Neutral , School_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "All_Neutral",
            ",",
            "School_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "university.school@SEP@basketball_match.school_id@SEP@university.school_id"
    },
    {
        "nl_queries": "Give me a pie chart to reflect the proportion of Team_Name and ACC_Percent .",
        "VQL": "Visualize PIE SELECT Team_Name , ACC_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT Team_Name , ACC_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT Team_Name , ACC_Percent FROM basketball_match'}",
        "record_name": "3148",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Give me a pie chart to reflect the proportion of Team_Name and ACC_Percent .",
        "question_toks": [
            "Give",
            "me",
            "a",
            "pie",
            "chart",
            "to",
            "reflect",
            "the",
            "proportion",
            "of",
            "Team_Name",
            "and",
            "ACC_Percent",
            "."
        ],
        "query": "Visualize PIE SELECT Team_Name , ACC_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "Team_Name",
            ",",
            "ACC_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name@SEP@basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Visualize the relationship between ACC_Percent and All_Games_Percent .",
        "VQL": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT ACC_Percent , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match'}",
        "record_name": "3121",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Visualize the relationship between ACC_Percent and All_Games_Percent .",
        "question_toks": [
            "Visualize",
            "the",
            "relationship",
            "between",
            "ACC_Percent",
            "and",
            "All_Games_Percent",
            "."
        ],
        "query": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "ACC_Percent",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Return the low and high estimates for all film markets . Show scatter chart .",
        "VQL": "Visualize SCATTER SELECT Low_Estimate , High_Estimate FROM film_market_estimation",
        "db_id": "film_rank",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Low_Estimate , High_Estimate FROM film_market_estimation', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Low_Estimate , High_Estimate FROM film_market_estimation'}",
        "record_name": "1398",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Return the low and high estimates for all film markets . Show scatter chart .",
        "question_toks": [
            "Return",
            "the",
            "low",
            "and",
            "high",
            "estimates",
            "for",
            "all",
            "film",
            "markets",
            ".",
            "Show",
            "scatter",
            "chart",
            "."
        ],
        "query": "Visualize SCATTER SELECT Low_Estimate , High_Estimate FROM film_market_estimation",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Low_Estimate",
            ",",
            "High_Estimate",
            "FROM",
            "film_market_estimation"
        ],
        "choose_schema": "Table film_market_estimation, columns = [*,Estimation_ID, Low_Estimate, High_Estimate, Film_ID, Type, Market_ID, Year]",
        "choose_schema_rat_link": "film_market_estimation.high_estimate@SEP@film_market_estimation.low_estimate@SEP@film.film_id@SEP@film_market_estimation.film_id@SEP@market.market_id@SEP@film_market_estimation.market_id"
    },
    {
        "nl_queries": "Show me about the correlation between ID and meter_100 in a scatter chart .",
        "VQL": "Visualize SCATTER SELECT ID , meter_100 FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT ID , meter_100 FROM swimmer', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT ID , meter_100 FROM swimmer'}",
        "record_name": "2905",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Show me about the correlation between ID and meter_100 in a scatter chart .",
        "question_toks": [
            "Show",
            "me",
            "about",
            "the",
            "correlation",
            "between",
            "ID",
            "and",
            "meter_100",
            "in",
            "a",
            "scatter",
            "chart",
            "."
        ],
        "query": "Visualize SCATTER SELECT ID , meter_100 FROM swimmer",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "ID",
            ",",
            "meter_100",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]@SEP@Table stadium, columns = [*,ID, name, Capacity, City, Country, Opening_year]@SEP@Table event, columns = [*,ID, Name, Stadium_ID, Year]@SEP@Table record, columns = [*,ID, Result, Swimmer_ID, Event_ID]",
        "choose_schema_rat_link": "swimmer.id@SEP@stadium.id@SEP@event.id@SEP@record.id@SEP@swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_400@SEP@swimmer.meter_500@SEP@swimmer.meter_600@SEP@swimmer.meter_700"
    },
    {
        "nl_queries": "Draw a pie chart about the proportion of All_Neutral and All_Games_Percent .",
        "VQL": "Visualize PIE SELECT All_Neutral , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT All_Neutral , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT All_Neutral , All_Games_Percent FROM basketball_match'}",
        "record_name": "3145",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Draw a pie chart about the proportion of All_Neutral and All_Games_Percent .",
        "question_toks": [
            "Draw",
            "a",
            "pie",
            "chart",
            "about",
            "the",
            "proportion",
            "of",
            "All_Neutral",
            "and",
            "All_Games_Percent",
            "."
        ],
        "query": "Visualize PIE SELECT All_Neutral , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "All_Neutral",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]"
    },
    {
        "nl_queries": "Return a bar chart about the distribution of All_Neutral and ACC_Percent .",
        "VQL": "Visualize BAR SELECT All_Neutral , ACC_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT All_Neutral , ACC_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT All_Neutral , ACC_Percent FROM basketball_match'}",
        "record_name": "3144",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Return a bar chart about the distribution of All_Neutral and ACC_Percent .",
        "question_toks": [
            "Return",
            "a",
            "bar",
            "chart",
            "about",
            "the",
            "distribution",
            "of",
            "All_Neutral",
            "and",
            "ACC_Percent",
            "."
        ],
        "query": "Visualize BAR SELECT All_Neutral , ACC_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "All_Neutral",
            ",",
            "ACC_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Visualize a bar chart about the distribution of name and meter_100 .",
        "VQL": "Visualize BAR SELECT name , meter_100 FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT name , meter_100 FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT name , meter_100 FROM swimmer'}",
        "record_name": "2915",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Visualize a bar chart about the distribution of name and meter_100 .",
        "question_toks": [
            "Visualize",
            "a",
            "bar",
            "chart",
            "about",
            "the",
            "distribution",
            "of",
            "name",
            "and",
            "meter_100",
            "."
        ],
        "query": "Visualize BAR SELECT name , meter_100 FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "name",
            ",",
            "meter_100",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]@SEP@Table stadium, columns = [*,ID, name, Capacity, City, Country, Opening_year]@SEP@Table event, columns = [*,ID, Name, Stadium_ID, Year]",
        "choose_schema_rat_link": "swimmer.name@SEP@stadium.name@SEP@event.name@SEP@swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_400@SEP@swimmer.meter_500@SEP@swimmer.meter_600@SEP@swimmer.meter_700"
    },
    {
        "nl_queries": "A bar chart shows the distribution of Name and Height .",
        "VQL": "Visualize BAR SELECT Name , Height FROM people",
        "db_id": "candidate_poll",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Name , Height FROM people', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Name , Height FROM people'}",
        "record_name": "394",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "A bar chart shows the distribution of Name and Height .",
        "question_toks": [
            "A",
            "bar",
            "chart",
            "shows",
            "the",
            "distribution",
            "of",
            "Name",
            "and",
            "Height",
            "."
        ],
        "query": "Visualize BAR SELECT Name , Height FROM people",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Name",
            ",",
            "Height",
            "FROM",
            "people"
        ],
        "choose_schema": "Table people, columns = [*,People_ID, Sex, Name, Date_of_Birth, Height, Weight]",
        "choose_schema_rat_link": "people.name@SEP@people.height"
    },
    {
        "nl_queries": "Draw a bar chart about the distribution of meter_500 and ID .",
        "VQL": "Visualize BAR SELECT meter_500 , ID FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT meter_500 , ID FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT meter_500 , ID FROM swimmer'}",
        "record_name": "2920",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Draw a bar chart about the distribution of meter_500 and ID .",
        "question_toks": [
            "Draw",
            "a",
            "bar",
            "chart",
            "about",
            "the",
            "distribution",
            "of",
            "meter_500",
            "and",
            "ID",
            "."
        ],
        "query": "Visualize BAR SELECT meter_500 , ID FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "meter_500",
            ",",
            "ID",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]@SEP@Table stadium, columns = [*,ID, name, Capacity, City, Country, Opening_year]@SEP@Table event, columns = [*,ID, Name, Stadium_ID, Year]@SEP@Table record, columns = [*,ID, Result, Swimmer_ID, Event_ID]",
        "choose_schema_rat_link": "swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_400@SEP@swimmer.meter_500@SEP@swimmer.meter_600@SEP@swimmer.meter_700@SEP@swimmer.id@SEP@stadium.id@SEP@event.id@SEP@record.id"
    },
    {
        "nl_queries": "Scatter plot to show min(salary) on x axis and department_id on y axis .",
        "VQL": "Visualize SCATTER SELECT MIN(salary) , DEPARTMENT_ID FROM employees",
        "db_id": "hr_1",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT MIN(salary) , DEPARTMENT_ID FROM employees', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT MIN(salary) , DEPARTMENT_ID FROM employees'}",
        "record_name": "1708",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                24,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Scatter plot to show min(salary) on x axis and department_id on y axis .",
        "question_toks": [
            "Scatter",
            "plot",
            "to",
            "show",
            "min(salary)",
            "on",
            "x",
            "axis",
            "and",
            "department_id",
            "on",
            "y",
            "axis",
            "."
        ],
        "query": "Visualize SCATTER SELECT MIN(salary) , DEPARTMENT_ID FROM employees",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "MIN",
            "(",
            "salary",
            ")",
            ",",
            "DEPARTMENT_ID",
            "FROM",
            "employees"
        ],
        "choose_schema": "Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]@SEP@Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]@SEP@Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]",
        "choose_schema_rat_link": "jobs.min_salary@SEP@employees.salary@SEP@departments.department_id@SEP@departments.department_name@SEP@employees.department_id@SEP@job_history.department_id"
    },
    {
        "nl_queries": "Return a pie chart about the proportion of All_Games and ACC_Percent .",
        "VQL": "Visualize PIE SELECT All_Games , ACC_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT All_Games , ACC_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT All_Games , ACC_Percent FROM basketball_match'}",
        "record_name": "3152",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Return a pie chart about the proportion of All_Games and ACC_Percent .",
        "question_toks": [
            "Return",
            "a",
            "pie",
            "chart",
            "about",
            "the",
            "proportion",
            "of",
            "All_Games",
            "and",
            "ACC_Percent",
            "."
        ],
        "query": "Visualize PIE SELECT All_Games , ACC_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "All_Games",
            ",",
            "ACC_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Give me the comparison about All_Games_Percent over the Team_Name .",
        "VQL": "Visualize BAR SELECT Team_Name , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Team_Name , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Team_Name , All_Games_Percent FROM basketball_match'}",
        "record_name": "3134",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Give me the comparison about All_Games_Percent over the Team_Name .",
        "question_toks": [
            "Give",
            "me",
            "the",
            "comparison",
            "about",
            "All_Games_Percent",
            "over",
            "the",
            "Team_Name",
            "."
        ],
        "query": "Visualize BAR SELECT Team_Name , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Team_Name",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name"
    },
    {
        "nl_queries": "Count different addresses of each school . Plot them as pie chart .",
        "VQL": "Visualize PIE SELECT SCHOOL_CODE , count(DISTINCT dept_address) FROM department",
        "db_id": "college_1",
        "hardness": "Medium",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT SCHOOL_CODE , count(DISTINCT dept_address) FROM department', 'binning': ''}, 'VQL': 'Visualize PIE SELECT SCHOOL_CODE , count(DISTINCT dept_address) FROM department'}",
        "record_name": "542",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                15,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Count different addresses of each school . Plot them as pie chart .",
        "question_toks": [
            "Count",
            "different",
            "addresses",
            "of",
            "each",
            "school",
            ".",
            "Plot",
            "them",
            "as",
            "pie",
            "chart",
            "."
        ],
        "query": "Visualize PIE SELECT SCHOOL_CODE , count(DISTINCT dept_address) FROM department",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "SCHOOL_CODE",
            ",",
            "count",
            "(",
            "DISTINCT",
            "dept_address",
            ")",
            "FROM",
            "department"
        ],
        "choose_schema": "Table DEPARTMENT, columns = [*,DEPT_CODE, DEPT_NAME, SCHOOL_CODE, EMP_NUM, DEPT_ADDRESS, DEPT_EXTENSION]",
        "choose_schema_rat_link": "department.school_code"
    },
    {
        "nl_queries": "Return a bar chart about the distribution of Name and Height .",
        "VQL": "Visualize BAR SELECT Name , Height FROM people",
        "db_id": "candidate_poll",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Name , Height FROM people', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Name , Height FROM people'}",
        "record_name": "394",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Return a bar chart about the distribution of Name and Height .",
        "question_toks": [
            "Return",
            "a",
            "bar",
            "chart",
            "about",
            "the",
            "distribution",
            "of",
            "Name",
            "and",
            "Height",
            "."
        ],
        "query": "Visualize BAR SELECT Name , Height FROM people",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Name",
            ",",
            "Height",
            "FROM",
            "people"
        ],
        "choose_schema": "Table people, columns = [*,People_ID, Sex, Name, Date_of_Birth, Height, Weight]",
        "choose_schema_rat_link": "people.name@SEP@people.height"
    },
    {
        "nl_queries": "Show name and distance for all aircrafts . Visualize by bar chart .",
        "VQL": "Visualize BAR SELECT name , distance FROM Aircraft",
        "db_id": "flight_1",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT name , distance FROM Aircraft', 'binning': ''}, 'VQL': 'Visualize BAR SELECT name , distance FROM Aircraft'}",
        "record_name": "1414",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Show name and distance for all aircrafts . Visualize by bar chart .",
        "question_toks": [
            "Show",
            "name",
            "and",
            "distance",
            "for",
            "all",
            "aircrafts",
            ".",
            "Visualize",
            "by",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT name , distance FROM Aircraft",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "name",
            ",",
            "distance",
            "FROM",
            "Aircraft"
        ],
        "choose_schema": "Table flight, columns = [*,flno, origin, destination, distance, departure_date, arrival_date, price, aid]@SEP@Table aircraft, columns = [*,aid, name, distance]@SEP@Table employee, columns = [*,eid, name, salary]",
        "choose_schema_rat_link": "aircraft.name@SEP@employee.name@SEP@flight.distance@SEP@aircraft.distance"
    },
    {
        "nl_queries": "What is the relationship between People_ID and Weight ?",
        "VQL": "Visualize SCATTER SELECT People_ID , Weight FROM people",
        "db_id": "candidate_poll",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT People_ID , Weight FROM people', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT People_ID , Weight FROM people'}",
        "record_name": "391",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "What is the relationship between People_ID and Weight ?",
        "question_toks": [
            "What",
            "is",
            "the",
            "relationship",
            "between",
            "People_ID",
            "and",
            "Weight",
            "?"
        ],
        "query": "Visualize SCATTER SELECT People_ID , Weight FROM people",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "People_ID",
            ",",
            "Weight",
            "FROM",
            "people"
        ],
        "choose_schema": "Table candidate, columns = [*,Candidate_ID, People_ID, Poll_Source, Date, Support_rate, Consider_rate, Oppose_rate, Unsure_rate]@SEP@Table people, columns = [*,People_ID, Sex, Name, Date_of_Birth, Height, Weight]",
        "choose_schema_rat_link": "candidate.people_id@SEP@people.people_id@SEP@people.weight"
    },
    {
        "nl_queries": "Visualize a bar chart about the distribution of ACC_Regular_Season and Team_ID .",
        "VQL": "Visualize BAR SELECT ACC_Regular_Season , Team_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT ACC_Regular_Season , Team_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT ACC_Regular_Season , Team_ID FROM basketball_match'}",
        "record_name": "3112",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Visualize a bar chart about the distribution of ACC_Regular_Season and Team_ID .",
        "question_toks": [
            "Visualize",
            "a",
            "bar",
            "chart",
            "about",
            "the",
            "distribution",
            "of",
            "ACC_Regular_Season",
            "and",
            "Team_ID",
            "."
        ],
        "query": "Visualize BAR SELECT ACC_Regular_Season , Team_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "ACC_Regular_Season",
            ",",
            "Team_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road@SEP@basketball_match.team_id@SEP@basketball_match.team_name"
    },
    {
        "nl_queries": "What is the relationship between Team_ID and School_ID ?",
        "VQL": "Visualize SCATTER SELECT Team_ID , School_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Team_ID , School_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Team_ID , School_ID FROM basketball_match'}",
        "record_name": "3108",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "What is the relationship between Team_ID and School_ID ?",
        "question_toks": [
            "What",
            "is",
            "the",
            "relationship",
            "between",
            "Team_ID",
            "and",
            "School_ID",
            "?"
        ],
        "query": "Visualize SCATTER SELECT Team_ID , School_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Team_ID",
            ",",
            "School_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name@SEP@university.school@SEP@basketball_match.school_id@SEP@university.school_id"
    },
    {
        "nl_queries": "Return a bar chart about the distribution of Time and ID .",
        "VQL": "Visualize BAR SELECT Time , ID FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Time , ID FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Time , ID FROM swimmer'}",
        "record_name": "2926",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Return a bar chart about the distribution of Time and ID .",
        "question_toks": [
            "Return",
            "a",
            "bar",
            "chart",
            "about",
            "the",
            "distribution",
            "of",
            "Time",
            "and",
            "ID",
            "."
        ],
        "query": "Visualize BAR SELECT Time , ID FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Time",
            ",",
            "ID",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]@SEP@Table stadium, columns = [*,ID, name, Capacity, City, Country, Opening_year]@SEP@Table event, columns = [*,ID, Name, Stadium_ID, Year]@SEP@Table record, columns = [*,ID, Result, Swimmer_ID, Event_ID]",
        "choose_schema_rat_link": "swimmer.time@SEP@swimmer.id@SEP@stadium.id@SEP@event.id@SEP@record.id"
    },
    {
        "nl_queries": "Visualize a bar chart about the distribution of Team_Name and Team_ID .",
        "VQL": "Visualize BAR SELECT Team_Name , Team_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Team_Name , Team_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Team_Name , Team_ID FROM basketball_match'}",
        "record_name": "3110",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Visualize a bar chart about the distribution of Team_Name and Team_ID .",
        "question_toks": [
            "Visualize",
            "a",
            "bar",
            "chart",
            "about",
            "the",
            "distribution",
            "of",
            "Team_Name",
            "and",
            "Team_ID",
            "."
        ],
        "query": "Visualize BAR SELECT Team_Name , Team_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Team_Name",
            ",",
            "Team_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name"
    },
    {
        "nl_queries": "Visualize a bar chart about the distribution of All_Road and All_Games_Percent .",
        "VQL": "Visualize BAR SELECT All_Road , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT All_Road , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT All_Road , All_Games_Percent FROM basketball_match'}",
        "record_name": "3143",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Visualize a bar chart about the distribution of All_Road and All_Games_Percent .",
        "question_toks": [
            "Visualize",
            "a",
            "bar",
            "chart",
            "about",
            "the",
            "distribution",
            "of",
            "All_Road",
            "and",
            "All_Games_Percent",
            "."
        ],
        "query": "Visualize BAR SELECT All_Road , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "All_Road",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]"
    },
    {
        "nl_queries": "Give me the comparison about ID over the meter_700 .",
        "VQL": "Visualize BAR SELECT meter_700 , ID FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT meter_700 , ID FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT meter_700 , ID FROM swimmer'}",
        "record_name": "2924",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Give me the comparison about ID over the meter_700 .",
        "question_toks": [
            "Give",
            "me",
            "the",
            "comparison",
            "about",
            "ID",
            "over",
            "the",
            "meter_700",
            "."
        ],
        "query": "Visualize BAR SELECT meter_700 , ID FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "meter_700",
            ",",
            "ID",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]@SEP@Table stadium, columns = [*,ID, name, Capacity, City, Country, Opening_year]@SEP@Table event, columns = [*,ID, Name, Stadium_ID, Year]@SEP@Table record, columns = [*,ID, Result, Swimmer_ID, Event_ID]",
        "choose_schema_rat_link": "swimmer.id@SEP@stadium.id@SEP@event.id@SEP@record.id@SEP@swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_400@SEP@swimmer.meter_500@SEP@swimmer.meter_600@SEP@swimmer.meter_700"
    },
    {
        "nl_queries": "Show me about the distribution of Time and ID in a bar chart .",
        "VQL": "Visualize BAR SELECT Time , ID FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Time , ID FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Time , ID FROM swimmer'}",
        "record_name": "2926",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Show me about the distribution of Time and ID in a bar chart .",
        "question_toks": [
            "Show",
            "me",
            "about",
            "the",
            "distribution",
            "of",
            "Time",
            "and",
            "ID",
            "in",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT Time , ID FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Time",
            ",",
            "ID",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]@SEP@Table stadium, columns = [*,ID, name, Capacity, City, Country, Opening_year]@SEP@Table event, columns = [*,ID, Name, Stadium_ID, Year]@SEP@Table record, columns = [*,ID, Result, Swimmer_ID, Event_ID]",
        "choose_schema_rat_link": "swimmer.time@SEP@swimmer.id@SEP@stadium.id@SEP@event.id@SEP@record.id"
    },
    {
        "nl_queries": "What are the age and hometown of teachers . Visualize by bar chart .",
        "VQL": "Visualize BAR SELECT Hometown , Age FROM teacher",
        "db_id": "course_teach",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Hometown , Age FROM teacher', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Hometown , Age FROM teacher'}",
        "record_name": "711",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "What are the age and hometown of teachers . Visualize by bar chart .",
        "question_toks": [
            "What",
            "are",
            "the",
            "age",
            "and",
            "hometown",
            "of",
            "teachers",
            ".",
            "Visualize",
            "by",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT Hometown , Age FROM teacher",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Hometown",
            ",",
            "Age",
            "FROM",
            "teacher"
        ],
        "choose_schema": "Table teacher, columns = [*,Teacher_ID, Name, Age, Hometown]",
        "choose_schema_rat_link": "teacher.age@SEP@teacher.hometown@SEP@teacher.teacher_id@SEP@course_arrange.teacher_id"
    },
    {
        "nl_queries": "Return a bar chart about the distribution of All_Road and All_Games_Percent .",
        "VQL": "Visualize BAR SELECT All_Road , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT All_Road , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT All_Road , All_Games_Percent FROM basketball_match'}",
        "record_name": "3143",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Return a bar chart about the distribution of All_Road and All_Games_Percent .",
        "question_toks": [
            "Return",
            "a",
            "bar",
            "chart",
            "about",
            "the",
            "distribution",
            "of",
            "All_Road",
            "and",
            "All_Games_Percent",
            "."
        ],
        "query": "Visualize BAR SELECT All_Road , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "All_Road",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]"
    },
    {
        "nl_queries": "A pie chart shows the proportion of ACC_Regular_Season and ACC_Percent .",
        "VQL": "Visualize PIE SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match'}",
        "record_name": "3150",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "A pie chart shows the proportion of ACC_Regular_Season and ACC_Percent .",
        "question_toks": [
            "A",
            "pie",
            "chart",
            "shows",
            "the",
            "proportion",
            "of",
            "ACC_Regular_Season",
            "and",
            "ACC_Percent",
            "."
        ],
        "query": "Visualize PIE SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "ACC_Regular_Season",
            ",",
            "ACC_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Create a pie chart showing acc_percent across acc regular season .",
        "VQL": "Visualize PIE SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match'}",
        "record_name": "3150",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Create a pie chart showing acc_percent across acc regular season .",
        "question_toks": [
            "Create",
            "a",
            "pie",
            "chart",
            "showing",
            "acc_percent",
            "across",
            "acc",
            "regular",
            "season",
            "."
        ],
        "query": "Visualize PIE SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "ACC_Regular_Season",
            ",",
            "ACC_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Draw a scatter chart about the correlation between School_ID and All_Games_Percent .",
        "VQL": "Visualize SCATTER SELECT School_ID , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT School_ID , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT School_ID , All_Games_Percent FROM basketball_match'}",
        "record_name": "3109",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Draw a scatter chart about the correlation between School_ID and All_Games_Percent .",
        "question_toks": [
            "Draw",
            "a",
            "scatter",
            "chart",
            "about",
            "the",
            "correlation",
            "between",
            "School_ID",
            "and",
            "All_Games_Percent",
            "."
        ],
        "query": "Visualize SCATTER SELECT School_ID , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "School_ID",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "university.school@SEP@basketball_match.school_id@SEP@university.school_id"
    },
    {
        "nl_queries": "I want to know the proportion of All_Games_Percent for each all neutral .",
        "VQL": "Visualize PIE SELECT All_Neutral , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT All_Neutral , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT All_Neutral , All_Games_Percent FROM basketball_match'}",
        "record_name": "3145",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "I want to know the proportion of All_Games_Percent for each all neutral .",
        "question_toks": [
            "I",
            "want",
            "to",
            "know",
            "the",
            "proportion",
            "of",
            "All_Games_Percent",
            "for",
            "each",
            "all",
            "neutral",
            "."
        ],
        "query": "Visualize PIE SELECT All_Neutral , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "All_Neutral",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.all_neutral"
    },
    {
        "nl_queries": "Show id from each meter 500",
        "VQL": "Visualize BAR SELECT meter_500 , ID FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT meter_500 , ID FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT meter_500 , ID FROM swimmer'}",
        "record_name": "2920",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Show id from each meter 500",
        "question_toks": [
            "Show",
            "id",
            "from",
            "each",
            "meter",
            "500"
        ],
        "query": "Visualize BAR SELECT meter_500 , ID FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "meter_500",
            ",",
            "ID",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]@SEP@Table stadium, columns = [*,ID, name, Capacity, City, Country, Opening_year]@SEP@Table event, columns = [*,ID, Name, Stadium_ID, Year]@SEP@Table record, columns = [*,ID, Result, Swimmer_ID, Event_ID]",
        "choose_schema_rat_link": "swimmer.meter_500@SEP@swimmer.id@SEP@stadium.id@SEP@event.id@SEP@record.id@SEP@swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_400@SEP@swimmer.meter_600@SEP@swimmer.meter_700"
    },
    {
        "nl_queries": "Visualize a scatter chart about the correlation between Team_ID and ACC_Percent .",
        "VQL": "Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Team_ID , ACC_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match'}",
        "record_name": "3120",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Visualize a scatter chart about the correlation between Team_ID and ACC_Percent .",
        "question_toks": [
            "Visualize",
            "a",
            "scatter",
            "chart",
            "about",
            "the",
            "correlation",
            "between",
            "Team_ID",
            "and",
            "ACC_Percent",
            "."
        ],
        "query": "Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Team_ID",
            ",",
            "ACC_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name@SEP@basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Visualize a bar chart about the distribution of meter_600 and ID .",
        "VQL": "Visualize BAR SELECT meter_600 , ID FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT meter_600 , ID FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT meter_600 , ID FROM swimmer'}",
        "record_name": "2922",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Visualize a bar chart about the distribution of meter_600 and ID .",
        "question_toks": [
            "Visualize",
            "a",
            "bar",
            "chart",
            "about",
            "the",
            "distribution",
            "of",
            "meter_600",
            "and",
            "ID",
            "."
        ],
        "query": "Visualize BAR SELECT meter_600 , ID FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "meter_600",
            ",",
            "ID",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]@SEP@Table stadium, columns = [*,ID, name, Capacity, City, Country, Opening_year]@SEP@Table event, columns = [*,ID, Name, Stadium_ID, Year]@SEP@Table record, columns = [*,ID, Result, Swimmer_ID, Event_ID]",
        "choose_schema_rat_link": "swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_400@SEP@swimmer.meter_500@SEP@swimmer.meter_600@SEP@swimmer.meter_700@SEP@swimmer.id@SEP@stadium.id@SEP@event.id@SEP@record.id"
    },
    {
        "nl_queries": "Visualize a bar chart about the distribution of ACC_Regular_Season and School_ID .",
        "VQL": "Visualize BAR SELECT ACC_Regular_Season , School_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT ACC_Regular_Season , School_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT ACC_Regular_Season , School_ID FROM basketball_match'}",
        "record_name": "3113",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Visualize a bar chart about the distribution of ACC_Regular_Season and School_ID .",
        "question_toks": [
            "Visualize",
            "a",
            "bar",
            "chart",
            "about",
            "the",
            "distribution",
            "of",
            "ACC_Regular_Season",
            "and",
            "School_ID",
            "."
        ],
        "query": "Visualize BAR SELECT ACC_Regular_Season , School_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "ACC_Regular_Season",
            ",",
            "School_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road@SEP@university.school@SEP@basketball_match.school_id@SEP@university.school_id"
    },
    {
        "nl_queries": "I want to see trend of day_number by calendar date",
        "VQL": "Visualize LINE SELECT Calendar_Date , Day_Number FROM Ref_calendar",
        "db_id": "cre_Doc_Tracking_DB",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize LINE', 'data_part': {'sql_part': 'SELECT Calendar_Date , Day_Number FROM Ref_calendar', 'binning': ''}, 'VQL': 'Visualize LINE SELECT Calendar_Date , Day_Number FROM Ref_calendar'}",
        "record_name": "789",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 2
        },
        "question": "I want to see trend of day_number by calendar date",
        "question_toks": [
            "I",
            "want",
            "to",
            "see",
            "trend",
            "of",
            "day_number",
            "by",
            "calendar",
            "date"
        ],
        "query": "Visualize LINE SELECT Calendar_Date , Day_Number FROM Ref_calendar",
        "query_toks": [
            "Visualize",
            "LINE",
            "SELECT",
            "Calendar_Date",
            ",",
            "Day_Number",
            "FROM",
            "Ref_calendar"
        ],
        "choose_schema": "Table Ref_Calendar, columns = [*,Calendar_Date, Day_Number]",
        "choose_schema_rat_link": "all_documents.date_stored@SEP@employees.date_of_birth@SEP@document_locations.date_in_location_from@SEP@document_locations.date_in_locaton_to"
    },
    {
        "nl_queries": "Visualize a bar chart about the distribution of Date_of_Birth and Height .",
        "VQL": "Visualize BAR SELECT Date_of_Birth , Height FROM people",
        "db_id": "candidate_poll",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Date_of_Birth , Height FROM people', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Date_of_Birth , Height FROM people'}",
        "record_name": "397",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Visualize a bar chart about the distribution of Date_of_Birth and Height .",
        "question_toks": [
            "Visualize",
            "a",
            "bar",
            "chart",
            "about",
            "the",
            "distribution",
            "of",
            "Date_of_Birth",
            "and",
            "Height",
            "."
        ],
        "query": "Visualize BAR SELECT Date_of_Birth , Height FROM people",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Date_of_Birth",
            ",",
            "Height",
            "FROM",
            "people"
        ],
        "choose_schema": "Table people, columns = [*,People_ID, Sex, Name, Date_of_Birth, Height, Weight]",
        "choose_schema_rat_link": "candidate.date@SEP@people.date_of_birth@SEP@people.height"
    },
    {
        "nl_queries": "What is the age and hometown of every teacher . Visualize by bar chart .",
        "VQL": "Visualize BAR SELECT Hometown , Age FROM teacher",
        "db_id": "course_teach",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Hometown , Age FROM teacher', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Hometown , Age FROM teacher'}",
        "record_name": "711",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "What is the age and hometown of every teacher . Visualize by bar chart .",
        "question_toks": [
            "What",
            "is",
            "the",
            "age",
            "and",
            "hometown",
            "of",
            "every",
            "teacher",
            ".",
            "Visualize",
            "by",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT Hometown , Age FROM teacher",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Hometown",
            ",",
            "Age",
            "FROM",
            "teacher"
        ],
        "choose_schema": "Table teacher, columns = [*,Teacher_ID, Name, Age, Hometown]",
        "choose_schema_rat_link": "teacher.age@SEP@teacher.hometown@SEP@teacher.teacher_id@SEP@course_arrange.teacher_id"
    },
    {
        "nl_queries": "Return a pie chart about the proportion of ACC_Regular_Season and All_Games_Percent .",
        "VQL": "Visualize PIE SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match'}",
        "record_name": "3136",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Return a pie chart about the proportion of ACC_Regular_Season and All_Games_Percent .",
        "question_toks": [
            "Return",
            "a",
            "pie",
            "chart",
            "about",
            "the",
            "proportion",
            "of",
            "ACC_Regular_Season",
            "and",
            "All_Games_Percent",
            "."
        ],
        "query": "Visualize PIE SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "ACC_Regular_Season",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Show me the trend about Employee_ID over Start_from with a line chart .",
        "VQL": "Visualize LINE SELECT Start_from , Employee_ID FROM hiring",
        "db_id": "employee_hire_evaluation",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize LINE', 'data_part': {'sql_part': 'SELECT Start_from , Employee_ID FROM hiring', 'binning': ''}, 'VQL': 'Visualize LINE SELECT Start_from , Employee_ID FROM hiring'}",
        "record_name": "1339",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 2
        },
        "question": "Show me the trend about Employee_ID over Start_from with a line chart .",
        "question_toks": [
            "Show",
            "me",
            "the",
            "trend",
            "about",
            "Employee_ID",
            "over",
            "Start_from",
            "with",
            "a",
            "line",
            "chart",
            "."
        ],
        "query": "Visualize LINE SELECT Start_from , Employee_ID FROM hiring",
        "query_toks": [
            "Visualize",
            "LINE",
            "SELECT",
            "Start_from",
            ",",
            "Employee_ID",
            "FROM",
            "hiring"
        ],
        "choose_schema": "Table employee, columns = [*,Employee_ID, Name, Age, City]@SEP@Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]@SEP@Table evaluation, columns = [*,Employee_ID, Year_awarded, Bonus]",
        "choose_schema_rat_link": "employee.employee_id@SEP@hiring.employee_id@SEP@evaluation.employee_id@SEP@hiring.start_from"
    },
    {
        "nl_queries": "Visualize a pie chart about the proportion of Team_Name and School_ID .",
        "VQL": "Visualize PIE SELECT Team_Name , School_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT Team_Name , School_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT Team_Name , School_ID FROM basketball_match'}",
        "record_name": "3147",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Visualize a pie chart about the proportion of Team_Name and School_ID .",
        "question_toks": [
            "Visualize",
            "a",
            "pie",
            "chart",
            "about",
            "the",
            "proportion",
            "of",
            "Team_Name",
            "and",
            "School_ID",
            "."
        ],
        "query": "Visualize PIE SELECT Team_Name , School_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "Team_Name",
            ",",
            "School_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name@SEP@university.school@SEP@basketball_match.school_id@SEP@university.school_id"
    },
    {
        "nl_queries": "List the height and weight of people in descending order of height . Show scatter chart .",
        "VQL": "Visualize SCATTER SELECT Height , Weight FROM people",
        "db_id": "body_builder",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Height , Weight FROM people', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Height , Weight FROM people'}",
        "record_name": "351",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "List the height and weight of people in descending order of height . Show scatter chart .",
        "question_toks": [
            "List",
            "the",
            "height",
            "and",
            "weight",
            "of",
            "people",
            "in",
            "descending",
            "order",
            "of",
            "height",
            ".",
            "Show",
            "scatter",
            "chart",
            "."
        ],
        "query": "Visualize SCATTER SELECT Height , Weight FROM people",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Height",
            ",",
            "Weight",
            "FROM",
            "people"
        ],
        "choose_schema": "Table people, columns = [*,People_ID, Name, Height, Weight, Birth_Date, Birth_Place]",
        "choose_schema_rat_link": "people.height@SEP@people.weight@SEP@body_builder.people_id@SEP@people.people_id"
    },
    {
        "nl_queries": "Bar chart x axis meter 600 y axis id",
        "VQL": "Visualize BAR SELECT meter_600 , ID FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT meter_600 , ID FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT meter_600 , ID FROM swimmer'}",
        "record_name": "2922",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Bar chart x axis meter 600 y axis id",
        "question_toks": [
            "Bar",
            "chart",
            "x",
            "axis",
            "meter",
            "600",
            "y",
            "axis",
            "id"
        ],
        "query": "Visualize BAR SELECT meter_600 , ID FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "meter_600",
            ",",
            "ID",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]@SEP@Table stadium, columns = [*,ID, name, Capacity, City, Country, Opening_year]@SEP@Table event, columns = [*,ID, Name, Stadium_ID, Year]@SEP@Table record, columns = [*,ID, Result, Swimmer_ID, Event_ID]",
        "choose_schema_rat_link": "swimmer.meter_600@SEP@swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_400@SEP@swimmer.meter_500@SEP@swimmer.meter_700@SEP@swimmer.id@SEP@stadium.id@SEP@event.id@SEP@record.id"
    },
    {
        "nl_queries": "Visualize a scatter chart about the correlation between Body_Builder_ID and Clean_Jerk .",
        "VQL": "Visualize SCATTER SELECT Body_Builder_ID , Clean_Jerk FROM body_builder",
        "db_id": "body_builder",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Body_Builder_ID , Clean_Jerk FROM body_builder', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Body_Builder_ID , Clean_Jerk FROM body_builder'}",
        "record_name": "360",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Visualize a scatter chart about the correlation between Body_Builder_ID and Clean_Jerk .",
        "question_toks": [
            "Visualize",
            "a",
            "scatter",
            "chart",
            "about",
            "the",
            "correlation",
            "between",
            "Body_Builder_ID",
            "and",
            "Clean_Jerk",
            "."
        ],
        "query": "Visualize SCATTER SELECT Body_Builder_ID , Clean_Jerk FROM body_builder",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Body_Builder_ID",
            ",",
            "Clean_Jerk",
            "FROM",
            "body_builder"
        ],
        "choose_schema": "Table body_builder, columns = [*,Body_Builder_ID, People_ID, Snatch, Clean_Jerk, Total]",
        "choose_schema_rat_link": "body_builder.body_builder_id@SEP@body_builder.clean_jerk"
    },
    {
        "nl_queries": "Return a bar chart about the distribution of meter_300 and ID .",
        "VQL": "Visualize BAR SELECT meter_300 , ID FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT meter_300 , ID FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT meter_300 , ID FROM swimmer'}",
        "record_name": "2916",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Return a bar chart about the distribution of meter_300 and ID .",
        "question_toks": [
            "Return",
            "a",
            "bar",
            "chart",
            "about",
            "the",
            "distribution",
            "of",
            "meter_300",
            "and",
            "ID",
            "."
        ],
        "query": "Visualize BAR SELECT meter_300 , ID FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "meter_300",
            ",",
            "ID",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]@SEP@Table stadium, columns = [*,ID, name, Capacity, City, Country, Opening_year]@SEP@Table event, columns = [*,ID, Name, Stadium_ID, Year]@SEP@Table record, columns = [*,ID, Result, Swimmer_ID, Event_ID]",
        "choose_schema_rat_link": "swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_400@SEP@swimmer.meter_500@SEP@swimmer.meter_600@SEP@swimmer.meter_700@SEP@swimmer.id@SEP@stadium.id@SEP@event.id@SEP@record.id"
    },
    {
        "nl_queries": "Show me about the correlation between Team_ID and All_Games_Percent in a scatter chart .",
        "VQL": "Visualize SCATTER SELECT Team_ID , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Team_ID , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Team_ID , All_Games_Percent FROM basketball_match'}",
        "record_name": "3106",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Show me about the correlation between Team_ID and All_Games_Percent in a scatter chart .",
        "question_toks": [
            "Show",
            "me",
            "about",
            "the",
            "correlation",
            "between",
            "Team_ID",
            "and",
            "All_Games_Percent",
            "in",
            "a",
            "scatter",
            "chart",
            "."
        ],
        "query": "Visualize SCATTER SELECT Team_ID , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Team_ID",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name"
    },
    {
        "nl_queries": "Draw a bar chart of name versus age",
        "VQL": "Visualize BAR SELECT Name , Age FROM editor",
        "db_id": "journal_committee",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Name , Age FROM editor', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Name , Age FROM editor'}",
        "record_name": "2053",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Draw a bar chart of name versus age",
        "question_toks": [
            "Draw",
            "a",
            "bar",
            "chart",
            "of",
            "name",
            "versus",
            "age"
        ],
        "query": "Visualize BAR SELECT Name , Age FROM editor",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Name",
            ",",
            "Age",
            "FROM",
            "editor"
        ],
        "choose_schema": "Table editor, columns = [*,Editor_ID, Name, Age]",
        "choose_schema_rat_link": "editor.name@SEP@editor.age"
    },
    {
        "nl_queries": "Plot a scatter chart , body builder id by clean_jerk .",
        "VQL": "Visualize SCATTER SELECT Body_Builder_ID , Clean_Jerk FROM body_builder",
        "db_id": "body_builder",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Body_Builder_ID , Clean_Jerk FROM body_builder', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Body_Builder_ID , Clean_Jerk FROM body_builder'}",
        "record_name": "360",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Plot a scatter chart , body builder id by clean_jerk .",
        "question_toks": [
            "Plot",
            "a",
            "scatter",
            "chart",
            ",",
            "body",
            "builder",
            "id",
            "by",
            "clean_jerk",
            "."
        ],
        "query": "Visualize SCATTER SELECT Body_Builder_ID , Clean_Jerk FROM body_builder",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Body_Builder_ID",
            ",",
            "Clean_Jerk",
            "FROM",
            "body_builder"
        ],
        "choose_schema": "Table body_builder, columns = [*,Body_Builder_ID, People_ID, Snatch, Clean_Jerk, Total]",
        "choose_schema_rat_link": "body_builder.body_builder_id@SEP@body_builder.clean_jerk"
    },
    {
        "nl_queries": "A scatter chart about what are the final tables made and best finishes for all poker players ?",
        "VQL": "Visualize SCATTER SELECT Final_Table_Made , Best_Finish FROM poker_player",
        "db_id": "poker_player",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Final_Table_Made , Best_Finish FROM poker_player', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Final_Table_Made , Best_Finish FROM poker_player'}",
        "record_name": "2592",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "A scatter chart about what are the final tables made and best finishes for all poker players ?",
        "question_toks": [
            "A",
            "scatter",
            "chart",
            "about",
            "what",
            "are",
            "the",
            "final",
            "tables",
            "made",
            "and",
            "best",
            "finishes",
            "for",
            "all",
            "poker",
            "players",
            "?"
        ],
        "query": "Visualize SCATTER SELECT Final_Table_Made , Best_Finish FROM poker_player",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Final_Table_Made",
            ",",
            "Best_Finish",
            "FROM",
            "poker_player"
        ],
        "choose_schema": "Table poker_player, columns = [*,Poker_Player_ID, People_ID, Final_Table_Made, Best_Finish, Money_Rank, Earnings]",
        "choose_schema_rat_link": "poker_player.final_table_made@SEP@poker_player.best_finish@SEP@poker_player.poker_player_id"
    },
    {
        "nl_queries": "Draw a scatter chart about the correlation between Body_Builder_ID and Total .",
        "VQL": "Visualize SCATTER SELECT Body_Builder_ID , Total FROM body_builder",
        "db_id": "body_builder",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Body_Builder_ID , Total FROM body_builder', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Body_Builder_ID , Total FROM body_builder'}",
        "record_name": "358",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Draw a scatter chart about the correlation between Body_Builder_ID and Total .",
        "question_toks": [
            "Draw",
            "a",
            "scatter",
            "chart",
            "about",
            "the",
            "correlation",
            "between",
            "Body_Builder_ID",
            "and",
            "Total",
            "."
        ],
        "query": "Visualize SCATTER SELECT Body_Builder_ID , Total FROM body_builder",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Body_Builder_ID",
            ",",
            "Total",
            "FROM",
            "body_builder"
        ],
        "choose_schema": "Table body_builder, columns = [*,Body_Builder_ID, People_ID, Snatch, Clean_Jerk, Total]",
        "choose_schema_rat_link": "body_builder.body_builder_id@SEP@body_builder.total"
    },
    {
        "nl_queries": "How many different locations does each school have . Show bar chart .",
        "VQL": "Visualize BAR SELECT SCHOOL_CODE , count(DISTINCT dept_address) FROM department",
        "db_id": "college_1",
        "hardness": "Medium",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT SCHOOL_CODE , count(DISTINCT dept_address) FROM department', 'binning': ''}, 'VQL': 'Visualize BAR SELECT SCHOOL_CODE , count(DISTINCT dept_address) FROM department'}",
        "record_name": "543",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                15,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "How many different locations does each school have . Show bar chart .",
        "question_toks": [
            "How",
            "many",
            "different",
            "locations",
            "does",
            "each",
            "school",
            "have",
            ".",
            "Show",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT SCHOOL_CODE , count(DISTINCT dept_address) FROM department",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "SCHOOL_CODE",
            ",",
            "count",
            "(",
            "DISTINCT",
            "dept_address",
            ")",
            "FROM",
            "department"
        ],
        "choose_schema": "Table DEPARTMENT, columns = [*,DEPT_CODE, DEPT_NAME, SCHOOL_CODE, EMP_NUM, DEPT_ADDRESS, DEPT_EXTENSION]",
        "choose_schema_rat_link": "department.school_code"
    },
    {
        "nl_queries": "Draw a pie chart for how many different locations does each school have ?",
        "VQL": "Visualize PIE SELECT SCHOOL_CODE , count(DISTINCT dept_address) FROM department",
        "db_id": "college_1",
        "hardness": "Medium",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT SCHOOL_CODE , count(DISTINCT dept_address) FROM department', 'binning': ''}, 'VQL': 'Visualize PIE SELECT SCHOOL_CODE , count(DISTINCT dept_address) FROM department'}",
        "record_name": "542",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                15,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Draw a pie chart for how many different locations does each school have ?",
        "question_toks": [
            "Draw",
            "a",
            "pie",
            "chart",
            "for",
            "how",
            "many",
            "different",
            "locations",
            "does",
            "each",
            "school",
            "have",
            "?"
        ],
        "query": "Visualize PIE SELECT SCHOOL_CODE , count(DISTINCT dept_address) FROM department",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "SCHOOL_CODE",
            ",",
            "count",
            "(",
            "DISTINCT",
            "dept_address",
            ")",
            "FROM",
            "department"
        ],
        "choose_schema": "Table DEPARTMENT, columns = [*,DEPT_CODE, DEPT_NAME, SCHOOL_CODE, EMP_NUM, DEPT_ADDRESS, DEPT_EXTENSION]",
        "choose_schema_rat_link": "department.school_code"
    },
    {
        "nl_queries": "Find meter_500 and meter_100 , and visualize them by a bar chart .",
        "VQL": "Visualize BAR SELECT meter_500 , meter_100 FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT meter_500 , meter_100 FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT meter_500 , meter_100 FROM swimmer'}",
        "record_name": "2921",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Find meter_500 and meter_100 , and visualize them by a bar chart .",
        "question_toks": [
            "Find",
            "meter_500",
            "and",
            "meter_100",
            ",",
            "and",
            "visualize",
            "them",
            "by",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT meter_500 , meter_100 FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "meter_500",
            ",",
            "meter_100",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]",
        "choose_schema_rat_link": "swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_400@SEP@swimmer.meter_500@SEP@swimmer.meter_600@SEP@swimmer.meter_700"
    },
    {
        "nl_queries": "Show me about the distribution of meter_400 and ID in a bar chart .",
        "VQL": "Visualize BAR SELECT meter_400 , ID FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT meter_400 , ID FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT meter_400 , ID FROM swimmer'}",
        "record_name": "2918",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Show me about the distribution of meter_400 and ID in a bar chart .",
        "question_toks": [
            "Show",
            "me",
            "about",
            "the",
            "distribution",
            "of",
            "meter_400",
            "and",
            "ID",
            "in",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT meter_400 , ID FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "meter_400",
            ",",
            "ID",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]@SEP@Table stadium, columns = [*,ID, name, Capacity, City, Country, Opening_year]@SEP@Table event, columns = [*,ID, Name, Stadium_ID, Year]@SEP@Table record, columns = [*,ID, Result, Swimmer_ID, Event_ID]",
        "choose_schema_rat_link": "swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_400@SEP@swimmer.meter_500@SEP@swimmer.meter_600@SEP@swimmer.meter_700@SEP@swimmer.id@SEP@stadium.id@SEP@event.id@SEP@record.id"
    },
    {
        "nl_queries": "Show me about the distribution of Name and Weight in a bar chart .",
        "VQL": "Visualize BAR SELECT Name , Weight FROM people",
        "db_id": "candidate_poll",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Name , Weight FROM people', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Name , Weight FROM people'}",
        "record_name": "395",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Show me about the distribution of Name and Weight in a bar chart .",
        "question_toks": [
            "Show",
            "me",
            "about",
            "the",
            "distribution",
            "of",
            "Name",
            "and",
            "Weight",
            "in",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT Name , Weight FROM people",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Name",
            ",",
            "Weight",
            "FROM",
            "people"
        ],
        "choose_schema": "Table people, columns = [*,People_ID, Sex, Name, Date_of_Birth, Height, Weight]",
        "choose_schema_rat_link": "people.name@SEP@people.weight"
    },
    {
        "nl_queries": "Show the reign and days held of wrestlers in a scatter chart",
        "VQL": "Visualize SCATTER SELECT Reign , Days_held FROM wrestler",
        "db_id": "wrestler",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Reign , Days_held FROM wrestler', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Reign , Days_held FROM wrestler'}",
        "record_name": "3284",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Show the reign and days held of wrestlers in a scatter chart",
        "question_toks": [
            "Show",
            "the",
            "reign",
            "and",
            "days",
            "held",
            "of",
            "wrestlers",
            "in",
            "a",
            "scatter",
            "chart"
        ],
        "query": "Visualize SCATTER SELECT Reign , Days_held FROM wrestler",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Reign",
            ",",
            "Days_held",
            "FROM",
            "wrestler"
        ],
        "choose_schema": "Table wrestler, columns = [*,Wrestler_ID, Name, Reign, Days_held, Location, Event]",
        "choose_schema_rat_link": "wrestler.days_held@SEP@wrestler.reign@SEP@wrestler.wrestler_id@SEP@elimination.wrestler_id"
    },
    {
        "nl_queries": "A line chart shows the trend of Shop_ID over Start_from .",
        "VQL": "Visualize LINE SELECT Start_from , Shop_ID FROM hiring",
        "db_id": "employee_hire_evaluation",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize LINE', 'data_part': {'sql_part': 'SELECT Start_from , Shop_ID FROM hiring', 'binning': ''}, 'VQL': 'Visualize LINE SELECT Start_from , Shop_ID FROM hiring'}",
        "record_name": "1338",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 2
        },
        "question": "A line chart shows the trend of Shop_ID over Start_from .",
        "question_toks": [
            "A",
            "line",
            "chart",
            "shows",
            "the",
            "trend",
            "of",
            "Shop_ID",
            "over",
            "Start_from",
            "."
        ],
        "query": "Visualize LINE SELECT Start_from , Shop_ID FROM hiring",
        "query_toks": [
            "Visualize",
            "LINE",
            "SELECT",
            "Start_from",
            ",",
            "Shop_ID",
            "FROM",
            "hiring"
        ],
        "choose_schema": "Table shop, columns = [*,Shop_ID, Name, Location, District, Number_products, Manager_name]@SEP@Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]",
        "choose_schema_rat_link": "shop.shop_id@SEP@hiring.shop_id@SEP@hiring.start_from"
    },
    {
        "nl_queries": "Just show the first name of the employee and list their manager's id in the Y-axis of the bar chart .",
        "VQL": "Visualize BAR SELECT FIRST_NAME , MANAGER_ID FROM employees",
        "db_id": "hr_1",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT FIRST_NAME , MANAGER_ID FROM employees', 'binning': ''}, 'VQL': 'Visualize BAR SELECT FIRST_NAME , MANAGER_ID FROM employees'}",
        "record_name": "1897",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                23,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Just show the first name of the employee and list their manager's id in the Y-axis of the bar chart .",
        "question_toks": [
            "Just",
            "show",
            "the",
            "first",
            "name",
            "of",
            "the",
            "employee",
            "and",
            "list",
            "their",
            "manager's",
            "id",
            "in",
            "the",
            "Y-axis",
            "of",
            "the",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT FIRST_NAME , MANAGER_ID FROM employees",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "FIRST_NAME",
            ",",
            "MANAGER_ID",
            "FROM",
            "employees"
        ],
        "choose_schema": "Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]@SEP@Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]",
        "choose_schema_rat_link": "employees.first_name@SEP@employees.employee_id@SEP@job_history.employee_id@SEP@departments.manager_id@SEP@employees.manager_id"
    },
    {
        "nl_queries": "Bar chart of all_games_percent from each all road",
        "VQL": "Visualize BAR SELECT All_Road , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT All_Road , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT All_Road , All_Games_Percent FROM basketball_match'}",
        "record_name": "3143",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Bar chart of all_games_percent from each all road",
        "question_toks": [
            "Bar",
            "chart",
            "of",
            "all_games_percent",
            "from",
            "each",
            "all",
            "road"
        ],
        "query": "Visualize BAR SELECT All_Road , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "All_Road",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.all_road"
    },
    {
        "nl_queries": "Give me the comparison about meter_100 over the meter_300 .",
        "VQL": "Visualize BAR SELECT meter_300 , meter_100 FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT meter_300 , meter_100 FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT meter_300 , meter_100 FROM swimmer'}",
        "record_name": "2917",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Give me the comparison about meter_100 over the meter_300 .",
        "question_toks": [
            "Give",
            "me",
            "the",
            "comparison",
            "about",
            "meter_100",
            "over",
            "the",
            "meter_300",
            "."
        ],
        "query": "Visualize BAR SELECT meter_300 , meter_100 FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "meter_300",
            ",",
            "meter_100",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]",
        "choose_schema_rat_link": "swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_400@SEP@swimmer.meter_500@SEP@swimmer.meter_600@SEP@swimmer.meter_700"
    },
    {
        "nl_queries": "Draw a bar chart about the distribution of meter_600 and meter_100 .",
        "VQL": "Visualize BAR SELECT meter_600 , meter_100 FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT meter_600 , meter_100 FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT meter_600 , meter_100 FROM swimmer'}",
        "record_name": "2923",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Draw a bar chart about the distribution of meter_600 and meter_100 .",
        "question_toks": [
            "Draw",
            "a",
            "bar",
            "chart",
            "about",
            "the",
            "distribution",
            "of",
            "meter_600",
            "and",
            "meter_100",
            "."
        ],
        "query": "Visualize BAR SELECT meter_600 , meter_100 FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "meter_600",
            ",",
            "meter_100",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]",
        "choose_schema_rat_link": "swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_400@SEP@swimmer.meter_500@SEP@swimmer.meter_600@SEP@swimmer.meter_700"
    },
    {
        "nl_queries": "Find ACC_Regular_Season and School_ID , and visualize them by a bar chart .",
        "VQL": "Visualize BAR SELECT ACC_Regular_Season , School_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT ACC_Regular_Season , School_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT ACC_Regular_Season , School_ID FROM basketball_match'}",
        "record_name": "3113",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Find ACC_Regular_Season and School_ID , and visualize them by a bar chart .",
        "question_toks": [
            "Find",
            "ACC_Regular_Season",
            "and",
            "School_ID",
            ",",
            "and",
            "visualize",
            "them",
            "by",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT ACC_Regular_Season , School_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "ACC_Regular_Season",
            ",",
            "School_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road@SEP@university.school@SEP@basketball_match.school_id@SEP@university.school_id"
    },
    {
        "nl_queries": "Show me team_id by all road in a histogram",
        "VQL": "Visualize BAR SELECT All_Road , Team_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT All_Road , Team_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT All_Road , Team_ID FROM basketball_match'}",
        "record_name": "3116",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Show me team_id by all road in a histogram",
        "question_toks": [
            "Show",
            "me",
            "team_id",
            "by",
            "all",
            "road",
            "in",
            "a",
            "histogram"
        ],
        "query": "Visualize BAR SELECT All_Road , Team_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "All_Road",
            ",",
            "Team_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.all_road@SEP@basketball_match.team_id@SEP@basketball_match.team_name"
    },
    {
        "nl_queries": "A pie chart shows the proportion of All_Games and All_Games_Percent .",
        "VQL": "Visualize PIE SELECT All_Games , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT All_Games , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT All_Games , All_Games_Percent FROM basketball_match'}",
        "record_name": "3139",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "A pie chart shows the proportion of All_Games and All_Games_Percent .",
        "question_toks": [
            "A",
            "pie",
            "chart",
            "shows",
            "the",
            "proportion",
            "of",
            "All_Games",
            "and",
            "All_Games_Percent",
            "."
        ],
        "query": "Visualize PIE SELECT All_Games , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "All_Games",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]"
    },
    {
        "nl_queries": "A pie chart shows the proportion of ACC_Regular_Season and All_Games_Percent .",
        "VQL": "Visualize PIE SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match'}",
        "record_name": "3136",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "A pie chart shows the proportion of ACC_Regular_Season and All_Games_Percent .",
        "question_toks": [
            "A",
            "pie",
            "chart",
            "shows",
            "the",
            "proportion",
            "of",
            "ACC_Regular_Season",
            "and",
            "All_Games_Percent",
            "."
        ],
        "query": "Visualize PIE SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "ACC_Regular_Season",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Show me about the correlation between Body_Builder_ID and People_ID in a scatter chart .",
        "VQL": "Visualize SCATTER SELECT Body_Builder_ID , People_ID FROM body_builder",
        "db_id": "body_builder",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Body_Builder_ID , People_ID FROM body_builder', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Body_Builder_ID , People_ID FROM body_builder'}",
        "record_name": "352",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Show me about the correlation between Body_Builder_ID and People_ID in a scatter chart .",
        "question_toks": [
            "Show",
            "me",
            "about",
            "the",
            "correlation",
            "between",
            "Body_Builder_ID",
            "and",
            "People_ID",
            "in",
            "a",
            "scatter",
            "chart",
            "."
        ],
        "query": "Visualize SCATTER SELECT Body_Builder_ID , People_ID FROM body_builder",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Body_Builder_ID",
            ",",
            "People_ID",
            "FROM",
            "body_builder"
        ],
        "choose_schema": "Table body_builder, columns = [*,Body_Builder_ID, People_ID, Snatch, Clean_Jerk, Total]@SEP@Table people, columns = [*,People_ID, Name, Height, Weight, Birth_Date, Birth_Place]",
        "choose_schema_rat_link": "body_builder.body_builder_id@SEP@body_builder.people_id@SEP@people.people_id"
    },
    {
        "nl_queries": "Visualize a bar chart about the distribution of meter_600 and meter_100 .",
        "VQL": "Visualize BAR SELECT meter_600 , meter_100 FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT meter_600 , meter_100 FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT meter_600 , meter_100 FROM swimmer'}",
        "record_name": "2923",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Visualize a bar chart about the distribution of meter_600 and meter_100 .",
        "question_toks": [
            "Visualize",
            "a",
            "bar",
            "chart",
            "about",
            "the",
            "distribution",
            "of",
            "meter_600",
            "and",
            "meter_100",
            "."
        ],
        "query": "Visualize BAR SELECT meter_600 , meter_100 FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "meter_600",
            ",",
            "meter_100",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]",
        "choose_schema_rat_link": "swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_400@SEP@swimmer.meter_500@SEP@swimmer.meter_600@SEP@swimmer.meter_700"
    },
    {
        "nl_queries": "Return a bar chart about the distribution of All_Games and School_ID .",
        "VQL": "Visualize BAR SELECT All_Games , School_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT All_Games , School_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT All_Games , School_ID FROM basketball_match'}",
        "record_name": "3115",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Return a bar chart about the distribution of All_Games and School_ID .",
        "question_toks": [
            "Return",
            "a",
            "bar",
            "chart",
            "about",
            "the",
            "distribution",
            "of",
            "All_Games",
            "and",
            "School_ID",
            "."
        ],
        "query": "Visualize BAR SELECT All_Games , School_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "All_Games",
            ",",
            "School_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "university.school@SEP@basketball_match.school_id@SEP@university.school_id"
    },
    {
        "nl_queries": "Draw a pie chart about the proportion of team name and School_ID .",
        "VQL": "Visualize PIE SELECT Team_Name , School_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT Team_Name , School_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT Team_Name , School_ID FROM basketball_match'}",
        "record_name": "3147",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Draw a pie chart about the proportion of team name and School_ID .",
        "question_toks": [
            "Draw",
            "a",
            "pie",
            "chart",
            "about",
            "the",
            "proportion",
            "of",
            "team",
            "name",
            "and",
            "School_ID",
            "."
        ],
        "query": "Visualize PIE SELECT Team_Name , School_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "Team_Name",
            ",",
            "School_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "basketball_match.team_name@SEP@basketball_match.team_id@SEP@university.school@SEP@basketball_match.school_id@SEP@university.school_id"
    },
    {
        "nl_queries": "A bar chart about what is the age and hometown of every teacher ?",
        "VQL": "Visualize BAR SELECT Hometown , Age FROM teacher",
        "db_id": "course_teach",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Hometown , Age FROM teacher', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Hometown , Age FROM teacher'}",
        "record_name": "711",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "A bar chart about what is the age and hometown of every teacher ?",
        "question_toks": [
            "A",
            "bar",
            "chart",
            "about",
            "what",
            "is",
            "the",
            "age",
            "and",
            "hometown",
            "of",
            "every",
            "teacher",
            "?"
        ],
        "query": "Visualize BAR SELECT Hometown , Age FROM teacher",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Hometown",
            ",",
            "Age",
            "FROM",
            "teacher"
        ],
        "choose_schema": "Table teacher, columns = [*,Teacher_ID, Name, Age, Hometown]",
        "choose_schema_rat_link": "teacher.age@SEP@teacher.hometown@SEP@teacher.teacher_id@SEP@course_arrange.teacher_id"
    },
    {
        "nl_queries": "Give me a pie chart to reflect the proportion of All_Games and School_ID .",
        "VQL": "Visualize PIE SELECT All_Games , School_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT All_Games , School_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT All_Games , School_ID FROM basketball_match'}",
        "record_name": "3151",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Give me a pie chart to reflect the proportion of All_Games and School_ID .",
        "question_toks": [
            "Give",
            "me",
            "a",
            "pie",
            "chart",
            "to",
            "reflect",
            "the",
            "proportion",
            "of",
            "All_Games",
            "and",
            "School_ID",
            "."
        ],
        "query": "Visualize PIE SELECT All_Games , School_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "All_Games",
            ",",
            "School_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "university.school@SEP@basketball_match.school_id@SEP@university.school_id"
    },
    {
        "nl_queries": "Give me a pie to show acc_percent from different all neutral .",
        "VQL": "Visualize PIE SELECT All_Neutral , ACC_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT All_Neutral , ACC_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT All_Neutral , ACC_Percent FROM basketball_match'}",
        "record_name": "3156",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Give me a pie to show acc_percent from different all neutral .",
        "question_toks": [
            "Give",
            "me",
            "a",
            "pie",
            "to",
            "show",
            "acc_percent",
            "from",
            "different",
            "all",
            "neutral",
            "."
        ],
        "query": "Visualize PIE SELECT All_Neutral , ACC_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "All_Neutral",
            ",",
            "ACC_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.all_neutral@SEP@basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "List each charge type and its amount . Show the proportion .",
        "VQL": "Visualize PIE SELECT charge_type , charge_amount FROM Charges",
        "db_id": "dog_kennels",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT charge_type , charge_amount FROM Charges', 'binning': ''}, 'VQL': 'Visualize PIE SELECT charge_type , charge_amount FROM Charges'}",
        "record_name": "1173",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "List each charge type and its amount . Show the proportion .",
        "question_toks": [
            "List",
            "each",
            "charge",
            "type",
            "and",
            "its",
            "amount",
            ".",
            "Show",
            "the",
            "proportion",
            "."
        ],
        "query": "Visualize PIE SELECT charge_type , charge_amount FROM Charges",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "charge_type",
            ",",
            "charge_amount",
            "FROM",
            "Charges"
        ],
        "choose_schema": "Table Charges, columns = [*,charge_id, charge_type, charge_amount]",
        "choose_schema_rat_link": "charges.charge_type@SEP@charges.charge_id@SEP@charges.charge_amount"
    },
    {
        "nl_queries": "A line chart shows the trend of Employee_ID over Start_from .",
        "VQL": "Visualize LINE SELECT Start_from , Employee_ID FROM hiring",
        "db_id": "employee_hire_evaluation",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize LINE', 'data_part': {'sql_part': 'SELECT Start_from , Employee_ID FROM hiring', 'binning': ''}, 'VQL': 'Visualize LINE SELECT Start_from , Employee_ID FROM hiring'}",
        "record_name": "1339",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 2
        },
        "question": "A line chart shows the trend of Employee_ID over Start_from .",
        "question_toks": [
            "A",
            "line",
            "chart",
            "shows",
            "the",
            "trend",
            "of",
            "Employee_ID",
            "over",
            "Start_from",
            "."
        ],
        "query": "Visualize LINE SELECT Start_from , Employee_ID FROM hiring",
        "query_toks": [
            "Visualize",
            "LINE",
            "SELECT",
            "Start_from",
            ",",
            "Employee_ID",
            "FROM",
            "hiring"
        ],
        "choose_schema": "Table employee, columns = [*,Employee_ID, Name, Age, City]@SEP@Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]@SEP@Table evaluation, columns = [*,Employee_ID, Year_awarded, Bonus]",
        "choose_schema_rat_link": "employee.employee_id@SEP@hiring.employee_id@SEP@evaluation.employee_id@SEP@hiring.start_from"
    },
    {
        "nl_queries": "Create a bar chart showing school_id across all neutral",
        "VQL": "Visualize BAR SELECT All_Neutral , School_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT All_Neutral , School_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT All_Neutral , School_ID FROM basketball_match'}",
        "record_name": "3119",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Create a bar chart showing school_id across all neutral",
        "question_toks": [
            "Create",
            "a",
            "bar",
            "chart",
            "showing",
            "school_id",
            "across",
            "all",
            "neutral"
        ],
        "query": "Visualize BAR SELECT All_Neutral , School_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "All_Neutral",
            ",",
            "School_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "basketball_match.all_neutral@SEP@university.school@SEP@basketball_match.school_id@SEP@university.school_id"
    },
    {
        "nl_queries": "Show me about the correlation between People_ID and Snatch in a scatter chart .",
        "VQL": "Visualize SCATTER SELECT People_ID , Snatch FROM body_builder",
        "db_id": "body_builder",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT People_ID , Snatch FROM body_builder', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT People_ID , Snatch FROM body_builder'}",
        "record_name": "357",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Show me about the correlation between People_ID and Snatch in a scatter chart .",
        "question_toks": [
            "Show",
            "me",
            "about",
            "the",
            "correlation",
            "between",
            "People_ID",
            "and",
            "Snatch",
            "in",
            "a",
            "scatter",
            "chart",
            "."
        ],
        "query": "Visualize SCATTER SELECT People_ID , Snatch FROM body_builder",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "People_ID",
            ",",
            "Snatch",
            "FROM",
            "body_builder"
        ],
        "choose_schema": "Table body_builder, columns = [*,Body_Builder_ID, People_ID, Snatch, Clean_Jerk, Total]@SEP@Table people, columns = [*,People_ID, Name, Height, Weight, Birth_Date, Birth_Place]",
        "choose_schema_rat_link": "body_builder.people_id@SEP@people.people_id@SEP@body_builder.snatch"
    },
    {
        "nl_queries": "Find meter_400 and meter_100 , and visualize them by a bar chart .",
        "VQL": "Visualize BAR SELECT meter_400 , meter_100 FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT meter_400 , meter_100 FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT meter_400 , meter_100 FROM swimmer'}",
        "record_name": "2919",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Find meter_400 and meter_100 , and visualize them by a bar chart .",
        "question_toks": [
            "Find",
            "meter_400",
            "and",
            "meter_100",
            ",",
            "and",
            "visualize",
            "them",
            "by",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT meter_400 , meter_100 FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "meter_400",
            ",",
            "meter_100",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]",
        "choose_schema_rat_link": "swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_400@SEP@swimmer.meter_500@SEP@swimmer.meter_600@SEP@swimmer.meter_700"
    },
    {
        "nl_queries": "Visualize a scatter chart on how many different products correspond to each order id ?",
        "VQL": "Visualize SCATTER SELECT order_id , count(DISTINCT product_id) FROM Order_items",
        "db_id": "customers_and_invoices",
        "hardness": "Medium",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT order_id , count(DISTINCT product_id) FROM Order_items', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT order_id , count(DISTINCT product_id) FROM Order_items'}",
        "record_name": "962",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        7
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                44,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                45,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Visualize a scatter chart on how many different products correspond to each order id ?",
        "question_toks": [
            "Visualize",
            "a",
            "scatter",
            "chart",
            "on",
            "how",
            "many",
            "different",
            "products",
            "correspond",
            "to",
            "each",
            "order",
            "id",
            "?"
        ],
        "query": "Visualize SCATTER SELECT order_id , count(DISTINCT product_id) FROM Order_items",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "order_id",
            ",",
            "count",
            "(",
            "DISTINCT",
            "product_id",
            ")",
            "FROM",
            "Order_items"
        ],
        "choose_schema": "Table Orders, columns = [*,order_id, customer_id, date_order_placed, order_details]@SEP@Table Invoices, columns = [*,invoice_number, order_id, invoice_date]@SEP@Table Order_Items, columns = [*,order_item_id, order_id, product_id, product_quantity, other_order_item_details]",
        "choose_schema_rat_link": "orders.order_id@SEP@invoices.order_id@SEP@order_items.order_id@SEP@product_categories.product_type_description@SEP@products.product_id@SEP@products.product_name@SEP@products.product_color@SEP@products.product_size@SEP@order_items.product_id@SEP@order_items.product_quantity@SEP@invoice_line_items.product_id@SEP@invoice_line_items.product_title@SEP@invoice_line_items.product_quantity@SEP@invoice_line_items.product_price@SEP@orders.order_details@SEP@order_items.order_item_id@SEP@invoice_line_items.order_item_id"
    },
    {
        "nl_queries": "Draw a scatter chart for what are the low and high estimates of film markets ?",
        "VQL": "Visualize SCATTER SELECT Low_Estimate , High_Estimate FROM film_market_estimation",
        "db_id": "film_rank",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Low_Estimate , High_Estimate FROM film_market_estimation', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Low_Estimate , High_Estimate FROM film_market_estimation'}",
        "record_name": "1398",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Draw a scatter chart for what are the low and high estimates of film markets ?",
        "question_toks": [
            "Draw",
            "a",
            "scatter",
            "chart",
            "for",
            "what",
            "are",
            "the",
            "low",
            "and",
            "high",
            "estimates",
            "of",
            "film",
            "markets",
            "?"
        ],
        "query": "Visualize SCATTER SELECT Low_Estimate , High_Estimate FROM film_market_estimation",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Low_Estimate",
            ",",
            "High_Estimate",
            "FROM",
            "film_market_estimation"
        ],
        "choose_schema": "Table film_market_estimation, columns = [*,Estimation_ID, Low_Estimate, High_Estimate, Film_ID, Type, Market_ID, Year]",
        "choose_schema_rat_link": "film_market_estimation.high_estimate@SEP@film_market_estimation.low_estimate@SEP@film.film_id@SEP@film_market_estimation.film_id@SEP@market.market_id@SEP@film_market_estimation.market_id"
    },
    {
        "nl_queries": "Create a pie chart showing school_id across all neutral .",
        "VQL": "Visualize PIE SELECT All_Neutral , School_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT All_Neutral , School_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT All_Neutral , School_ID FROM basketball_match'}",
        "record_name": "3155",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Create a pie chart showing school_id across all neutral .",
        "question_toks": [
            "Create",
            "a",
            "pie",
            "chart",
            "showing",
            "school_id",
            "across",
            "all",
            "neutral",
            "."
        ],
        "query": "Visualize PIE SELECT All_Neutral , School_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "All_Neutral",
            ",",
            "School_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "basketball_match.all_neutral@SEP@university.school@SEP@basketball_match.school_id@SEP@university.school_id"
    },
    {
        "nl_queries": "Create a bar chart showing age across hometown",
        "VQL": "Visualize BAR SELECT Hometown , Age FROM teacher",
        "db_id": "course_teach",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Hometown , Age FROM teacher', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Hometown , Age FROM teacher'}",
        "record_name": "711",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Create a bar chart showing age across hometown",
        "question_toks": [
            "Create",
            "a",
            "bar",
            "chart",
            "showing",
            "age",
            "across",
            "hometown"
        ],
        "query": "Visualize BAR SELECT Hometown , Age FROM teacher",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Hometown",
            ",",
            "Age",
            "FROM",
            "teacher"
        ],
        "choose_schema": "Table teacher, columns = [*,Teacher_ID, Name, Age, Hometown]",
        "choose_schema_rat_link": "teacher.age@SEP@teacher.hometown"
    },
    {
        "nl_queries": "Visualize the relationship between ID and meter_100 .",
        "VQL": "Visualize SCATTER SELECT ID , meter_100 FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT ID , meter_100 FROM swimmer', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT ID , meter_100 FROM swimmer'}",
        "record_name": "2905",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Visualize the relationship between ID and meter_100 .",
        "question_toks": [
            "Visualize",
            "the",
            "relationship",
            "between",
            "ID",
            "and",
            "meter_100",
            "."
        ],
        "query": "Visualize SCATTER SELECT ID , meter_100 FROM swimmer",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "ID",
            ",",
            "meter_100",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]@SEP@Table stadium, columns = [*,ID, name, Capacity, City, Country, Opening_year]@SEP@Table event, columns = [*,ID, Name, Stadium_ID, Year]@SEP@Table record, columns = [*,ID, Result, Swimmer_ID, Event_ID]",
        "choose_schema_rat_link": "swimmer.id@SEP@stadium.id@SEP@event.id@SEP@record.id@SEP@swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_400@SEP@swimmer.meter_500@SEP@swimmer.meter_600@SEP@swimmer.meter_700"
    },
    {
        "nl_queries": "Show me about the distribution of All_Neutral and ACC_Percent in a bar chart .",
        "VQL": "Visualize BAR SELECT All_Neutral , ACC_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT All_Neutral , ACC_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT All_Neutral , ACC_Percent FROM basketball_match'}",
        "record_name": "3144",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Show me about the distribution of All_Neutral and ACC_Percent in a bar chart .",
        "question_toks": [
            "Show",
            "me",
            "about",
            "the",
            "distribution",
            "of",
            "All_Neutral",
            "and",
            "ACC_Percent",
            "in",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT All_Neutral , ACC_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "All_Neutral",
            ",",
            "ACC_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Show me a scatter plot of id and meter_100 for .",
        "VQL": "Visualize SCATTER SELECT ID , meter_100 FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT ID , meter_100 FROM swimmer', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT ID , meter_100 FROM swimmer'}",
        "record_name": "2905",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Show me a scatter plot of id and meter_100 for .",
        "question_toks": [
            "Show",
            "me",
            "a",
            "scatter",
            "plot",
            "of",
            "id",
            "and",
            "meter_100",
            "for",
            "."
        ],
        "query": "Visualize SCATTER SELECT ID , meter_100 FROM swimmer",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "ID",
            ",",
            "meter_100",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]@SEP@Table stadium, columns = [*,ID, name, Capacity, City, Country, Opening_year]@SEP@Table event, columns = [*,ID, Name, Stadium_ID, Year]@SEP@Table record, columns = [*,ID, Result, Swimmer_ID, Event_ID]",
        "choose_schema_rat_link": "swimmer.id@SEP@stadium.id@SEP@event.id@SEP@record.id@SEP@swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_400@SEP@swimmer.meter_500@SEP@swimmer.meter_600@SEP@swimmer.meter_700"
    },
    {
        "nl_queries": "Show order ids and the number of products in each order . Plot them as scatter chart .",
        "VQL": "Visualize SCATTER SELECT order_id , count(DISTINCT product_id) FROM Order_items",
        "db_id": "customers_and_invoices",
        "hardness": "Medium",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT order_id , count(DISTINCT product_id) FROM Order_items', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT order_id , count(DISTINCT product_id) FROM Order_items'}",
        "record_name": "962",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        7
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                44,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                45,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Show order ids and the number of products in each order . Plot them as scatter chart .",
        "question_toks": [
            "Show",
            "order",
            "ids",
            "and",
            "the",
            "number",
            "of",
            "products",
            "in",
            "each",
            "order",
            ".",
            "Plot",
            "them",
            "as",
            "scatter",
            "chart",
            "."
        ],
        "query": "Visualize SCATTER SELECT order_id , count(DISTINCT product_id) FROM Order_items",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "order_id",
            ",",
            "count",
            "(",
            "DISTINCT",
            "product_id",
            ")",
            "FROM",
            "Order_items"
        ],
        "choose_schema": "Table Orders, columns = [*,order_id, customer_id, date_order_placed, order_details]@SEP@Table Invoices, columns = [*,invoice_number, order_id, invoice_date]@SEP@Table Order_Items, columns = [*,order_item_id, order_id, product_id, product_quantity, other_order_item_details]",
        "choose_schema_rat_link": "orders.order_id@SEP@invoices.order_id@SEP@order_items.order_id@SEP@orders.order_details@SEP@order_items.order_item_id@SEP@invoice_line_items.order_item_id@SEP@product_categories.product_type_description@SEP@products.product_id@SEP@products.product_name@SEP@products.product_color@SEP@products.product_size@SEP@order_items.product_id@SEP@order_items.product_quantity@SEP@invoice_line_items.product_id@SEP@invoice_line_items.product_title@SEP@invoice_line_items.product_quantity@SEP@invoice_line_items.product_price"
    },
    {
        "nl_queries": "Plot a scatter chart , clean jerk by total .",
        "VQL": "Visualize SCATTER SELECT Clean_Jerk , Total FROM body_builder",
        "db_id": "body_builder",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Clean_Jerk , Total FROM body_builder', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Clean_Jerk , Total FROM body_builder'}",
        "record_name": "353",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Plot a scatter chart , clean jerk by total .",
        "question_toks": [
            "Plot",
            "a",
            "scatter",
            "chart",
            ",",
            "clean",
            "jerk",
            "by",
            "total",
            "."
        ],
        "query": "Visualize SCATTER SELECT Clean_Jerk , Total FROM body_builder",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Clean_Jerk",
            ",",
            "Total",
            "FROM",
            "body_builder"
        ],
        "choose_schema": "Table body_builder, columns = [*,Body_Builder_ID, People_ID, Snatch, Clean_Jerk, Total]",
        "choose_schema_rat_link": "body_builder.clean_jerk@SEP@body_builder.total"
    },
    {
        "nl_queries": "A scatter showing the correlation between support and oppose rates for each candidate .",
        "VQL": "Visualize SCATTER SELECT Support_rate , Oppose_rate FROM candidate",
        "db_id": "candidate_poll",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Support_rate , Oppose_rate FROM candidate', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Support_rate , Oppose_rate FROM candidate'}",
        "record_name": "401",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "A scatter showing the correlation between support and oppose rates for each candidate .",
        "question_toks": [
            "A",
            "scatter",
            "showing",
            "the",
            "correlation",
            "between",
            "support",
            "and",
            "oppose",
            "rates",
            "for",
            "each",
            "candidate",
            "."
        ],
        "query": "Visualize SCATTER SELECT Support_rate , Oppose_rate FROM candidate",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Support_rate",
            ",",
            "Oppose_rate",
            "FROM",
            "candidate"
        ],
        "choose_schema": "Table candidate, columns = [*,Candidate_ID, People_ID, Poll_Source, Date, Support_rate, Consider_rate, Oppose_rate, Unsure_rate]",
        "choose_schema_rat_link": "candidate.oppose_rate@SEP@candidate.support_rate@SEP@candidate.candidate_id"
    },
    {
        "nl_queries": "Give me the comparison about meter_100 over the meter_700 .",
        "VQL": "Visualize BAR SELECT meter_700 , meter_100 FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT meter_700 , meter_100 FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT meter_700 , meter_100 FROM swimmer'}",
        "record_name": "2925",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Give me the comparison about meter_100 over the meter_700 .",
        "question_toks": [
            "Give",
            "me",
            "the",
            "comparison",
            "about",
            "meter_100",
            "over",
            "the",
            "meter_700",
            "."
        ],
        "query": "Visualize BAR SELECT meter_700 , meter_100 FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "meter_700",
            ",",
            "meter_100",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]",
        "choose_schema_rat_link": "swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_400@SEP@swimmer.meter_500@SEP@swimmer.meter_600@SEP@swimmer.meter_700"
    },
    {
        "nl_queries": "How much does each charge type costs ? List both charge type and amount . Show a pie chart .",
        "VQL": "Visualize PIE SELECT charge_type , charge_amount FROM Charges",
        "db_id": "dog_kennels",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT charge_type , charge_amount FROM Charges', 'binning': ''}, 'VQL': 'Visualize PIE SELECT charge_type , charge_amount FROM Charges'}",
        "record_name": "1173",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "How much does each charge type costs ? List both charge type and amount . Show a pie chart .",
        "question_toks": [
            "How",
            "much",
            "does",
            "each",
            "charge",
            "type",
            "costs",
            "?",
            "List",
            "both",
            "charge",
            "type",
            "and",
            "amount",
            ".",
            "Show",
            "a",
            "pie",
            "chart",
            "."
        ],
        "query": "Visualize PIE SELECT charge_type , charge_amount FROM Charges",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "charge_type",
            ",",
            "charge_amount",
            "FROM",
            "Charges"
        ],
        "choose_schema": "Table Charges, columns = [*,charge_id, charge_type, charge_amount]",
        "choose_schema_rat_link": "charges.charge_type@SEP@charges.charge_id@SEP@charges.charge_amount@SEP@treatments.cost_of_treatment"
    },
    {
        "nl_queries": "Show me about the distribution of Team_Name and School_ID in a bar chart .",
        "VQL": "Visualize BAR SELECT Team_Name , School_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Team_Name , School_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Team_Name , School_ID FROM basketball_match'}",
        "record_name": "3111",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Show me about the distribution of Team_Name and School_ID in a bar chart .",
        "question_toks": [
            "Show",
            "me",
            "about",
            "the",
            "distribution",
            "of",
            "Team_Name",
            "and",
            "School_ID",
            "in",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT Team_Name , School_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Team_Name",
            ",",
            "School_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name@SEP@university.school@SEP@basketball_match.school_id@SEP@university.school_id"
    },
    {
        "nl_queries": "Return a scatter chart about the correlation between Snatch and Clean_Jerk .",
        "VQL": "Visualize SCATTER SELECT Snatch , Clean_Jerk FROM body_builder",
        "db_id": "body_builder",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Snatch , Clean_Jerk FROM body_builder', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Snatch , Clean_Jerk FROM body_builder'}",
        "record_name": "356",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Return a scatter chart about the correlation between Snatch and Clean_Jerk .",
        "question_toks": [
            "Return",
            "a",
            "scatter",
            "chart",
            "about",
            "the",
            "correlation",
            "between",
            "Snatch",
            "and",
            "Clean_Jerk",
            "."
        ],
        "query": "Visualize SCATTER SELECT Snatch , Clean_Jerk FROM body_builder",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Snatch",
            ",",
            "Clean_Jerk",
            "FROM",
            "body_builder"
        ],
        "choose_schema": "Table body_builder, columns = [*,Body_Builder_ID, People_ID, Snatch, Clean_Jerk, Total]",
        "choose_schema_rat_link": "body_builder.snatch@SEP@body_builder.clean_jerk"
    },
    {
        "nl_queries": "Visualize a pie chart about the proportion of All_Neutral and All_Games_Percent .",
        "VQL": "Visualize PIE SELECT All_Neutral , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT All_Neutral , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT All_Neutral , All_Games_Percent FROM basketball_match'}",
        "record_name": "3145",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Visualize a pie chart about the proportion of All_Neutral and All_Games_Percent .",
        "question_toks": [
            "Visualize",
            "a",
            "pie",
            "chart",
            "about",
            "the",
            "proportion",
            "of",
            "All_Neutral",
            "and",
            "All_Games_Percent",
            "."
        ],
        "query": "Visualize PIE SELECT All_Neutral , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "All_Neutral",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]"
    },
    {
        "nl_queries": "Show me about the proportion of All_Games_Percent and All_Games_Percent in a pie chart .",
        "VQL": "Visualize PIE SELECT Team_Name , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT Team_Name , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT Team_Name , All_Games_Percent FROM basketball_match'}",
        "record_name": "3133",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Show me about the proportion of All_Games_Percent and All_Games_Percent in a pie chart .",
        "question_toks": [
            "Show",
            "me",
            "about",
            "the",
            "proportion",
            "of",
            "All_Games_Percent",
            "and",
            "All_Games_Percent",
            "in",
            "a",
            "pie",
            "chart",
            "."
        ],
        "query": "Visualize PIE SELECT Team_Name , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "Team_Name",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]"
    },
    {
        "nl_queries": "Find meter_300 and ID , and visualize them by a bar chart .",
        "VQL": "Visualize BAR SELECT meter_300 , ID FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT meter_300 , ID FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT meter_300 , ID FROM swimmer'}",
        "record_name": "2916",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Find meter_300 and ID , and visualize them by a bar chart .",
        "question_toks": [
            "Find",
            "meter_300",
            "and",
            "ID",
            ",",
            "and",
            "visualize",
            "them",
            "by",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT meter_300 , ID FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "meter_300",
            ",",
            "ID",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]@SEP@Table stadium, columns = [*,ID, name, Capacity, City, Country, Opening_year]@SEP@Table event, columns = [*,ID, Name, Stadium_ID, Year]@SEP@Table record, columns = [*,ID, Result, Swimmer_ID, Event_ID]",
        "choose_schema_rat_link": "swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_400@SEP@swimmer.meter_500@SEP@swimmer.meter_600@SEP@swimmer.meter_700@SEP@swimmer.id@SEP@stadium.id@SEP@event.id@SEP@record.id"
    },
    {
        "nl_queries": "Draw a scatter chart about the correlation between Body_Builder_ID and Snatch .",
        "VQL": "Visualize SCATTER SELECT Body_Builder_ID , Snatch FROM body_builder",
        "db_id": "body_builder",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Body_Builder_ID , Snatch FROM body_builder', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Body_Builder_ID , Snatch FROM body_builder'}",
        "record_name": "355",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Draw a scatter chart about the correlation between Body_Builder_ID and Snatch .",
        "question_toks": [
            "Draw",
            "a",
            "scatter",
            "chart",
            "about",
            "the",
            "correlation",
            "between",
            "Body_Builder_ID",
            "and",
            "Snatch",
            "."
        ],
        "query": "Visualize SCATTER SELECT Body_Builder_ID , Snatch FROM body_builder",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Body_Builder_ID",
            ",",
            "Snatch",
            "FROM",
            "body_builder"
        ],
        "choose_schema": "Table body_builder, columns = [*,Body_Builder_ID, People_ID, Snatch, Clean_Jerk, Total]",
        "choose_schema_rat_link": "body_builder.body_builder_id@SEP@body_builder.snatch"
    },
    {
        "nl_queries": "Visualize a bar chart about the distribution of All_Road and School_ID .",
        "VQL": "Visualize BAR SELECT All_Road , School_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT All_Road , School_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT All_Road , School_ID FROM basketball_match'}",
        "record_name": "3117",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Visualize a bar chart about the distribution of All_Road and School_ID .",
        "question_toks": [
            "Visualize",
            "a",
            "bar",
            "chart",
            "about",
            "the",
            "distribution",
            "of",
            "All_Road",
            "and",
            "School_ID",
            "."
        ],
        "query": "Visualize BAR SELECT All_Road , School_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "All_Road",
            ",",
            "School_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "university.school@SEP@basketball_match.school_id@SEP@university.school_id"
    },
    {
        "nl_queries": "Show me a scatter plot of account id and account_name for .",
        "VQL": "Visualize SCATTER SELECT account_id , account_name FROM Accounts",
        "db_id": "customers_and_invoices",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT account_id , account_name FROM Accounts', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT account_id , account_name FROM Accounts'}",
        "record_name": "956",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                23,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Show me a scatter plot of account id and account_name for .",
        "question_toks": [
            "Show",
            "me",
            "a",
            "scatter",
            "plot",
            "of",
            "account",
            "id",
            "and",
            "account_name",
            "for",
            "."
        ],
        "query": "Visualize SCATTER SELECT account_id , account_name FROM Accounts",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "account_id",
            ",",
            "account_name",
            "FROM",
            "Accounts"
        ],
        "choose_schema": "Table Accounts, columns = [*,account_id, customer_id, date_account_opened, account_name, other_account_details]@SEP@Table Financial_Transactions, columns = [*,transaction_id, account_id, invoice_number, transaction_type, transaction_date, transaction_amount, transaction_comment, other_transaction_details]",
        "choose_schema_rat_link": "accounts.account_id@SEP@financial_transactions.account_id@SEP@accounts.account_name"
    },
    {
        "nl_queries": "Show the county name and population of all counties . Show the proportion .",
        "VQL": "Visualize PIE SELECT County_name , Population FROM county",
        "db_id": "election",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT County_name , Population FROM county', 'binning': ''}, 'VQL': 'Visualize PIE SELECT County_name , Population FROM county'}",
        "record_name": "1303",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Show the county name and population of all counties . Show the proportion .",
        "question_toks": [
            "Show",
            "the",
            "county",
            "name",
            "and",
            "population",
            "of",
            "all",
            "counties",
            ".",
            "Show",
            "the",
            "proportion",
            "."
        ],
        "query": "Visualize PIE SELECT County_name , Population FROM county",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "County_name",
            ",",
            "Population",
            "FROM",
            "county"
        ],
        "choose_schema": "Table county, columns = [*,County_Id, County_name, Population, Zip_code]",
        "choose_schema_rat_link": "county.county_name@SEP@county.county_id@SEP@election.counties_represented@SEP@county.population"
    },
    {
        "nl_queries": "Find the ids and names of stations from which at least 200 trips started .",
        "VQL": "Visualize BAR SELECT start_station_name , start_station_id FROM trip",
        "db_id": "bike_1",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT start_station_name , start_station_id FROM trip', 'binning': ''}, 'VQL': 'Visualize BAR SELECT start_station_name , start_station_id FROM trip'}",
        "record_name": "310",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Find the ids and names of stations from which at least 200 trips started .",
        "question_toks": [
            "Find",
            "the",
            "ids",
            "and",
            "names",
            "of",
            "stations",
            "from",
            "which",
            "at",
            "least",
            "200",
            "trips",
            "started",
            "."
        ],
        "query": "Visualize BAR SELECT start_station_name , start_station_id FROM trip",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "start_station_name",
            ",",
            "start_station_id",
            "FROM",
            "trip"
        ],
        "choose_schema": "Table trip, columns = [*,id, duration, start_date, start_station_name, start_station_id, end_date, end_station_name, end_station_id, bike_id, subscription_type, zip_code]",
        "choose_schema_rat_link": "station.id@SEP@trip.id@SEP@station.name@SEP@status.station_id@SEP@trip.start_date@SEP@trip.start_station_name@SEP@trip.start_station_id"
    },
    {
        "nl_queries": "What is the relationship between account id and name for all accounts ? Return a scatter chart .",
        "VQL": "Visualize SCATTER SELECT account_id , account_name FROM Accounts",
        "db_id": "customers_and_invoices",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT account_id , account_name FROM Accounts', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT account_id , account_name FROM Accounts'}",
        "record_name": "956",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                23,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "What is the relationship between account id and name for all accounts ? Return a scatter chart .",
        "question_toks": [
            "What",
            "is",
            "the",
            "relationship",
            "between",
            "account",
            "id",
            "and",
            "name",
            "for",
            "all",
            "accounts",
            "?",
            "Return",
            "a",
            "scatter",
            "chart",
            "."
        ],
        "query": "Visualize SCATTER SELECT account_id , account_name FROM Accounts",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "account_id",
            ",",
            "account_name",
            "FROM",
            "Accounts"
        ],
        "choose_schema": "Table Accounts, columns = [*,account_id, customer_id, date_account_opened, account_name, other_account_details]@SEP@Table Financial_Transactions, columns = [*,transaction_id, account_id, invoice_number, transaction_type, transaction_date, transaction_amount, transaction_comment, other_transaction_details]",
        "choose_schema_rat_link": "accounts.account_id@SEP@financial_transactions.account_id@SEP@accounts.account_name"
    },
    {
        "nl_queries": "Return the apartment number and the number of rooms for each apartment .",
        "VQL": "Visualize BAR SELECT apt_number , room_count FROM Apartments",
        "db_id": "apartment_rentals",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT apt_number , room_count FROM Apartments', 'binning': ''}, 'VQL': 'Visualize BAR SELECT apt_number , room_count FROM Apartments'}",
        "record_name": "97",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Return the apartment number and the number of rooms for each apartment .",
        "question_toks": [
            "Return",
            "the",
            "apartment",
            "number",
            "and",
            "the",
            "number",
            "of",
            "rooms",
            "for",
            "each",
            "apartment",
            "."
        ],
        "query": "Visualize BAR SELECT apt_number , room_count FROM Apartments",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "apt_number",
            ",",
            "room_count",
            "FROM",
            "Apartments"
        ],
        "choose_schema": "Table Apartments, columns = [*,apt_id, building_id, apt_type_code, apt_number, bathroom_count, bedroom_count, room_count]",
        "choose_schema_rat_link": "apartments.apt_number@SEP@apartments.apt_id@SEP@apartments.apt_type_code@SEP@apartment_facilities.apt_id@SEP@apartment_bookings.apt_booking_id@SEP@apartment_bookings.apt_id@SEP@view_unit_status.apt_id@SEP@view_unit_status.apt_booking_id@SEP@apartments.room_count"
    },
    {
        "nl_queries": "Scatter plot to show body builder id on x axis and snatch on y axis .",
        "VQL": "Visualize SCATTER SELECT Body_Builder_ID , Snatch FROM body_builder",
        "db_id": "body_builder",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Body_Builder_ID , Snatch FROM body_builder', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Body_Builder_ID , Snatch FROM body_builder'}",
        "record_name": "355",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Scatter plot to show body builder id on x axis and snatch on y axis .",
        "question_toks": [
            "Scatter",
            "plot",
            "to",
            "show",
            "body",
            "builder",
            "id",
            "on",
            "x",
            "axis",
            "and",
            "snatch",
            "on",
            "y",
            "axis",
            "."
        ],
        "query": "Visualize SCATTER SELECT Body_Builder_ID , Snatch FROM body_builder",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Body_Builder_ID",
            ",",
            "Snatch",
            "FROM",
            "body_builder"
        ],
        "choose_schema": "Table body_builder, columns = [*,Body_Builder_ID, People_ID, Snatch, Clean_Jerk, Total]",
        "choose_schema_rat_link": "body_builder.body_builder_id@SEP@body_builder.snatch"
    },
    {
        "nl_queries": "For the attribute All_Road and Team_ID , show their proportion by a pie chart .",
        "VQL": "Visualize PIE SELECT All_Road , Team_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT All_Road , Team_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT All_Road , Team_ID FROM basketball_match'}",
        "record_name": "3129",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "For the attribute All_Road and Team_ID , show their proportion by a pie chart .",
        "question_toks": [
            "For",
            "the",
            "attribute",
            "All_Road",
            "and",
            "Team_ID",
            ",",
            "show",
            "their",
            "proportion",
            "by",
            "a",
            "pie",
            "chart",
            "."
        ],
        "query": "Visualize PIE SELECT All_Road , Team_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "All_Road",
            ",",
            "Team_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name"
    },
    {
        "nl_queries": "Return a scatter chart about the correlation between Body_Builder_ID and Clean_Jerk .",
        "VQL": "Visualize SCATTER SELECT Body_Builder_ID , Clean_Jerk FROM body_builder",
        "db_id": "body_builder",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Body_Builder_ID , Clean_Jerk FROM body_builder', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Body_Builder_ID , Clean_Jerk FROM body_builder'}",
        "record_name": "360",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Return a scatter chart about the correlation between Body_Builder_ID and Clean_Jerk .",
        "question_toks": [
            "Return",
            "a",
            "scatter",
            "chart",
            "about",
            "the",
            "correlation",
            "between",
            "Body_Builder_ID",
            "and",
            "Clean_Jerk",
            "."
        ],
        "query": "Visualize SCATTER SELECT Body_Builder_ID , Clean_Jerk FROM body_builder",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Body_Builder_ID",
            ",",
            "Clean_Jerk",
            "FROM",
            "body_builder"
        ],
        "choose_schema": "Table body_builder, columns = [*,Body_Builder_ID, People_ID, Snatch, Clean_Jerk, Total]",
        "choose_schema_rat_link": "body_builder.body_builder_id@SEP@body_builder.clean_jerk"
    },
    {
        "nl_queries": "what is the maximum accelerate for all the different cylinders ?",
        "VQL": "Visualize SCATTER SELECT max(Accelerate) , Cylinders FROM CARS_DATA",
        "db_id": "car_1",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT max(Accelerate) , Cylinders FROM CARS_DATA', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT max(Accelerate) , Cylinders FROM CARS_DATA'}",
        "record_name": "432",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "what is the maximum accelerate for all the different cylinders ?",
        "question_toks": [
            "what",
            "is",
            "the",
            "maximum",
            "accelerate",
            "for",
            "all",
            "the",
            "different",
            "cylinders",
            "?"
        ],
        "query": "Visualize SCATTER SELECT max(Accelerate) , Cylinders FROM CARS_DATA",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "max",
            "(",
            "Accelerate",
            ")",
            ",",
            "Cylinders",
            "FROM",
            "CARS_DATA"
        ],
        "choose_schema": "Table cars_data, columns = [*,Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year]",
        "choose_schema_rat_link": "cars_data.accelerate@SEP@cars_data.cylinders"
    },
    {
        "nl_queries": "Draw a pie chart about the proportion of Team_Name and All_Games_Percent .",
        "VQL": "Visualize PIE SELECT Team_Name , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT Team_Name , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT Team_Name , All_Games_Percent FROM basketball_match'}",
        "record_name": "3133",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Draw a pie chart about the proportion of Team_Name and All_Games_Percent .",
        "question_toks": [
            "Draw",
            "a",
            "pie",
            "chart",
            "about",
            "the",
            "proportion",
            "of",
            "Team_Name",
            "and",
            "All_Games_Percent",
            "."
        ],
        "query": "Visualize PIE SELECT Team_Name , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "Team_Name",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name"
    },
    {
        "nl_queries": "Show vote_percent from each date",
        "VQL": "Visualize BAR SELECT Date , Vote_Percent FROM election",
        "db_id": "election_representative",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Date , Vote_Percent FROM election', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Date , Vote_Percent FROM election'}",
        "record_name": "1326",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Show vote_percent from each date",
        "question_toks": [
            "Show",
            "vote_percent",
            "from",
            "each",
            "date"
        ],
        "query": "Visualize BAR SELECT Date , Vote_Percent FROM election",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Date",
            ",",
            "Vote_Percent",
            "FROM",
            "election"
        ],
        "choose_schema": "Table election, columns = [*,Election_ID, Representative_ID, Date, Votes, Vote_Percent, Seats, Place]",
        "choose_schema_rat_link": "election.votes@SEP@election.vote_percent@SEP@election.date"
    },
    {
        "nl_queries": "Give me the comparison about ID over the meter_400 by a bar chart .",
        "VQL": "Visualize BAR SELECT meter_400 , ID FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT meter_400 , ID FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT meter_400 , ID FROM swimmer'}",
        "record_name": "2918",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Give me the comparison about ID over the meter_400 by a bar chart .",
        "question_toks": [
            "Give",
            "me",
            "the",
            "comparison",
            "about",
            "ID",
            "over",
            "the",
            "meter_400",
            "by",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT meter_400 , ID FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "meter_400",
            ",",
            "ID",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]@SEP@Table stadium, columns = [*,ID, name, Capacity, City, Country, Opening_year]@SEP@Table event, columns = [*,ID, Name, Stadium_ID, Year]@SEP@Table record, columns = [*,ID, Result, Swimmer_ID, Event_ID]",
        "choose_schema_rat_link": "swimmer.id@SEP@stadium.id@SEP@event.id@SEP@record.id@SEP@swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_400@SEP@swimmer.meter_500@SEP@swimmer.meter_600@SEP@swimmer.meter_700"
    },
    {
        "nl_queries": "A scatter chart shows the correlation between Clean_Jerk and Total .",
        "VQL": "Visualize SCATTER SELECT Clean_Jerk , Total FROM body_builder",
        "db_id": "body_builder",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Clean_Jerk , Total FROM body_builder', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Clean_Jerk , Total FROM body_builder'}",
        "record_name": "353",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "A scatter chart shows the correlation between Clean_Jerk and Total .",
        "question_toks": [
            "A",
            "scatter",
            "chart",
            "shows",
            "the",
            "correlation",
            "between",
            "Clean_Jerk",
            "and",
            "Total",
            "."
        ],
        "query": "Visualize SCATTER SELECT Clean_Jerk , Total FROM body_builder",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Clean_Jerk",
            ",",
            "Total",
            "FROM",
            "body_builder"
        ],
        "choose_schema": "Table body_builder, columns = [*,Body_Builder_ID, People_ID, Snatch, Clean_Jerk, Total]",
        "choose_schema_rat_link": "body_builder.clean_jerk@SEP@body_builder.total"
    },
    {
        "nl_queries": "Just show the employee's last name and their manager's id using a bar chart .",
        "VQL": "Visualize BAR SELECT LAST_NAME , MANAGER_ID FROM employees",
        "db_id": "hr_1",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT LAST_NAME , MANAGER_ID FROM employees', 'binning': ''}, 'VQL': 'Visualize BAR SELECT LAST_NAME , MANAGER_ID FROM employees'}",
        "record_name": "1904",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                23,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Just show the employee's last name and their manager's id using a bar chart .",
        "question_toks": [
            "Just",
            "show",
            "the",
            "employee's",
            "last",
            "name",
            "and",
            "their",
            "manager's",
            "id",
            "using",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT LAST_NAME , MANAGER_ID FROM employees",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "LAST_NAME",
            ",",
            "MANAGER_ID",
            "FROM",
            "employees"
        ],
        "choose_schema": "Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]@SEP@Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]",
        "choose_schema_rat_link": "employees.last_name@SEP@employees.employee_id@SEP@job_history.employee_id@SEP@departments.manager_id@SEP@employees.manager_id"
    },
    {
        "nl_queries": "Return a pie chart about the proportion of All_Neutral and All_Games_Percent .",
        "VQL": "Visualize PIE SELECT All_Neutral , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT All_Neutral , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT All_Neutral , All_Games_Percent FROM basketball_match'}",
        "record_name": "3145",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Return a pie chart about the proportion of All_Neutral and All_Games_Percent .",
        "question_toks": [
            "Return",
            "a",
            "pie",
            "chart",
            "about",
            "the",
            "proportion",
            "of",
            "All_Neutral",
            "and",
            "All_Games_Percent",
            "."
        ],
        "query": "Visualize PIE SELECT All_Neutral , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "All_Neutral",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]"
    },
    {
        "nl_queries": "For the attribute All_Neutral and ACC_Percent , show their proportion by a pie chart .",
        "VQL": "Visualize PIE SELECT All_Neutral , ACC_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT All_Neutral , ACC_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT All_Neutral , ACC_Percent FROM basketball_match'}",
        "record_name": "3156",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "For the attribute All_Neutral and ACC_Percent , show their proportion by a pie chart .",
        "question_toks": [
            "For",
            "the",
            "attribute",
            "All_Neutral",
            "and",
            "ACC_Percent",
            ",",
            "show",
            "their",
            "proportion",
            "by",
            "a",
            "pie",
            "chart",
            "."
        ],
        "query": "Visualize PIE SELECT All_Neutral , ACC_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "All_Neutral",
            ",",
            "ACC_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Visualize a scatter chart about the correlation between People_ID and Total .",
        "VQL": "Visualize SCATTER SELECT People_ID , Total FROM body_builder",
        "db_id": "body_builder",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT People_ID , Total FROM body_builder', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT People_ID , Total FROM body_builder'}",
        "record_name": "359",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Visualize a scatter chart about the correlation between People_ID and Total .",
        "question_toks": [
            "Visualize",
            "a",
            "scatter",
            "chart",
            "about",
            "the",
            "correlation",
            "between",
            "People_ID",
            "and",
            "Total",
            "."
        ],
        "query": "Visualize SCATTER SELECT People_ID , Total FROM body_builder",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "People_ID",
            ",",
            "Total",
            "FROM",
            "body_builder"
        ],
        "choose_schema": "Table body_builder, columns = [*,Body_Builder_ID, People_ID, Snatch, Clean_Jerk, Total]@SEP@Table people, columns = [*,People_ID, Name, Height, Weight, Birth_Date, Birth_Place]",
        "choose_schema_rat_link": "body_builder.people_id@SEP@people.people_id@SEP@body_builder.total"
    },
    {
        "nl_queries": "Return a bar chart about the distribution of All_Games and ACC_Percent .",
        "VQL": "Visualize BAR SELECT All_Games , ACC_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT All_Games , ACC_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT All_Games , ACC_Percent FROM basketball_match'}",
        "record_name": "3138",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Return a bar chart about the distribution of All_Games and ACC_Percent .",
        "question_toks": [
            "Return",
            "a",
            "bar",
            "chart",
            "about",
            "the",
            "distribution",
            "of",
            "All_Games",
            "and",
            "ACC_Percent",
            "."
        ],
        "query": "Visualize BAR SELECT All_Games , ACC_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "All_Games",
            ",",
            "ACC_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Show me the correlation about how many distinct order ids correspond to each product ?",
        "VQL": "Visualize SCATTER SELECT product_id , count(DISTINCT order_id) FROM Order_items",
        "db_id": "customers_and_invoices",
        "hardness": "Medium",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT product_id , count(DISTINCT order_id) FROM Order_items', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT product_id , count(DISTINCT order_id) FROM Order_items'}",
        "record_name": "966",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        7
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                45,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                44,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Show me the correlation about how many distinct order ids correspond to each product ?",
        "question_toks": [
            "Show",
            "me",
            "the",
            "correlation",
            "about",
            "how",
            "many",
            "distinct",
            "order",
            "ids",
            "correspond",
            "to",
            "each",
            "product",
            "?"
        ],
        "query": "Visualize SCATTER SELECT product_id , count(DISTINCT order_id) FROM Order_items",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "product_id",
            ",",
            "count",
            "(",
            "DISTINCT",
            "order_id",
            ")",
            "FROM",
            "Order_items"
        ],
        "choose_schema": "Table Products, columns = [*,product_id, parent_product_id, production_type_code, unit_price, product_name, product_color, product_size]@SEP@Table Order_Items, columns = [*,order_item_id, order_id, product_id, product_quantity, other_order_item_details]@SEP@Table Invoice_Line_Items, columns = [*,order_item_id, invoice_number, product_id, product_title, product_quantity, product_price, derived_product_cost, derived_vat_payable, derived_total_cost]",
        "choose_schema_rat_link": "orders.order_id@SEP@invoices.order_id@SEP@order_items.order_id@SEP@orders.order_details@SEP@order_items.order_item_id@SEP@invoice_line_items.order_item_id@SEP@product_categories.product_type_description@SEP@products.product_id@SEP@products.product_name@SEP@products.product_color@SEP@products.product_size@SEP@order_items.product_id@SEP@order_items.product_quantity@SEP@invoice_line_items.product_id@SEP@invoice_line_items.product_title@SEP@invoice_line_items.product_quantity@SEP@invoice_line_items.product_price"
    },
    {
        "nl_queries": "What are the apartment number and the room count of each apartment . Visualize by bar chart .",
        "VQL": "Visualize BAR SELECT apt_number , room_count FROM Apartments",
        "db_id": "apartment_rentals",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT apt_number , room_count FROM Apartments', 'binning': ''}, 'VQL': 'Visualize BAR SELECT apt_number , room_count FROM Apartments'}",
        "record_name": "97",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "What are the apartment number and the room count of each apartment . Visualize by bar chart .",
        "question_toks": [
            "What",
            "are",
            "the",
            "apartment",
            "number",
            "and",
            "the",
            "room",
            "count",
            "of",
            "each",
            "apartment",
            ".",
            "Visualize",
            "by",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT apt_number , room_count FROM Apartments",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "apt_number",
            ",",
            "room_count",
            "FROM",
            "Apartments"
        ],
        "choose_schema": "Table Apartments, columns = [*,apt_id, building_id, apt_type_code, apt_number, bathroom_count, bedroom_count, room_count]",
        "choose_schema_rat_link": "apartments.apt_number@SEP@apartments.room_count@SEP@apartments.apt_id@SEP@apartments.apt_type_code@SEP@apartment_facilities.apt_id@SEP@apartment_bookings.apt_booking_id@SEP@apartment_bookings.apt_id@SEP@view_unit_status.apt_id@SEP@view_unit_status.apt_booking_id"
    },
    {
        "nl_queries": "Show me the proportion on how many different locations does each school have ?",
        "VQL": "Visualize PIE SELECT SCHOOL_CODE , count(DISTINCT dept_address) FROM department",
        "db_id": "college_1",
        "hardness": "Medium",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT SCHOOL_CODE , count(DISTINCT dept_address) FROM department', 'binning': ''}, 'VQL': 'Visualize PIE SELECT SCHOOL_CODE , count(DISTINCT dept_address) FROM department'}",
        "record_name": "542",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                15,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Show me the proportion on how many different locations does each school have ?",
        "question_toks": [
            "Show",
            "me",
            "the",
            "proportion",
            "on",
            "how",
            "many",
            "different",
            "locations",
            "does",
            "each",
            "school",
            "have",
            "?"
        ],
        "query": "Visualize PIE SELECT SCHOOL_CODE , count(DISTINCT dept_address) FROM department",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "SCHOOL_CODE",
            ",",
            "count",
            "(",
            "DISTINCT",
            "dept_address",
            ")",
            "FROM",
            "department"
        ],
        "choose_schema": "Table DEPARTMENT, columns = [*,DEPT_CODE, DEPT_NAME, SCHOOL_CODE, EMP_NUM, DEPT_ADDRESS, DEPT_EXTENSION]",
        "choose_schema_rat_link": "department.school_code"
    },
    {
        "nl_queries": "What is the relationship between Clean_Jerk and Total ?",
        "VQL": "Visualize SCATTER SELECT Clean_Jerk , Total FROM body_builder",
        "db_id": "body_builder",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Clean_Jerk , Total FROM body_builder', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Clean_Jerk , Total FROM body_builder'}",
        "record_name": "353",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "What is the relationship between Clean_Jerk and Total ?",
        "question_toks": [
            "What",
            "is",
            "the",
            "relationship",
            "between",
            "Clean_Jerk",
            "and",
            "Total",
            "?"
        ],
        "query": "Visualize SCATTER SELECT Clean_Jerk , Total FROM body_builder",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Clean_Jerk",
            ",",
            "Total",
            "FROM",
            "body_builder"
        ],
        "choose_schema": "Table body_builder, columns = [*,Body_Builder_ID, People_ID, Snatch, Clean_Jerk, Total]",
        "choose_schema_rat_link": "body_builder.clean_jerk@SEP@body_builder.total"
    },
    {
        "nl_queries": "Give me a bar chart for team_id of each all neutral",
        "VQL": "Visualize BAR SELECT All_Neutral , Team_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT All_Neutral , Team_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT All_Neutral , Team_ID FROM basketball_match'}",
        "record_name": "3118",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Give me a bar chart for team_id of each all neutral",
        "question_toks": [
            "Give",
            "me",
            "a",
            "bar",
            "chart",
            "for",
            "team_id",
            "of",
            "each",
            "all",
            "neutral"
        ],
        "query": "Visualize BAR SELECT All_Neutral , Team_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "All_Neutral",
            ",",
            "Team_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.all_neutral@SEP@basketball_match.team_id@SEP@basketball_match.team_name"
    },
    {
        "nl_queries": "Visualize a bar chart about the distribution of meter_400 and ID .",
        "VQL": "Visualize BAR SELECT meter_400 , ID FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT meter_400 , ID FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT meter_400 , ID FROM swimmer'}",
        "record_name": "2918",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Visualize a bar chart about the distribution of meter_400 and ID .",
        "question_toks": [
            "Visualize",
            "a",
            "bar",
            "chart",
            "about",
            "the",
            "distribution",
            "of",
            "meter_400",
            "and",
            "ID",
            "."
        ],
        "query": "Visualize BAR SELECT meter_400 , ID FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "meter_400",
            ",",
            "ID",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]@SEP@Table stadium, columns = [*,ID, name, Capacity, City, Country, Opening_year]@SEP@Table event, columns = [*,ID, Name, Stadium_ID, Year]@SEP@Table record, columns = [*,ID, Result, Swimmer_ID, Event_ID]",
        "choose_schema_rat_link": "swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_400@SEP@swimmer.meter_500@SEP@swimmer.meter_600@SEP@swimmer.meter_700@SEP@swimmer.id@SEP@stadium.id@SEP@event.id@SEP@record.id"
    },
    {
        "nl_queries": "Draw a bar chart about the distribution of ACC_Regular_Season and Team_ID .",
        "VQL": "Visualize BAR SELECT ACC_Regular_Season , Team_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT ACC_Regular_Season , Team_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT ACC_Regular_Season , Team_ID FROM basketball_match'}",
        "record_name": "3112",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Draw a bar chart about the distribution of ACC_Regular_Season and Team_ID .",
        "question_toks": [
            "Draw",
            "a",
            "bar",
            "chart",
            "about",
            "the",
            "distribution",
            "of",
            "ACC_Regular_Season",
            "and",
            "Team_ID",
            "."
        ],
        "query": "Visualize BAR SELECT ACC_Regular_Season , Team_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "ACC_Regular_Season",
            ",",
            "Team_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road@SEP@basketball_match.team_id@SEP@basketball_match.team_name"
    },
    {
        "nl_queries": "Create a bar chart showing all_games_percent across acc regular season",
        "VQL": "Visualize BAR SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match'}",
        "record_name": "3137",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Create a bar chart showing all_games_percent across acc regular season",
        "question_toks": [
            "Create",
            "a",
            "bar",
            "chart",
            "showing",
            "all_games_percent",
            "across",
            "acc",
            "regular",
            "season"
        ],
        "query": "Visualize BAR SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "ACC_Regular_Season",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "A scatter chart shows the correlation between School_ID and ACC_Percent .",
        "VQL": "Visualize SCATTER SELECT School_ID , ACC_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT School_ID , ACC_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT School_ID , ACC_Percent FROM basketball_match'}",
        "record_name": "3107",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "A scatter chart shows the correlation between School_ID and ACC_Percent .",
        "question_toks": [
            "A",
            "scatter",
            "chart",
            "shows",
            "the",
            "correlation",
            "between",
            "School_ID",
            "and",
            "ACC_Percent",
            "."
        ],
        "query": "Visualize SCATTER SELECT School_ID , ACC_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "School_ID",
            ",",
            "ACC_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "university.school@SEP@basketball_match.school_id@SEP@university.school_id@SEP@basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Give me the comparison about Team_ID over the ACC_Regular_Season .",
        "VQL": "Visualize BAR SELECT ACC_Regular_Season , Team_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT ACC_Regular_Season , Team_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT ACC_Regular_Season , Team_ID FROM basketball_match'}",
        "record_name": "3112",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Give me the comparison about Team_ID over the ACC_Regular_Season .",
        "question_toks": [
            "Give",
            "me",
            "the",
            "comparison",
            "about",
            "Team_ID",
            "over",
            "the",
            "ACC_Regular_Season",
            "."
        ],
        "query": "Visualize BAR SELECT ACC_Regular_Season , Team_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "ACC_Regular_Season",
            ",",
            "Team_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name@SEP@basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Give me the comparison about ID over the Time by a bar chart .",
        "VQL": "Visualize BAR SELECT Time , ID FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Time , ID FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Time , ID FROM swimmer'}",
        "record_name": "2926",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Give me the comparison about ID over the Time by a bar chart .",
        "question_toks": [
            "Give",
            "me",
            "the",
            "comparison",
            "about",
            "ID",
            "over",
            "the",
            "Time",
            "by",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT Time , ID FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Time",
            ",",
            "ID",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]@SEP@Table stadium, columns = [*,ID, name, Capacity, City, Country, Opening_year]@SEP@Table event, columns = [*,ID, Name, Stadium_ID, Year]@SEP@Table record, columns = [*,ID, Result, Swimmer_ID, Event_ID]",
        "choose_schema_rat_link": "swimmer.id@SEP@stadium.id@SEP@event.id@SEP@record.id@SEP@swimmer.time"
    },
    {
        "nl_queries": "Show me about the distribution of meter_600 and ID in a bar chart .",
        "VQL": "Visualize BAR SELECT meter_600 , ID FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT meter_600 , ID FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT meter_600 , ID FROM swimmer'}",
        "record_name": "2922",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Show me about the distribution of meter_600 and ID in a bar chart .",
        "question_toks": [
            "Show",
            "me",
            "about",
            "the",
            "distribution",
            "of",
            "meter_600",
            "and",
            "ID",
            "in",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT meter_600 , ID FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "meter_600",
            ",",
            "ID",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]@SEP@Table stadium, columns = [*,ID, name, Capacity, City, Country, Opening_year]@SEP@Table event, columns = [*,ID, Name, Stadium_ID, Year]@SEP@Table record, columns = [*,ID, Result, Swimmer_ID, Event_ID]",
        "choose_schema_rat_link": "swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_400@SEP@swimmer.meter_500@SEP@swimmer.meter_600@SEP@swimmer.meter_700@SEP@swimmer.id@SEP@stadium.id@SEP@event.id@SEP@record.id"
    },
    {
        "nl_queries": "You can return a bar chart to show the employees' first name and the corresponding manager's id .",
        "VQL": "Visualize BAR SELECT FIRST_NAME , MANAGER_ID FROM employees",
        "db_id": "hr_1",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT FIRST_NAME , MANAGER_ID FROM employees', 'binning': ''}, 'VQL': 'Visualize BAR SELECT FIRST_NAME , MANAGER_ID FROM employees'}",
        "record_name": "1897",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                23,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "You can return a bar chart to show the employees' first name and the corresponding manager's id .",
        "question_toks": [
            "You",
            "can",
            "return",
            "a",
            "bar",
            "chart",
            "to",
            "show",
            "the",
            "employees'",
            "first",
            "name",
            "and",
            "the",
            "corresponding",
            "manager's",
            "id",
            "."
        ],
        "query": "Visualize BAR SELECT FIRST_NAME , MANAGER_ID FROM employees",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "FIRST_NAME",
            ",",
            "MANAGER_ID",
            "FROM",
            "employees"
        ],
        "choose_schema": "Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]@SEP@Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]",
        "choose_schema_rat_link": "employees.first_name@SEP@employees.employee_id@SEP@job_history.employee_id@SEP@departments.manager_id@SEP@employees.manager_id"
    },
    {
        "nl_queries": "Give me the comparison about School_ID over the All_Games by a bar chart .",
        "VQL": "Visualize BAR SELECT All_Games , School_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT All_Games , School_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT All_Games , School_ID FROM basketball_match'}",
        "record_name": "3115",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Give me the comparison about School_ID over the All_Games by a bar chart .",
        "question_toks": [
            "Give",
            "me",
            "the",
            "comparison",
            "about",
            "School_ID",
            "over",
            "the",
            "All_Games",
            "by",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT All_Games , School_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "All_Games",
            ",",
            "School_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "university.school@SEP@basketball_match.school_id@SEP@university.school_id"
    },
    {
        "nl_queries": "Show me about the correlation between People_ID and Total in a scatter chart .",
        "VQL": "Visualize SCATTER SELECT People_ID , Total FROM body_builder",
        "db_id": "body_builder",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT People_ID , Total FROM body_builder', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT People_ID , Total FROM body_builder'}",
        "record_name": "359",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Show me about the correlation between People_ID and Total in a scatter chart .",
        "question_toks": [
            "Show",
            "me",
            "about",
            "the",
            "correlation",
            "between",
            "People_ID",
            "and",
            "Total",
            "in",
            "a",
            "scatter",
            "chart",
            "."
        ],
        "query": "Visualize SCATTER SELECT People_ID , Total FROM body_builder",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "People_ID",
            ",",
            "Total",
            "FROM",
            "body_builder"
        ],
        "choose_schema": "Table body_builder, columns = [*,Body_Builder_ID, People_ID, Snatch, Clean_Jerk, Total]@SEP@Table people, columns = [*,People_ID, Name, Height, Weight, Birth_Date, Birth_Place]",
        "choose_schema_rat_link": "body_builder.people_id@SEP@people.people_id@SEP@body_builder.total"
    },
    {
        "nl_queries": "Plot a scatter chart , to show the correlation between support and consider rates for each candidate .",
        "VQL": "Visualize SCATTER SELECT Support_rate , Consider_rate FROM candidate",
        "db_id": "candidate_poll",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Support_rate , Consider_rate FROM candidate', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Support_rate , Consider_rate FROM candidate'}",
        "record_name": "399",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Plot a scatter chart , to show the correlation between support and consider rates for each candidate .",
        "question_toks": [
            "Plot",
            "a",
            "scatter",
            "chart",
            ",",
            "to",
            "show",
            "the",
            "correlation",
            "between",
            "support",
            "and",
            "consider",
            "rates",
            "for",
            "each",
            "candidate",
            "."
        ],
        "query": "Visualize SCATTER SELECT Support_rate , Consider_rate FROM candidate",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Support_rate",
            ",",
            "Consider_rate",
            "FROM",
            "candidate"
        ],
        "choose_schema": "Table candidate, columns = [*,Candidate_ID, People_ID, Poll_Source, Date, Support_rate, Consider_rate, Oppose_rate, Unsure_rate]",
        "choose_schema_rat_link": "candidate.consider_rate@SEP@candidate.support_rate@SEP@candidate.candidate_id"
    },
    {
        "nl_queries": "Count different addresses of each school with a bar chart .",
        "VQL": "Visualize BAR SELECT SCHOOL_CODE , count(DISTINCT dept_address) FROM department",
        "db_id": "college_1",
        "hardness": "Medium",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT SCHOOL_CODE , count(DISTINCT dept_address) FROM department', 'binning': ''}, 'VQL': 'Visualize BAR SELECT SCHOOL_CODE , count(DISTINCT dept_address) FROM department'}",
        "record_name": "543",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                15,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Count different addresses of each school with a bar chart .",
        "question_toks": [
            "Count",
            "different",
            "addresses",
            "of",
            "each",
            "school",
            "with",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT SCHOOL_CODE , count(DISTINCT dept_address) FROM department",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "SCHOOL_CODE",
            ",",
            "count",
            "(",
            "DISTINCT",
            "dept_address",
            ")",
            "FROM",
            "department"
        ],
        "choose_schema": "Table DEPARTMENT, columns = [*,DEPT_CODE, DEPT_NAME, SCHOOL_CODE, EMP_NUM, DEPT_ADDRESS, DEPT_EXTENSION]",
        "choose_schema_rat_link": "department.school_code"
    },
    {
        "nl_queries": "Draw a bar chart of name versus meter_100",
        "VQL": "Visualize BAR SELECT name , meter_100 FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT name , meter_100 FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT name , meter_100 FROM swimmer'}",
        "record_name": "2915",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Draw a bar chart of name versus meter_100",
        "question_toks": [
            "Draw",
            "a",
            "bar",
            "chart",
            "of",
            "name",
            "versus",
            "meter_100"
        ],
        "query": "Visualize BAR SELECT name , meter_100 FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "name",
            ",",
            "meter_100",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]@SEP@Table stadium, columns = [*,ID, name, Capacity, City, Country, Opening_year]@SEP@Table event, columns = [*,ID, Name, Stadium_ID, Year]",
        "choose_schema_rat_link": "swimmer.name@SEP@stadium.name@SEP@event.name@SEP@swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_400@SEP@swimmer.meter_500@SEP@swimmer.meter_600@SEP@swimmer.meter_700"
    },
    {
        "nl_queries": "Show me school_id by all road in a histogram",
        "VQL": "Visualize BAR SELECT All_Road , School_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT All_Road , School_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT All_Road , School_ID FROM basketball_match'}",
        "record_name": "3117",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Show me school_id by all road in a histogram",
        "question_toks": [
            "Show",
            "me",
            "school_id",
            "by",
            "all",
            "road",
            "in",
            "a",
            "histogram"
        ],
        "query": "Visualize BAR SELECT All_Road , School_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "All_Road",
            ",",
            "School_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "basketball_match.all_road@SEP@university.school@SEP@basketball_match.school_id@SEP@university.school_id"
    },
    {
        "nl_queries": "Create a bar chart showing all_games_percent across all neutral",
        "VQL": "Visualize BAR SELECT All_Neutral , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT All_Neutral , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT All_Neutral , All_Games_Percent FROM basketball_match'}",
        "record_name": "3146",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Create a bar chart showing all_games_percent across all neutral",
        "question_toks": [
            "Create",
            "a",
            "bar",
            "chart",
            "showing",
            "all_games_percent",
            "across",
            "all",
            "neutral"
        ],
        "query": "Visualize BAR SELECT All_Neutral , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "All_Neutral",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.all_neutral"
    },
    {
        "nl_queries": "Show me acc_percent by all road in a histogram",
        "VQL": "Visualize BAR SELECT All_Road , ACC_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT All_Road , ACC_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT All_Road , ACC_Percent FROM basketball_match'}",
        "record_name": "3141",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Show me acc_percent by all road in a histogram",
        "question_toks": [
            "Show",
            "me",
            "acc_percent",
            "by",
            "all",
            "road",
            "in",
            "a",
            "histogram"
        ],
        "query": "Visualize BAR SELECT All_Road , ACC_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "All_Road",
            ",",
            "ACC_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.all_road@SEP@basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Draw a pie chart about the proportion of All_Road and All_Games_Percent .",
        "VQL": "Visualize PIE SELECT All_Road , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT All_Road , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT All_Road , All_Games_Percent FROM basketball_match'}",
        "record_name": "3142",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Draw a pie chart about the proportion of All_Road and All_Games_Percent .",
        "question_toks": [
            "Draw",
            "a",
            "pie",
            "chart",
            "about",
            "the",
            "proportion",
            "of",
            "All_Road",
            "and",
            "All_Games_Percent",
            "."
        ],
        "query": "Visualize PIE SELECT All_Road , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "All_Road",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]"
    },
    {
        "nl_queries": "Draw a pie chart about the proportion of All_Road and ACC_Percent .",
        "VQL": "Visualize PIE SELECT All_Road , ACC_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT All_Road , ACC_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT All_Road , ACC_Percent FROM basketball_match'}",
        "record_name": "3154",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Draw a pie chart about the proportion of All_Road and ACC_Percent .",
        "question_toks": [
            "Draw",
            "a",
            "pie",
            "chart",
            "about",
            "the",
            "proportion",
            "of",
            "All_Road",
            "and",
            "ACC_Percent",
            "."
        ],
        "query": "Visualize PIE SELECT All_Road , ACC_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "All_Road",
            ",",
            "ACC_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Give me the comparison about Team_ID over the All_Games .",
        "VQL": "Visualize BAR SELECT All_Games , Team_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT All_Games , Team_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT All_Games , Team_ID FROM basketball_match'}",
        "record_name": "3114",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Give me the comparison about Team_ID over the All_Games .",
        "question_toks": [
            "Give",
            "me",
            "the",
            "comparison",
            "about",
            "Team_ID",
            "over",
            "the",
            "All_Games",
            "."
        ],
        "query": "Visualize BAR SELECT All_Games , Team_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "All_Games",
            ",",
            "Team_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name"
    },
    {
        "nl_queries": "What is the relationship between School_ID and ACC_Percent ?",
        "VQL": "Visualize SCATTER SELECT School_ID , ACC_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT School_ID , ACC_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT School_ID , ACC_Percent FROM basketball_match'}",
        "record_name": "3107",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "What is the relationship between School_ID and ACC_Percent ?",
        "question_toks": [
            "What",
            "is",
            "the",
            "relationship",
            "between",
            "School_ID",
            "and",
            "ACC_Percent",
            "?"
        ],
        "query": "Visualize SCATTER SELECT School_ID , ACC_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "School_ID",
            ",",
            "ACC_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "university.school@SEP@basketball_match.school_id@SEP@university.school_id@SEP@basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "What is the relationship between ID and meter_100 ?",
        "VQL": "Visualize SCATTER SELECT ID , meter_100 FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT ID , meter_100 FROM swimmer', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT ID , meter_100 FROM swimmer'}",
        "record_name": "2905",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "What is the relationship between ID and meter_100 ?",
        "question_toks": [
            "What",
            "is",
            "the",
            "relationship",
            "between",
            "ID",
            "and",
            "meter_100",
            "?"
        ],
        "query": "Visualize SCATTER SELECT ID , meter_100 FROM swimmer",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "ID",
            ",",
            "meter_100",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]@SEP@Table stadium, columns = [*,ID, name, Capacity, City, Country, Opening_year]@SEP@Table event, columns = [*,ID, Name, Stadium_ID, Year]@SEP@Table record, columns = [*,ID, Result, Swimmer_ID, Event_ID]",
        "choose_schema_rat_link": "swimmer.id@SEP@stadium.id@SEP@event.id@SEP@record.id@SEP@swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_400@SEP@swimmer.meter_500@SEP@swimmer.meter_600@SEP@swimmer.meter_700"
    },
    {
        "nl_queries": "Bar chart of acc_percent from each all neutral",
        "VQL": "Visualize BAR SELECT All_Neutral , ACC_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT All_Neutral , ACC_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT All_Neutral , ACC_Percent FROM basketball_match'}",
        "record_name": "3144",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Bar chart of acc_percent from each all neutral",
        "question_toks": [
            "Bar",
            "chart",
            "of",
            "acc_percent",
            "from",
            "each",
            "all",
            "neutral"
        ],
        "query": "Visualize BAR SELECT All_Neutral , ACC_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "All_Neutral",
            ",",
            "ACC_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.all_neutral@SEP@basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "A bar chart shows the distribution of ACC_Regular_Season and Team_ID .",
        "VQL": "Visualize BAR SELECT ACC_Regular_Season , Team_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT ACC_Regular_Season , Team_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT ACC_Regular_Season , Team_ID FROM basketball_match'}",
        "record_name": "3112",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "A bar chart shows the distribution of ACC_Regular_Season and Team_ID .",
        "question_toks": [
            "A",
            "bar",
            "chart",
            "shows",
            "the",
            "distribution",
            "of",
            "ACC_Regular_Season",
            "and",
            "Team_ID",
            "."
        ],
        "query": "Visualize BAR SELECT ACC_Regular_Season , Team_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "ACC_Regular_Season",
            ",",
            "Team_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road@SEP@basketball_match.team_id@SEP@basketball_match.team_name"
    },
    {
        "nl_queries": "Find Time and meter_100 , and visualize them by a bar chart .",
        "VQL": "Visualize BAR SELECT Time , meter_100 FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Time , meter_100 FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Time , meter_100 FROM swimmer'}",
        "record_name": "2927",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Find Time and meter_100 , and visualize them by a bar chart .",
        "question_toks": [
            "Find",
            "Time",
            "and",
            "meter_100",
            ",",
            "and",
            "visualize",
            "them",
            "by",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT Time , meter_100 FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Time",
            ",",
            "meter_100",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]",
        "choose_schema_rat_link": "swimmer.time@SEP@swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_400@SEP@swimmer.meter_500@SEP@swimmer.meter_600@SEP@swimmer.meter_700"
    },
    {
        "nl_queries": "How much does each charge type costs ? List both charge type and amount .",
        "VQL": "Visualize BAR SELECT charge_type , charge_amount FROM Charges",
        "db_id": "dog_kennels",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT charge_type , charge_amount FROM Charges', 'binning': ''}, 'VQL': 'Visualize BAR SELECT charge_type , charge_amount FROM Charges'}",
        "record_name": "1174",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "How much does each charge type costs ? List both charge type and amount .",
        "question_toks": [
            "How",
            "much",
            "does",
            "each",
            "charge",
            "type",
            "costs",
            "?",
            "List",
            "both",
            "charge",
            "type",
            "and",
            "amount",
            "."
        ],
        "query": "Visualize BAR SELECT charge_type , charge_amount FROM Charges",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "charge_type",
            ",",
            "charge_amount",
            "FROM",
            "Charges"
        ],
        "choose_schema": "Table Charges, columns = [*,charge_id, charge_type, charge_amount]",
        "choose_schema_rat_link": "charges.charge_type@SEP@charges.charge_id@SEP@charges.charge_amount@SEP@treatments.cost_of_treatment"
    },
    {
        "nl_queries": "I want to know the proportion of school id for each all games .",
        "VQL": "Visualize PIE SELECT All_Games , School_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT All_Games , School_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT All_Games , School_ID FROM basketball_match'}",
        "record_name": "3151",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "I want to know the proportion of school id for each all games .",
        "question_toks": [
            "I",
            "want",
            "to",
            "know",
            "the",
            "proportion",
            "of",
            "school",
            "id",
            "for",
            "each",
            "all",
            "games",
            "."
        ],
        "query": "Visualize PIE SELECT All_Games , School_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "All_Games",
            ",",
            "School_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "basketball_match.school_id@SEP@university.school_id@SEP@basketball_match.all_games@SEP@basketball_match.all_games_percent@SEP@university.school"
    },
    {
        "nl_queries": "Show me a scatter plot of body builder id and total for .",
        "VQL": "Visualize SCATTER SELECT Body_Builder_ID , Total FROM body_builder",
        "db_id": "body_builder",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Body_Builder_ID , Total FROM body_builder', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Body_Builder_ID , Total FROM body_builder'}",
        "record_name": "358",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Show me a scatter plot of body builder id and total for .",
        "question_toks": [
            "Show",
            "me",
            "a",
            "scatter",
            "plot",
            "of",
            "body",
            "builder",
            "id",
            "and",
            "total",
            "for",
            "."
        ],
        "query": "Visualize SCATTER SELECT Body_Builder_ID , Total FROM body_builder",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Body_Builder_ID",
            ",",
            "Total",
            "FROM",
            "body_builder"
        ],
        "choose_schema": "Table body_builder, columns = [*,Body_Builder_ID, People_ID, Snatch, Clean_Jerk, Total]",
        "choose_schema_rat_link": "body_builder.body_builder_id@SEP@body_builder.total"
    },
    {
        "nl_queries": "Show me about the distribution of Date_of_Birth and Weight in a bar chart .",
        "VQL": "Visualize BAR SELECT Date_of_Birth , Weight FROM people",
        "db_id": "candidate_poll",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Date_of_Birth , Weight FROM people', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Date_of_Birth , Weight FROM people'}",
        "record_name": "398",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Show me about the distribution of Date_of_Birth and Weight in a bar chart .",
        "question_toks": [
            "Show",
            "me",
            "about",
            "the",
            "distribution",
            "of",
            "Date_of_Birth",
            "and",
            "Weight",
            "in",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT Date_of_Birth , Weight FROM people",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Date_of_Birth",
            ",",
            "Weight",
            "FROM",
            "people"
        ],
        "choose_schema": "Table people, columns = [*,People_ID, Sex, Name, Date_of_Birth, Height, Weight]",
        "choose_schema_rat_link": "candidate.date@SEP@people.date_of_birth@SEP@people.weight"
    },
    {
        "nl_queries": "Scatter plot to show reign on x axis and days_held on y axis .",
        "VQL": "Visualize SCATTER SELECT Reign , Days_held FROM wrestler",
        "db_id": "wrestler",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Reign , Days_held FROM wrestler', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Reign , Days_held FROM wrestler'}",
        "record_name": "3284",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Scatter plot to show reign on x axis and days_held on y axis .",
        "question_toks": [
            "Scatter",
            "plot",
            "to",
            "show",
            "reign",
            "on",
            "x",
            "axis",
            "and",
            "days_held",
            "on",
            "y",
            "axis",
            "."
        ],
        "query": "Visualize SCATTER SELECT Reign , Days_held FROM wrestler",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Reign",
            ",",
            "Days_held",
            "FROM",
            "wrestler"
        ],
        "choose_schema": "Table wrestler, columns = [*,Wrestler_ID, Name, Reign, Days_held, Location, Event]",
        "choose_schema_rat_link": "wrestler.reign@SEP@wrestler.days_held"
    },
    {
        "nl_queries": "Show me distance by name in a histogram",
        "VQL": "Visualize BAR SELECT name , distance FROM Aircraft",
        "db_id": "flight_1",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT name , distance FROM Aircraft', 'binning': ''}, 'VQL': 'Visualize BAR SELECT name , distance FROM Aircraft'}",
        "record_name": "1414",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Show me distance by name in a histogram",
        "question_toks": [
            "Show",
            "me",
            "distance",
            "by",
            "name",
            "in",
            "a",
            "histogram"
        ],
        "query": "Visualize BAR SELECT name , distance FROM Aircraft",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "name",
            ",",
            "distance",
            "FROM",
            "Aircraft"
        ],
        "choose_schema": "Table flight, columns = [*,flno, origin, destination, distance, departure_date, arrival_date, price, aid]@SEP@Table aircraft, columns = [*,aid, name, distance]@SEP@Table employee, columns = [*,eid, name, salary]",
        "choose_schema_rat_link": "flight.distance@SEP@aircraft.distance@SEP@aircraft.name@SEP@employee.name"
    },
    {
        "nl_queries": "Scatter plot to show shop id on x axis and employee_id on y axis .",
        "VQL": "Visualize SCATTER SELECT Shop_ID , Employee_ID FROM hiring",
        "db_id": "employee_hire_evaluation",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Shop_ID , Employee_ID FROM hiring', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Shop_ID , Employee_ID FROM hiring'}",
        "record_name": "1357",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Scatter plot to show shop id on x axis and employee_id on y axis .",
        "question_toks": [
            "Scatter",
            "plot",
            "to",
            "show",
            "shop",
            "id",
            "on",
            "x",
            "axis",
            "and",
            "employee_id",
            "on",
            "y",
            "axis",
            "."
        ],
        "query": "Visualize SCATTER SELECT Shop_ID , Employee_ID FROM hiring",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Shop_ID",
            ",",
            "Employee_ID",
            "FROM",
            "hiring"
        ],
        "choose_schema": "Table employee, columns = [*,Employee_ID, Name, Age, City]@SEP@Table shop, columns = [*,Shop_ID, Name, Location, District, Number_products, Manager_name]@SEP@Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]@SEP@Table evaluation, columns = [*,Employee_ID, Year_awarded, Bonus]",
        "choose_schema_rat_link": "shop.shop_id@SEP@hiring.shop_id@SEP@employee.employee_id@SEP@hiring.employee_id@SEP@evaluation.employee_id"
    },
    {
        "nl_queries": "Visualize a bar chart for simply displaying the email address of the employee and the corresponding salary .",
        "VQL": "Visualize BAR SELECT EMAIL , SALARY FROM employees",
        "db_id": "hr_1",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT EMAIL , SALARY FROM employees', 'binning': ''}, 'VQL': 'Visualize BAR SELECT EMAIL , SALARY FROM employees'}",
        "record_name": "1910",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                17,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Visualize a bar chart for simply displaying the email address of the employee and the corresponding salary .",
        "question_toks": [
            "Visualize",
            "a",
            "bar",
            "chart",
            "for",
            "simply",
            "displaying",
            "the",
            "email",
            "address",
            "of",
            "the",
            "employee",
            "and",
            "the",
            "corresponding",
            "salary",
            "."
        ],
        "query": "Visualize BAR SELECT EMAIL , SALARY FROM employees",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "EMAIL",
            ",",
            "SALARY",
            "FROM",
            "employees"
        ],
        "choose_schema": "Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]",
        "choose_schema_rat_link": "employees.email@SEP@employees.employee_id@SEP@job_history.employee_id@SEP@employees.salary"
    },
    {
        "nl_queries": "Scatter chart . what is the minimum salary in each department ?",
        "VQL": "Visualize SCATTER SELECT MIN(salary) , DEPARTMENT_ID FROM employees",
        "db_id": "hr_1",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT MIN(salary) , DEPARTMENT_ID FROM employees', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT MIN(salary) , DEPARTMENT_ID FROM employees'}",
        "record_name": "1708",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                24,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Scatter chart . what is the minimum salary in each department ?",
        "question_toks": [
            "Scatter",
            "chart",
            ".",
            "what",
            "is",
            "the",
            "minimum",
            "salary",
            "in",
            "each",
            "department",
            "?"
        ],
        "query": "Visualize SCATTER SELECT MIN(salary) , DEPARTMENT_ID FROM employees",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "MIN",
            "(",
            "salary",
            ")",
            ",",
            "DEPARTMENT_ID",
            "FROM",
            "employees"
        ],
        "choose_schema": "Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]@SEP@Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]@SEP@Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]",
        "choose_schema_rat_link": "employees.salary@SEP@departments.department_id@SEP@departments.department_name@SEP@employees.department_id@SEP@job_history.department_id"
    },
    {
        "nl_queries": "What is the relationship between Body_Builder_ID and Total ?",
        "VQL": "Visualize SCATTER SELECT Body_Builder_ID , Total FROM body_builder",
        "db_id": "body_builder",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Body_Builder_ID , Total FROM body_builder', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Body_Builder_ID , Total FROM body_builder'}",
        "record_name": "358",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "What is the relationship between Body_Builder_ID and Total ?",
        "question_toks": [
            "What",
            "is",
            "the",
            "relationship",
            "between",
            "Body_Builder_ID",
            "and",
            "Total",
            "?"
        ],
        "query": "Visualize SCATTER SELECT Body_Builder_ID , Total FROM body_builder",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Body_Builder_ID",
            ",",
            "Total",
            "FROM",
            "body_builder"
        ],
        "choose_schema": "Table body_builder, columns = [*,Body_Builder_ID, People_ID, Snatch, Clean_Jerk, Total]",
        "choose_schema_rat_link": "body_builder.body_builder_id@SEP@body_builder.total"
    },
    {
        "nl_queries": "Draw a bar chart of last name versus department_id",
        "VQL": "Visualize BAR SELECT LAST_NAME , DEPARTMENT_ID FROM employees",
        "db_id": "hr_1",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT LAST_NAME , DEPARTMENT_ID FROM employees', 'binning': ''}, 'VQL': 'Visualize BAR SELECT LAST_NAME , DEPARTMENT_ID FROM employees'}",
        "record_name": "1906",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                24,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Draw a bar chart of last name versus department_id",
        "question_toks": [
            "Draw",
            "a",
            "bar",
            "chart",
            "of",
            "last",
            "name",
            "versus",
            "department_id"
        ],
        "query": "Visualize BAR SELECT LAST_NAME , DEPARTMENT_ID FROM employees",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "LAST_NAME",
            ",",
            "DEPARTMENT_ID",
            "FROM",
            "employees"
        ],
        "choose_schema": "Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]@SEP@Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]@SEP@Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]",
        "choose_schema_rat_link": "employees.last_name@SEP@departments.department_id@SEP@departments.department_name@SEP@employees.department_id@SEP@job_history.department_id"
    },
    {
        "nl_queries": "Show me about the distribution of All_Neutral and All_Games_Percent in a bar chart .",
        "VQL": "Visualize BAR SELECT All_Neutral , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT All_Neutral , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT All_Neutral , All_Games_Percent FROM basketball_match'}",
        "record_name": "3146",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Show me about the distribution of All_Neutral and All_Games_Percent in a bar chart .",
        "question_toks": [
            "Show",
            "me",
            "about",
            "the",
            "distribution",
            "of",
            "All_Neutral",
            "and",
            "All_Games_Percent",
            "in",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT All_Neutral , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "All_Neutral",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]"
    },
    {
        "nl_queries": "Visualize a scatter chart on what is the minimum salary in each department ?",
        "VQL": "Visualize SCATTER SELECT MIN(salary) , DEPARTMENT_ID FROM employees",
        "db_id": "hr_1",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT MIN(salary) , DEPARTMENT_ID FROM employees', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT MIN(salary) , DEPARTMENT_ID FROM employees'}",
        "record_name": "1708",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                24,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Visualize a scatter chart on what is the minimum salary in each department ?",
        "question_toks": [
            "Visualize",
            "a",
            "scatter",
            "chart",
            "on",
            "what",
            "is",
            "the",
            "minimum",
            "salary",
            "in",
            "each",
            "department",
            "?"
        ],
        "query": "Visualize SCATTER SELECT MIN(salary) , DEPARTMENT_ID FROM employees",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "MIN",
            "(",
            "salary",
            ")",
            ",",
            "DEPARTMENT_ID",
            "FROM",
            "employees"
        ],
        "choose_schema": "Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]@SEP@Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]@SEP@Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]",
        "choose_schema_rat_link": "employees.salary@SEP@departments.department_id@SEP@departments.department_name@SEP@employees.department_id@SEP@job_history.department_id"
    },
    {
        "nl_queries": "Return a pie chart about the proportion of All_Neutral and Team_ID .",
        "VQL": "Visualize PIE SELECT All_Neutral , Team_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT All_Neutral , Team_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT All_Neutral , Team_ID FROM basketball_match'}",
        "record_name": "3130",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Return a pie chart about the proportion of All_Neutral and Team_ID .",
        "question_toks": [
            "Return",
            "a",
            "pie",
            "chart",
            "about",
            "the",
            "proportion",
            "of",
            "All_Neutral",
            "and",
            "Team_ID",
            "."
        ],
        "query": "Visualize PIE SELECT All_Neutral , Team_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "All_Neutral",
            ",",
            "Team_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name"
    },
    {
        "nl_queries": "Show me a scatter plot of team id and acc_percent for .",
        "VQL": "Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Team_ID , ACC_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match'}",
        "record_name": "3120",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Show me a scatter plot of team id and acc_percent for .",
        "question_toks": [
            "Show",
            "me",
            "a",
            "scatter",
            "plot",
            "of",
            "team",
            "id",
            "and",
            "acc_percent",
            "for",
            "."
        ],
        "query": "Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Team_ID",
            ",",
            "ACC_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name@SEP@basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Visualize a bar chart about the distribution of name and ID .",
        "VQL": "Visualize BAR SELECT name , ID FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT name , ID FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT name , ID FROM swimmer'}",
        "record_name": "2914",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Visualize a bar chart about the distribution of name and ID .",
        "question_toks": [
            "Visualize",
            "a",
            "bar",
            "chart",
            "about",
            "the",
            "distribution",
            "of",
            "name",
            "and",
            "ID",
            "."
        ],
        "query": "Visualize BAR SELECT name , ID FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "name",
            ",",
            "ID",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]@SEP@Table stadium, columns = [*,ID, name, Capacity, City, Country, Opening_year]@SEP@Table event, columns = [*,ID, Name, Stadium_ID, Year]@SEP@Table record, columns = [*,ID, Result, Swimmer_ID, Event_ID]",
        "choose_schema_rat_link": "swimmer.name@SEP@stadium.name@SEP@event.name@SEP@swimmer.id@SEP@stadium.id@SEP@event.id@SEP@record.id"
    },
    {
        "nl_queries": "Return a bar chart about the distribution of meter_600 and ID .",
        "VQL": "Visualize BAR SELECT meter_600 , ID FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT meter_600 , ID FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT meter_600 , ID FROM swimmer'}",
        "record_name": "2922",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Return a bar chart about the distribution of meter_600 and ID .",
        "question_toks": [
            "Return",
            "a",
            "bar",
            "chart",
            "about",
            "the",
            "distribution",
            "of",
            "meter_600",
            "and",
            "ID",
            "."
        ],
        "query": "Visualize BAR SELECT meter_600 , ID FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "meter_600",
            ",",
            "ID",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]@SEP@Table stadium, columns = [*,ID, name, Capacity, City, Country, Opening_year]@SEP@Table event, columns = [*,ID, Name, Stadium_ID, Year]@SEP@Table record, columns = [*,ID, Result, Swimmer_ID, Event_ID]",
        "choose_schema_rat_link": "swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_400@SEP@swimmer.meter_500@SEP@swimmer.meter_600@SEP@swimmer.meter_700@SEP@swimmer.id@SEP@stadium.id@SEP@event.id@SEP@record.id"
    },
    {
        "nl_queries": "Bar graph to show department_id from different last name",
        "VQL": "Visualize BAR SELECT LAST_NAME , DEPARTMENT_ID FROM employees",
        "db_id": "hr_1",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT LAST_NAME , DEPARTMENT_ID FROM employees', 'binning': ''}, 'VQL': 'Visualize BAR SELECT LAST_NAME , DEPARTMENT_ID FROM employees'}",
        "record_name": "1905",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                24,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Bar graph to show department_id from different last name",
        "question_toks": [
            "Bar",
            "graph",
            "to",
            "show",
            "department_id",
            "from",
            "different",
            "last",
            "name"
        ],
        "query": "Visualize BAR SELECT LAST_NAME , DEPARTMENT_ID FROM employees",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "LAST_NAME",
            ",",
            "DEPARTMENT_ID",
            "FROM",
            "employees"
        ],
        "choose_schema": "Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]@SEP@Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]@SEP@Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]",
        "choose_schema_rat_link": "employees.last_name@SEP@departments.department_id@SEP@departments.department_name@SEP@employees.department_id@SEP@job_history.department_id"
    },
    {
        "nl_queries": "A pie chart shows the proportion of ACC_Regular_Season and Team_ID .",
        "VQL": "Visualize PIE SELECT ACC_Regular_Season , Team_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT ACC_Regular_Season , Team_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT ACC_Regular_Season , Team_ID FROM basketball_match'}",
        "record_name": "3127",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "A pie chart shows the proportion of ACC_Regular_Season and Team_ID .",
        "question_toks": [
            "A",
            "pie",
            "chart",
            "shows",
            "the",
            "proportion",
            "of",
            "ACC_Regular_Season",
            "and",
            "Team_ID",
            "."
        ],
        "query": "Visualize PIE SELECT ACC_Regular_Season , Team_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "ACC_Regular_Season",
            ",",
            "Team_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road@SEP@basketball_match.team_id@SEP@basketball_match.team_name"
    },
    {
        "nl_queries": "Draw a scatter chart about the correlation between Snatch and Total .",
        "VQL": "Visualize SCATTER SELECT Snatch , Total FROM body_builder",
        "db_id": "body_builder",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Snatch , Total FROM body_builder', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Snatch , Total FROM body_builder'}",
        "record_name": "354",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Draw a scatter chart about the correlation between Snatch and Total .",
        "question_toks": [
            "Draw",
            "a",
            "scatter",
            "chart",
            "about",
            "the",
            "correlation",
            "between",
            "Snatch",
            "and",
            "Total",
            "."
        ],
        "query": "Visualize SCATTER SELECT Snatch , Total FROM body_builder",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Snatch",
            ",",
            "Total",
            "FROM",
            "body_builder"
        ],
        "choose_schema": "Table body_builder, columns = [*,Body_Builder_ID, People_ID, Snatch, Clean_Jerk, Total]",
        "choose_schema_rat_link": "body_builder.snatch@SEP@body_builder.total"
    },
    {
        "nl_queries": "Return a scatter on what are the low and high estimates of film markets ?",
        "VQL": "Visualize SCATTER SELECT Low_Estimate , High_Estimate FROM film_market_estimation",
        "db_id": "film_rank",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Low_Estimate , High_Estimate FROM film_market_estimation', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Low_Estimate , High_Estimate FROM film_market_estimation'}",
        "record_name": "1398",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Return a scatter on what are the low and high estimates of film markets ?",
        "question_toks": [
            "Return",
            "a",
            "scatter",
            "on",
            "what",
            "are",
            "the",
            "low",
            "and",
            "high",
            "estimates",
            "of",
            "film",
            "markets",
            "?"
        ],
        "query": "Visualize SCATTER SELECT Low_Estimate , High_Estimate FROM film_market_estimation",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Low_Estimate",
            ",",
            "High_Estimate",
            "FROM",
            "film_market_estimation"
        ],
        "choose_schema": "Table film_market_estimation, columns = [*,Estimation_ID, Low_Estimate, High_Estimate, Film_ID, Type, Market_ID, Year]",
        "choose_schema_rat_link": "film_market_estimation.high_estimate@SEP@film_market_estimation.low_estimate@SEP@film.film_id@SEP@film_market_estimation.film_id@SEP@market.market_id@SEP@film_market_estimation.market_id"
    },
    {
        "nl_queries": "Show team_id from each team name",
        "VQL": "Visualize BAR SELECT Team_Name , Team_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Team_Name , Team_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Team_Name , Team_ID FROM basketball_match'}",
        "record_name": "3110",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Show team_id from each team name",
        "question_toks": [
            "Show",
            "team_id",
            "from",
            "each",
            "team",
            "name"
        ],
        "query": "Visualize BAR SELECT Team_Name , Team_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Team_Name",
            ",",
            "Team_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_name@SEP@basketball_match.team_id"
    },
    {
        "nl_queries": "A pie chart shows the proportion of All_Neutral and School_ID .",
        "VQL": "Visualize PIE SELECT All_Neutral , School_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT All_Neutral , School_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT All_Neutral , School_ID FROM basketball_match'}",
        "record_name": "3155",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "A pie chart shows the proportion of All_Neutral and School_ID .",
        "question_toks": [
            "A",
            "pie",
            "chart",
            "shows",
            "the",
            "proportion",
            "of",
            "All_Neutral",
            "and",
            "School_ID",
            "."
        ],
        "query": "Visualize PIE SELECT All_Neutral , School_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "All_Neutral",
            ",",
            "School_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "university.school@SEP@basketball_match.school_id@SEP@university.school_id"
    },
    {
        "nl_queries": "Return a scatter chart about the correlation between People_ID and Weight .",
        "VQL": "Visualize SCATTER SELECT People_ID , Weight FROM people",
        "db_id": "candidate_poll",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT People_ID , Weight FROM people', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT People_ID , Weight FROM people'}",
        "record_name": "391",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Return a scatter chart about the correlation between People_ID and Weight .",
        "question_toks": [
            "Return",
            "a",
            "scatter",
            "chart",
            "about",
            "the",
            "correlation",
            "between",
            "People_ID",
            "and",
            "Weight",
            "."
        ],
        "query": "Visualize SCATTER SELECT People_ID , Weight FROM people",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "People_ID",
            ",",
            "Weight",
            "FROM",
            "people"
        ],
        "choose_schema": "Table candidate, columns = [*,Candidate_ID, People_ID, Poll_Source, Date, Support_rate, Consider_rate, Oppose_rate, Unsure_rate]@SEP@Table people, columns = [*,People_ID, Sex, Name, Date_of_Birth, Height, Weight]",
        "choose_schema_rat_link": "candidate.people_id@SEP@people.people_id@SEP@people.weight"
    },
    {
        "nl_queries": "Give me the comparison about ACC_Percent over the All_Neutral .",
        "VQL": "Visualize BAR SELECT All_Neutral , ACC_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT All_Neutral , ACC_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT All_Neutral , ACC_Percent FROM basketball_match'}",
        "record_name": "3144",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Give me the comparison about ACC_Percent over the All_Neutral .",
        "question_toks": [
            "Give",
            "me",
            "the",
            "comparison",
            "about",
            "ACC_Percent",
            "over",
            "the",
            "All_Neutral",
            "."
        ],
        "query": "Visualize BAR SELECT All_Neutral , ACC_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "All_Neutral",
            ",",
            "ACC_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Give me the comparison about All_Games_Percent over the ACC_Regular_Season by a bar chart .",
        "VQL": "Visualize BAR SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match'}",
        "record_name": "3137",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Give me the comparison about All_Games_Percent over the ACC_Regular_Season by a bar chart .",
        "question_toks": [
            "Give",
            "me",
            "the",
            "comparison",
            "about",
            "All_Games_Percent",
            "over",
            "the",
            "ACC_Regular_Season",
            "by",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "ACC_Regular_Season",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Draw a pie chart about the proportion of ACC_Regular_Season and ACC_Percent .",
        "VQL": "Visualize PIE SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match'}",
        "record_name": "3150",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Draw a pie chart about the proportion of ACC_Regular_Season and ACC_Percent .",
        "question_toks": [
            "Draw",
            "a",
            "pie",
            "chart",
            "about",
            "the",
            "proportion",
            "of",
            "ACC_Regular_Season",
            "and",
            "ACC_Percent",
            "."
        ],
        "query": "Visualize PIE SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "ACC_Regular_Season",
            ",",
            "ACC_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Plot a scatter chart , support rate by consider_rate .",
        "VQL": "Visualize SCATTER SELECT Support_rate , Consider_rate FROM candidate",
        "db_id": "candidate_poll",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Support_rate , Consider_rate FROM candidate', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Support_rate , Consider_rate FROM candidate'}",
        "record_name": "399",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Plot a scatter chart , support rate by consider_rate .",
        "question_toks": [
            "Plot",
            "a",
            "scatter",
            "chart",
            ",",
            "support",
            "rate",
            "by",
            "consider_rate",
            "."
        ],
        "query": "Visualize SCATTER SELECT Support_rate , Consider_rate FROM candidate",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Support_rate",
            ",",
            "Consider_rate",
            "FROM",
            "candidate"
        ],
        "choose_schema": "Table candidate, columns = [*,Candidate_ID, People_ID, Poll_Source, Date, Support_rate, Consider_rate, Oppose_rate, Unsure_rate]",
        "choose_schema_rat_link": "candidate.support_rate@SEP@candidate.consider_rate"
    },
    {
        "nl_queries": "Return a scatter chart on how many distinct order ids correspond to each product ?",
        "VQL": "Visualize SCATTER SELECT product_id , count(DISTINCT order_id) FROM Order_items",
        "db_id": "customers_and_invoices",
        "hardness": "Medium",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT product_id , count(DISTINCT order_id) FROM Order_items', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT product_id , count(DISTINCT order_id) FROM Order_items'}",
        "record_name": "966",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        7
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                45,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                44,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Return a scatter chart on how many distinct order ids correspond to each product ?",
        "question_toks": [
            "Return",
            "a",
            "scatter",
            "chart",
            "on",
            "how",
            "many",
            "distinct",
            "order",
            "ids",
            "correspond",
            "to",
            "each",
            "product",
            "?"
        ],
        "query": "Visualize SCATTER SELECT product_id , count(DISTINCT order_id) FROM Order_items",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "product_id",
            ",",
            "count",
            "(",
            "DISTINCT",
            "order_id",
            ")",
            "FROM",
            "Order_items"
        ],
        "choose_schema": "Table Products, columns = [*,product_id, parent_product_id, production_type_code, unit_price, product_name, product_color, product_size]@SEP@Table Order_Items, columns = [*,order_item_id, order_id, product_id, product_quantity, other_order_item_details]@SEP@Table Invoice_Line_Items, columns = [*,order_item_id, invoice_number, product_id, product_title, product_quantity, product_price, derived_product_cost, derived_vat_payable, derived_total_cost]",
        "choose_schema_rat_link": "orders.order_id@SEP@invoices.order_id@SEP@order_items.order_id@SEP@orders.order_details@SEP@order_items.order_item_id@SEP@invoice_line_items.order_item_id@SEP@product_categories.product_type_description@SEP@products.product_id@SEP@products.product_name@SEP@products.product_color@SEP@products.product_size@SEP@order_items.product_id@SEP@order_items.product_quantity@SEP@invoice_line_items.product_id@SEP@invoice_line_items.product_title@SEP@invoice_line_items.product_quantity@SEP@invoice_line_items.product_price"
    },
    {
        "nl_queries": "Find ACC_Regular_Season and ACC_Percent , and visualize them by a bar chart .",
        "VQL": "Visualize BAR SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match'}",
        "record_name": "3135",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Find ACC_Regular_Season and ACC_Percent , and visualize them by a bar chart .",
        "question_toks": [
            "Find",
            "ACC_Regular_Season",
            "and",
            "ACC_Percent",
            ",",
            "and",
            "visualize",
            "them",
            "by",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "ACC_Regular_Season",
            ",",
            "ACC_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Give me the comparison about ACC_Percent over the Team_Name by a bar chart .",
        "VQL": "Visualize BAR SELECT Team_Name , ACC_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Team_Name , ACC_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Team_Name , ACC_Percent FROM basketball_match'}",
        "record_name": "3132",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Give me the comparison about ACC_Percent over the Team_Name by a bar chart .",
        "question_toks": [
            "Give",
            "me",
            "the",
            "comparison",
            "about",
            "ACC_Percent",
            "over",
            "the",
            "Team_Name",
            "by",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT Team_Name , ACC_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Team_Name",
            ",",
            "ACC_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road@SEP@basketball_match.team_id@SEP@basketball_match.team_name"
    },
    {
        "nl_queries": "Visualize a bar chart to show editors' names and their ages .",
        "VQL": "Visualize BAR SELECT Name , Age FROM editor",
        "db_id": "journal_committee",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Name , Age FROM editor', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Name , Age FROM editor'}",
        "record_name": "2053",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Visualize a bar chart to show editors' names and their ages .",
        "question_toks": [
            "Visualize",
            "a",
            "bar",
            "chart",
            "to",
            "show",
            "editors'",
            "names",
            "and",
            "their",
            "ages",
            "."
        ],
        "query": "Visualize BAR SELECT Name , Age FROM editor",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Name",
            ",",
            "Age",
            "FROM",
            "editor"
        ],
        "choose_schema": "Table editor, columns = [*,Editor_ID, Name, Age]",
        "choose_schema_rat_link": "editor.editor_id@SEP@journal_committee.editor_id@SEP@editor.name@SEP@editor.age"
    },
    {
        "nl_queries": "Visualize the relationship between People_ID and Weight .",
        "VQL": "Visualize SCATTER SELECT People_ID , Weight FROM people",
        "db_id": "candidate_poll",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT People_ID , Weight FROM people', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT People_ID , Weight FROM people'}",
        "record_name": "391",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Visualize the relationship between People_ID and Weight .",
        "question_toks": [
            "Visualize",
            "the",
            "relationship",
            "between",
            "People_ID",
            "and",
            "Weight",
            "."
        ],
        "query": "Visualize SCATTER SELECT People_ID , Weight FROM people",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "People_ID",
            ",",
            "Weight",
            "FROM",
            "people"
        ],
        "choose_schema": "Table candidate, columns = [*,Candidate_ID, People_ID, Poll_Source, Date, Support_rate, Consider_rate, Oppose_rate, Unsure_rate]@SEP@Table people, columns = [*,People_ID, Sex, Name, Date_of_Birth, Height, Weight]",
        "choose_schema_rat_link": "candidate.people_id@SEP@people.people_id@SEP@people.weight"
    },
    {
        "nl_queries": "Show me a scatter plot of people id and height for .",
        "VQL": "Visualize SCATTER SELECT People_ID , Height FROM people",
        "db_id": "candidate_poll",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT People_ID , Height FROM people', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT People_ID , Height FROM people'}",
        "record_name": "392",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Show me a scatter plot of people id and height for .",
        "question_toks": [
            "Show",
            "me",
            "a",
            "scatter",
            "plot",
            "of",
            "people",
            "id",
            "and",
            "height",
            "for",
            "."
        ],
        "query": "Visualize SCATTER SELECT People_ID , Height FROM people",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "People_ID",
            ",",
            "Height",
            "FROM",
            "people"
        ],
        "choose_schema": "Table candidate, columns = [*,Candidate_ID, People_ID, Poll_Source, Date, Support_rate, Consider_rate, Oppose_rate, Unsure_rate]@SEP@Table people, columns = [*,People_ID, Sex, Name, Date_of_Birth, Height, Weight]",
        "choose_schema_rat_link": "candidate.people_id@SEP@people.people_id@SEP@people.height"
    },
    {
        "nl_queries": "Plot a scatter chart , team id by all_games_percent .",
        "VQL": "Visualize SCATTER SELECT Team_ID , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Team_ID , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Team_ID , All_Games_Percent FROM basketball_match'}",
        "record_name": "3106",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Plot a scatter chart , team id by all_games_percent .",
        "question_toks": [
            "Plot",
            "a",
            "scatter",
            "chart",
            ",",
            "team",
            "id",
            "by",
            "all_games_percent",
            "."
        ],
        "query": "Visualize SCATTER SELECT Team_ID , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Team_ID",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name"
    },
    {
        "nl_queries": "Draw a scatter chart about the correlation between Team_ID and ACC_Percent .",
        "VQL": "Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Team_ID , ACC_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match'}",
        "record_name": "3120",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Draw a scatter chart about the correlation between Team_ID and ACC_Percent .",
        "question_toks": [
            "Draw",
            "a",
            "scatter",
            "chart",
            "about",
            "the",
            "correlation",
            "between",
            "Team_ID",
            "and",
            "ACC_Percent",
            "."
        ],
        "query": "Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Team_ID",
            ",",
            "ACC_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name@SEP@basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Give me the comparison about meter_100 over the meter_400 .",
        "VQL": "Visualize BAR SELECT meter_400 , meter_100 FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT meter_400 , meter_100 FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT meter_400 , meter_100 FROM swimmer'}",
        "record_name": "2919",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Give me the comparison about meter_100 over the meter_400 .",
        "question_toks": [
            "Give",
            "me",
            "the",
            "comparison",
            "about",
            "meter_100",
            "over",
            "the",
            "meter_400",
            "."
        ],
        "query": "Visualize BAR SELECT meter_400 , meter_100 FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "meter_400",
            ",",
            "meter_100",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]",
        "choose_schema_rat_link": "swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_400@SEP@swimmer.meter_500@SEP@swimmer.meter_600@SEP@swimmer.meter_700"
    },
    {
        "nl_queries": "Show me about the proportion of All_Games_Percent and All_Games_Percent in a pie chart .",
        "VQL": "Visualize PIE SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match'}",
        "record_name": "3136",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Show me about the proportion of All_Games_Percent and All_Games_Percent in a pie chart .",
        "question_toks": [
            "Show",
            "me",
            "about",
            "the",
            "proportion",
            "of",
            "All_Games_Percent",
            "and",
            "All_Games_Percent",
            "in",
            "a",
            "pie",
            "chart",
            "."
        ],
        "query": "Visualize PIE SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "ACC_Regular_Season",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]"
    },
    {
        "nl_queries": "List the dates and vote percents of elections . Show bar chart .",
        "VQL": "Visualize BAR SELECT Date , Vote_Percent FROM election",
        "db_id": "election_representative",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Date , Vote_Percent FROM election', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Date , Vote_Percent FROM election'}",
        "record_name": "1326",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "List the dates and vote percents of elections . Show bar chart .",
        "question_toks": [
            "List",
            "the",
            "dates",
            "and",
            "vote",
            "percents",
            "of",
            "elections",
            ".",
            "Show",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT Date , Vote_Percent FROM election",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Date",
            ",",
            "Vote_Percent",
            "FROM",
            "election"
        ],
        "choose_schema": "Table election, columns = [*,Election_ID, Representative_ID, Date, Votes, Vote_Percent, Seats, Place]",
        "choose_schema_rat_link": "election.vote_percent@SEP@election.date@SEP@election.votes@SEP@election.election_id"
    },
    {
        "nl_queries": "Visualize a pie chart about the proportion of All_Games and ACC_Percent .",
        "VQL": "Visualize PIE SELECT All_Games , ACC_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT All_Games , ACC_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT All_Games , ACC_Percent FROM basketball_match'}",
        "record_name": "3152",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Visualize a pie chart about the proportion of All_Games and ACC_Percent .",
        "question_toks": [
            "Visualize",
            "a",
            "pie",
            "chart",
            "about",
            "the",
            "proportion",
            "of",
            "All_Games",
            "and",
            "ACC_Percent",
            "."
        ],
        "query": "Visualize PIE SELECT All_Games , ACC_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "All_Games",
            ",",
            "ACC_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Show me school_id by acc regular season in a histogram",
        "VQL": "Visualize BAR SELECT ACC_Regular_Season , School_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT ACC_Regular_Season , School_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT ACC_Regular_Season , School_ID FROM basketball_match'}",
        "record_name": "3113",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Show me school_id by acc regular season in a histogram",
        "question_toks": [
            "Show",
            "me",
            "school_id",
            "by",
            "acc",
            "regular",
            "season",
            "in",
            "a",
            "histogram"
        ],
        "query": "Visualize BAR SELECT ACC_Regular_Season , School_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "ACC_Regular_Season",
            ",",
            "School_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@university.school@SEP@basketball_match.school_id@SEP@university.school_id@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Return a scatter chart about the correlation between Team_ID and All_Games_Percent .",
        "VQL": "Visualize SCATTER SELECT Team_ID , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Team_ID , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Team_ID , All_Games_Percent FROM basketball_match'}",
        "record_name": "3106",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Return a scatter chart about the correlation between Team_ID and All_Games_Percent .",
        "question_toks": [
            "Return",
            "a",
            "scatter",
            "chart",
            "about",
            "the",
            "correlation",
            "between",
            "Team_ID",
            "and",
            "All_Games_Percent",
            "."
        ],
        "query": "Visualize SCATTER SELECT Team_ID , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Team_ID",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name"
    },
    {
        "nl_queries": "Find All_Road and All_Games_Percent , and visualize them by a bar chart .",
        "VQL": "Visualize BAR SELECT All_Road , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT All_Road , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT All_Road , All_Games_Percent FROM basketball_match'}",
        "record_name": "3143",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Find All_Road and All_Games_Percent , and visualize them by a bar chart .",
        "question_toks": [
            "Find",
            "All_Road",
            "and",
            "All_Games_Percent",
            ",",
            "and",
            "visualize",
            "them",
            "by",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT All_Road , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "All_Road",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]"
    },
    {
        "nl_queries": "A pie chart shows the proportion of Team_Name and All_Games_Percent .",
        "VQL": "Visualize PIE SELECT Team_Name , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT Team_Name , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT Team_Name , All_Games_Percent FROM basketball_match'}",
        "record_name": "3133",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "A pie chart shows the proportion of Team_Name and All_Games_Percent .",
        "question_toks": [
            "A",
            "pie",
            "chart",
            "shows",
            "the",
            "proportion",
            "of",
            "Team_Name",
            "and",
            "All_Games_Percent",
            "."
        ],
        "query": "Visualize PIE SELECT Team_Name , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "Team_Name",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name"
    },
    {
        "nl_queries": "Draw a bar chart about the distribution of Name and Height .",
        "VQL": "Visualize BAR SELECT Name , Height FROM people",
        "db_id": "candidate_poll",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Name , Height FROM people', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Name , Height FROM people'}",
        "record_name": "394",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Draw a bar chart about the distribution of Name and Height .",
        "question_toks": [
            "Draw",
            "a",
            "bar",
            "chart",
            "about",
            "the",
            "distribution",
            "of",
            "Name",
            "and",
            "Height",
            "."
        ],
        "query": "Visualize BAR SELECT Name , Height FROM people",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Name",
            ",",
            "Height",
            "FROM",
            "people"
        ],
        "choose_schema": "Table people, columns = [*,People_ID, Sex, Name, Date_of_Birth, Height, Weight]",
        "choose_schema_rat_link": "people.name@SEP@people.height"
    },
    {
        "nl_queries": "Count different addresses of each school . Show bar chart .",
        "VQL": "Visualize BAR SELECT SCHOOL_CODE , count(DISTINCT dept_address) FROM department",
        "db_id": "college_1",
        "hardness": "Medium",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT SCHOOL_CODE , count(DISTINCT dept_address) FROM department', 'binning': ''}, 'VQL': 'Visualize BAR SELECT SCHOOL_CODE , count(DISTINCT dept_address) FROM department'}",
        "record_name": "543",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                15,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Count different addresses of each school . Show bar chart .",
        "question_toks": [
            "Count",
            "different",
            "addresses",
            "of",
            "each",
            "school",
            ".",
            "Show",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT SCHOOL_CODE , count(DISTINCT dept_address) FROM department",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "SCHOOL_CODE",
            ",",
            "count",
            "(",
            "DISTINCT",
            "dept_address",
            ")",
            "FROM",
            "department"
        ],
        "choose_schema": "Table DEPARTMENT, columns = [*,DEPT_CODE, DEPT_NAME, SCHOOL_CODE, EMP_NUM, DEPT_ADDRESS, DEPT_EXTENSION]",
        "choose_schema_rat_link": "department.school_code"
    },
    {
        "nl_queries": "What is the relationship between Snatch and Clean_Jerk ?",
        "VQL": "Visualize SCATTER SELECT Snatch , Clean_Jerk FROM body_builder",
        "db_id": "body_builder",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Snatch , Clean_Jerk FROM body_builder', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Snatch , Clean_Jerk FROM body_builder'}",
        "record_name": "356",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "What is the relationship between Snatch and Clean_Jerk ?",
        "question_toks": [
            "What",
            "is",
            "the",
            "relationship",
            "between",
            "Snatch",
            "and",
            "Clean_Jerk",
            "?"
        ],
        "query": "Visualize SCATTER SELECT Snatch , Clean_Jerk FROM body_builder",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Snatch",
            ",",
            "Clean_Jerk",
            "FROM",
            "body_builder"
        ],
        "choose_schema": "Table body_builder, columns = [*,Body_Builder_ID, People_ID, Snatch, Clean_Jerk, Total]",
        "choose_schema_rat_link": "body_builder.snatch@SEP@body_builder.clean_jerk"
    },
    {
        "nl_queries": "Give me a pie chart to reflect the proportion of ACC_Regular_Season and Team_ID .",
        "VQL": "Visualize PIE SELECT ACC_Regular_Season , Team_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT ACC_Regular_Season , Team_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT ACC_Regular_Season , Team_ID FROM basketball_match'}",
        "record_name": "3127",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Give me a pie chart to reflect the proportion of ACC_Regular_Season and Team_ID .",
        "question_toks": [
            "Give",
            "me",
            "a",
            "pie",
            "chart",
            "to",
            "reflect",
            "the",
            "proportion",
            "of",
            "ACC_Regular_Season",
            "and",
            "Team_ID",
            "."
        ],
        "query": "Visualize PIE SELECT ACC_Regular_Season , Team_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "ACC_Regular_Season",
            ",",
            "Team_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road@SEP@basketball_match.team_id@SEP@basketball_match.team_name"
    },
    {
        "nl_queries": "Return the low and high estimates for all film markets in a scatter chart",
        "VQL": "Visualize SCATTER SELECT Low_Estimate , High_Estimate FROM film_market_estimation",
        "db_id": "film_rank",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Low_Estimate , High_Estimate FROM film_market_estimation', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Low_Estimate , High_Estimate FROM film_market_estimation'}",
        "record_name": "1398",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Return the low and high estimates for all film markets in a scatter chart",
        "question_toks": [
            "Return",
            "the",
            "low",
            "and",
            "high",
            "estimates",
            "for",
            "all",
            "film",
            "markets",
            "in",
            "a",
            "scatter",
            "chart"
        ],
        "query": "Visualize SCATTER SELECT Low_Estimate , High_Estimate FROM film_market_estimation",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Low_Estimate",
            ",",
            "High_Estimate",
            "FROM",
            "film_market_estimation"
        ],
        "choose_schema": "Table film_market_estimation, columns = [*,Estimation_ID, Low_Estimate, High_Estimate, Film_ID, Type, Market_ID, Year]",
        "choose_schema_rat_link": "film_market_estimation.high_estimate@SEP@film_market_estimation.low_estimate@SEP@film.film_id@SEP@film_market_estimation.film_id@SEP@market.market_id@SEP@film_market_estimation.market_id"
    },
    {
        "nl_queries": "A scatter chart shows the correlation between People_ID and Total .",
        "VQL": "Visualize SCATTER SELECT People_ID , Total FROM body_builder",
        "db_id": "body_builder",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT People_ID , Total FROM body_builder', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT People_ID , Total FROM body_builder'}",
        "record_name": "359",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "A scatter chart shows the correlation between People_ID and Total .",
        "question_toks": [
            "A",
            "scatter",
            "chart",
            "shows",
            "the",
            "correlation",
            "between",
            "People_ID",
            "and",
            "Total",
            "."
        ],
        "query": "Visualize SCATTER SELECT People_ID , Total FROM body_builder",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "People_ID",
            ",",
            "Total",
            "FROM",
            "body_builder"
        ],
        "choose_schema": "Table body_builder, columns = [*,Body_Builder_ID, People_ID, Snatch, Clean_Jerk, Total]@SEP@Table people, columns = [*,People_ID, Name, Height, Weight, Birth_Date, Birth_Place]",
        "choose_schema_rat_link": "body_builder.people_id@SEP@people.people_id@SEP@body_builder.total"
    },
    {
        "nl_queries": "Show me a scatter plot of customer event id and property_id for .",
        "VQL": "Visualize SCATTER SELECT Customer_Event_ID , property_id FROM customer_events",
        "db_id": "local_govt_and_lot",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Customer_Event_ID , property_id FROM customer_events', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Customer_Event_ID , property_id FROM customer_events'}",
        "record_name": "2124",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        7
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                31,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                34,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Show me a scatter plot of customer event id and property_id for .",
        "question_toks": [
            "Show",
            "me",
            "a",
            "scatter",
            "plot",
            "of",
            "customer",
            "event",
            "id",
            "and",
            "property_id",
            "for",
            "."
        ],
        "query": "Visualize SCATTER SELECT Customer_Event_ID , property_id FROM customer_events",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Customer_Event_ID",
            ",",
            "property_id",
            "FROM",
            "customer_events"
        ],
        "choose_schema": "Table Properties, columns = [*,property_id, property_type_code, property_address, other_details]@SEP@Table Residents, columns = [*,resident_id, property_id, date_moved_in, date_moved_out, other_details]@SEP@Table Residents_Services, columns = [*,resident_id, service_id, date_moved_in, property_id, date_requested, date_provided, other_details]@SEP@Table Customer_Events, columns = [*,Customer_Event_ID, customer_id, date_moved_in, property_id, resident_id, thing_id]@SEP@Table Customer_Event_Notes, columns = [*,Customer_Event_Note_ID, Customer_Event_ID, service_type_code, resident_id, property_id, date_moved_in]",
        "choose_schema_rat_link": "customer_events.customer_event_id@SEP@customer_event_notes.customer_event_id@SEP@customer_event_notes.customer_event_note_id@SEP@customers.customer_id@SEP@customers.customer_details@SEP@customer_events.customer_id@SEP@properties.property_id@SEP@properties.property_type_code@SEP@properties.property_address@SEP@residents.property_id@SEP@residents_services.property_id@SEP@customer_events.property_id@SEP@customer_event_notes.property_id"
    },
    {
        "nl_queries": "A pie chart shows the proportion of ACC_Regular_Season and School_ID .",
        "VQL": "Visualize PIE SELECT ACC_Regular_Season , School_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT ACC_Regular_Season , School_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT ACC_Regular_Season , School_ID FROM basketball_match'}",
        "record_name": "3149",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "A pie chart shows the proportion of ACC_Regular_Season and School_ID .",
        "question_toks": [
            "A",
            "pie",
            "chart",
            "shows",
            "the",
            "proportion",
            "of",
            "ACC_Regular_Season",
            "and",
            "School_ID",
            "."
        ],
        "query": "Visualize PIE SELECT ACC_Regular_Season , School_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "ACC_Regular_Season",
            ",",
            "School_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road@SEP@university.school@SEP@basketball_match.school_id@SEP@university.school_id"
    },
    {
        "nl_queries": "Bar chart x axis all games y axis team_id",
        "VQL": "Visualize BAR SELECT All_Games , Team_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT All_Games , Team_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT All_Games , Team_ID FROM basketball_match'}",
        "record_name": "3114",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Bar chart x axis all games y axis team_id",
        "question_toks": [
            "Bar",
            "chart",
            "x",
            "axis",
            "all",
            "games",
            "y",
            "axis",
            "team_id"
        ],
        "query": "Visualize BAR SELECT All_Games , Team_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "All_Games",
            ",",
            "Team_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.all_games@SEP@basketball_match.all_games_percent@SEP@basketball_match.team_id@SEP@basketball_match.team_name"
    },
    {
        "nl_queries": "Scatter plot to show classroom on x axis and grade on y axis .",
        "VQL": "Visualize SCATTER SELECT Classroom , Grade FROM list",
        "db_id": "student_1",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Classroom , Grade FROM list', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Classroom , Grade FROM list'}",
        "record_name": "2872",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Scatter plot to show classroom on x axis and grade on y axis .",
        "question_toks": [
            "Scatter",
            "plot",
            "to",
            "show",
            "classroom",
            "on",
            "x",
            "axis",
            "and",
            "grade",
            "on",
            "y",
            "axis",
            "."
        ],
        "query": "Visualize SCATTER SELECT Classroom , Grade FROM list",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Classroom",
            ",",
            "Grade",
            "FROM",
            "list"
        ],
        "choose_schema": "Table list, columns = [*,LastName, FirstName, Grade, Classroom]@SEP@Table teachers, columns = [*,LastName, FirstName, Classroom]",
        "choose_schema_rat_link": "list.grade"
    },
    {
        "nl_queries": "Give me the comparison about meter_100 over the meter_300 by a bar chart .",
        "VQL": "Visualize BAR SELECT meter_300 , meter_100 FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT meter_300 , meter_100 FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT meter_300 , meter_100 FROM swimmer'}",
        "record_name": "2917",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Give me the comparison about meter_100 over the meter_300 by a bar chart .",
        "question_toks": [
            "Give",
            "me",
            "the",
            "comparison",
            "about",
            "meter_100",
            "over",
            "the",
            "meter_300",
            "by",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT meter_300 , meter_100 FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "meter_300",
            ",",
            "meter_100",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]",
        "choose_schema_rat_link": "swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_400@SEP@swimmer.meter_500@SEP@swimmer.meter_600@SEP@swimmer.meter_700"
    },
    {
        "nl_queries": "Draw a bar chart about the distribution of All_Road and All_Games_Percent .",
        "VQL": "Visualize BAR SELECT All_Road , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT All_Road , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT All_Road , All_Games_Percent FROM basketball_match'}",
        "record_name": "3143",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Draw a bar chart about the distribution of All_Road and All_Games_Percent .",
        "question_toks": [
            "Draw",
            "a",
            "bar",
            "chart",
            "about",
            "the",
            "distribution",
            "of",
            "All_Road",
            "and",
            "All_Games_Percent",
            "."
        ],
        "query": "Visualize BAR SELECT All_Road , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "All_Road",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]"
    },
    {
        "nl_queries": "Draw a bar chart about the distribution of All_Road and School_ID .",
        "VQL": "Visualize BAR SELECT All_Road , School_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT All_Road , School_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT All_Road , School_ID FROM basketball_match'}",
        "record_name": "3117",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Draw a bar chart about the distribution of All_Road and School_ID .",
        "question_toks": [
            "Draw",
            "a",
            "bar",
            "chart",
            "about",
            "the",
            "distribution",
            "of",
            "All_Road",
            "and",
            "School_ID",
            "."
        ],
        "query": "Visualize BAR SELECT All_Road , School_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "All_Road",
            ",",
            "School_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "university.school@SEP@basketball_match.school_id@SEP@university.school_id"
    },
    {
        "nl_queries": "Show me a bar chart for what are the apartment number and the room count of each apartment ?",
        "VQL": "Visualize BAR SELECT apt_number , room_count FROM Apartments",
        "db_id": "apartment_rentals",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT apt_number , room_count FROM Apartments', 'binning': ''}, 'VQL': 'Visualize BAR SELECT apt_number , room_count FROM Apartments'}",
        "record_name": "97",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Show me a bar chart for what are the apartment number and the room count of each apartment ?",
        "question_toks": [
            "Show",
            "me",
            "a",
            "bar",
            "chart",
            "for",
            "what",
            "are",
            "the",
            "apartment",
            "number",
            "and",
            "the",
            "room",
            "count",
            "of",
            "each",
            "apartment",
            "?"
        ],
        "query": "Visualize BAR SELECT apt_number , room_count FROM Apartments",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "apt_number",
            ",",
            "room_count",
            "FROM",
            "Apartments"
        ],
        "choose_schema": "Table Apartments, columns = [*,apt_id, building_id, apt_type_code, apt_number, bathroom_count, bedroom_count, room_count]",
        "choose_schema_rat_link": "apartments.apt_number@SEP@apartments.room_count@SEP@apartments.apt_id@SEP@apartments.apt_type_code@SEP@apartment_facilities.apt_id@SEP@apartment_bookings.apt_booking_id@SEP@apartment_bookings.apt_id@SEP@view_unit_status.apt_id@SEP@view_unit_status.apt_booking_id"
    },
    {
        "nl_queries": "Return a pie chart about the proportion of Team_Name and All_Games_Percent .",
        "VQL": "Visualize PIE SELECT Team_Name , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT Team_Name , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT Team_Name , All_Games_Percent FROM basketball_match'}",
        "record_name": "3133",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Return a pie chart about the proportion of Team_Name and All_Games_Percent .",
        "question_toks": [
            "Return",
            "a",
            "pie",
            "chart",
            "about",
            "the",
            "proportion",
            "of",
            "Team_Name",
            "and",
            "All_Games_Percent",
            "."
        ],
        "query": "Visualize PIE SELECT Team_Name , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "Team_Name",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name"
    },
    {
        "nl_queries": "Give me the comparison about ID over the meter_500 .",
        "VQL": "Visualize BAR SELECT meter_500 , ID FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT meter_500 , ID FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT meter_500 , ID FROM swimmer'}",
        "record_name": "2920",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Give me the comparison about ID over the meter_500 .",
        "question_toks": [
            "Give",
            "me",
            "the",
            "comparison",
            "about",
            "ID",
            "over",
            "the",
            "meter_500",
            "."
        ],
        "query": "Visualize BAR SELECT meter_500 , ID FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "meter_500",
            ",",
            "ID",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]@SEP@Table stadium, columns = [*,ID, name, Capacity, City, Country, Opening_year]@SEP@Table event, columns = [*,ID, Name, Stadium_ID, Year]@SEP@Table record, columns = [*,ID, Result, Swimmer_ID, Event_ID]",
        "choose_schema_rat_link": "swimmer.id@SEP@stadium.id@SEP@event.id@SEP@record.id@SEP@swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_400@SEP@swimmer.meter_500@SEP@swimmer.meter_600@SEP@swimmer.meter_700"
    },
    {
        "nl_queries": "Compute the total population across county name as a pie chart .",
        "VQL": "Visualize PIE SELECT County_name , Population FROM county",
        "db_id": "election",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT County_name , Population FROM county', 'binning': ''}, 'VQL': 'Visualize PIE SELECT County_name , Population FROM county'}",
        "record_name": "1303",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Compute the total population across county name as a pie chart .",
        "question_toks": [
            "Compute",
            "the",
            "total",
            "population",
            "across",
            "county",
            "name",
            "as",
            "a",
            "pie",
            "chart",
            "."
        ],
        "query": "Visualize PIE SELECT County_name , Population FROM county",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "County_name",
            ",",
            "Population",
            "FROM",
            "county"
        ],
        "choose_schema": "Table county, columns = [*,County_Id, County_name, Population, Zip_code]",
        "choose_schema_rat_link": "county.county_name@SEP@county.population@SEP@county.county_id@SEP@election.counties_represented"
    },
    {
        "nl_queries": "Show the county name and population of all counties . Show bar chart .",
        "VQL": "Visualize BAR SELECT County_name , Population FROM county",
        "db_id": "election",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT County_name , Population FROM county', 'binning': ''}, 'VQL': 'Visualize BAR SELECT County_name , Population FROM county'}",
        "record_name": "1304",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Show the county name and population of all counties . Show bar chart .",
        "question_toks": [
            "Show",
            "the",
            "county",
            "name",
            "and",
            "population",
            "of",
            "all",
            "counties",
            ".",
            "Show",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT County_name , Population FROM county",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "County_name",
            ",",
            "Population",
            "FROM",
            "county"
        ],
        "choose_schema": "Table county, columns = [*,County_Id, County_name, Population, Zip_code]",
        "choose_schema_rat_link": "county.county_name@SEP@county.county_id@SEP@election.counties_represented@SEP@county.population"
    },
    {
        "nl_queries": "Find Team_Name and ACC_Percent , and visualize them by a bar chart .",
        "VQL": "Visualize BAR SELECT Team_Name , ACC_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Team_Name , ACC_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Team_Name , ACC_Percent FROM basketball_match'}",
        "record_name": "3132",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Find Team_Name and ACC_Percent , and visualize them by a bar chart .",
        "question_toks": [
            "Find",
            "Team_Name",
            "and",
            "ACC_Percent",
            ",",
            "and",
            "visualize",
            "them",
            "by",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT Team_Name , ACC_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Team_Name",
            ",",
            "ACC_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name@SEP@basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Visualize a pie chart about the proportion of All_Road and All_Games_Percent .",
        "VQL": "Visualize PIE SELECT All_Road , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT All_Road , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT All_Road , All_Games_Percent FROM basketball_match'}",
        "record_name": "3142",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Visualize a pie chart about the proportion of All_Road and All_Games_Percent .",
        "question_toks": [
            "Visualize",
            "a",
            "pie",
            "chart",
            "about",
            "the",
            "proportion",
            "of",
            "All_Road",
            "and",
            "All_Games_Percent",
            "."
        ],
        "query": "Visualize PIE SELECT All_Road , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "All_Road",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]"
    },
    {
        "nl_queries": "Give me the comparison about ACC_Percent over the All_Road by a bar chart .",
        "VQL": "Visualize BAR SELECT All_Road , ACC_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT All_Road , ACC_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT All_Road , ACC_Percent FROM basketball_match'}",
        "record_name": "3141",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Give me the comparison about ACC_Percent over the All_Road by a bar chart .",
        "question_toks": [
            "Give",
            "me",
            "the",
            "comparison",
            "about",
            "ACC_Percent",
            "over",
            "the",
            "All_Road",
            "by",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT All_Road , ACC_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "All_Road",
            ",",
            "ACC_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Show id from each meter 300",
        "VQL": "Visualize BAR SELECT meter_300 , ID FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT meter_300 , ID FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT meter_300 , ID FROM swimmer'}",
        "record_name": "2916",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Show id from each meter 300",
        "question_toks": [
            "Show",
            "id",
            "from",
            "each",
            "meter",
            "300"
        ],
        "query": "Visualize BAR SELECT meter_300 , ID FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "meter_300",
            ",",
            "ID",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]@SEP@Table stadium, columns = [*,ID, name, Capacity, City, Country, Opening_year]@SEP@Table event, columns = [*,ID, Name, Stadium_ID, Year]@SEP@Table record, columns = [*,ID, Result, Swimmer_ID, Event_ID]",
        "choose_schema_rat_link": "swimmer.meter_300@SEP@swimmer.id@SEP@stadium.id@SEP@event.id@SEP@record.id@SEP@swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_400@SEP@swimmer.meter_500@SEP@swimmer.meter_600@SEP@swimmer.meter_700"
    },
    {
        "nl_queries": "Return a scatter chart about the correlation between Clean_Jerk and Total .",
        "VQL": "Visualize SCATTER SELECT Clean_Jerk , Total FROM body_builder",
        "db_id": "body_builder",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Clean_Jerk , Total FROM body_builder', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Clean_Jerk , Total FROM body_builder'}",
        "record_name": "353",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Return a scatter chart about the correlation between Clean_Jerk and Total .",
        "question_toks": [
            "Return",
            "a",
            "scatter",
            "chart",
            "about",
            "the",
            "correlation",
            "between",
            "Clean_Jerk",
            "and",
            "Total",
            "."
        ],
        "query": "Visualize SCATTER SELECT Clean_Jerk , Total FROM body_builder",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Clean_Jerk",
            ",",
            "Total",
            "FROM",
            "body_builder"
        ],
        "choose_schema": "Table body_builder, columns = [*,Body_Builder_ID, People_ID, Snatch, Clean_Jerk, Total]",
        "choose_schema_rat_link": "body_builder.clean_jerk@SEP@body_builder.total"
    },
    {
        "nl_queries": "Show the county name and population of all counties with a pie chart .",
        "VQL": "Visualize PIE SELECT County_name , Population FROM county",
        "db_id": "election",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT County_name , Population FROM county', 'binning': ''}, 'VQL': 'Visualize PIE SELECT County_name , Population FROM county'}",
        "record_name": "1303",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Show the county name and population of all counties with a pie chart .",
        "question_toks": [
            "Show",
            "the",
            "county",
            "name",
            "and",
            "population",
            "of",
            "all",
            "counties",
            "with",
            "a",
            "pie",
            "chart",
            "."
        ],
        "query": "Visualize PIE SELECT County_name , Population FROM county",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "County_name",
            ",",
            "Population",
            "FROM",
            "county"
        ],
        "choose_schema": "Table county, columns = [*,County_Id, County_name, Population, Zip_code]",
        "choose_schema_rat_link": "county.county_name@SEP@county.county_id@SEP@election.counties_represented@SEP@county.population"
    },
    {
        "nl_queries": "Draw a pie chart about the proportion of All_Games and All_Games_Percent .",
        "VQL": "Visualize PIE SELECT All_Games , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT All_Games , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT All_Games , All_Games_Percent FROM basketball_match'}",
        "record_name": "3139",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Draw a pie chart about the proportion of All_Games and All_Games_Percent .",
        "question_toks": [
            "Draw",
            "a",
            "pie",
            "chart",
            "about",
            "the",
            "proportion",
            "of",
            "All_Games",
            "and",
            "All_Games_Percent",
            "."
        ],
        "query": "Visualize PIE SELECT All_Games , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "All_Games",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]"
    },
    {
        "nl_queries": "Visualize a pie chart about the proportion of All_Games and Team_ID .",
        "VQL": "Visualize PIE SELECT All_Games , Team_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT All_Games , Team_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT All_Games , Team_ID FROM basketball_match'}",
        "record_name": "3128",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Visualize a pie chart about the proportion of All_Games and Team_ID .",
        "question_toks": [
            "Visualize",
            "a",
            "pie",
            "chart",
            "about",
            "the",
            "proportion",
            "of",
            "All_Games",
            "and",
            "Team_ID",
            "."
        ],
        "query": "Visualize PIE SELECT All_Games , Team_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "All_Games",
            ",",
            "Team_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name"
    },
    {
        "nl_queries": "Draw a bar chart about the distribution of meter_300 and ID .",
        "VQL": "Visualize BAR SELECT meter_300 , ID FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT meter_300 , ID FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT meter_300 , ID FROM swimmer'}",
        "record_name": "2916",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Draw a bar chart about the distribution of meter_300 and ID .",
        "question_toks": [
            "Draw",
            "a",
            "bar",
            "chart",
            "about",
            "the",
            "distribution",
            "of",
            "meter_300",
            "and",
            "ID",
            "."
        ],
        "query": "Visualize BAR SELECT meter_300 , ID FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "meter_300",
            ",",
            "ID",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]@SEP@Table stadium, columns = [*,ID, name, Capacity, City, Country, Opening_year]@SEP@Table event, columns = [*,ID, Name, Stadium_ID, Year]@SEP@Table record, columns = [*,ID, Result, Swimmer_ID, Event_ID]",
        "choose_schema_rat_link": "swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_400@SEP@swimmer.meter_500@SEP@swimmer.meter_600@SEP@swimmer.meter_700@SEP@swimmer.id@SEP@stadium.id@SEP@event.id@SEP@record.id"
    },
    {
        "nl_queries": "Give me a bar chart , that just lists the participant ids as Y and their details as X-axis .",
        "VQL": "Visualize BAR SELECT Participant_Details , Participant_ID FROM Participants",
        "db_id": "local_govt_in_alabama",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Participant_Details , Participant_ID FROM Participants', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Participant_Details , Participant_ID FROM Participants'}",
        "record_name": "2130",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Give me a bar chart , that just lists the participant ids as Y and their details as X-axis .",
        "question_toks": [
            "Give",
            "me",
            "a",
            "bar",
            "chart",
            ",",
            "that",
            "just",
            "lists",
            "the",
            "participant",
            "ids",
            "as",
            "Y",
            "and",
            "their",
            "details",
            "as",
            "X-axis",
            "."
        ],
        "query": "Visualize BAR SELECT Participant_Details , Participant_ID FROM Participants",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Participant_Details",
            ",",
            "Participant_ID",
            "FROM",
            "Participants"
        ],
        "choose_schema": "Table Participants, columns = [*,Participant_ID, Participant_Type_Code, Participant_Details]@SEP@Table Participants_in_Events, columns = [*,Event_ID, Participant_ID]",
        "choose_schema_rat_link": "participants.participant_id@SEP@participants_in_events.participant_id@SEP@participants.participant_type_code@SEP@participants.participant_details"
    },
    {
        "nl_queries": "Give me a pie to show vote_percent from different date .",
        "VQL": "Visualize PIE SELECT Date , Vote_Percent FROM election",
        "db_id": "election_representative",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT Date , Vote_Percent FROM election', 'binning': ''}, 'VQL': 'Visualize PIE SELECT Date , Vote_Percent FROM election'}",
        "record_name": "1325",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Give me a pie to show vote_percent from different date .",
        "question_toks": [
            "Give",
            "me",
            "a",
            "pie",
            "to",
            "show",
            "vote_percent",
            "from",
            "different",
            "date",
            "."
        ],
        "query": "Visualize PIE SELECT Date , Vote_Percent FROM election",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "Date",
            ",",
            "Vote_Percent",
            "FROM",
            "election"
        ],
        "choose_schema": "Table election, columns = [*,Election_ID, Representative_ID, Date, Votes, Vote_Percent, Seats, Place]",
        "choose_schema_rat_link": "election.votes@SEP@election.vote_percent@SEP@election.date"
    },
    {
        "nl_queries": "Give me the comparison about Team_ID over the ACC_Regular_Season by a bar chart .",
        "VQL": "Visualize BAR SELECT ACC_Regular_Season , Team_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT ACC_Regular_Season , Team_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT ACC_Regular_Season , Team_ID FROM basketball_match'}",
        "record_name": "3112",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Give me the comparison about Team_ID over the ACC_Regular_Season by a bar chart .",
        "question_toks": [
            "Give",
            "me",
            "the",
            "comparison",
            "about",
            "Team_ID",
            "over",
            "the",
            "ACC_Regular_Season",
            "by",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT ACC_Regular_Season , Team_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "ACC_Regular_Season",
            ",",
            "Team_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name@SEP@basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Plot a scatter chart , support rate by oppose_rate .",
        "VQL": "Visualize SCATTER SELECT Support_rate , Oppose_rate FROM candidate",
        "db_id": "candidate_poll",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Support_rate , Oppose_rate FROM candidate', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Support_rate , Oppose_rate FROM candidate'}",
        "record_name": "401",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Plot a scatter chart , support rate by oppose_rate .",
        "question_toks": [
            "Plot",
            "a",
            "scatter",
            "chart",
            ",",
            "support",
            "rate",
            "by",
            "oppose_rate",
            "."
        ],
        "query": "Visualize SCATTER SELECT Support_rate , Oppose_rate FROM candidate",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Support_rate",
            ",",
            "Oppose_rate",
            "FROM",
            "candidate"
        ],
        "choose_schema": "Table candidate, columns = [*,Candidate_ID, People_ID, Poll_Source, Date, Support_rate, Consider_rate, Oppose_rate, Unsure_rate]",
        "choose_schema_rat_link": "candidate.support_rate@SEP@candidate.oppose_rate"
    },
    {
        "nl_queries": "Give me the comparison about meter_100 over the name by a bar chart .",
        "VQL": "Visualize BAR SELECT name , meter_100 FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT name , meter_100 FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT name , meter_100 FROM swimmer'}",
        "record_name": "2915",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Give me the comparison about meter_100 over the name by a bar chart .",
        "question_toks": [
            "Give",
            "me",
            "the",
            "comparison",
            "about",
            "meter_100",
            "over",
            "the",
            "name",
            "by",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT name , meter_100 FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "name",
            ",",
            "meter_100",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]@SEP@Table stadium, columns = [*,ID, name, Capacity, City, Country, Opening_year]@SEP@Table event, columns = [*,ID, Name, Stadium_ID, Year]",
        "choose_schema_rat_link": "swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_400@SEP@swimmer.meter_500@SEP@swimmer.meter_600@SEP@swimmer.meter_700@SEP@swimmer.name@SEP@stadium.name@SEP@event.name"
    },
    {
        "nl_queries": "Give me the comparison about Height over the Name by a bar chart .",
        "VQL": "Visualize BAR SELECT Name , Height FROM people",
        "db_id": "candidate_poll",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Name , Height FROM people', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Name , Height FROM people'}",
        "record_name": "394",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Give me the comparison about Height over the Name by a bar chart .",
        "question_toks": [
            "Give",
            "me",
            "the",
            "comparison",
            "about",
            "Height",
            "over",
            "the",
            "Name",
            "by",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT Name , Height FROM people",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Name",
            ",",
            "Height",
            "FROM",
            "people"
        ],
        "choose_schema": "Table people, columns = [*,People_ID, Sex, Name, Date_of_Birth, Height, Weight]",
        "choose_schema_rat_link": "people.height@SEP@people.name"
    },
    {
        "nl_queries": "List the council tax ids and their related cmi cross references of all the parking fines .",
        "VQL": "Visualize SCATTER SELECT council_tax_id , cmi_cross_ref_id FROM parking_fines",
        "db_id": "local_govt_mdm",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT council_tax_id , cmi_cross_ref_id FROM parking_fines', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT council_tax_id , cmi_cross_ref_id FROM parking_fines'}",
        "record_name": "2158",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "List the council tax ids and their related cmi cross references of all the parking fines .",
        "question_toks": [
            "List",
            "the",
            "council",
            "tax",
            "ids",
            "and",
            "their",
            "related",
            "cmi",
            "cross",
            "references",
            "of",
            "all",
            "the",
            "parking",
            "fines",
            "."
        ],
        "query": "Visualize SCATTER SELECT council_tax_id , cmi_cross_ref_id FROM parking_fines",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "council_tax_id",
            ",",
            "cmi_cross_ref_id",
            "FROM",
            "parking_fines"
        ],
        "choose_schema": "Table CMI_Cross_References, columns = [*,cmi_cross_ref_id, master_customer_id, source_system_code]@SEP@Table Council_Tax, columns = [*,council_tax_id, cmi_cross_ref_id]@SEP@Table Business_Rates, columns = [*,business_rates_id, cmi_cross_ref_id]@SEP@Table Benefits_Overpayments, columns = [*,council_tax_id, cmi_cross_ref_id]@SEP@Table Parking_Fines, columns = [*,council_tax_id, cmi_cross_ref_id]@SEP@Table Rent_Arrears, columns = [*,council_tax_id, cmi_cross_ref_id]@SEP@Table Electoral_Register, columns = [*,electoral_register_id, cmi_cross_ref_id]",
        "choose_schema_rat_link": "council_tax.council_tax_id@SEP@benefits_overpayments.council_tax_id@SEP@parking_fines.council_tax_id@SEP@rent_arrears.council_tax_id@SEP@cmi_cross_references.cmi_cross_ref_id@SEP@council_tax.cmi_cross_ref_id@SEP@business_rates.cmi_cross_ref_id@SEP@parking_fines.cmi_cross_ref_id@SEP@rent_arrears.cmi_cross_ref_id@SEP@electoral_register.cmi_cross_ref_id@SEP@benefits_overpayments.cmi_cross_ref_id@SEP@customer_master_index.cmi_details"
    },
    {
        "nl_queries": "What is the relationship between People_ID and Height ?",
        "VQL": "Visualize SCATTER SELECT People_ID , Height FROM people",
        "db_id": "candidate_poll",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT People_ID , Height FROM people', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT People_ID , Height FROM people'}",
        "record_name": "392",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "What is the relationship between People_ID and Height ?",
        "question_toks": [
            "What",
            "is",
            "the",
            "relationship",
            "between",
            "People_ID",
            "and",
            "Height",
            "?"
        ],
        "query": "Visualize SCATTER SELECT People_ID , Height FROM people",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "People_ID",
            ",",
            "Height",
            "FROM",
            "people"
        ],
        "choose_schema": "Table candidate, columns = [*,Candidate_ID, People_ID, Poll_Source, Date, Support_rate, Consider_rate, Oppose_rate, Unsure_rate]@SEP@Table people, columns = [*,People_ID, Sex, Name, Date_of_Birth, Height, Weight]",
        "choose_schema_rat_link": "candidate.people_id@SEP@people.people_id@SEP@people.height"
    },
    {
        "nl_queries": "Draw a bar chart about the distribution of All_Games and School_ID .",
        "VQL": "Visualize BAR SELECT All_Games , School_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT All_Games , School_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT All_Games , School_ID FROM basketball_match'}",
        "record_name": "3115",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Draw a bar chart about the distribution of All_Games and School_ID .",
        "question_toks": [
            "Draw",
            "a",
            "bar",
            "chart",
            "about",
            "the",
            "distribution",
            "of",
            "All_Games",
            "and",
            "School_ID",
            "."
        ],
        "query": "Visualize BAR SELECT All_Games , School_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "All_Games",
            ",",
            "School_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "university.school@SEP@basketball_match.school_id@SEP@university.school_id"
    },
    {
        "nl_queries": "Bar chart x axis acc regular season y axis acc_percent",
        "VQL": "Visualize BAR SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match'}",
        "record_name": "3135",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Bar chart x axis acc regular season y axis acc_percent",
        "question_toks": [
            "Bar",
            "chart",
            "x",
            "axis",
            "acc",
            "regular",
            "season",
            "y",
            "axis",
            "acc_percent"
        ],
        "query": "Visualize BAR SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "ACC_Regular_Season",
            ",",
            "ACC_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Show the relationship between account id and name for all accounts in a scatter chart .",
        "VQL": "Visualize SCATTER SELECT account_id , account_name FROM Accounts",
        "db_id": "customers_and_invoices",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT account_id , account_name FROM Accounts', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT account_id , account_name FROM Accounts'}",
        "record_name": "956",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                23,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Show the relationship between account id and name for all accounts in a scatter chart .",
        "question_toks": [
            "Show",
            "the",
            "relationship",
            "between",
            "account",
            "id",
            "and",
            "name",
            "for",
            "all",
            "accounts",
            "in",
            "a",
            "scatter",
            "chart",
            "."
        ],
        "query": "Visualize SCATTER SELECT account_id , account_name FROM Accounts",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "account_id",
            ",",
            "account_name",
            "FROM",
            "Accounts"
        ],
        "choose_schema": "Table Accounts, columns = [*,account_id, customer_id, date_account_opened, account_name, other_account_details]@SEP@Table Financial_Transactions, columns = [*,transaction_id, account_id, invoice_number, transaction_type, transaction_date, transaction_amount, transaction_comment, other_transaction_details]",
        "choose_schema_rat_link": "accounts.account_id@SEP@financial_transactions.account_id@SEP@accounts.account_name"
    },
    {
        "nl_queries": "Visualize a pie chart about the proportion of ACC_Regular_Season and School_ID .",
        "VQL": "Visualize PIE SELECT ACC_Regular_Season , School_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT ACC_Regular_Season , School_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT ACC_Regular_Season , School_ID FROM basketball_match'}",
        "record_name": "3149",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Visualize a pie chart about the proportion of ACC_Regular_Season and School_ID .",
        "question_toks": [
            "Visualize",
            "a",
            "pie",
            "chart",
            "about",
            "the",
            "proportion",
            "of",
            "ACC_Regular_Season",
            "and",
            "School_ID",
            "."
        ],
        "query": "Visualize PIE SELECT ACC_Regular_Season , School_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "ACC_Regular_Season",
            ",",
            "School_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road@SEP@university.school@SEP@basketball_match.school_id@SEP@university.school_id"
    },
    {
        "nl_queries": "List the dates and vote percents of elections in a bar chart .",
        "VQL": "Visualize BAR SELECT Date , Vote_Percent FROM election",
        "db_id": "election_representative",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Date , Vote_Percent FROM election', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Date , Vote_Percent FROM election'}",
        "record_name": "1326",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "List the dates and vote percents of elections in a bar chart .",
        "question_toks": [
            "List",
            "the",
            "dates",
            "and",
            "vote",
            "percents",
            "of",
            "elections",
            "in",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT Date , Vote_Percent FROM election",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Date",
            ",",
            "Vote_Percent",
            "FROM",
            "election"
        ],
        "choose_schema": "Table election, columns = [*,Election_ID, Representative_ID, Date, Votes, Vote_Percent, Seats, Place]",
        "choose_schema_rat_link": "election.vote_percent@SEP@election.date@SEP@election.votes@SEP@election.election_id"
    },
    {
        "nl_queries": "Return a pie chart about the proportion of Team_Name and Team_ID .",
        "VQL": "Visualize PIE SELECT Team_Name , Team_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT Team_Name , Team_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT Team_Name , Team_ID FROM basketball_match'}",
        "record_name": "3126",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Return a pie chart about the proportion of Team_Name and Team_ID .",
        "question_toks": [
            "Return",
            "a",
            "pie",
            "chart",
            "about",
            "the",
            "proportion",
            "of",
            "Team_Name",
            "and",
            "Team_ID",
            "."
        ],
        "query": "Visualize PIE SELECT Team_Name , Team_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "Team_Name",
            ",",
            "Team_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name"
    },
    {
        "nl_queries": "Visualize a bar chart about the distribution of All_Games and All_Games_Percent .",
        "VQL": "Visualize BAR SELECT All_Games , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT All_Games , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT All_Games , All_Games_Percent FROM basketball_match'}",
        "record_name": "3140",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Visualize a bar chart about the distribution of All_Games and All_Games_Percent .",
        "question_toks": [
            "Visualize",
            "a",
            "bar",
            "chart",
            "about",
            "the",
            "distribution",
            "of",
            "All_Games",
            "and",
            "All_Games_Percent",
            "."
        ],
        "query": "Visualize BAR SELECT All_Games , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "All_Games",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]"
    },
    {
        "nl_queries": "For the attribute All_Games and School_ID , show their proportion by a pie chart .",
        "VQL": "Visualize PIE SELECT All_Games , School_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT All_Games , School_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT All_Games , School_ID FROM basketball_match'}",
        "record_name": "3151",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "For the attribute All_Games and School_ID , show their proportion by a pie chart .",
        "question_toks": [
            "For",
            "the",
            "attribute",
            "All_Games",
            "and",
            "School_ID",
            ",",
            "show",
            "their",
            "proportion",
            "by",
            "a",
            "pie",
            "chart",
            "."
        ],
        "query": "Visualize PIE SELECT All_Games , School_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "All_Games",
            ",",
            "School_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "university.school@SEP@basketball_match.school_id@SEP@university.school_id"
    },
    {
        "nl_queries": "Show name and distance for all aircrafts by a bar chart .",
        "VQL": "Visualize BAR SELECT name , distance FROM Aircraft",
        "db_id": "flight_1",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT name , distance FROM Aircraft', 'binning': ''}, 'VQL': 'Visualize BAR SELECT name , distance FROM Aircraft'}",
        "record_name": "1414",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Show name and distance for all aircrafts by a bar chart .",
        "question_toks": [
            "Show",
            "name",
            "and",
            "distance",
            "for",
            "all",
            "aircrafts",
            "by",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT name , distance FROM Aircraft",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "name",
            ",",
            "distance",
            "FROM",
            "Aircraft"
        ],
        "choose_schema": "Table flight, columns = [*,flno, origin, destination, distance, departure_date, arrival_date, price, aid]@SEP@Table aircraft, columns = [*,aid, name, distance]@SEP@Table employee, columns = [*,eid, name, salary]",
        "choose_schema_rat_link": "aircraft.name@SEP@employee.name@SEP@flight.distance@SEP@aircraft.distance"
    },
    {
        "nl_queries": "Visualize a bar chart about the distribution of Date_of_Birth and Weight .",
        "VQL": "Visualize BAR SELECT Date_of_Birth , Weight FROM people",
        "db_id": "candidate_poll",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Date_of_Birth , Weight FROM people', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Date_of_Birth , Weight FROM people'}",
        "record_name": "398",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Visualize a bar chart about the distribution of Date_of_Birth and Weight .",
        "question_toks": [
            "Visualize",
            "a",
            "bar",
            "chart",
            "about",
            "the",
            "distribution",
            "of",
            "Date_of_Birth",
            "and",
            "Weight",
            "."
        ],
        "query": "Visualize BAR SELECT Date_of_Birth , Weight FROM people",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Date_of_Birth",
            ",",
            "Weight",
            "FROM",
            "people"
        ],
        "choose_schema": "Table people, columns = [*,People_ID, Sex, Name, Date_of_Birth, Height, Weight]",
        "choose_schema_rat_link": "candidate.date@SEP@people.date_of_birth@SEP@people.weight"
    },
    {
        "nl_queries": "Visualize a bar chart for how much does each charge type costs ? List both charge type and amount .",
        "VQL": "Visualize BAR SELECT charge_type , charge_amount FROM Charges",
        "db_id": "dog_kennels",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT charge_type , charge_amount FROM Charges', 'binning': ''}, 'VQL': 'Visualize BAR SELECT charge_type , charge_amount FROM Charges'}",
        "record_name": "1174",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Visualize a bar chart for how much does each charge type costs ? List both charge type and amount .",
        "question_toks": [
            "Visualize",
            "a",
            "bar",
            "chart",
            "for",
            "how",
            "much",
            "does",
            "each",
            "charge",
            "type",
            "costs",
            "?",
            "List",
            "both",
            "charge",
            "type",
            "and",
            "amount",
            "."
        ],
        "query": "Visualize BAR SELECT charge_type , charge_amount FROM Charges",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "charge_type",
            ",",
            "charge_amount",
            "FROM",
            "Charges"
        ],
        "choose_schema": "Table Charges, columns = [*,charge_id, charge_type, charge_amount]",
        "choose_schema_rat_link": "charges.charge_type@SEP@charges.charge_id@SEP@charges.charge_amount@SEP@treatments.cost_of_treatment"
    },
    {
        "nl_queries": "Shows the scholl id across by the attribute all neutral in a pie chart .",
        "VQL": "Visualize PIE SELECT All_Neutral , School_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT All_Neutral , School_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT All_Neutral , School_ID FROM basketball_match'}",
        "record_name": "3155",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Shows the scholl id across by the attribute all neutral in a pie chart .",
        "question_toks": [
            "Shows",
            "the",
            "scholl",
            "id",
            "across",
            "by",
            "the",
            "attribute",
            "all",
            "neutral",
            "in",
            "a",
            "pie",
            "chart",
            "."
        ],
        "query": "Visualize PIE SELECT All_Neutral , School_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "All_Neutral",
            ",",
            "School_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "basketball_match.all_neutral"
    },
    {
        "nl_queries": "Show me about the distribution of All_Road and All_Games_Percent in a bar chart .",
        "VQL": "Visualize BAR SELECT All_Road , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT All_Road , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT All_Road , All_Games_Percent FROM basketball_match'}",
        "record_name": "3143",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Show me about the distribution of All_Road and All_Games_Percent in a bar chart .",
        "question_toks": [
            "Show",
            "me",
            "about",
            "the",
            "distribution",
            "of",
            "All_Road",
            "and",
            "All_Games_Percent",
            "in",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT All_Road , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "All_Road",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]"
    },
    {
        "nl_queries": "Create a bar chart showing manager_id across last name",
        "VQL": "Visualize BAR SELECT LAST_NAME , MANAGER_ID FROM employees",
        "db_id": "hr_1",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT LAST_NAME , MANAGER_ID FROM employees', 'binning': ''}, 'VQL': 'Visualize BAR SELECT LAST_NAME , MANAGER_ID FROM employees'}",
        "record_name": "1907",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                23,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Create a bar chart showing manager_id across last name",
        "question_toks": [
            "Create",
            "a",
            "bar",
            "chart",
            "showing",
            "manager_id",
            "across",
            "last",
            "name"
        ],
        "query": "Visualize BAR SELECT LAST_NAME , MANAGER_ID FROM employees",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "LAST_NAME",
            ",",
            "MANAGER_ID",
            "FROM",
            "employees"
        ],
        "choose_schema": "Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]@SEP@Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]",
        "choose_schema_rat_link": "employees.last_name@SEP@departments.manager_id@SEP@employees.manager_id"
    },
    {
        "nl_queries": "A bar chart shows the distribution of All_Games and School_ID .",
        "VQL": "Visualize BAR SELECT All_Games , School_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT All_Games , School_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT All_Games , School_ID FROM basketball_match'}",
        "record_name": "3115",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "A bar chart shows the distribution of All_Games and School_ID .",
        "question_toks": [
            "A",
            "bar",
            "chart",
            "shows",
            "the",
            "distribution",
            "of",
            "All_Games",
            "and",
            "School_ID",
            "."
        ],
        "query": "Visualize BAR SELECT All_Games , School_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "All_Games",
            ",",
            "School_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "university.school@SEP@basketball_match.school_id@SEP@university.school_id"
    },
    {
        "nl_queries": "What is the relationship between Body_Builder_ID and Clean_Jerk ?",
        "VQL": "Visualize SCATTER SELECT Body_Builder_ID , Clean_Jerk FROM body_builder",
        "db_id": "body_builder",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Body_Builder_ID , Clean_Jerk FROM body_builder', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Body_Builder_ID , Clean_Jerk FROM body_builder'}",
        "record_name": "360",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "What is the relationship between Body_Builder_ID and Clean_Jerk ?",
        "question_toks": [
            "What",
            "is",
            "the",
            "relationship",
            "between",
            "Body_Builder_ID",
            "and",
            "Clean_Jerk",
            "?"
        ],
        "query": "Visualize SCATTER SELECT Body_Builder_ID , Clean_Jerk FROM body_builder",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Body_Builder_ID",
            ",",
            "Clean_Jerk",
            "FROM",
            "body_builder"
        ],
        "choose_schema": "Table body_builder, columns = [*,Body_Builder_ID, People_ID, Snatch, Clean_Jerk, Total]",
        "choose_schema_rat_link": "body_builder.body_builder_id@SEP@body_builder.clean_jerk"
    },
    {
        "nl_queries": "Show me about the correlation between Body_Builder_ID and Snatch in a scatter chart .",
        "VQL": "Visualize SCATTER SELECT Body_Builder_ID , Snatch FROM body_builder",
        "db_id": "body_builder",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Body_Builder_ID , Snatch FROM body_builder', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Body_Builder_ID , Snatch FROM body_builder'}",
        "record_name": "355",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Show me about the correlation between Body_Builder_ID and Snatch in a scatter chart .",
        "question_toks": [
            "Show",
            "me",
            "about",
            "the",
            "correlation",
            "between",
            "Body_Builder_ID",
            "and",
            "Snatch",
            "in",
            "a",
            "scatter",
            "chart",
            "."
        ],
        "query": "Visualize SCATTER SELECT Body_Builder_ID , Snatch FROM body_builder",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Body_Builder_ID",
            ",",
            "Snatch",
            "FROM",
            "body_builder"
        ],
        "choose_schema": "Table body_builder, columns = [*,Body_Builder_ID, People_ID, Snatch, Clean_Jerk, Total]",
        "choose_schema_rat_link": "body_builder.body_builder_id@SEP@body_builder.snatch"
    },
    {
        "nl_queries": "Show me about the proportion of Team_ID and Team_ID in a pie chart .",
        "VQL": "Visualize PIE SELECT All_Neutral , Team_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT All_Neutral , Team_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT All_Neutral , Team_ID FROM basketball_match'}",
        "record_name": "3130",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Show me about the proportion of Team_ID and Team_ID in a pie chart .",
        "question_toks": [
            "Show",
            "me",
            "about",
            "the",
            "proportion",
            "of",
            "Team_ID",
            "and",
            "Team_ID",
            "in",
            "a",
            "pie",
            "chart",
            "."
        ],
        "query": "Visualize PIE SELECT All_Neutral , Team_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "All_Neutral",
            ",",
            "Team_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name"
    },
    {
        "nl_queries": "Show me about the distribution of meter_300 and ID in a bar chart .",
        "VQL": "Visualize BAR SELECT meter_300 , ID FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT meter_300 , ID FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT meter_300 , ID FROM swimmer'}",
        "record_name": "2916",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Show me about the distribution of meter_300 and ID in a bar chart .",
        "question_toks": [
            "Show",
            "me",
            "about",
            "the",
            "distribution",
            "of",
            "meter_300",
            "and",
            "ID",
            "in",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT meter_300 , ID FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "meter_300",
            ",",
            "ID",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]@SEP@Table stadium, columns = [*,ID, name, Capacity, City, Country, Opening_year]@SEP@Table event, columns = [*,ID, Name, Stadium_ID, Year]@SEP@Table record, columns = [*,ID, Result, Swimmer_ID, Event_ID]",
        "choose_schema_rat_link": "swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_400@SEP@swimmer.meter_500@SEP@swimmer.meter_600@SEP@swimmer.meter_700@SEP@swimmer.id@SEP@stadium.id@SEP@event.id@SEP@record.id"
    },
    {
        "nl_queries": "Visualize a pie chart about the proportion of Team_Name and ACC_Percent .",
        "VQL": "Visualize PIE SELECT Team_Name , ACC_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT Team_Name , ACC_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT Team_Name , ACC_Percent FROM basketball_match'}",
        "record_name": "3148",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Visualize a pie chart about the proportion of Team_Name and ACC_Percent .",
        "question_toks": [
            "Visualize",
            "a",
            "pie",
            "chart",
            "about",
            "the",
            "proportion",
            "of",
            "Team_Name",
            "and",
            "ACC_Percent",
            "."
        ],
        "query": "Visualize PIE SELECT Team_Name , ACC_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "Team_Name",
            ",",
            "ACC_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name@SEP@basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "A scatter chart shows the correlation between Body_Builder_ID and Clean_Jerk .",
        "VQL": "Visualize SCATTER SELECT Body_Builder_ID , Clean_Jerk FROM body_builder",
        "db_id": "body_builder",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Body_Builder_ID , Clean_Jerk FROM body_builder', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Body_Builder_ID , Clean_Jerk FROM body_builder'}",
        "record_name": "360",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "A scatter chart shows the correlation between Body_Builder_ID and Clean_Jerk .",
        "question_toks": [
            "A",
            "scatter",
            "chart",
            "shows",
            "the",
            "correlation",
            "between",
            "Body_Builder_ID",
            "and",
            "Clean_Jerk",
            "."
        ],
        "query": "Visualize SCATTER SELECT Body_Builder_ID , Clean_Jerk FROM body_builder",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Body_Builder_ID",
            ",",
            "Clean_Jerk",
            "FROM",
            "body_builder"
        ],
        "choose_schema": "Table body_builder, columns = [*,Body_Builder_ID, People_ID, Snatch, Clean_Jerk, Total]",
        "choose_schema_rat_link": "body_builder.body_builder_id@SEP@body_builder.clean_jerk"
    },
    {
        "nl_queries": "Give the proportion of what are the name and population of each county ?",
        "VQL": "Visualize PIE SELECT County_name , Population FROM county",
        "db_id": "election",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT County_name , Population FROM county', 'binning': ''}, 'VQL': 'Visualize PIE SELECT County_name , Population FROM county'}",
        "record_name": "1303",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Give the proportion of what are the name and population of each county ?",
        "question_toks": [
            "Give",
            "the",
            "proportion",
            "of",
            "what",
            "are",
            "the",
            "name",
            "and",
            "population",
            "of",
            "each",
            "county",
            "?"
        ],
        "query": "Visualize PIE SELECT County_name , Population FROM county",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "County_name",
            ",",
            "Population",
            "FROM",
            "county"
        ],
        "choose_schema": "Table county, columns = [*,County_Id, County_name, Population, Zip_code]",
        "choose_schema_rat_link": "county.population@SEP@county.county_id@SEP@county.county_name@SEP@election.counties_represented"
    },
    {
        "nl_queries": "Plot a scatter chart , height by weight .",
        "VQL": "Visualize SCATTER SELECT Height , Weight FROM people",
        "db_id": "candidate_poll",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Height , Weight FROM people', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Height , Weight FROM people'}",
        "record_name": "390",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Plot a scatter chart , height by weight .",
        "question_toks": [
            "Plot",
            "a",
            "scatter",
            "chart",
            ",",
            "height",
            "by",
            "weight",
            "."
        ],
        "query": "Visualize SCATTER SELECT Height , Weight FROM people",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Height",
            ",",
            "Weight",
            "FROM",
            "people"
        ],
        "choose_schema": "Table people, columns = [*,People_ID, Sex, Name, Date_of_Birth, Height, Weight]",
        "choose_schema_rat_link": "people.height@SEP@people.weight"
    },
    {
        "nl_queries": "Show me a scatter plot of people id and total for .",
        "VQL": "Visualize SCATTER SELECT People_ID , Total FROM body_builder",
        "db_id": "body_builder",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT People_ID , Total FROM body_builder', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT People_ID , Total FROM body_builder'}",
        "record_name": "359",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Show me a scatter plot of people id and total for .",
        "question_toks": [
            "Show",
            "me",
            "a",
            "scatter",
            "plot",
            "of",
            "people",
            "id",
            "and",
            "total",
            "for",
            "."
        ],
        "query": "Visualize SCATTER SELECT People_ID , Total FROM body_builder",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "People_ID",
            ",",
            "Total",
            "FROM",
            "body_builder"
        ],
        "choose_schema": "Table body_builder, columns = [*,Body_Builder_ID, People_ID, Snatch, Clean_Jerk, Total]@SEP@Table people, columns = [*,People_ID, Name, Height, Weight, Birth_Date, Birth_Place]",
        "choose_schema_rat_link": "body_builder.people_id@SEP@people.people_id@SEP@body_builder.total"
    },
    {
        "nl_queries": "Show the reign and days held of wrestlers . Visualize by scatter chart .",
        "VQL": "Visualize SCATTER SELECT Reign , Days_held FROM wrestler",
        "db_id": "wrestler",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Reign , Days_held FROM wrestler', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Reign , Days_held FROM wrestler'}",
        "record_name": "3284",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Show the reign and days held of wrestlers . Visualize by scatter chart .",
        "question_toks": [
            "Show",
            "the",
            "reign",
            "and",
            "days",
            "held",
            "of",
            "wrestlers",
            ".",
            "Visualize",
            "by",
            "scatter",
            "chart",
            "."
        ],
        "query": "Visualize SCATTER SELECT Reign , Days_held FROM wrestler",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Reign",
            ",",
            "Days_held",
            "FROM",
            "wrestler"
        ],
        "choose_schema": "Table wrestler, columns = [*,Wrestler_ID, Name, Reign, Days_held, Location, Event]",
        "choose_schema_rat_link": "wrestler.days_held@SEP@wrestler.reign@SEP@wrestler.wrestler_id@SEP@elimination.wrestler_id"
    },
    {
        "nl_queries": "Find Team_Name and All_Games_Percent , and visualize them by a bar chart .",
        "VQL": "Visualize BAR SELECT Team_Name , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Team_Name , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Team_Name , All_Games_Percent FROM basketball_match'}",
        "record_name": "3134",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Find Team_Name and All_Games_Percent , and visualize them by a bar chart .",
        "question_toks": [
            "Find",
            "Team_Name",
            "and",
            "All_Games_Percent",
            ",",
            "and",
            "visualize",
            "them",
            "by",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT Team_Name , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Team_Name",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name"
    },
    {
        "nl_queries": "Return a scatter chart about the correlation between People_ID and Clean_Jerk .",
        "VQL": "Visualize SCATTER SELECT People_ID , Clean_Jerk FROM body_builder",
        "db_id": "body_builder",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT People_ID , Clean_Jerk FROM body_builder', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT People_ID , Clean_Jerk FROM body_builder'}",
        "record_name": "361",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Return a scatter chart about the correlation between People_ID and Clean_Jerk .",
        "question_toks": [
            "Return",
            "a",
            "scatter",
            "chart",
            "about",
            "the",
            "correlation",
            "between",
            "People_ID",
            "and",
            "Clean_Jerk",
            "."
        ],
        "query": "Visualize SCATTER SELECT People_ID , Clean_Jerk FROM body_builder",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "People_ID",
            ",",
            "Clean_Jerk",
            "FROM",
            "body_builder"
        ],
        "choose_schema": "Table body_builder, columns = [*,Body_Builder_ID, People_ID, Snatch, Clean_Jerk, Total]@SEP@Table people, columns = [*,People_ID, Name, Height, Weight, Birth_Date, Birth_Place]",
        "choose_schema_rat_link": "body_builder.people_id@SEP@people.people_id@SEP@body_builder.clean_jerk"
    },
    {
        "nl_queries": "What is the relationship between support and oppose rates of each candidate ?",
        "VQL": "Visualize SCATTER SELECT Support_rate , Oppose_rate FROM candidate",
        "db_id": "candidate_poll",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Support_rate , Oppose_rate FROM candidate', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Support_rate , Oppose_rate FROM candidate'}",
        "record_name": "401",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "What is the relationship between support and oppose rates of each candidate ?",
        "question_toks": [
            "What",
            "is",
            "the",
            "relationship",
            "between",
            "support",
            "and",
            "oppose",
            "rates",
            "of",
            "each",
            "candidate",
            "?"
        ],
        "query": "Visualize SCATTER SELECT Support_rate , Oppose_rate FROM candidate",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Support_rate",
            ",",
            "Oppose_rate",
            "FROM",
            "candidate"
        ],
        "choose_schema": "Table candidate, columns = [*,Candidate_ID, People_ID, Poll_Source, Date, Support_rate, Consider_rate, Oppose_rate, Unsure_rate]",
        "choose_schema_rat_link": "candidate.oppose_rate@SEP@candidate.support_rate@SEP@candidate.candidate_id"
    },
    {
        "nl_queries": "Give me the comparison about ID over the meter_300 .",
        "VQL": "Visualize BAR SELECT meter_300 , ID FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT meter_300 , ID FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT meter_300 , ID FROM swimmer'}",
        "record_name": "2916",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Give me the comparison about ID over the meter_300 .",
        "question_toks": [
            "Give",
            "me",
            "the",
            "comparison",
            "about",
            "ID",
            "over",
            "the",
            "meter_300",
            "."
        ],
        "query": "Visualize BAR SELECT meter_300 , ID FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "meter_300",
            ",",
            "ID",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]@SEP@Table stadium, columns = [*,ID, name, Capacity, City, Country, Opening_year]@SEP@Table event, columns = [*,ID, Name, Stadium_ID, Year]@SEP@Table record, columns = [*,ID, Result, Swimmer_ID, Event_ID]",
        "choose_schema_rat_link": "swimmer.id@SEP@stadium.id@SEP@event.id@SEP@record.id@SEP@swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_400@SEP@swimmer.meter_500@SEP@swimmer.meter_600@SEP@swimmer.meter_700"
    },
    {
        "nl_queries": "A bar chart shows the distribution of name and ID .",
        "VQL": "Visualize BAR SELECT name , ID FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT name , ID FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT name , ID FROM swimmer'}",
        "record_name": "2914",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "A bar chart shows the distribution of name and ID .",
        "question_toks": [
            "A",
            "bar",
            "chart",
            "shows",
            "the",
            "distribution",
            "of",
            "name",
            "and",
            "ID",
            "."
        ],
        "query": "Visualize BAR SELECT name , ID FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "name",
            ",",
            "ID",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]@SEP@Table stadium, columns = [*,ID, name, Capacity, City, Country, Opening_year]@SEP@Table event, columns = [*,ID, Name, Stadium_ID, Year]@SEP@Table record, columns = [*,ID, Result, Swimmer_ID, Event_ID]",
        "choose_schema_rat_link": "swimmer.name@SEP@stadium.name@SEP@event.name@SEP@swimmer.id@SEP@stadium.id@SEP@event.id@SEP@record.id"
    },
    {
        "nl_queries": "Return a bar chart on what are the names and distances for all airplanes ?",
        "VQL": "Visualize BAR SELECT name , distance FROM Aircraft",
        "db_id": "flight_1",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT name , distance FROM Aircraft', 'binning': ''}, 'VQL': 'Visualize BAR SELECT name , distance FROM Aircraft'}",
        "record_name": "1414",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Return a bar chart on what are the names and distances for all airplanes ?",
        "question_toks": [
            "Return",
            "a",
            "bar",
            "chart",
            "on",
            "what",
            "are",
            "the",
            "names",
            "and",
            "distances",
            "for",
            "all",
            "airplanes",
            "?"
        ],
        "query": "Visualize BAR SELECT name , distance FROM Aircraft",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "name",
            ",",
            "distance",
            "FROM",
            "Aircraft"
        ],
        "choose_schema": "Table flight, columns = [*,flno, origin, destination, distance, departure_date, arrival_date, price, aid]@SEP@Table aircraft, columns = [*,aid, name, distance]@SEP@Table employee, columns = [*,eid, name, salary]",
        "choose_schema_rat_link": "aircraft.name@SEP@employee.name@SEP@flight.distance@SEP@aircraft.distance"
    },
    {
        "nl_queries": "A bar chart shows the distribution of meter_400 and meter_100 .",
        "VQL": "Visualize BAR SELECT meter_400 , meter_100 FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT meter_400 , meter_100 FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT meter_400 , meter_100 FROM swimmer'}",
        "record_name": "2919",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "A bar chart shows the distribution of meter_400 and meter_100 .",
        "question_toks": [
            "A",
            "bar",
            "chart",
            "shows",
            "the",
            "distribution",
            "of",
            "meter_400",
            "and",
            "meter_100",
            "."
        ],
        "query": "Visualize BAR SELECT meter_400 , meter_100 FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "meter_400",
            ",",
            "meter_100",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]",
        "choose_schema_rat_link": "swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_400@SEP@swimmer.meter_500@SEP@swimmer.meter_600@SEP@swimmer.meter_700"
    },
    {
        "nl_queries": "What are the low and high estimates of film markets . Visualize by scatter chart .",
        "VQL": "Visualize SCATTER SELECT Low_Estimate , High_Estimate FROM film_market_estimation",
        "db_id": "film_rank",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Low_Estimate , High_Estimate FROM film_market_estimation', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Low_Estimate , High_Estimate FROM film_market_estimation'}",
        "record_name": "1398",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "What are the low and high estimates of film markets . Visualize by scatter chart .",
        "question_toks": [
            "What",
            "are",
            "the",
            "low",
            "and",
            "high",
            "estimates",
            "of",
            "film",
            "markets",
            ".",
            "Visualize",
            "by",
            "scatter",
            "chart",
            "."
        ],
        "query": "Visualize SCATTER SELECT Low_Estimate , High_Estimate FROM film_market_estimation",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Low_Estimate",
            ",",
            "High_Estimate",
            "FROM",
            "film_market_estimation"
        ],
        "choose_schema": "Table film_market_estimation, columns = [*,Estimation_ID, Low_Estimate, High_Estimate, Film_ID, Type, Market_ID, Year]",
        "choose_schema_rat_link": "film_market_estimation.high_estimate@SEP@film_market_estimation.low_estimate@SEP@film.film_id@SEP@film_market_estimation.film_id@SEP@market.market_id@SEP@film_market_estimation.market_id"
    },
    {
        "nl_queries": "Find All_Games and ACC_Percent , and visualize them by a bar chart .",
        "VQL": "Visualize BAR SELECT All_Games , ACC_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT All_Games , ACC_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT All_Games , ACC_Percent FROM basketball_match'}",
        "record_name": "3138",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Find All_Games and ACC_Percent , and visualize them by a bar chart .",
        "question_toks": [
            "Find",
            "All_Games",
            "and",
            "ACC_Percent",
            ",",
            "and",
            "visualize",
            "them",
            "by",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT All_Games , ACC_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "All_Games",
            ",",
            "ACC_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "A bar chart shows the distribution of All_Games and All_Games_Percent .",
        "VQL": "Visualize BAR SELECT All_Games , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT All_Games , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT All_Games , All_Games_Percent FROM basketball_match'}",
        "record_name": "3140",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "A bar chart shows the distribution of All_Games and All_Games_Percent .",
        "question_toks": [
            "A",
            "bar",
            "chart",
            "shows",
            "the",
            "distribution",
            "of",
            "All_Games",
            "and",
            "All_Games_Percent",
            "."
        ],
        "query": "Visualize BAR SELECT All_Games , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "All_Games",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]"
    },
    {
        "nl_queries": "A pie chart shows the proportion of All_Road and Team_ID .",
        "VQL": "Visualize PIE SELECT All_Road , Team_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT All_Road , Team_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT All_Road , Team_ID FROM basketball_match'}",
        "record_name": "3129",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "A pie chart shows the proportion of All_Road and Team_ID .",
        "question_toks": [
            "A",
            "pie",
            "chart",
            "shows",
            "the",
            "proportion",
            "of",
            "All_Road",
            "and",
            "Team_ID",
            "."
        ],
        "query": "Visualize PIE SELECT All_Road , Team_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "All_Road",
            ",",
            "Team_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name"
    },
    {
        "nl_queries": "Give me the comparison about meter_100 over the meter_600 .",
        "VQL": "Visualize BAR SELECT meter_600 , meter_100 FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT meter_600 , meter_100 FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT meter_600 , meter_100 FROM swimmer'}",
        "record_name": "2923",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Give me the comparison about meter_100 over the meter_600 .",
        "question_toks": [
            "Give",
            "me",
            "the",
            "comparison",
            "about",
            "meter_100",
            "over",
            "the",
            "meter_600",
            "."
        ],
        "query": "Visualize BAR SELECT meter_600 , meter_100 FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "meter_600",
            ",",
            "meter_100",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]",
        "choose_schema_rat_link": "swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_400@SEP@swimmer.meter_500@SEP@swimmer.meter_600@SEP@swimmer.meter_700"
    },
    {
        "nl_queries": "Just list the customer event id and the corresponding move property id using a scatter .",
        "VQL": "Visualize SCATTER SELECT Customer_Event_ID , property_id FROM customer_events",
        "db_id": "local_govt_and_lot",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Customer_Event_ID , property_id FROM customer_events', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Customer_Event_ID , property_id FROM customer_events'}",
        "record_name": "2124",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        7
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                31,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                34,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Just list the customer event id and the corresponding move property id using a scatter .",
        "question_toks": [
            "Just",
            "list",
            "the",
            "customer",
            "event",
            "id",
            "and",
            "the",
            "corresponding",
            "move",
            "property",
            "id",
            "using",
            "a",
            "scatter",
            "."
        ],
        "query": "Visualize SCATTER SELECT Customer_Event_ID , property_id FROM customer_events",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Customer_Event_ID",
            ",",
            "property_id",
            "FROM",
            "customer_events"
        ],
        "choose_schema": "Table Properties, columns = [*,property_id, property_type_code, property_address, other_details]@SEP@Table Residents, columns = [*,resident_id, property_id, date_moved_in, date_moved_out, other_details]@SEP@Table Residents_Services, columns = [*,resident_id, service_id, date_moved_in, property_id, date_requested, date_provided, other_details]@SEP@Table Customer_Events, columns = [*,Customer_Event_ID, customer_id, date_moved_in, property_id, resident_id, thing_id]@SEP@Table Customer_Event_Notes, columns = [*,Customer_Event_Note_ID, Customer_Event_ID, service_type_code, resident_id, property_id, date_moved_in]",
        "choose_schema_rat_link": "customer_events.customer_event_id@SEP@customer_event_notes.customer_event_id@SEP@customer_event_notes.customer_event_note_id@SEP@properties.property_id@SEP@residents.property_id@SEP@residents_services.property_id@SEP@customer_events.property_id@SEP@customer_event_notes.property_id@SEP@customers.customer_id@SEP@customers.customer_details@SEP@customer_events.customer_id@SEP@properties.property_type_code@SEP@properties.property_address"
    },
    {
        "nl_queries": "Draw a bar chart about the distribution of All_Road and Team_ID .",
        "VQL": "Visualize BAR SELECT All_Road , Team_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT All_Road , Team_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT All_Road , Team_ID FROM basketball_match'}",
        "record_name": "3116",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Draw a bar chart about the distribution of All_Road and Team_ID .",
        "question_toks": [
            "Draw",
            "a",
            "bar",
            "chart",
            "about",
            "the",
            "distribution",
            "of",
            "All_Road",
            "and",
            "Team_ID",
            "."
        ],
        "query": "Visualize BAR SELECT All_Road , Team_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "All_Road",
            ",",
            "Team_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name"
    },
    {
        "nl_queries": "Return a pie chart about the proportion of ACC_Regular_Season and Team_ID .",
        "VQL": "Visualize PIE SELECT ACC_Regular_Season , Team_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT ACC_Regular_Season , Team_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT ACC_Regular_Season , Team_ID FROM basketball_match'}",
        "record_name": "3127",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Return a pie chart about the proportion of ACC_Regular_Season and Team_ID .",
        "question_toks": [
            "Return",
            "a",
            "pie",
            "chart",
            "about",
            "the",
            "proportion",
            "of",
            "ACC_Regular_Season",
            "and",
            "Team_ID",
            "."
        ],
        "query": "Visualize PIE SELECT ACC_Regular_Season , Team_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "ACC_Regular_Season",
            ",",
            "Team_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road@SEP@basketball_match.team_id@SEP@basketball_match.team_name"
    },
    {
        "nl_queries": "A bar chart shows the distribution of meter_600 and ID .",
        "VQL": "Visualize BAR SELECT meter_600 , ID FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT meter_600 , ID FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT meter_600 , ID FROM swimmer'}",
        "record_name": "2922",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "A bar chart shows the distribution of meter_600 and ID .",
        "question_toks": [
            "A",
            "bar",
            "chart",
            "shows",
            "the",
            "distribution",
            "of",
            "meter_600",
            "and",
            "ID",
            "."
        ],
        "query": "Visualize BAR SELECT meter_600 , ID FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "meter_600",
            ",",
            "ID",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]@SEP@Table stadium, columns = [*,ID, name, Capacity, City, Country, Opening_year]@SEP@Table event, columns = [*,ID, Name, Stadium_ID, Year]@SEP@Table record, columns = [*,ID, Result, Swimmer_ID, Event_ID]",
        "choose_schema_rat_link": "swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_400@SEP@swimmer.meter_500@SEP@swimmer.meter_600@SEP@swimmer.meter_700@SEP@swimmer.id@SEP@stadium.id@SEP@event.id@SEP@record.id"
    },
    {
        "nl_queries": "What are the final tables made and best finishes for all poker players . Plot them as scatter chart .",
        "VQL": "Visualize SCATTER SELECT Final_Table_Made , Best_Finish FROM poker_player",
        "db_id": "poker_player",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Final_Table_Made , Best_Finish FROM poker_player', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Final_Table_Made , Best_Finish FROM poker_player'}",
        "record_name": "2592",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "What are the final tables made and best finishes for all poker players . Plot them as scatter chart .",
        "question_toks": [
            "What",
            "are",
            "the",
            "final",
            "tables",
            "made",
            "and",
            "best",
            "finishes",
            "for",
            "all",
            "poker",
            "players",
            ".",
            "Plot",
            "them",
            "as",
            "scatter",
            "chart",
            "."
        ],
        "query": "Visualize SCATTER SELECT Final_Table_Made , Best_Finish FROM poker_player",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Final_Table_Made",
            ",",
            "Best_Finish",
            "FROM",
            "poker_player"
        ],
        "choose_schema": "Table poker_player, columns = [*,Poker_Player_ID, People_ID, Final_Table_Made, Best_Finish, Money_Rank, Earnings]",
        "choose_schema_rat_link": "poker_player.final_table_made@SEP@poker_player.best_finish@SEP@poker_player.poker_player_id"
    },
    {
        "nl_queries": "A bar chart about how many departments are in each school ?",
        "VQL": "Visualize BAR SELECT SCHOOL_CODE , count(DISTINCT dept_name) FROM department",
        "db_id": "college_1",
        "hardness": "Medium",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT SCHOOL_CODE , count(DISTINCT dept_name) FROM department', 'binning': ''}, 'VQL': 'Visualize BAR SELECT SCHOOL_CODE , count(DISTINCT dept_name) FROM department'}",
        "record_name": "515",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                12,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "A bar chart about how many departments are in each school ?",
        "question_toks": [
            "A",
            "bar",
            "chart",
            "about",
            "how",
            "many",
            "departments",
            "are",
            "in",
            "each",
            "school",
            "?"
        ],
        "query": "Visualize BAR SELECT SCHOOL_CODE , count(DISTINCT dept_name) FROM department",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "SCHOOL_CODE",
            ",",
            "count",
            "(",
            "DISTINCT",
            "dept_name",
            ")",
            "FROM",
            "department"
        ],
        "choose_schema": "Table DEPARTMENT, columns = [*,DEPT_CODE, DEPT_NAME, SCHOOL_CODE, EMP_NUM, DEPT_ADDRESS, DEPT_EXTENSION]",
        "choose_schema_rat_link": "course.dept_code@SEP@department.dept_code@SEP@department.dept_name@SEP@department.dept_address@SEP@department.dept_extension@SEP@professor.dept_code@SEP@student.dept_code@SEP@department.school_code"
    },
    {
        "nl_queries": "Give me the comparison about All_Games_Percent over the All_Neutral by a bar chart .",
        "VQL": "Visualize BAR SELECT All_Neutral , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT All_Neutral , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT All_Neutral , All_Games_Percent FROM basketball_match'}",
        "record_name": "3146",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Give me the comparison about All_Games_Percent over the All_Neutral by a bar chart .",
        "question_toks": [
            "Give",
            "me",
            "the",
            "comparison",
            "about",
            "All_Games_Percent",
            "over",
            "the",
            "All_Neutral",
            "by",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT All_Neutral , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "All_Neutral",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]"
    },
    {
        "nl_queries": "What are the grade number and classroom number of each class in the list . Visualize by scatter chart .",
        "VQL": "Visualize SCATTER SELECT Classroom , Grade FROM list",
        "db_id": "student_1",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Classroom , Grade FROM list', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Classroom , Grade FROM list'}",
        "record_name": "2872",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "What are the grade number and classroom number of each class in the list . Visualize by scatter chart .",
        "question_toks": [
            "What",
            "are",
            "the",
            "grade",
            "number",
            "and",
            "classroom",
            "number",
            "of",
            "each",
            "class",
            "in",
            "the",
            "list",
            ".",
            "Visualize",
            "by",
            "scatter",
            "chart",
            "."
        ],
        "query": "Visualize SCATTER SELECT Classroom , Grade FROM list",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Classroom",
            ",",
            "Grade",
            "FROM",
            "list"
        ],
        "choose_schema": "Table list, columns = [*,LastName, FirstName, Grade, Classroom]@SEP@Table teachers, columns = [*,LastName, FirstName, Classroom]",
        "choose_schema_rat_link": "list.grade@SEP@list.classroom@SEP@teachers.classroom"
    },
    {
        "nl_queries": "Give me the comparison about Team_ID over the All_Neutral .",
        "VQL": "Visualize BAR SELECT All_Neutral , Team_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT All_Neutral , Team_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT All_Neutral , Team_ID FROM basketball_match'}",
        "record_name": "3118",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Give me the comparison about Team_ID over the All_Neutral .",
        "question_toks": [
            "Give",
            "me",
            "the",
            "comparison",
            "about",
            "Team_ID",
            "over",
            "the",
            "All_Neutral",
            "."
        ],
        "query": "Visualize BAR SELECT All_Neutral , Team_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "All_Neutral",
            ",",
            "Team_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name"
    },
    {
        "nl_queries": "Find meter_400 and ID , and visualize them by a bar chart .",
        "VQL": "Visualize BAR SELECT meter_400 , ID FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT meter_400 , ID FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT meter_400 , ID FROM swimmer'}",
        "record_name": "2918",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Find meter_400 and ID , and visualize them by a bar chart .",
        "question_toks": [
            "Find",
            "meter_400",
            "and",
            "ID",
            ",",
            "and",
            "visualize",
            "them",
            "by",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT meter_400 , ID FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "meter_400",
            ",",
            "ID",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]@SEP@Table stadium, columns = [*,ID, name, Capacity, City, Country, Opening_year]@SEP@Table event, columns = [*,ID, Name, Stadium_ID, Year]@SEP@Table record, columns = [*,ID, Result, Swimmer_ID, Event_ID]",
        "choose_schema_rat_link": "swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_400@SEP@swimmer.meter_500@SEP@swimmer.meter_600@SEP@swimmer.meter_700@SEP@swimmer.id@SEP@stadium.id@SEP@event.id@SEP@record.id"
    },
    {
        "nl_queries": "Scatter plot to show max(accelerate) on x axis and cylinders on y axis .",
        "VQL": "Visualize SCATTER SELECT max(Accelerate) , Cylinders FROM CARS_DATA",
        "db_id": "car_1",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT max(Accelerate) , Cylinders FROM CARS_DATA', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT max(Accelerate) , Cylinders FROM CARS_DATA'}",
        "record_name": "432",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Scatter plot to show max(accelerate) on x axis and cylinders on y axis .",
        "question_toks": [
            "Scatter",
            "plot",
            "to",
            "show",
            "max(accelerate)",
            "on",
            "x",
            "axis",
            "and",
            "cylinders",
            "on",
            "y",
            "axis",
            "."
        ],
        "query": "Visualize SCATTER SELECT max(Accelerate) , Cylinders FROM CARS_DATA",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "max",
            "(",
            "Accelerate",
            ")",
            ",",
            "Cylinders",
            "FROM",
            "CARS_DATA"
        ],
        "choose_schema": "Table cars_data, columns = [*,Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year]",
        "choose_schema_rat_link": "cars_data.accelerate@SEP@cars_data.cylinders"
    },
    {
        "nl_queries": "Visualize a pie chart about the proportion of All_Neutral and School_ID .",
        "VQL": "Visualize PIE SELECT All_Neutral , School_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT All_Neutral , School_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT All_Neutral , School_ID FROM basketball_match'}",
        "record_name": "3155",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Visualize a pie chart about the proportion of All_Neutral and School_ID .",
        "question_toks": [
            "Visualize",
            "a",
            "pie",
            "chart",
            "about",
            "the",
            "proportion",
            "of",
            "All_Neutral",
            "and",
            "School_ID",
            "."
        ],
        "query": "Visualize PIE SELECT All_Neutral , School_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "All_Neutral",
            ",",
            "School_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "university.school@SEP@basketball_match.school_id@SEP@university.school_id"
    },
    {
        "nl_queries": "Return a scatter chart on what are the final tables made and best finishes for all poker players ?",
        "VQL": "Visualize SCATTER SELECT Final_Table_Made , Best_Finish FROM poker_player",
        "db_id": "poker_player",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Final_Table_Made , Best_Finish FROM poker_player', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Final_Table_Made , Best_Finish FROM poker_player'}",
        "record_name": "2592",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Return a scatter chart on what are the final tables made and best finishes for all poker players ?",
        "question_toks": [
            "Return",
            "a",
            "scatter",
            "chart",
            "on",
            "what",
            "are",
            "the",
            "final",
            "tables",
            "made",
            "and",
            "best",
            "finishes",
            "for",
            "all",
            "poker",
            "players",
            "?"
        ],
        "query": "Visualize SCATTER SELECT Final_Table_Made , Best_Finish FROM poker_player",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Final_Table_Made",
            ",",
            "Best_Finish",
            "FROM",
            "poker_player"
        ],
        "choose_schema": "Table poker_player, columns = [*,Poker_Player_ID, People_ID, Final_Table_Made, Best_Finish, Money_Rank, Earnings]",
        "choose_schema_rat_link": "poker_player.final_table_made@SEP@poker_player.best_finish@SEP@poker_player.poker_player_id"
    },
    {
        "nl_queries": "Visualize the relationship between Body_Builder_ID and People_ID .",
        "VQL": "Visualize SCATTER SELECT Body_Builder_ID , People_ID FROM body_builder",
        "db_id": "body_builder",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Body_Builder_ID , People_ID FROM body_builder', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Body_Builder_ID , People_ID FROM body_builder'}",
        "record_name": "352",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Visualize the relationship between Body_Builder_ID and People_ID .",
        "question_toks": [
            "Visualize",
            "the",
            "relationship",
            "between",
            "Body_Builder_ID",
            "and",
            "People_ID",
            "."
        ],
        "query": "Visualize SCATTER SELECT Body_Builder_ID , People_ID FROM body_builder",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Body_Builder_ID",
            ",",
            "People_ID",
            "FROM",
            "body_builder"
        ],
        "choose_schema": "Table body_builder, columns = [*,Body_Builder_ID, People_ID, Snatch, Clean_Jerk, Total]@SEP@Table people, columns = [*,People_ID, Name, Height, Weight, Birth_Date, Birth_Place]",
        "choose_schema_rat_link": "body_builder.body_builder_id@SEP@body_builder.people_id@SEP@people.people_id"
    },
    {
        "nl_queries": "Plot a scatter chart , height by weight .",
        "VQL": "Visualize SCATTER SELECT Height , Weight FROM people",
        "db_id": "body_builder",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Height , Weight FROM people', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Height , Weight FROM people'}",
        "record_name": "351",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Plot a scatter chart , height by weight .",
        "question_toks": [
            "Plot",
            "a",
            "scatter",
            "chart",
            ",",
            "height",
            "by",
            "weight",
            "."
        ],
        "query": "Visualize SCATTER SELECT Height , Weight FROM people",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Height",
            ",",
            "Weight",
            "FROM",
            "people"
        ],
        "choose_schema": "Table people, columns = [*,People_ID, Name, Height, Weight, Birth_Date, Birth_Place]",
        "choose_schema_rat_link": "people.height@SEP@people.weight"
    },
    {
        "nl_queries": "Give me a pie to show acc_percent from different all road .",
        "VQL": "Visualize PIE SELECT All_Road , ACC_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT All_Road , ACC_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT All_Road , ACC_Percent FROM basketball_match'}",
        "record_name": "3154",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Give me a pie to show acc_percent from different all road .",
        "question_toks": [
            "Give",
            "me",
            "a",
            "pie",
            "to",
            "show",
            "acc_percent",
            "from",
            "different",
            "all",
            "road",
            "."
        ],
        "query": "Visualize PIE SELECT All_Road , ACC_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "All_Road",
            ",",
            "ACC_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.all_road@SEP@basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Visualize a pie chart about the proportion of ACC_Regular_Season and Team_ID .",
        "VQL": "Visualize PIE SELECT ACC_Regular_Season , Team_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT ACC_Regular_Season , Team_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT ACC_Regular_Season , Team_ID FROM basketball_match'}",
        "record_name": "3127",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Visualize a pie chart about the proportion of ACC_Regular_Season and Team_ID .",
        "question_toks": [
            "Visualize",
            "a",
            "pie",
            "chart",
            "about",
            "the",
            "proportion",
            "of",
            "ACC_Regular_Season",
            "and",
            "Team_ID",
            "."
        ],
        "query": "Visualize PIE SELECT ACC_Regular_Season , Team_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "ACC_Regular_Season",
            ",",
            "Team_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road@SEP@basketball_match.team_id@SEP@basketball_match.team_name"
    },
    {
        "nl_queries": "Find Team_Name and Team_ID , and visualize them by a bar chart .",
        "VQL": "Visualize BAR SELECT Team_Name , Team_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Team_Name , Team_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Team_Name , Team_ID FROM basketball_match'}",
        "record_name": "3110",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Find Team_Name and Team_ID , and visualize them by a bar chart .",
        "question_toks": [
            "Find",
            "Team_Name",
            "and",
            "Team_ID",
            ",",
            "and",
            "visualize",
            "them",
            "by",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT Team_Name , Team_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Team_Name",
            ",",
            "Team_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name"
    },
    {
        "nl_queries": "I want to know the proportion of school id for each all road .",
        "VQL": "Visualize PIE SELECT All_Road , School_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT All_Road , School_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT All_Road , School_ID FROM basketball_match'}",
        "record_name": "3153",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "I want to know the proportion of school id for each all road .",
        "question_toks": [
            "I",
            "want",
            "to",
            "know",
            "the",
            "proportion",
            "of",
            "school",
            "id",
            "for",
            "each",
            "all",
            "road",
            "."
        ],
        "query": "Visualize PIE SELECT All_Road , School_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "All_Road",
            ",",
            "School_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "basketball_match.school_id@SEP@university.school_id@SEP@basketball_match.all_road@SEP@university.school"
    },
    {
        "nl_queries": "What is the relationship between School_ID and All_Games_Percent ?",
        "VQL": "Visualize SCATTER SELECT School_ID , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT School_ID , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT School_ID , All_Games_Percent FROM basketball_match'}",
        "record_name": "3109",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "What is the relationship between School_ID and All_Games_Percent ?",
        "question_toks": [
            "What",
            "is",
            "the",
            "relationship",
            "between",
            "School_ID",
            "and",
            "All_Games_Percent",
            "?"
        ],
        "query": "Visualize SCATTER SELECT School_ID , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "School_ID",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "university.school@SEP@basketball_match.school_id@SEP@university.school_id"
    },
    {
        "nl_queries": "Can you list the employee's last name and the corresponding department id using a bar chart ?",
        "VQL": "Visualize BAR SELECT LAST_NAME , DEPARTMENT_ID FROM employees",
        "db_id": "hr_1",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT LAST_NAME , DEPARTMENT_ID FROM employees', 'binning': ''}, 'VQL': 'Visualize BAR SELECT LAST_NAME , DEPARTMENT_ID FROM employees'}",
        "record_name": "1906",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                24,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Can you list the employee's last name and the corresponding department id using a bar chart ?",
        "question_toks": [
            "Can",
            "you",
            "list",
            "the",
            "employee's",
            "last",
            "name",
            "and",
            "the",
            "corresponding",
            "department",
            "id",
            "using",
            "a",
            "bar",
            "chart",
            "?"
        ],
        "query": "Visualize BAR SELECT LAST_NAME , DEPARTMENT_ID FROM employees",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "LAST_NAME",
            ",",
            "DEPARTMENT_ID",
            "FROM",
            "employees"
        ],
        "choose_schema": "Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]@SEP@Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]@SEP@Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]",
        "choose_schema_rat_link": "employees.last_name@SEP@departments.department_id@SEP@employees.department_id@SEP@job_history.department_id@SEP@employees.employee_id@SEP@job_history.employee_id@SEP@departments.department_name"
    },
    {
        "nl_queries": "Draw a bar chart for what are the name and population of each county ?",
        "VQL": "Visualize BAR SELECT County_name , Population FROM county",
        "db_id": "election",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT County_name , Population FROM county', 'binning': ''}, 'VQL': 'Visualize BAR SELECT County_name , Population FROM county'}",
        "record_name": "1304",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Draw a bar chart for what are the name and population of each county ?",
        "question_toks": [
            "Draw",
            "a",
            "bar",
            "chart",
            "for",
            "what",
            "are",
            "the",
            "name",
            "and",
            "population",
            "of",
            "each",
            "county",
            "?"
        ],
        "query": "Visualize BAR SELECT County_name , Population FROM county",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "County_name",
            ",",
            "Population",
            "FROM",
            "county"
        ],
        "choose_schema": "Table county, columns = [*,County_Id, County_name, Population, Zip_code]",
        "choose_schema_rat_link": "county.population@SEP@county.county_id@SEP@county.county_name@SEP@election.counties_represented"
    },
    {
        "nl_queries": "Find meter_700 and meter_100 , and visualize them by a bar chart .",
        "VQL": "Visualize BAR SELECT meter_700 , meter_100 FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT meter_700 , meter_100 FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT meter_700 , meter_100 FROM swimmer'}",
        "record_name": "2925",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Find meter_700 and meter_100 , and visualize them by a bar chart .",
        "question_toks": [
            "Find",
            "meter_700",
            "and",
            "meter_100",
            ",",
            "and",
            "visualize",
            "them",
            "by",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT meter_700 , meter_100 FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "meter_700",
            ",",
            "meter_100",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]",
        "choose_schema_rat_link": "swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_400@SEP@swimmer.meter_500@SEP@swimmer.meter_600@SEP@swimmer.meter_700"
    },
    {
        "nl_queries": "Return a bar chart about the distribution of meter_400 and meter_100 .",
        "VQL": "Visualize BAR SELECT meter_400 , meter_100 FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT meter_400 , meter_100 FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT meter_400 , meter_100 FROM swimmer'}",
        "record_name": "2919",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Return a bar chart about the distribution of meter_400 and meter_100 .",
        "question_toks": [
            "Return",
            "a",
            "bar",
            "chart",
            "about",
            "the",
            "distribution",
            "of",
            "meter_400",
            "and",
            "meter_100",
            "."
        ],
        "query": "Visualize BAR SELECT meter_400 , meter_100 FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "meter_400",
            ",",
            "meter_100",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]",
        "choose_schema_rat_link": "swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_400@SEP@swimmer.meter_500@SEP@swimmer.meter_600@SEP@swimmer.meter_700"
    },
    {
        "nl_queries": "Visualize the relationship between Body_Builder_ID and Snatch .",
        "VQL": "Visualize SCATTER SELECT Body_Builder_ID , Snatch FROM body_builder",
        "db_id": "body_builder",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Body_Builder_ID , Snatch FROM body_builder', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Body_Builder_ID , Snatch FROM body_builder'}",
        "record_name": "355",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Visualize the relationship between Body_Builder_ID and Snatch .",
        "question_toks": [
            "Visualize",
            "the",
            "relationship",
            "between",
            "Body_Builder_ID",
            "and",
            "Snatch",
            "."
        ],
        "query": "Visualize SCATTER SELECT Body_Builder_ID , Snatch FROM body_builder",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Body_Builder_ID",
            ",",
            "Snatch",
            "FROM",
            "body_builder"
        ],
        "choose_schema": "Table body_builder, columns = [*,Body_Builder_ID, People_ID, Snatch, Clean_Jerk, Total]",
        "choose_schema_rat_link": "body_builder.body_builder_id@SEP@body_builder.snatch"
    },
    {
        "nl_queries": "What is the maximum accelerate for different number of cylinders . Show scatter chart .",
        "VQL": "Visualize SCATTER SELECT max(Accelerate) , Cylinders FROM CARS_DATA",
        "db_id": "car_1",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT max(Accelerate) , Cylinders FROM CARS_DATA', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT max(Accelerate) , Cylinders FROM CARS_DATA'}",
        "record_name": "432",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "What is the maximum accelerate for different number of cylinders . Show scatter chart .",
        "question_toks": [
            "What",
            "is",
            "the",
            "maximum",
            "accelerate",
            "for",
            "different",
            "number",
            "of",
            "cylinders",
            ".",
            "Show",
            "scatter",
            "chart",
            "."
        ],
        "query": "Visualize SCATTER SELECT max(Accelerate) , Cylinders FROM CARS_DATA",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "max",
            "(",
            "Accelerate",
            ")",
            ",",
            "Cylinders",
            "FROM",
            "CARS_DATA"
        ],
        "choose_schema": "Table cars_data, columns = [*,Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year]",
        "choose_schema_rat_link": "cars_data.accelerate@SEP@cars_data.cylinders"
    },
    {
        "nl_queries": "Show me about the proportion of All_Games_Percent and All_Games_Percent in a pie chart .",
        "VQL": "Visualize PIE SELECT All_Games , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT All_Games , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT All_Games , All_Games_Percent FROM basketball_match'}",
        "record_name": "3139",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Show me about the proportion of All_Games_Percent and All_Games_Percent in a pie chart .",
        "question_toks": [
            "Show",
            "me",
            "about",
            "the",
            "proportion",
            "of",
            "All_Games_Percent",
            "and",
            "All_Games_Percent",
            "in",
            "a",
            "pie",
            "chart",
            "."
        ],
        "query": "Visualize PIE SELECT All_Games , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "All_Games",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]"
    },
    {
        "nl_queries": "Create a pie chart showing all_games_percent across acc regular season .",
        "VQL": "Visualize PIE SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match'}",
        "record_name": "3136",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Create a pie chart showing all_games_percent across acc regular season .",
        "question_toks": [
            "Create",
            "a",
            "pie",
            "chart",
            "showing",
            "all_games_percent",
            "across",
            "acc",
            "regular",
            "season",
            "."
        ],
        "query": "Visualize PIE SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "ACC_Regular_Season",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Can you draw the trend of salary over the hire date ?",
        "VQL": "Visualize LINE SELECT HIRE_DATE , SALARY FROM employees",
        "db_id": "hr_1",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize LINE', 'data_part': {'sql_part': 'SELECT HIRE_DATE , SALARY FROM employees', 'binning': ''}, 'VQL': 'Visualize LINE SELECT HIRE_DATE , SALARY FROM employees'}",
        "record_name": "1869",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                19,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 2
        },
        "question": "Can you draw the trend of salary over the hire date ?",
        "question_toks": [
            "Can",
            "you",
            "draw",
            "the",
            "trend",
            "of",
            "salary",
            "over",
            "the",
            "hire",
            "date",
            "?"
        ],
        "query": "Visualize LINE SELECT HIRE_DATE , SALARY FROM employees",
        "query_toks": [
            "Visualize",
            "LINE",
            "SELECT",
            "HIRE_DATE",
            ",",
            "SALARY",
            "FROM",
            "employees"
        ],
        "choose_schema": "Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]",
        "choose_schema_rat_link": "employees.hire_date@SEP@employees.salary"
    },
    {
        "nl_queries": "Visualize a bar chart about the distribution of All_Neutral and ACC_Percent .",
        "VQL": "Visualize BAR SELECT All_Neutral , ACC_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT All_Neutral , ACC_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT All_Neutral , ACC_Percent FROM basketball_match'}",
        "record_name": "3144",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Visualize a bar chart about the distribution of All_Neutral and ACC_Percent .",
        "question_toks": [
            "Visualize",
            "a",
            "bar",
            "chart",
            "about",
            "the",
            "distribution",
            "of",
            "All_Neutral",
            "and",
            "ACC_Percent",
            "."
        ],
        "query": "Visualize BAR SELECT All_Neutral , ACC_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "All_Neutral",
            ",",
            "ACC_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "A pie chart shows the proportion of All_Games and School_ID .",
        "VQL": "Visualize PIE SELECT All_Games , School_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT All_Games , School_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT All_Games , School_ID FROM basketball_match'}",
        "record_name": "3151",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "A pie chart shows the proportion of All_Games and School_ID .",
        "question_toks": [
            "A",
            "pie",
            "chart",
            "shows",
            "the",
            "proportion",
            "of",
            "All_Games",
            "and",
            "School_ID",
            "."
        ],
        "query": "Visualize PIE SELECT All_Games , School_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "All_Games",
            ",",
            "School_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "university.school@SEP@basketball_match.school_id@SEP@university.school_id"
    },
    {
        "nl_queries": "Show me about the distribution of Team_Name and ACC_Percent in a bar chart .",
        "VQL": "Visualize BAR SELECT Team_Name , ACC_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Team_Name , ACC_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Team_Name , ACC_Percent FROM basketball_match'}",
        "record_name": "3132",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Show me about the distribution of Team_Name and ACC_Percent in a bar chart .",
        "question_toks": [
            "Show",
            "me",
            "about",
            "the",
            "distribution",
            "of",
            "Team_Name",
            "and",
            "ACC_Percent",
            "in",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT Team_Name , ACC_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Team_Name",
            ",",
            "ACC_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name@SEP@basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Just show the employee's last name and their employee id using a bar chart .",
        "VQL": "Visualize BAR SELECT LAST_NAME , EMPLOYEE_ID FROM employees",
        "db_id": "hr_1",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT LAST_NAME , EMPLOYEE_ID FROM employees', 'binning': ''}, 'VQL': 'Visualize BAR SELECT LAST_NAME , EMPLOYEE_ID FROM employees'}",
        "record_name": "1902",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Just show the employee's last name and their employee id using a bar chart .",
        "question_toks": [
            "Just",
            "show",
            "the",
            "employee's",
            "last",
            "name",
            "and",
            "their",
            "employee",
            "id",
            "using",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT LAST_NAME , EMPLOYEE_ID FROM employees",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "LAST_NAME",
            ",",
            "EMPLOYEE_ID",
            "FROM",
            "employees"
        ],
        "choose_schema": "Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]@SEP@Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]",
        "choose_schema_rat_link": "employees.last_name@SEP@employees.employee_id@SEP@job_history.employee_id"
    },
    {
        "nl_queries": "Visualize the relationship between People_ID and Clean_Jerk .",
        "VQL": "Visualize SCATTER SELECT People_ID , Clean_Jerk FROM body_builder",
        "db_id": "body_builder",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT People_ID , Clean_Jerk FROM body_builder', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT People_ID , Clean_Jerk FROM body_builder'}",
        "record_name": "361",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Visualize the relationship between People_ID and Clean_Jerk .",
        "question_toks": [
            "Visualize",
            "the",
            "relationship",
            "between",
            "People_ID",
            "and",
            "Clean_Jerk",
            "."
        ],
        "query": "Visualize SCATTER SELECT People_ID , Clean_Jerk FROM body_builder",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "People_ID",
            ",",
            "Clean_Jerk",
            "FROM",
            "body_builder"
        ],
        "choose_schema": "Table body_builder, columns = [*,Body_Builder_ID, People_ID, Snatch, Clean_Jerk, Total]@SEP@Table people, columns = [*,People_ID, Name, Height, Weight, Birth_Date, Birth_Place]",
        "choose_schema_rat_link": "body_builder.people_id@SEP@people.people_id@SEP@body_builder.clean_jerk"
    },
    {
        "nl_queries": "Return a bar chart about the distribution of meter_700 and ID .",
        "VQL": "Visualize BAR SELECT meter_700 , ID FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT meter_700 , ID FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT meter_700 , ID FROM swimmer'}",
        "record_name": "2924",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Return a bar chart about the distribution of meter_700 and ID .",
        "question_toks": [
            "Return",
            "a",
            "bar",
            "chart",
            "about",
            "the",
            "distribution",
            "of",
            "meter_700",
            "and",
            "ID",
            "."
        ],
        "query": "Visualize BAR SELECT meter_700 , ID FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "meter_700",
            ",",
            "ID",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]@SEP@Table stadium, columns = [*,ID, name, Capacity, City, Country, Opening_year]@SEP@Table event, columns = [*,ID, Name, Stadium_ID, Year]@SEP@Table record, columns = [*,ID, Result, Swimmer_ID, Event_ID]",
        "choose_schema_rat_link": "swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_400@SEP@swimmer.meter_500@SEP@swimmer.meter_600@SEP@swimmer.meter_700@SEP@swimmer.id@SEP@stadium.id@SEP@event.id@SEP@record.id"
    },
    {
        "nl_queries": "Plot a scatter chart , body builder id by people_id .",
        "VQL": "Visualize SCATTER SELECT Body_Builder_ID , People_ID FROM body_builder",
        "db_id": "body_builder",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Body_Builder_ID , People_ID FROM body_builder', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Body_Builder_ID , People_ID FROM body_builder'}",
        "record_name": "352",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Plot a scatter chart , body builder id by people_id .",
        "question_toks": [
            "Plot",
            "a",
            "scatter",
            "chart",
            ",",
            "body",
            "builder",
            "id",
            "by",
            "people_id",
            "."
        ],
        "query": "Visualize SCATTER SELECT Body_Builder_ID , People_ID FROM body_builder",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Body_Builder_ID",
            ",",
            "People_ID",
            "FROM",
            "body_builder"
        ],
        "choose_schema": "Table body_builder, columns = [*,Body_Builder_ID, People_ID, Snatch, Clean_Jerk, Total]@SEP@Table people, columns = [*,People_ID, Name, Height, Weight, Birth_Date, Birth_Place]",
        "choose_schema_rat_link": "body_builder.body_builder_id@SEP@body_builder.people_id@SEP@people.people_id"
    },
    {
        "nl_queries": "Bar chart x axis meter 500 y axis meter_100",
        "VQL": "Visualize BAR SELECT meter_500 , meter_100 FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT meter_500 , meter_100 FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT meter_500 , meter_100 FROM swimmer'}",
        "record_name": "2921",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Bar chart x axis meter 500 y axis meter_100",
        "question_toks": [
            "Bar",
            "chart",
            "x",
            "axis",
            "meter",
            "500",
            "y",
            "axis",
            "meter_100"
        ],
        "query": "Visualize BAR SELECT meter_500 , meter_100 FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "meter_500",
            ",",
            "meter_100",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]",
        "choose_schema_rat_link": "swimmer.meter_500@SEP@swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_400@SEP@swimmer.meter_600@SEP@swimmer.meter_700"
    },
    {
        "nl_queries": "A line chart shows the change of Shop_ID over Start_from",
        "VQL": "Visualize LINE SELECT Start_from , Shop_ID FROM hiring",
        "db_id": "employee_hire_evaluation",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize LINE', 'data_part': {'sql_part': 'SELECT Start_from , Shop_ID FROM hiring', 'binning': ''}, 'VQL': 'Visualize LINE SELECT Start_from , Shop_ID FROM hiring'}",
        "record_name": "1338",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 2
        },
        "question": "A line chart shows the change of Shop_ID over Start_from",
        "question_toks": [
            "A",
            "line",
            "chart",
            "shows",
            "the",
            "change",
            "of",
            "Shop_ID",
            "over",
            "Start_from"
        ],
        "query": "Visualize LINE SELECT Start_from , Shop_ID FROM hiring",
        "query_toks": [
            "Visualize",
            "LINE",
            "SELECT",
            "Start_from",
            ",",
            "Shop_ID",
            "FROM",
            "hiring"
        ],
        "choose_schema": "Table shop, columns = [*,Shop_ID, Name, Location, District, Number_products, Manager_name]@SEP@Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]",
        "choose_schema_rat_link": "shop.shop_id@SEP@hiring.shop_id@SEP@hiring.start_from"
    },
    {
        "nl_queries": "Compute the total team_id across all games as a pie chart .",
        "VQL": "Visualize PIE SELECT All_Games , Team_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT All_Games , Team_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT All_Games , Team_ID FROM basketball_match'}",
        "record_name": "3128",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Compute the total team_id across all games as a pie chart .",
        "question_toks": [
            "Compute",
            "the",
            "total",
            "team_id",
            "across",
            "all",
            "games",
            "as",
            "a",
            "pie",
            "chart",
            "."
        ],
        "query": "Visualize PIE SELECT All_Games , Team_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "All_Games",
            ",",
            "Team_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.all_games@SEP@basketball_match.all_games_percent@SEP@basketball_match.team_id@SEP@basketball_match.team_name"
    },
    {
        "nl_queries": "Return a scatter chart about the correlation between Body_Builder_ID and Total .",
        "VQL": "Visualize SCATTER SELECT Body_Builder_ID , Total FROM body_builder",
        "db_id": "body_builder",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Body_Builder_ID , Total FROM body_builder', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Body_Builder_ID , Total FROM body_builder'}",
        "record_name": "358",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Return a scatter chart about the correlation between Body_Builder_ID and Total .",
        "question_toks": [
            "Return",
            "a",
            "scatter",
            "chart",
            "about",
            "the",
            "correlation",
            "between",
            "Body_Builder_ID",
            "and",
            "Total",
            "."
        ],
        "query": "Visualize SCATTER SELECT Body_Builder_ID , Total FROM body_builder",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Body_Builder_ID",
            ",",
            "Total",
            "FROM",
            "body_builder"
        ],
        "choose_schema": "Table body_builder, columns = [*,Body_Builder_ID, People_ID, Snatch, Clean_Jerk, Total]",
        "choose_schema_rat_link": "body_builder.body_builder_id@SEP@body_builder.total"
    },
    {
        "nl_queries": "Show weight from each name",
        "VQL": "Visualize BAR SELECT Name , Weight FROM people",
        "db_id": "candidate_poll",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Name , Weight FROM people', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Name , Weight FROM people'}",
        "record_name": "395",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Show weight from each name",
        "question_toks": [
            "Show",
            "weight",
            "from",
            "each",
            "name"
        ],
        "query": "Visualize BAR SELECT Name , Weight FROM people",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Name",
            ",",
            "Weight",
            "FROM",
            "people"
        ],
        "choose_schema": "Table people, columns = [*,People_ID, Sex, Name, Date_of_Birth, Height, Weight]",
        "choose_schema_rat_link": "people.weight@SEP@people.name"
    },
    {
        "nl_queries": "A pie chart shows the proportion of Team_Name and Team_ID .",
        "VQL": "Visualize PIE SELECT Team_Name , Team_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT Team_Name , Team_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT Team_Name , Team_ID FROM basketball_match'}",
        "record_name": "3126",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "A pie chart shows the proportion of Team_Name and Team_ID .",
        "question_toks": [
            "A",
            "pie",
            "chart",
            "shows",
            "the",
            "proportion",
            "of",
            "Team_Name",
            "and",
            "Team_ID",
            "."
        ],
        "query": "Visualize PIE SELECT Team_Name , Team_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "Team_Name",
            ",",
            "Team_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name"
    },
    {
        "nl_queries": "Bar chart x axis meter 700 y axis id",
        "VQL": "Visualize BAR SELECT meter_700 , ID FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT meter_700 , ID FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT meter_700 , ID FROM swimmer'}",
        "record_name": "2924",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Bar chart x axis meter 700 y axis id",
        "question_toks": [
            "Bar",
            "chart",
            "x",
            "axis",
            "meter",
            "700",
            "y",
            "axis",
            "id"
        ],
        "query": "Visualize BAR SELECT meter_700 , ID FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "meter_700",
            ",",
            "ID",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]@SEP@Table stadium, columns = [*,ID, name, Capacity, City, Country, Opening_year]@SEP@Table event, columns = [*,ID, Name, Stadium_ID, Year]@SEP@Table record, columns = [*,ID, Result, Swimmer_ID, Event_ID]",
        "choose_schema_rat_link": "swimmer.meter_700@SEP@swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_400@SEP@swimmer.meter_500@SEP@swimmer.meter_600@SEP@swimmer.id@SEP@stadium.id@SEP@event.id@SEP@record.id"
    },
    {
        "nl_queries": "List all the participant ids and their details using a bar chart .",
        "VQL": "Visualize BAR SELECT Participant_Details , Participant_ID FROM Participants",
        "db_id": "local_govt_in_alabama",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Participant_Details , Participant_ID FROM Participants', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Participant_Details , Participant_ID FROM Participants'}",
        "record_name": "2130",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "List all the participant ids and their details using a bar chart .",
        "question_toks": [
            "List",
            "all",
            "the",
            "participant",
            "ids",
            "and",
            "their",
            "details",
            "using",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT Participant_Details , Participant_ID FROM Participants",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Participant_Details",
            ",",
            "Participant_ID",
            "FROM",
            "Participants"
        ],
        "choose_schema": "Table Participants, columns = [*,Participant_ID, Participant_Type_Code, Participant_Details]@SEP@Table Participants_in_Events, columns = [*,Event_ID, Participant_ID]",
        "choose_schema_rat_link": "participants.participant_id@SEP@participants_in_events.participant_id@SEP@participants.participant_type_code@SEP@participants.participant_details"
    },
    {
        "nl_queries": "Give me a bar chart for charge_amount of each charge type",
        "VQL": "Visualize BAR SELECT charge_type , charge_amount FROM Charges",
        "db_id": "dog_kennels",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT charge_type , charge_amount FROM Charges', 'binning': ''}, 'VQL': 'Visualize BAR SELECT charge_type , charge_amount FROM Charges'}",
        "record_name": "1174",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Give me a bar chart for charge_amount of each charge type",
        "question_toks": [
            "Give",
            "me",
            "a",
            "bar",
            "chart",
            "for",
            "charge_amount",
            "of",
            "each",
            "charge",
            "type"
        ],
        "query": "Visualize BAR SELECT charge_type , charge_amount FROM Charges",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "charge_type",
            ",",
            "charge_amount",
            "FROM",
            "Charges"
        ],
        "choose_schema": "Table Charges, columns = [*,charge_id, charge_type, charge_amount]",
        "choose_schema_rat_link": "charges.charge_type@SEP@charges.charge_id@SEP@charges.charge_amount"
    },
    {
        "nl_queries": "Draw a scatter chart for what are the reigns and days held of all wrestlers ?",
        "VQL": "Visualize SCATTER SELECT Reign , Days_held FROM wrestler",
        "db_id": "wrestler",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Reign , Days_held FROM wrestler', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Reign , Days_held FROM wrestler'}",
        "record_name": "3284",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Draw a scatter chart for what are the reigns and days held of all wrestlers ?",
        "question_toks": [
            "Draw",
            "a",
            "scatter",
            "chart",
            "for",
            "what",
            "are",
            "the",
            "reigns",
            "and",
            "days",
            "held",
            "of",
            "all",
            "wrestlers",
            "?"
        ],
        "query": "Visualize SCATTER SELECT Reign , Days_held FROM wrestler",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Reign",
            ",",
            "Days_held",
            "FROM",
            "wrestler"
        ],
        "choose_schema": "Table wrestler, columns = [*,Wrestler_ID, Name, Reign, Days_held, Location, Event]",
        "choose_schema_rat_link": "wrestler.days_held@SEP@wrestler.reign@SEP@wrestler.wrestler_id@SEP@elimination.wrestler_id"
    },
    {
        "nl_queries": "Draw a bar chart about the distribution of Date_of_Birth and Height .",
        "VQL": "Visualize BAR SELECT Date_of_Birth , Height FROM people",
        "db_id": "candidate_poll",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Date_of_Birth , Height FROM people', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Date_of_Birth , Height FROM people'}",
        "record_name": "397",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Draw a bar chart about the distribution of Date_of_Birth and Height .",
        "question_toks": [
            "Draw",
            "a",
            "bar",
            "chart",
            "about",
            "the",
            "distribution",
            "of",
            "Date_of_Birth",
            "and",
            "Height",
            "."
        ],
        "query": "Visualize BAR SELECT Date_of_Birth , Height FROM people",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Date_of_Birth",
            ",",
            "Height",
            "FROM",
            "people"
        ],
        "choose_schema": "Table people, columns = [*,People_ID, Sex, Name, Date_of_Birth, Height, Weight]",
        "choose_schema_rat_link": "candidate.date@SEP@people.date_of_birth@SEP@people.height"
    },
    {
        "nl_queries": "Give me the comparison about All_Games_Percent over the All_Games by a bar chart .",
        "VQL": "Visualize BAR SELECT All_Games , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT All_Games , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT All_Games , All_Games_Percent FROM basketball_match'}",
        "record_name": "3140",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Give me the comparison about All_Games_Percent over the All_Games by a bar chart .",
        "question_toks": [
            "Give",
            "me",
            "the",
            "comparison",
            "about",
            "All_Games_Percent",
            "over",
            "the",
            "All_Games",
            "by",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT All_Games , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "All_Games",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]"
    },
    {
        "nl_queries": "A bar chart shows the distribution of Name and Weight .",
        "VQL": "Visualize BAR SELECT Name , Weight FROM people",
        "db_id": "candidate_poll",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Name , Weight FROM people', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Name , Weight FROM people'}",
        "record_name": "395",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "A bar chart shows the distribution of Name and Weight .",
        "question_toks": [
            "A",
            "bar",
            "chart",
            "shows",
            "the",
            "distribution",
            "of",
            "Name",
            "and",
            "Weight",
            "."
        ],
        "query": "Visualize BAR SELECT Name , Weight FROM people",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Name",
            ",",
            "Weight",
            "FROM",
            "people"
        ],
        "choose_schema": "Table people, columns = [*,People_ID, Sex, Name, Date_of_Birth, Height, Weight]",
        "choose_schema_rat_link": "people.name@SEP@people.weight"
    },
    {
        "nl_queries": "Return a scatter chart about the correlation between ACC_Percent and All_Games_Percent .",
        "VQL": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT ACC_Percent , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match'}",
        "record_name": "3121",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Return a scatter chart about the correlation between ACC_Percent and All_Games_Percent .",
        "question_toks": [
            "Return",
            "a",
            "scatter",
            "chart",
            "about",
            "the",
            "correlation",
            "between",
            "ACC_Percent",
            "and",
            "All_Games_Percent",
            "."
        ],
        "query": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "ACC_Percent",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Give me the comparison about Team_ID over the All_Neutral by a bar chart .",
        "VQL": "Visualize BAR SELECT All_Neutral , Team_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT All_Neutral , Team_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT All_Neutral , Team_ID FROM basketball_match'}",
        "record_name": "3118",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Give me the comparison about Team_ID over the All_Neutral by a bar chart .",
        "question_toks": [
            "Give",
            "me",
            "the",
            "comparison",
            "about",
            "Team_ID",
            "over",
            "the",
            "All_Neutral",
            "by",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT All_Neutral , Team_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "All_Neutral",
            ",",
            "Team_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name"
    },
    {
        "nl_queries": "I want to know the proportion of all grams percent for each team name .",
        "VQL": "Visualize PIE SELECT Team_Name , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT Team_Name , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT Team_Name , All_Games_Percent FROM basketball_match'}",
        "record_name": "3133",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "I want to know the proportion of all grams percent for each team name .",
        "question_toks": [
            "I",
            "want",
            "to",
            "know",
            "the",
            "proportion",
            "of",
            "all",
            "grams",
            "percent",
            "for",
            "each",
            "team",
            "name",
            "."
        ],
        "query": "Visualize PIE SELECT Team_Name , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "Team_Name",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_name@SEP@basketball_match.team_id"
    },
    {
        "nl_queries": "A scatter chart shows the correlation between ACC_Percent and All_Games_Percent .",
        "VQL": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT ACC_Percent , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match'}",
        "record_name": "3121",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "A scatter chart shows the correlation between ACC_Percent and All_Games_Percent .",
        "question_toks": [
            "A",
            "scatter",
            "chart",
            "shows",
            "the",
            "correlation",
            "between",
            "ACC_Percent",
            "and",
            "All_Games_Percent",
            "."
        ],
        "query": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "ACC_Percent",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Return a bar chart about the distribution of Date_of_Birth and Height .",
        "VQL": "Visualize BAR SELECT Date_of_Birth , Height FROM people",
        "db_id": "candidate_poll",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Date_of_Birth , Height FROM people', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Date_of_Birth , Height FROM people'}",
        "record_name": "397",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Return a bar chart about the distribution of Date_of_Birth and Height .",
        "question_toks": [
            "Return",
            "a",
            "bar",
            "chart",
            "about",
            "the",
            "distribution",
            "of",
            "Date_of_Birth",
            "and",
            "Height",
            "."
        ],
        "query": "Visualize BAR SELECT Date_of_Birth , Height FROM people",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Date_of_Birth",
            ",",
            "Height",
            "FROM",
            "people"
        ],
        "choose_schema": "Table people, columns = [*,People_ID, Sex, Name, Date_of_Birth, Height, Weight]",
        "choose_schema_rat_link": "candidate.date@SEP@people.date_of_birth@SEP@people.height"
    },
    {
        "nl_queries": "Draw a bar chart about the distribution of Team_Name and All_Games_Percent .",
        "VQL": "Visualize BAR SELECT Team_Name , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Team_Name , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Team_Name , All_Games_Percent FROM basketball_match'}",
        "record_name": "3134",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Draw a bar chart about the distribution of Team_Name and All_Games_Percent .",
        "question_toks": [
            "Draw",
            "a",
            "bar",
            "chart",
            "about",
            "the",
            "distribution",
            "of",
            "Team_Name",
            "and",
            "All_Games_Percent",
            "."
        ],
        "query": "Visualize BAR SELECT Team_Name , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Team_Name",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name"
    },
    {
        "nl_queries": "Show me about the proportion of Team_ID and Team_ID in a pie chart .",
        "VQL": "Visualize PIE SELECT All_Road , Team_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT All_Road , Team_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT All_Road , Team_ID FROM basketball_match'}",
        "record_name": "3129",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Show me about the proportion of Team_ID and Team_ID in a pie chart .",
        "question_toks": [
            "Show",
            "me",
            "about",
            "the",
            "proportion",
            "of",
            "Team_ID",
            "and",
            "Team_ID",
            "in",
            "a",
            "pie",
            "chart",
            "."
        ],
        "query": "Visualize PIE SELECT All_Road , Team_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "All_Road",
            ",",
            "Team_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name"
    },
    {
        "nl_queries": "Create a pie chart showing acc_percent across team name .",
        "VQL": "Visualize PIE SELECT Team_Name , ACC_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT Team_Name , ACC_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT Team_Name , ACC_Percent FROM basketball_match'}",
        "record_name": "3148",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Create a pie chart showing acc_percent across team name .",
        "question_toks": [
            "Create",
            "a",
            "pie",
            "chart",
            "showing",
            "acc_percent",
            "across",
            "team",
            "name",
            "."
        ],
        "query": "Visualize PIE SELECT Team_Name , ACC_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "Team_Name",
            ",",
            "ACC_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_name@SEP@basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road@SEP@basketball_match.team_id"
    },
    {
        "nl_queries": "Show me about the distribution of All_Neutral and School_ID in a bar chart .",
        "VQL": "Visualize BAR SELECT All_Neutral , School_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT All_Neutral , School_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT All_Neutral , School_ID FROM basketball_match'}",
        "record_name": "3119",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Show me about the distribution of All_Neutral and School_ID in a bar chart .",
        "question_toks": [
            "Show",
            "me",
            "about",
            "the",
            "distribution",
            "of",
            "All_Neutral",
            "and",
            "School_ID",
            "in",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT All_Neutral , School_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "All_Neutral",
            ",",
            "School_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "university.school@SEP@basketball_match.school_id@SEP@university.school_id"
    },
    {
        "nl_queries": "Show me about the proportion of All_Games_Percent and All_Games_Percent in a pie chart .",
        "VQL": "Visualize PIE SELECT All_Road , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT All_Road , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT All_Road , All_Games_Percent FROM basketball_match'}",
        "record_name": "3142",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Show me about the proportion of All_Games_Percent and All_Games_Percent in a pie chart .",
        "question_toks": [
            "Show",
            "me",
            "about",
            "the",
            "proportion",
            "of",
            "All_Games_Percent",
            "and",
            "All_Games_Percent",
            "in",
            "a",
            "pie",
            "chart",
            "."
        ],
        "query": "Visualize PIE SELECT All_Road , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "All_Road",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]"
    },
    {
        "nl_queries": "A bar chart shows the distribution of meter_500 and meter_100 .",
        "VQL": "Visualize BAR SELECT meter_500 , meter_100 FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT meter_500 , meter_100 FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT meter_500 , meter_100 FROM swimmer'}",
        "record_name": "2921",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "A bar chart shows the distribution of meter_500 and meter_100 .",
        "question_toks": [
            "A",
            "bar",
            "chart",
            "shows",
            "the",
            "distribution",
            "of",
            "meter_500",
            "and",
            "meter_100",
            "."
        ],
        "query": "Visualize BAR SELECT meter_500 , meter_100 FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "meter_500",
            ",",
            "meter_100",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]",
        "choose_schema_rat_link": "swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_400@SEP@swimmer.meter_500@SEP@swimmer.meter_600@SEP@swimmer.meter_700"
    },
    {
        "nl_queries": "Return a bar chart about the distribution of name and ID .",
        "VQL": "Visualize BAR SELECT name , ID FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT name , ID FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT name , ID FROM swimmer'}",
        "record_name": "2914",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Return a bar chart about the distribution of name and ID .",
        "question_toks": [
            "Return",
            "a",
            "bar",
            "chart",
            "about",
            "the",
            "distribution",
            "of",
            "name",
            "and",
            "ID",
            "."
        ],
        "query": "Visualize BAR SELECT name , ID FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "name",
            ",",
            "ID",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]@SEP@Table stadium, columns = [*,ID, name, Capacity, City, Country, Opening_year]@SEP@Table event, columns = [*,ID, Name, Stadium_ID, Year]@SEP@Table record, columns = [*,ID, Result, Swimmer_ID, Event_ID]",
        "choose_schema_rat_link": "swimmer.name@SEP@stadium.name@SEP@event.name@SEP@swimmer.id@SEP@stadium.id@SEP@event.id@SEP@record.id"
    },
    {
        "nl_queries": "Just list the resident id and details in a bar chart .",
        "VQL": "Visualize BAR SELECT other_details , resident_id FROM Residents",
        "db_id": "local_govt_and_lot",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT other_details , resident_id FROM Residents', 'binning': ''}, 'VQL': 'Visualize BAR SELECT other_details , resident_id FROM Residents'}",
        "record_name": "2108",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Just list the resident id and details in a bar chart .",
        "question_toks": [
            "Just",
            "list",
            "the",
            "resident",
            "id",
            "and",
            "details",
            "in",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT other_details , resident_id FROM Residents",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "other_details",
            ",",
            "resident_id",
            "FROM",
            "Residents"
        ],
        "choose_schema": "Table Properties, columns = [*,property_id, property_type_code, property_address, other_details]@SEP@Table Residents, columns = [*,resident_id, property_id, date_moved_in, date_moved_out, other_details]@SEP@Table Residents_Services, columns = [*,resident_id, service_id, date_moved_in, property_id, date_requested, date_provided, other_details]@SEP@Table Customer_Events, columns = [*,Customer_Event_ID, customer_id, date_moved_in, property_id, resident_id, thing_id]@SEP@Table Customer_Event_Notes, columns = [*,Customer_Event_Note_ID, Customer_Event_ID, service_type_code, resident_id, property_id, date_moved_in]",
        "choose_schema_rat_link": "residents.resident_id@SEP@residents_services.resident_id@SEP@customer_events.resident_id@SEP@customer_event_notes.resident_id"
    },
    {
        "nl_queries": "A bar chart shows the distribution of Team_Name and ACC_Percent .",
        "VQL": "Visualize BAR SELECT Team_Name , ACC_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Team_Name , ACC_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Team_Name , ACC_Percent FROM basketball_match'}",
        "record_name": "3132",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "A bar chart shows the distribution of Team_Name and ACC_Percent .",
        "question_toks": [
            "A",
            "bar",
            "chart",
            "shows",
            "the",
            "distribution",
            "of",
            "Team_Name",
            "and",
            "ACC_Percent",
            "."
        ],
        "query": "Visualize BAR SELECT Team_Name , ACC_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Team_Name",
            ",",
            "ACC_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name@SEP@basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Bar chart of school_id from each all games",
        "VQL": "Visualize BAR SELECT All_Games , School_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT All_Games , School_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT All_Games , School_ID FROM basketball_match'}",
        "record_name": "3115",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Bar chart of school_id from each all games",
        "question_toks": [
            "Bar",
            "chart",
            "of",
            "school_id",
            "from",
            "each",
            "all",
            "games"
        ],
        "query": "Visualize BAR SELECT All_Games , School_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "All_Games",
            ",",
            "School_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "basketball_match.all_games@SEP@basketball_match.all_games_percent@SEP@university.school@SEP@basketball_match.school_id@SEP@university.school_id"
    },
    {
        "nl_queries": "A pie chart shows the proportion of All_Games and ACC_Percent .",
        "VQL": "Visualize PIE SELECT All_Games , ACC_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT All_Games , ACC_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT All_Games , ACC_Percent FROM basketball_match'}",
        "record_name": "3152",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "A pie chart shows the proportion of All_Games and ACC_Percent .",
        "question_toks": [
            "A",
            "pie",
            "chart",
            "shows",
            "the",
            "proportion",
            "of",
            "All_Games",
            "and",
            "ACC_Percent",
            "."
        ],
        "query": "Visualize PIE SELECT All_Games , ACC_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "All_Games",
            ",",
            "ACC_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Visualize a bar chart about the distribution of Time and meter_100 .",
        "VQL": "Visualize BAR SELECT Time , meter_100 FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Time , meter_100 FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Time , meter_100 FROM swimmer'}",
        "record_name": "2927",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Visualize a bar chart about the distribution of Time and meter_100 .",
        "question_toks": [
            "Visualize",
            "a",
            "bar",
            "chart",
            "about",
            "the",
            "distribution",
            "of",
            "Time",
            "and",
            "meter_100",
            "."
        ],
        "query": "Visualize BAR SELECT Time , meter_100 FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Time",
            ",",
            "meter_100",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]",
        "choose_schema_rat_link": "swimmer.time@SEP@swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_400@SEP@swimmer.meter_500@SEP@swimmer.meter_600@SEP@swimmer.meter_700"
    },
    {
        "nl_queries": "Give me a bar chart for all_games_percent of each team name",
        "VQL": "Visualize BAR SELECT Team_Name , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Team_Name , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Team_Name , All_Games_Percent FROM basketball_match'}",
        "record_name": "3134",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Give me a bar chart for all_games_percent of each team name",
        "question_toks": [
            "Give",
            "me",
            "a",
            "bar",
            "chart",
            "for",
            "all_games_percent",
            "of",
            "each",
            "team",
            "name"
        ],
        "query": "Visualize BAR SELECT Team_Name , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Team_Name",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_name@SEP@basketball_match.team_id"
    },
    {
        "nl_queries": "Show me about the proportion of ACC_Percent and ACC_Percent in a pie chart .",
        "VQL": "Visualize PIE SELECT All_Games , ACC_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT All_Games , ACC_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT All_Games , ACC_Percent FROM basketball_match'}",
        "record_name": "3152",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Show me about the proportion of ACC_Percent and ACC_Percent in a pie chart .",
        "question_toks": [
            "Show",
            "me",
            "about",
            "the",
            "proportion",
            "of",
            "ACC_Percent",
            "and",
            "ACC_Percent",
            "in",
            "a",
            "pie",
            "chart",
            "."
        ],
        "query": "Visualize PIE SELECT All_Games , ACC_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "All_Games",
            ",",
            "ACC_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Scatter plot to show consider rate on x axis and oppose_rate on y axis .",
        "VQL": "Visualize SCATTER SELECT Consider_rate , Oppose_rate FROM candidate",
        "db_id": "candidate_poll",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Consider_rate , Oppose_rate FROM candidate', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Consider_rate , Oppose_rate FROM candidate'}",
        "record_name": "400",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Scatter plot to show consider rate on x axis and oppose_rate on y axis .",
        "question_toks": [
            "Scatter",
            "plot",
            "to",
            "show",
            "consider",
            "rate",
            "on",
            "x",
            "axis",
            "and",
            "oppose_rate",
            "on",
            "y",
            "axis",
            "."
        ],
        "query": "Visualize SCATTER SELECT Consider_rate , Oppose_rate FROM candidate",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Consider_rate",
            ",",
            "Oppose_rate",
            "FROM",
            "candidate"
        ],
        "choose_schema": "Table candidate, columns = [*,Candidate_ID, People_ID, Poll_Source, Date, Support_rate, Consider_rate, Oppose_rate, Unsure_rate]",
        "choose_schema_rat_link": "candidate.consider_rate@SEP@candidate.oppose_rate"
    },
    {
        "nl_queries": "Return a pie chart about the proportion of All_Games and Team_ID .",
        "VQL": "Visualize PIE SELECT All_Games , Team_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT All_Games , Team_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT All_Games , Team_ID FROM basketball_match'}",
        "record_name": "3128",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Return a pie chart about the proportion of All_Games and Team_ID .",
        "question_toks": [
            "Return",
            "a",
            "pie",
            "chart",
            "about",
            "the",
            "proportion",
            "of",
            "All_Games",
            "and",
            "Team_ID",
            "."
        ],
        "query": "Visualize PIE SELECT All_Games , Team_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "All_Games",
            ",",
            "Team_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name"
    },
    {
        "nl_queries": "Give me a pie chart to reflect the proportion of All_Neutral and ACC_Percent .",
        "VQL": "Visualize PIE SELECT All_Neutral , ACC_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT All_Neutral , ACC_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT All_Neutral , ACC_Percent FROM basketball_match'}",
        "record_name": "3156",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Give me a pie chart to reflect the proportion of All_Neutral and ACC_Percent .",
        "question_toks": [
            "Give",
            "me",
            "a",
            "pie",
            "chart",
            "to",
            "reflect",
            "the",
            "proportion",
            "of",
            "All_Neutral",
            "and",
            "ACC_Percent",
            "."
        ],
        "query": "Visualize PIE SELECT All_Neutral , ACC_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "All_Neutral",
            ",",
            "ACC_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Give me the comparison about meter_100 over the Time by a bar chart .",
        "VQL": "Visualize BAR SELECT Time , meter_100 FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Time , meter_100 FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Time , meter_100 FROM swimmer'}",
        "record_name": "2927",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Give me the comparison about meter_100 over the Time by a bar chart .",
        "question_toks": [
            "Give",
            "me",
            "the",
            "comparison",
            "about",
            "meter_100",
            "over",
            "the",
            "Time",
            "by",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT Time , meter_100 FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Time",
            ",",
            "meter_100",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]",
        "choose_schema_rat_link": "swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_400@SEP@swimmer.meter_500@SEP@swimmer.meter_600@SEP@swimmer.meter_700@SEP@swimmer.time"
    },
    {
        "nl_queries": "Give me the comparison about Weight over the Date_of_Birth .",
        "VQL": "Visualize BAR SELECT Date_of_Birth , Weight FROM people",
        "db_id": "candidate_poll",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Date_of_Birth , Weight FROM people', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Date_of_Birth , Weight FROM people'}",
        "record_name": "398",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Give me the comparison about Weight over the Date_of_Birth .",
        "question_toks": [
            "Give",
            "me",
            "the",
            "comparison",
            "about",
            "Weight",
            "over",
            "the",
            "Date_of_Birth",
            "."
        ],
        "query": "Visualize BAR SELECT Date_of_Birth , Weight FROM people",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Date_of_Birth",
            ",",
            "Weight",
            "FROM",
            "people"
        ],
        "choose_schema": "Table people, columns = [*,People_ID, Sex, Name, Date_of_Birth, Height, Weight]",
        "choose_schema_rat_link": "people.weight@SEP@candidate.date@SEP@people.date_of_birth"
    },
    {
        "nl_queries": "Visualize a scatter chart about the correlation between Team_ID and All_Games_Percent .",
        "VQL": "Visualize SCATTER SELECT Team_ID , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Team_ID , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Team_ID , All_Games_Percent FROM basketball_match'}",
        "record_name": "3106",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Visualize a scatter chart about the correlation between Team_ID and All_Games_Percent .",
        "question_toks": [
            "Visualize",
            "a",
            "scatter",
            "chart",
            "about",
            "the",
            "correlation",
            "between",
            "Team_ID",
            "and",
            "All_Games_Percent",
            "."
        ],
        "query": "Visualize SCATTER SELECT Team_ID , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Team_ID",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name"
    },
    {
        "nl_queries": "I want to know the proportion of All_Games_Percent for each all road .",
        "VQL": "Visualize PIE SELECT All_Road , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT All_Road , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT All_Road , All_Games_Percent FROM basketball_match'}",
        "record_name": "3142",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "I want to know the proportion of All_Games_Percent for each all road .",
        "question_toks": [
            "I",
            "want",
            "to",
            "know",
            "the",
            "proportion",
            "of",
            "All_Games_Percent",
            "for",
            "each",
            "all",
            "road",
            "."
        ],
        "query": "Visualize PIE SELECT All_Road , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "All_Road",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.all_road"
    },
    {
        "nl_queries": "Return a bar chart about the distribution of All_Road and Team_ID .",
        "VQL": "Visualize BAR SELECT All_Road , Team_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT All_Road , Team_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT All_Road , Team_ID FROM basketball_match'}",
        "record_name": "3116",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Return a bar chart about the distribution of All_Road and Team_ID .",
        "question_toks": [
            "Return",
            "a",
            "bar",
            "chart",
            "about",
            "the",
            "distribution",
            "of",
            "All_Road",
            "and",
            "Team_ID",
            "."
        ],
        "query": "Visualize BAR SELECT All_Road , Team_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "All_Road",
            ",",
            "Team_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name"
    },
    {
        "nl_queries": "Draw a scatter chart about the correlation between Height and Weight .",
        "VQL": "Visualize SCATTER SELECT Height , Weight FROM people",
        "db_id": "candidate_poll",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Height , Weight FROM people', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Height , Weight FROM people'}",
        "record_name": "390",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Draw a scatter chart about the correlation between Height and Weight .",
        "question_toks": [
            "Draw",
            "a",
            "scatter",
            "chart",
            "about",
            "the",
            "correlation",
            "between",
            "Height",
            "and",
            "Weight",
            "."
        ],
        "query": "Visualize SCATTER SELECT Height , Weight FROM people",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Height",
            ",",
            "Weight",
            "FROM",
            "people"
        ],
        "choose_schema": "Table people, columns = [*,People_ID, Sex, Name, Date_of_Birth, Height, Weight]",
        "choose_schema_rat_link": "people.height@SEP@people.weight"
    },
    {
        "nl_queries": "Draw a pie chart about the proportion of All_Neutral and ACC_Percent .",
        "VQL": "Visualize PIE SELECT All_Neutral , ACC_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT All_Neutral , ACC_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT All_Neutral , ACC_Percent FROM basketball_match'}",
        "record_name": "3156",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Draw a pie chart about the proportion of All_Neutral and ACC_Percent .",
        "question_toks": [
            "Draw",
            "a",
            "pie",
            "chart",
            "about",
            "the",
            "proportion",
            "of",
            "All_Neutral",
            "and",
            "ACC_Percent",
            "."
        ],
        "query": "Visualize PIE SELECT All_Neutral , ACC_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "All_Neutral",
            ",",
            "ACC_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Visualize a line chart about the change of Employee_ID over Start_from .",
        "VQL": "Visualize LINE SELECT Start_from , Employee_ID FROM hiring",
        "db_id": "employee_hire_evaluation",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize LINE', 'data_part': {'sql_part': 'SELECT Start_from , Employee_ID FROM hiring', 'binning': ''}, 'VQL': 'Visualize LINE SELECT Start_from , Employee_ID FROM hiring'}",
        "record_name": "1339",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 2
        },
        "question": "Visualize a line chart about the change of Employee_ID over Start_from .",
        "question_toks": [
            "Visualize",
            "a",
            "line",
            "chart",
            "about",
            "the",
            "change",
            "of",
            "Employee_ID",
            "over",
            "Start_from",
            "."
        ],
        "query": "Visualize LINE SELECT Start_from , Employee_ID FROM hiring",
        "query_toks": [
            "Visualize",
            "LINE",
            "SELECT",
            "Start_from",
            ",",
            "Employee_ID",
            "FROM",
            "hiring"
        ],
        "choose_schema": "Table employee, columns = [*,Employee_ID, Name, Age, City]@SEP@Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]@SEP@Table evaluation, columns = [*,Employee_ID, Year_awarded, Bonus]",
        "choose_schema_rat_link": "employee.employee_id@SEP@hiring.employee_id@SEP@evaluation.employee_id@SEP@hiring.start_from"
    },
    {
        "nl_queries": "what is the maximum accelerate for different number of cylinders ?",
        "VQL": "Visualize SCATTER SELECT max(Accelerate) , Cylinders FROM CARS_DATA",
        "db_id": "car_1",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT max(Accelerate) , Cylinders FROM CARS_DATA', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT max(Accelerate) , Cylinders FROM CARS_DATA'}",
        "record_name": "432",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "what is the maximum accelerate for different number of cylinders ?",
        "question_toks": [
            "what",
            "is",
            "the",
            "maximum",
            "accelerate",
            "for",
            "different",
            "number",
            "of",
            "cylinders",
            "?"
        ],
        "query": "Visualize SCATTER SELECT max(Accelerate) , Cylinders FROM CARS_DATA",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "max",
            "(",
            "Accelerate",
            ")",
            ",",
            "Cylinders",
            "FROM",
            "CARS_DATA"
        ],
        "choose_schema": "Table cars_data, columns = [*,Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year]",
        "choose_schema_rat_link": "cars_data.accelerate@SEP@cars_data.cylinders"
    },
    {
        "nl_queries": "School_ID across team name in a pie chart .",
        "VQL": "Visualize PIE SELECT Team_Name , School_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT Team_Name , School_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT Team_Name , School_ID FROM basketball_match'}",
        "record_name": "3147",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "School_ID across team name in a pie chart .",
        "question_toks": [
            "School_ID",
            "across",
            "team",
            "name",
            "in",
            "a",
            "pie",
            "chart",
            "."
        ],
        "query": "Visualize PIE SELECT Team_Name , School_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "Team_Name",
            ",",
            "School_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "basketball_match.team_name@SEP@university.school@SEP@basketball_match.school_id@SEP@university.school_id@SEP@basketball_match.team_id"
    },
    {
        "nl_queries": "Draw a pie chart about the proportion of ACC_Regular_Season and School_ID .",
        "VQL": "Visualize PIE SELECT ACC_Regular_Season , School_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT ACC_Regular_Season , School_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT ACC_Regular_Season , School_ID FROM basketball_match'}",
        "record_name": "3149",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Draw a pie chart about the proportion of ACC_Regular_Season and School_ID .",
        "question_toks": [
            "Draw",
            "a",
            "pie",
            "chart",
            "about",
            "the",
            "proportion",
            "of",
            "ACC_Regular_Season",
            "and",
            "School_ID",
            "."
        ],
        "query": "Visualize PIE SELECT ACC_Regular_Season , School_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "ACC_Regular_Season",
            ",",
            "School_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road@SEP@university.school@SEP@basketball_match.school_id@SEP@university.school_id"
    },
    {
        "nl_queries": "Give me the comparison about School_ID over the All_Neutral by a bar chart .",
        "VQL": "Visualize BAR SELECT All_Neutral , School_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT All_Neutral , School_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT All_Neutral , School_ID FROM basketball_match'}",
        "record_name": "3119",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Give me the comparison about School_ID over the All_Neutral by a bar chart .",
        "question_toks": [
            "Give",
            "me",
            "the",
            "comparison",
            "about",
            "School_ID",
            "over",
            "the",
            "All_Neutral",
            "by",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT All_Neutral , School_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "All_Neutral",
            ",",
            "School_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "university.school@SEP@basketball_match.school_id@SEP@university.school_id"
    },
    {
        "nl_queries": "Scatter plot to show snatch on x axis and total on y axis .",
        "VQL": "Visualize SCATTER SELECT Snatch , Total FROM body_builder",
        "db_id": "body_builder",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Snatch , Total FROM body_builder', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Snatch , Total FROM body_builder'}",
        "record_name": "354",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Scatter plot to show snatch on x axis and total on y axis .",
        "question_toks": [
            "Scatter",
            "plot",
            "to",
            "show",
            "snatch",
            "on",
            "x",
            "axis",
            "and",
            "total",
            "on",
            "y",
            "axis",
            "."
        ],
        "query": "Visualize SCATTER SELECT Snatch , Total FROM body_builder",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Snatch",
            ",",
            "Total",
            "FROM",
            "body_builder"
        ],
        "choose_schema": "Table body_builder, columns = [*,Body_Builder_ID, People_ID, Snatch, Clean_Jerk, Total]",
        "choose_schema_rat_link": "body_builder.snatch@SEP@body_builder.total"
    },
    {
        "nl_queries": "Give me the comparison about meter_100 over the meter_500 by a bar chart .",
        "VQL": "Visualize BAR SELECT meter_500 , meter_100 FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT meter_500 , meter_100 FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT meter_500 , meter_100 FROM swimmer'}",
        "record_name": "2921",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Give me the comparison about meter_100 over the meter_500 by a bar chart .",
        "question_toks": [
            "Give",
            "me",
            "the",
            "comparison",
            "about",
            "meter_100",
            "over",
            "the",
            "meter_500",
            "by",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT meter_500 , meter_100 FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "meter_500",
            ",",
            "meter_100",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]",
        "choose_schema_rat_link": "swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_400@SEP@swimmer.meter_500@SEP@swimmer.meter_600@SEP@swimmer.meter_700"
    },
    {
        "nl_queries": "List the dates and vote percents of elections . Plot them as pie chart .",
        "VQL": "Visualize PIE SELECT Date , Vote_Percent FROM election",
        "db_id": "election_representative",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT Date , Vote_Percent FROM election', 'binning': ''}, 'VQL': 'Visualize PIE SELECT Date , Vote_Percent FROM election'}",
        "record_name": "1325",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "List the dates and vote percents of elections . Plot them as pie chart .",
        "question_toks": [
            "List",
            "the",
            "dates",
            "and",
            "vote",
            "percents",
            "of",
            "elections",
            ".",
            "Plot",
            "them",
            "as",
            "pie",
            "chart",
            "."
        ],
        "query": "Visualize PIE SELECT Date , Vote_Percent FROM election",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "Date",
            ",",
            "Vote_Percent",
            "FROM",
            "election"
        ],
        "choose_schema": "Table election, columns = [*,Election_ID, Representative_ID, Date, Votes, Vote_Percent, Seats, Place]",
        "choose_schema_rat_link": "election.vote_percent@SEP@election.date@SEP@election.votes@SEP@election.election_id"
    },
    {
        "nl_queries": "For the attribute ACC_Regular_Season and School_ID , show their proportion by a pie chart .",
        "VQL": "Visualize PIE SELECT ACC_Regular_Season , School_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT ACC_Regular_Season , School_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT ACC_Regular_Season , School_ID FROM basketball_match'}",
        "record_name": "3149",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "For the attribute ACC_Regular_Season and School_ID , show their proportion by a pie chart .",
        "question_toks": [
            "For",
            "the",
            "attribute",
            "ACC_Regular_Season",
            "and",
            "School_ID",
            ",",
            "show",
            "their",
            "proportion",
            "by",
            "a",
            "pie",
            "chart",
            "."
        ],
        "query": "Visualize PIE SELECT ACC_Regular_Season , School_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "ACC_Regular_Season",
            ",",
            "School_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road@SEP@university.school@SEP@basketball_match.school_id@SEP@university.school_id"
    },
    {
        "nl_queries": "Visualize the relationship between School_ID and ACC_Percent .",
        "VQL": "Visualize SCATTER SELECT School_ID , ACC_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT School_ID , ACC_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT School_ID , ACC_Percent FROM basketball_match'}",
        "record_name": "3107",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Visualize the relationship between School_ID and ACC_Percent .",
        "question_toks": [
            "Visualize",
            "the",
            "relationship",
            "between",
            "School_ID",
            "and",
            "ACC_Percent",
            "."
        ],
        "query": "Visualize SCATTER SELECT School_ID , ACC_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "School_ID",
            ",",
            "ACC_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "university.school@SEP@basketball_match.school_id@SEP@university.school_id@SEP@basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Return a pie chart about the proportion of All_Neutral and ACC_Percent .",
        "VQL": "Visualize PIE SELECT All_Neutral , ACC_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT All_Neutral , ACC_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT All_Neutral , ACC_Percent FROM basketball_match'}",
        "record_name": "3156",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Return a pie chart about the proportion of All_Neutral and ACC_Percent .",
        "question_toks": [
            "Return",
            "a",
            "pie",
            "chart",
            "about",
            "the",
            "proportion",
            "of",
            "All_Neutral",
            "and",
            "ACC_Percent",
            "."
        ],
        "query": "Visualize PIE SELECT All_Neutral , ACC_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "All_Neutral",
            ",",
            "ACC_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Show me the trend about what are all the calendar dates and day Numbers ?",
        "VQL": "Visualize LINE SELECT Calendar_Date , Day_Number FROM Ref_calendar",
        "db_id": "cre_Doc_Tracking_DB",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize LINE', 'data_part': {'sql_part': 'SELECT Calendar_Date , Day_Number FROM Ref_calendar', 'binning': ''}, 'VQL': 'Visualize LINE SELECT Calendar_Date , Day_Number FROM Ref_calendar'}",
        "record_name": "789",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 2
        },
        "question": "Show me the trend about what are all the calendar dates and day Numbers ?",
        "question_toks": [
            "Show",
            "me",
            "the",
            "trend",
            "about",
            "what",
            "are",
            "all",
            "the",
            "calendar",
            "dates",
            "and",
            "day",
            "Numbers",
            "?"
        ],
        "query": "Visualize LINE SELECT Calendar_Date , Day_Number FROM Ref_calendar",
        "query_toks": [
            "Visualize",
            "LINE",
            "SELECT",
            "Calendar_Date",
            ",",
            "Day_Number",
            "FROM",
            "Ref_calendar"
        ],
        "choose_schema": "Table Ref_Calendar, columns = [*,Calendar_Date, Day_Number]",
        "choose_schema_rat_link": "all_documents.date_stored@SEP@employees.date_of_birth@SEP@document_locations.date_in_location_from@SEP@document_locations.date_in_locaton_to"
    },
    {
        "nl_queries": "I want to know the proportion of school id for each team name .",
        "VQL": "Visualize PIE SELECT Team_Name , School_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT Team_Name , School_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT Team_Name , School_ID FROM basketball_match'}",
        "record_name": "3147",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "I want to know the proportion of school id for each team name .",
        "question_toks": [
            "I",
            "want",
            "to",
            "know",
            "the",
            "proportion",
            "of",
            "school",
            "id",
            "for",
            "each",
            "team",
            "name",
            "."
        ],
        "query": "Visualize PIE SELECT Team_Name , School_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "Team_Name",
            ",",
            "School_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "basketball_match.school_id@SEP@university.school_id@SEP@basketball_match.team_name@SEP@university.school@SEP@basketball_match.team_id"
    },
    {
        "nl_queries": "Show me about the correlation between Body_Builder_ID and Clean_Jerk in a scatter chart .",
        "VQL": "Visualize SCATTER SELECT Body_Builder_ID , Clean_Jerk FROM body_builder",
        "db_id": "body_builder",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Body_Builder_ID , Clean_Jerk FROM body_builder', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Body_Builder_ID , Clean_Jerk FROM body_builder'}",
        "record_name": "360",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Show me about the correlation between Body_Builder_ID and Clean_Jerk in a scatter chart .",
        "question_toks": [
            "Show",
            "me",
            "about",
            "the",
            "correlation",
            "between",
            "Body_Builder_ID",
            "and",
            "Clean_Jerk",
            "in",
            "a",
            "scatter",
            "chart",
            "."
        ],
        "query": "Visualize SCATTER SELECT Body_Builder_ID , Clean_Jerk FROM body_builder",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Body_Builder_ID",
            ",",
            "Clean_Jerk",
            "FROM",
            "body_builder"
        ],
        "choose_schema": "Table body_builder, columns = [*,Body_Builder_ID, People_ID, Snatch, Clean_Jerk, Total]",
        "choose_schema_rat_link": "body_builder.body_builder_id@SEP@body_builder.clean_jerk"
    },
    {
        "nl_queries": "Bar graph to show meter_100 from different meter 700",
        "VQL": "Visualize BAR SELECT meter_700 , meter_100 FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT meter_700 , meter_100 FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT meter_700 , meter_100 FROM swimmer'}",
        "record_name": "2925",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Bar graph to show meter_100 from different meter 700",
        "question_toks": [
            "Bar",
            "graph",
            "to",
            "show",
            "meter_100",
            "from",
            "different",
            "meter",
            "700"
        ],
        "query": "Visualize BAR SELECT meter_700 , meter_100 FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "meter_700",
            ",",
            "meter_100",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]",
        "choose_schema_rat_link": "swimmer.meter_700@SEP@swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_400@SEP@swimmer.meter_500@SEP@swimmer.meter_600"
    },
    {
        "nl_queries": "Visualize a pie chart about the proportion of Team_Name and Team_ID .",
        "VQL": "Visualize PIE SELECT Team_Name , Team_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT Team_Name , Team_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT Team_Name , Team_ID FROM basketball_match'}",
        "record_name": "3126",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Visualize a pie chart about the proportion of Team_Name and Team_ID .",
        "question_toks": [
            "Visualize",
            "a",
            "pie",
            "chart",
            "about",
            "the",
            "proportion",
            "of",
            "Team_Name",
            "and",
            "Team_ID",
            "."
        ],
        "query": "Visualize PIE SELECT Team_Name , Team_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "Team_Name",
            ",",
            "Team_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name"
    },
    {
        "nl_queries": "For the attribute All_Road and ACC_Percent , show their proportion by a pie chart .",
        "VQL": "Visualize PIE SELECT All_Road , ACC_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT All_Road , ACC_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT All_Road , ACC_Percent FROM basketball_match'}",
        "record_name": "3154",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "For the attribute All_Road and ACC_Percent , show their proportion by a pie chart .",
        "question_toks": [
            "For",
            "the",
            "attribute",
            "All_Road",
            "and",
            "ACC_Percent",
            ",",
            "show",
            "their",
            "proportion",
            "by",
            "a",
            "pie",
            "chart",
            "."
        ],
        "query": "Visualize PIE SELECT All_Road , ACC_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "All_Road",
            ",",
            "ACC_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Give me the comparison about ACC_Percent over the ACC_Regular_Season by a bar chart .",
        "VQL": "Visualize BAR SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match'}",
        "record_name": "3135",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Give me the comparison about ACC_Percent over the ACC_Regular_Season by a bar chart .",
        "question_toks": [
            "Give",
            "me",
            "the",
            "comparison",
            "about",
            "ACC_Percent",
            "over",
            "the",
            "ACC_Regular_Season",
            "by",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "ACC_Regular_Season",
            ",",
            "ACC_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Visualize the relationship between Snatch and Clean_Jerk .",
        "VQL": "Visualize SCATTER SELECT Snatch , Clean_Jerk FROM body_builder",
        "db_id": "body_builder",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Snatch , Clean_Jerk FROM body_builder', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Snatch , Clean_Jerk FROM body_builder'}",
        "record_name": "356",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Visualize the relationship between Snatch and Clean_Jerk .",
        "question_toks": [
            "Visualize",
            "the",
            "relationship",
            "between",
            "Snatch",
            "and",
            "Clean_Jerk",
            "."
        ],
        "query": "Visualize SCATTER SELECT Snatch , Clean_Jerk FROM body_builder",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Snatch",
            ",",
            "Clean_Jerk",
            "FROM",
            "body_builder"
        ],
        "choose_schema": "Table body_builder, columns = [*,Body_Builder_ID, People_ID, Snatch, Clean_Jerk, Total]",
        "choose_schema_rat_link": "body_builder.snatch@SEP@body_builder.clean_jerk"
    },
    {
        "nl_queries": "You can return a bar chart with employees' first names and their salaries .",
        "VQL": "Visualize BAR SELECT FIRST_NAME , SALARY FROM employees",
        "db_id": "hr_1",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT FIRST_NAME , SALARY FROM employees', 'binning': ''}, 'VQL': 'Visualize BAR SELECT FIRST_NAME , SALARY FROM employees'}",
        "record_name": "1896",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "You can return a bar chart with employees' first names and their salaries .",
        "question_toks": [
            "You",
            "can",
            "return",
            "a",
            "bar",
            "chart",
            "with",
            "employees'",
            "first",
            "names",
            "and",
            "their",
            "salaries",
            "."
        ],
        "query": "Visualize BAR SELECT FIRST_NAME , SALARY FROM employees",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "FIRST_NAME",
            ",",
            "SALARY",
            "FROM",
            "employees"
        ],
        "choose_schema": "Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]",
        "choose_schema_rat_link": "employees.first_name@SEP@employees.employee_id@SEP@job_history.employee_id@SEP@employees.salary"
    },
    {
        "nl_queries": "Find the number of departments in each school . Plot them as bar chart .",
        "VQL": "Visualize BAR SELECT SCHOOL_CODE , count(DISTINCT dept_name) FROM department",
        "db_id": "college_1",
        "hardness": "Medium",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT SCHOOL_CODE , count(DISTINCT dept_name) FROM department', 'binning': ''}, 'VQL': 'Visualize BAR SELECT SCHOOL_CODE , count(DISTINCT dept_name) FROM department'}",
        "record_name": "515",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                12,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Find the number of departments in each school . Plot them as bar chart .",
        "question_toks": [
            "Find",
            "the",
            "number",
            "of",
            "departments",
            "in",
            "each",
            "school",
            ".",
            "Plot",
            "them",
            "as",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT SCHOOL_CODE , count(DISTINCT dept_name) FROM department",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "SCHOOL_CODE",
            ",",
            "count",
            "(",
            "DISTINCT",
            "dept_name",
            ")",
            "FROM",
            "department"
        ],
        "choose_schema": "Table DEPARTMENT, columns = [*,DEPT_CODE, DEPT_NAME, SCHOOL_CODE, EMP_NUM, DEPT_ADDRESS, DEPT_EXTENSION]",
        "choose_schema_rat_link": "course.dept_code@SEP@department.dept_code@SEP@department.dept_name@SEP@department.dept_address@SEP@department.dept_extension@SEP@professor.dept_code@SEP@student.dept_code@SEP@department.school_code"
    },
    {
        "nl_queries": "A bar chart shows the distribution of All_Road and School_ID .",
        "VQL": "Visualize BAR SELECT All_Road , School_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT All_Road , School_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT All_Road , School_ID FROM basketball_match'}",
        "record_name": "3117",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "A bar chart shows the distribution of All_Road and School_ID .",
        "question_toks": [
            "A",
            "bar",
            "chart",
            "shows",
            "the",
            "distribution",
            "of",
            "All_Road",
            "and",
            "School_ID",
            "."
        ],
        "query": "Visualize BAR SELECT All_Road , School_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "All_Road",
            ",",
            "School_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "university.school@SEP@basketball_match.school_id@SEP@university.school_id"
    },
    {
        "nl_queries": "Scatter plot to show max(stu gpa) on x axis and minimal stu gpa on y axis .",
        "VQL": "Visualize SCATTER SELECT max(stu_gpa) , min(stu_gpa) FROM student",
        "db_id": "college_1",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT max(stu_gpa) , min(stu_gpa) FROM student', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT max(stu_gpa) , min(stu_gpa) FROM student'}",
        "record_name": "538",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                39,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                39,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Scatter plot to show max(stu gpa) on x axis and minimal stu gpa on y axis .",
        "question_toks": [
            "Scatter",
            "plot",
            "to",
            "show",
            "max(stu",
            "gpa)",
            "on",
            "x",
            "axis",
            "and",
            "minimal",
            "stu",
            "gpa",
            "on",
            "y",
            "axis",
            "."
        ],
        "query": "Visualize SCATTER SELECT max(stu_gpa) , min(stu_gpa) FROM student",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "max",
            "(",
            "stu_gpa",
            ")",
            ",",
            "min",
            "(",
            "stu_gpa",
            ")",
            "FROM",
            "student"
        ],
        "choose_schema": "Table STUDENT, columns = [*,STU_NUM, STU_LNAME, STU_FNAME, STU_INIT, STU_DOB, STU_HRS, STU_CLASS, STU_GPA, STU_TRANSFER, DEPT_CODE, STU_PHONE, PROF_NUM]",
        "choose_schema_rat_link": "Table CLASS, columns = [*,CLASS_CODE, CRS_CODE, CLASS_SECTION, CLASS_TIME, CLASS_ROOM, PROF_NUM]@SEP@Table COURSE, columns = [*,CRS_CODE, DEPT_CODE, CRS_DESCRIPTION, CRS_CREDIT]@SEP@Table DEPARTMENT, columns = [*,DEPT_CODE, DEPT_NAME, SCHOOL_CODE, EMP_NUM, DEPT_ADDRESS, DEPT_EXTENSION]@SEP@Table EMPLOYEE, columns = [*,EMP_NUM, EMP_LNAME, EMP_FNAME, EMP_INITIAL, EMP_JOBCODE, EMP_HIREDATE, EMP_DOB]@SEP@Table ENROLL, columns = [*,CLASS_CODE, STU_NUM, ENROLL_GRADE]@SEP@Table PROFESSOR, columns = [*,EMP_NUM, DEPT_CODE, PROF_OFFICE, PROF_EXTENSION, PROF_HIGH_DEGREE]@SEP@Table STUDENT, columns = [*,STU_NUM, STU_LNAME, STU_FNAME, STU_INIT, STU_DOB, STU_HRS, STU_CLASS, STU_GPA, STU_TRANSFER, DEPT_CODE, STU_PHONE, PROF_NUM]"
    },
    {
        "nl_queries": "Give me a pie to show team_id from different acc regular season .",
        "VQL": "Visualize PIE SELECT ACC_Regular_Season , Team_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT ACC_Regular_Season , Team_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT ACC_Regular_Season , Team_ID FROM basketball_match'}",
        "record_name": "3127",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Give me a pie to show team_id from different acc regular season .",
        "question_toks": [
            "Give",
            "me",
            "a",
            "pie",
            "to",
            "show",
            "team_id",
            "from",
            "different",
            "acc",
            "regular",
            "season",
            "."
        ],
        "query": "Visualize PIE SELECT ACC_Regular_Season , Team_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "ACC_Regular_Season",
            ",",
            "Team_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.team_id@SEP@basketball_match.team_name@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Bar chart x axis time y axis id",
        "VQL": "Visualize BAR SELECT Time , ID FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Time , ID FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Time , ID FROM swimmer'}",
        "record_name": "2926",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Bar chart x axis time y axis id",
        "question_toks": [
            "Bar",
            "chart",
            "x",
            "axis",
            "time",
            "y",
            "axis",
            "id"
        ],
        "query": "Visualize BAR SELECT Time , ID FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Time",
            ",",
            "ID",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]@SEP@Table stadium, columns = [*,ID, name, Capacity, City, Country, Opening_year]@SEP@Table event, columns = [*,ID, Name, Stadium_ID, Year]@SEP@Table record, columns = [*,ID, Result, Swimmer_ID, Event_ID]",
        "choose_schema_rat_link": "swimmer.time@SEP@swimmer.id@SEP@stadium.id@SEP@event.id@SEP@record.id"
    },
    {
        "nl_queries": "Show me about the distribution of All_Games and Team_ID in a bar chart .",
        "VQL": "Visualize BAR SELECT All_Games , Team_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT All_Games , Team_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT All_Games , Team_ID FROM basketball_match'}",
        "record_name": "3114",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Show me about the distribution of All_Games and Team_ID in a bar chart .",
        "question_toks": [
            "Show",
            "me",
            "about",
            "the",
            "distribution",
            "of",
            "All_Games",
            "and",
            "Team_ID",
            "in",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT All_Games , Team_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "All_Games",
            ",",
            "Team_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name"
    },
    {
        "nl_queries": "How many distinct order ids correspond to each product . Plot them as scatter chart .",
        "VQL": "Visualize SCATTER SELECT product_id , count(DISTINCT order_id) FROM Order_items",
        "db_id": "customers_and_invoices",
        "hardness": "Medium",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT product_id , count(DISTINCT order_id) FROM Order_items', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT product_id , count(DISTINCT order_id) FROM Order_items'}",
        "record_name": "966",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        7
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                45,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                44,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "How many distinct order ids correspond to each product . Plot them as scatter chart .",
        "question_toks": [
            "How",
            "many",
            "distinct",
            "order",
            "ids",
            "correspond",
            "to",
            "each",
            "product",
            ".",
            "Plot",
            "them",
            "as",
            "scatter",
            "chart",
            "."
        ],
        "query": "Visualize SCATTER SELECT product_id , count(DISTINCT order_id) FROM Order_items",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "product_id",
            ",",
            "count",
            "(",
            "DISTINCT",
            "order_id",
            ")",
            "FROM",
            "Order_items"
        ],
        "choose_schema": "Table Products, columns = [*,product_id, parent_product_id, production_type_code, unit_price, product_name, product_color, product_size]@SEP@Table Order_Items, columns = [*,order_item_id, order_id, product_id, product_quantity, other_order_item_details]@SEP@Table Invoice_Line_Items, columns = [*,order_item_id, invoice_number, product_id, product_title, product_quantity, product_price, derived_product_cost, derived_vat_payable, derived_total_cost]",
        "choose_schema_rat_link": "orders.order_id@SEP@invoices.order_id@SEP@order_items.order_id@SEP@orders.order_details@SEP@order_items.order_item_id@SEP@invoice_line_items.order_item_id@SEP@product_categories.product_type_description@SEP@products.product_id@SEP@products.product_name@SEP@products.product_color@SEP@products.product_size@SEP@order_items.product_id@SEP@order_items.product_quantity@SEP@invoice_line_items.product_id@SEP@invoice_line_items.product_title@SEP@invoice_line_items.product_quantity@SEP@invoice_line_items.product_price"
    },
    {
        "nl_queries": "Show me about the correlation between Snatch and Total in a scatter chart .",
        "VQL": "Visualize SCATTER SELECT Snatch , Total FROM body_builder",
        "db_id": "body_builder",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Snatch , Total FROM body_builder', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Snatch , Total FROM body_builder'}",
        "record_name": "354",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Show me about the correlation between Snatch and Total in a scatter chart .",
        "question_toks": [
            "Show",
            "me",
            "about",
            "the",
            "correlation",
            "between",
            "Snatch",
            "and",
            "Total",
            "in",
            "a",
            "scatter",
            "chart",
            "."
        ],
        "query": "Visualize SCATTER SELECT Snatch , Total FROM body_builder",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Snatch",
            ",",
            "Total",
            "FROM",
            "body_builder"
        ],
        "choose_schema": "Table body_builder, columns = [*,Body_Builder_ID, People_ID, Snatch, Clean_Jerk, Total]",
        "choose_schema_rat_link": "body_builder.snatch@SEP@body_builder.total"
    },
    {
        "nl_queries": "A bar chart shows the distribution of Date_of_Birth and Weight .",
        "VQL": "Visualize BAR SELECT Date_of_Birth , Weight FROM people",
        "db_id": "candidate_poll",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Date_of_Birth , Weight FROM people', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Date_of_Birth , Weight FROM people'}",
        "record_name": "398",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "A bar chart shows the distribution of Date_of_Birth and Weight .",
        "question_toks": [
            "A",
            "bar",
            "chart",
            "shows",
            "the",
            "distribution",
            "of",
            "Date_of_Birth",
            "and",
            "Weight",
            "."
        ],
        "query": "Visualize BAR SELECT Date_of_Birth , Weight FROM people",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Date_of_Birth",
            ",",
            "Weight",
            "FROM",
            "people"
        ],
        "choose_schema": "Table people, columns = [*,People_ID, Sex, Name, Date_of_Birth, Height, Weight]",
        "choose_schema_rat_link": "candidate.date@SEP@people.date_of_birth@SEP@people.weight"
    },
    {
        "nl_queries": "A bar chart shows the distribution of All_Neutral and School_ID .",
        "VQL": "Visualize BAR SELECT All_Neutral , School_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT All_Neutral , School_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT All_Neutral , School_ID FROM basketball_match'}",
        "record_name": "3119",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "A bar chart shows the distribution of All_Neutral and School_ID .",
        "question_toks": [
            "A",
            "bar",
            "chart",
            "shows",
            "the",
            "distribution",
            "of",
            "All_Neutral",
            "and",
            "School_ID",
            "."
        ],
        "query": "Visualize BAR SELECT All_Neutral , School_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "All_Neutral",
            ",",
            "School_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "university.school@SEP@basketball_match.school_id@SEP@university.school_id"
    },
    {
        "nl_queries": "Return a bar chart about the distribution of Team_Name and All_Games_Percent .",
        "VQL": "Visualize BAR SELECT Team_Name , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Team_Name , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Team_Name , All_Games_Percent FROM basketball_match'}",
        "record_name": "3134",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Return a bar chart about the distribution of Team_Name and All_Games_Percent .",
        "question_toks": [
            "Return",
            "a",
            "bar",
            "chart",
            "about",
            "the",
            "distribution",
            "of",
            "Team_Name",
            "and",
            "All_Games_Percent",
            "."
        ],
        "query": "Visualize BAR SELECT Team_Name , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Team_Name",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name"
    },
    {
        "nl_queries": "Compute the total acc_percent across all games as a pie chart .",
        "VQL": "Visualize PIE SELECT All_Games , ACC_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT All_Games , ACC_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT All_Games , ACC_Percent FROM basketball_match'}",
        "record_name": "3152",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Compute the total acc_percent across all games as a pie chart .",
        "question_toks": [
            "Compute",
            "the",
            "total",
            "acc_percent",
            "across",
            "all",
            "games",
            "as",
            "a",
            "pie",
            "chart",
            "."
        ],
        "query": "Visualize PIE SELECT All_Games , ACC_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "All_Games",
            ",",
            "ACC_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.all_games@SEP@basketball_match.all_games_percent@SEP@basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Return a pie on how many departments are in each school ?",
        "VQL": "Visualize PIE SELECT SCHOOL_CODE , count(DISTINCT dept_name) FROM department",
        "db_id": "college_1",
        "hardness": "Medium",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT SCHOOL_CODE , count(DISTINCT dept_name) FROM department', 'binning': ''}, 'VQL': 'Visualize PIE SELECT SCHOOL_CODE , count(DISTINCT dept_name) FROM department'}",
        "record_name": "514",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                12,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Return a pie on how many departments are in each school ?",
        "question_toks": [
            "Return",
            "a",
            "pie",
            "on",
            "how",
            "many",
            "departments",
            "are",
            "in",
            "each",
            "school",
            "?"
        ],
        "query": "Visualize PIE SELECT SCHOOL_CODE , count(DISTINCT dept_name) FROM department",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "SCHOOL_CODE",
            ",",
            "count",
            "(",
            "DISTINCT",
            "dept_name",
            ")",
            "FROM",
            "department"
        ],
        "choose_schema": "Table DEPARTMENT, columns = [*,DEPT_CODE, DEPT_NAME, SCHOOL_CODE, EMP_NUM, DEPT_ADDRESS, DEPT_EXTENSION]",
        "choose_schema_rat_link": "course.dept_code@SEP@department.dept_code@SEP@department.dept_name@SEP@department.dept_address@SEP@department.dept_extension@SEP@professor.dept_code@SEP@student.dept_code@SEP@department.school_code"
    },
    {
        "nl_queries": "Return a bar chart about the distribution of All_Neutral and All_Games_Percent .",
        "VQL": "Visualize BAR SELECT All_Neutral , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT All_Neutral , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT All_Neutral , All_Games_Percent FROM basketball_match'}",
        "record_name": "3146",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Return a bar chart about the distribution of All_Neutral and All_Games_Percent .",
        "question_toks": [
            "Return",
            "a",
            "bar",
            "chart",
            "about",
            "the",
            "distribution",
            "of",
            "All_Neutral",
            "and",
            "All_Games_Percent",
            "."
        ],
        "query": "Visualize BAR SELECT All_Neutral , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "All_Neutral",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]"
    },
    {
        "nl_queries": "A bar chart shows the distribution of All_Games and Team_ID .",
        "VQL": "Visualize BAR SELECT All_Games , Team_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT All_Games , Team_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT All_Games , Team_ID FROM basketball_match'}",
        "record_name": "3114",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "A bar chart shows the distribution of All_Games and Team_ID .",
        "question_toks": [
            "A",
            "bar",
            "chart",
            "shows",
            "the",
            "distribution",
            "of",
            "All_Games",
            "and",
            "Team_ID",
            "."
        ],
        "query": "Visualize BAR SELECT All_Games , Team_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "All_Games",
            ",",
            "Team_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name"
    },
    {
        "nl_queries": "Give me the comparison about School_ID over the ACC_Regular_Season by a bar chart .",
        "VQL": "Visualize BAR SELECT ACC_Regular_Season , School_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT ACC_Regular_Season , School_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT ACC_Regular_Season , School_ID FROM basketball_match'}",
        "record_name": "3113",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Give me the comparison about School_ID over the ACC_Regular_Season by a bar chart .",
        "question_toks": [
            "Give",
            "me",
            "the",
            "comparison",
            "about",
            "School_ID",
            "over",
            "the",
            "ACC_Regular_Season",
            "by",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT ACC_Regular_Season , School_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "ACC_Regular_Season",
            ",",
            "School_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "university.school@SEP@basketball_match.school_id@SEP@university.school_id@SEP@basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "A bar chart shows the distribution of meter_400 and ID .",
        "VQL": "Visualize BAR SELECT meter_400 , ID FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT meter_400 , ID FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT meter_400 , ID FROM swimmer'}",
        "record_name": "2918",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "A bar chart shows the distribution of meter_400 and ID .",
        "question_toks": [
            "A",
            "bar",
            "chart",
            "shows",
            "the",
            "distribution",
            "of",
            "meter_400",
            "and",
            "ID",
            "."
        ],
        "query": "Visualize BAR SELECT meter_400 , ID FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "meter_400",
            ",",
            "ID",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]@SEP@Table stadium, columns = [*,ID, name, Capacity, City, Country, Opening_year]@SEP@Table event, columns = [*,ID, Name, Stadium_ID, Year]@SEP@Table record, columns = [*,ID, Result, Swimmer_ID, Event_ID]",
        "choose_schema_rat_link": "swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_400@SEP@swimmer.meter_500@SEP@swimmer.meter_600@SEP@swimmer.meter_700@SEP@swimmer.id@SEP@stadium.id@SEP@event.id@SEP@record.id"
    },
    {
        "nl_queries": "Show id from each meter 400",
        "VQL": "Visualize BAR SELECT meter_400 , ID FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT meter_400 , ID FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT meter_400 , ID FROM swimmer'}",
        "record_name": "2918",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Show id from each meter 400",
        "question_toks": [
            "Show",
            "id",
            "from",
            "each",
            "meter",
            "400"
        ],
        "query": "Visualize BAR SELECT meter_400 , ID FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "meter_400",
            ",",
            "ID",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]@SEP@Table stadium, columns = [*,ID, name, Capacity, City, Country, Opening_year]@SEP@Table event, columns = [*,ID, Name, Stadium_ID, Year]@SEP@Table record, columns = [*,ID, Result, Swimmer_ID, Event_ID]",
        "choose_schema_rat_link": "swimmer.meter_400@SEP@swimmer.id@SEP@stadium.id@SEP@event.id@SEP@record.id@SEP@swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_500@SEP@swimmer.meter_600@SEP@swimmer.meter_700"
    },
    {
        "nl_queries": "Show me about the correlation between People_ID and Weight in a scatter chart .",
        "VQL": "Visualize SCATTER SELECT People_ID , Weight FROM people",
        "db_id": "candidate_poll",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT People_ID , Weight FROM people', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT People_ID , Weight FROM people'}",
        "record_name": "391",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Show me about the correlation between People_ID and Weight in a scatter chart .",
        "question_toks": [
            "Show",
            "me",
            "about",
            "the",
            "correlation",
            "between",
            "People_ID",
            "and",
            "Weight",
            "in",
            "a",
            "scatter",
            "chart",
            "."
        ],
        "query": "Visualize SCATTER SELECT People_ID , Weight FROM people",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "People_ID",
            ",",
            "Weight",
            "FROM",
            "people"
        ],
        "choose_schema": "Table candidate, columns = [*,Candidate_ID, People_ID, Poll_Source, Date, Support_rate, Consider_rate, Oppose_rate, Unsure_rate]@SEP@Table people, columns = [*,People_ID, Sex, Name, Date_of_Birth, Height, Weight]",
        "choose_schema_rat_link": "candidate.people_id@SEP@people.people_id@SEP@people.weight"
    },
    {
        "nl_queries": "Give me the comparison about All_Games_Percent over the All_Games .",
        "VQL": "Visualize BAR SELECT All_Games , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT All_Games , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT All_Games , All_Games_Percent FROM basketball_match'}",
        "record_name": "3140",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Give me the comparison about All_Games_Percent over the All_Games .",
        "question_toks": [
            "Give",
            "me",
            "the",
            "comparison",
            "about",
            "All_Games_Percent",
            "over",
            "the",
            "All_Games",
            "."
        ],
        "query": "Visualize BAR SELECT All_Games , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "All_Games",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]"
    },
    {
        "nl_queries": "Find All_Games and School_ID , and visualize them by a bar chart .",
        "VQL": "Visualize BAR SELECT All_Games , School_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT All_Games , School_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT All_Games , School_ID FROM basketball_match'}",
        "record_name": "3115",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Find All_Games and School_ID , and visualize them by a bar chart .",
        "question_toks": [
            "Find",
            "All_Games",
            "and",
            "School_ID",
            ",",
            "and",
            "visualize",
            "them",
            "by",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT All_Games , School_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "All_Games",
            ",",
            "School_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "university.school@SEP@basketball_match.school_id@SEP@university.school_id"
    },
    {
        "nl_queries": "For the attribute Team_Name and ACC_Percent , show their proportion by a pie chart .",
        "VQL": "Visualize PIE SELECT Team_Name , ACC_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT Team_Name , ACC_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT Team_Name , ACC_Percent FROM basketball_match'}",
        "record_name": "3148",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "For the attribute Team_Name and ACC_Percent , show their proportion by a pie chart .",
        "question_toks": [
            "For",
            "the",
            "attribute",
            "Team_Name",
            "and",
            "ACC_Percent",
            ",",
            "show",
            "their",
            "proportion",
            "by",
            "a",
            "pie",
            "chart",
            "."
        ],
        "query": "Visualize PIE SELECT Team_Name , ACC_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "Team_Name",
            ",",
            "ACC_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name@SEP@basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Return a bar chart about the distribution of Name and Weight .",
        "VQL": "Visualize BAR SELECT Name , Weight FROM people",
        "db_id": "candidate_poll",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Name , Weight FROM people', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Name , Weight FROM people'}",
        "record_name": "395",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Return a bar chart about the distribution of Name and Weight .",
        "question_toks": [
            "Return",
            "a",
            "bar",
            "chart",
            "about",
            "the",
            "distribution",
            "of",
            "Name",
            "and",
            "Weight",
            "."
        ],
        "query": "Visualize BAR SELECT Name , Weight FROM people",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Name",
            ",",
            "Weight",
            "FROM",
            "people"
        ],
        "choose_schema": "Table people, columns = [*,People_ID, Sex, Name, Date_of_Birth, Height, Weight]",
        "choose_schema_rat_link": "people.name@SEP@people.weight"
    },
    {
        "nl_queries": "List the height and weight of people in descending order of height in a scatter chart",
        "VQL": "Visualize SCATTER SELECT Height , Weight FROM people",
        "db_id": "body_builder",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Height , Weight FROM people', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Height , Weight FROM people'}",
        "record_name": "351",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "List the height and weight of people in descending order of height in a scatter chart",
        "question_toks": [
            "List",
            "the",
            "height",
            "and",
            "weight",
            "of",
            "people",
            "in",
            "descending",
            "order",
            "of",
            "height",
            "in",
            "a",
            "scatter",
            "chart"
        ],
        "query": "Visualize SCATTER SELECT Height , Weight FROM people",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Height",
            ",",
            "Weight",
            "FROM",
            "people"
        ],
        "choose_schema": "Table people, columns = [*,People_ID, Name, Height, Weight, Birth_Date, Birth_Place]",
        "choose_schema_rat_link": "people.height@SEP@people.weight@SEP@body_builder.people_id@SEP@people.people_id"
    },
    {
        "nl_queries": "Show me about the distribution of All_Road and Team_ID in a bar chart .",
        "VQL": "Visualize BAR SELECT All_Road , Team_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT All_Road , Team_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT All_Road , Team_ID FROM basketball_match'}",
        "record_name": "3116",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Show me about the distribution of All_Road and Team_ID in a bar chart .",
        "question_toks": [
            "Show",
            "me",
            "about",
            "the",
            "distribution",
            "of",
            "All_Road",
            "and",
            "Team_ID",
            "in",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT All_Road , Team_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "All_Road",
            ",",
            "Team_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name"
    },
    {
        "nl_queries": "Return a scatter chart about the correlation between People_ID and Height .",
        "VQL": "Visualize SCATTER SELECT People_ID , Height FROM people",
        "db_id": "candidate_poll",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT People_ID , Height FROM people', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT People_ID , Height FROM people'}",
        "record_name": "392",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Return a scatter chart about the correlation between People_ID and Height .",
        "question_toks": [
            "Return",
            "a",
            "scatter",
            "chart",
            "about",
            "the",
            "correlation",
            "between",
            "People_ID",
            "and",
            "Height",
            "."
        ],
        "query": "Visualize SCATTER SELECT People_ID , Height FROM people",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "People_ID",
            ",",
            "Height",
            "FROM",
            "people"
        ],
        "choose_schema": "Table candidate, columns = [*,Candidate_ID, People_ID, Poll_Source, Date, Support_rate, Consider_rate, Oppose_rate, Unsure_rate]@SEP@Table people, columns = [*,People_ID, Sex, Name, Date_of_Birth, Height, Weight]",
        "choose_schema_rat_link": "candidate.people_id@SEP@people.people_id@SEP@people.height"
    },
    {
        "nl_queries": "Visualize a scatter chart about the correlation between Team_ID and School_ID .",
        "VQL": "Visualize SCATTER SELECT Team_ID , School_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Team_ID , School_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Team_ID , School_ID FROM basketball_match'}",
        "record_name": "3108",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Visualize a scatter chart about the correlation between Team_ID and School_ID .",
        "question_toks": [
            "Visualize",
            "a",
            "scatter",
            "chart",
            "about",
            "the",
            "correlation",
            "between",
            "Team_ID",
            "and",
            "School_ID",
            "."
        ],
        "query": "Visualize SCATTER SELECT Team_ID , School_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Team_ID",
            ",",
            "School_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name@SEP@university.school@SEP@basketball_match.school_id@SEP@university.school_id"
    },
    {
        "nl_queries": "Show me about the change of Shop_ID over Start_from in a line chart .",
        "VQL": "Visualize LINE SELECT Start_from , Shop_ID FROM hiring",
        "db_id": "employee_hire_evaluation",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize LINE', 'data_part': {'sql_part': 'SELECT Start_from , Shop_ID FROM hiring', 'binning': ''}, 'VQL': 'Visualize LINE SELECT Start_from , Shop_ID FROM hiring'}",
        "record_name": "1338",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 2
        },
        "question": "Show me about the change of Shop_ID over Start_from in a line chart .",
        "question_toks": [
            "Show",
            "me",
            "about",
            "the",
            "change",
            "of",
            "Shop_ID",
            "over",
            "Start_from",
            "in",
            "a",
            "line",
            "chart",
            "."
        ],
        "query": "Visualize LINE SELECT Start_from , Shop_ID FROM hiring",
        "query_toks": [
            "Visualize",
            "LINE",
            "SELECT",
            "Start_from",
            ",",
            "Shop_ID",
            "FROM",
            "hiring"
        ],
        "choose_schema": "Table shop, columns = [*,Shop_ID, Name, Location, District, Number_products, Manager_name]@SEP@Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]",
        "choose_schema_rat_link": "shop.shop_id@SEP@hiring.shop_id@SEP@hiring.start_from"
    },
    {
        "nl_queries": "What is the relationship between Height and Weight ?",
        "VQL": "Visualize SCATTER SELECT Height , Weight FROM people",
        "db_id": "candidate_poll",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Height , Weight FROM people', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Height , Weight FROM people'}",
        "record_name": "390",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "What is the relationship between Height and Weight ?",
        "question_toks": [
            "What",
            "is",
            "the",
            "relationship",
            "between",
            "Height",
            "and",
            "Weight",
            "?"
        ],
        "query": "Visualize SCATTER SELECT Height , Weight FROM people",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Height",
            ",",
            "Weight",
            "FROM",
            "people"
        ],
        "choose_schema": "Table people, columns = [*,People_ID, Sex, Name, Date_of_Birth, Height, Weight]",
        "choose_schema_rat_link": "people.height@SEP@people.weight"
    },
    {
        "nl_queries": "Give me the comparison about School_ID over the All_Neutral .",
        "VQL": "Visualize BAR SELECT All_Neutral , School_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT All_Neutral , School_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT All_Neutral , School_ID FROM basketball_match'}",
        "record_name": "3119",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Give me the comparison about School_ID over the All_Neutral .",
        "question_toks": [
            "Give",
            "me",
            "the",
            "comparison",
            "about",
            "School_ID",
            "over",
            "the",
            "All_Neutral",
            "."
        ],
        "query": "Visualize BAR SELECT All_Neutral , School_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "All_Neutral",
            ",",
            "School_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "university.school@SEP@basketball_match.school_id@SEP@university.school_id"
    },
    {
        "nl_queries": "Draw a scatter chart about the correlation between Shop_ID and Employee_ID .",
        "VQL": "Visualize SCATTER SELECT Shop_ID , Employee_ID FROM hiring",
        "db_id": "employee_hire_evaluation",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Shop_ID , Employee_ID FROM hiring', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Shop_ID , Employee_ID FROM hiring'}",
        "record_name": "1357",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Draw a scatter chart about the correlation between Shop_ID and Employee_ID .",
        "question_toks": [
            "Draw",
            "a",
            "scatter",
            "chart",
            "about",
            "the",
            "correlation",
            "between",
            "Shop_ID",
            "and",
            "Employee_ID",
            "."
        ],
        "query": "Visualize SCATTER SELECT Shop_ID , Employee_ID FROM hiring",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Shop_ID",
            ",",
            "Employee_ID",
            "FROM",
            "hiring"
        ],
        "choose_schema": "Table employee, columns = [*,Employee_ID, Name, Age, City]@SEP@Table shop, columns = [*,Shop_ID, Name, Location, District, Number_products, Manager_name]@SEP@Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]@SEP@Table evaluation, columns = [*,Employee_ID, Year_awarded, Bonus]",
        "choose_schema_rat_link": "shop.shop_id@SEP@hiring.shop_id@SEP@employee.employee_id@SEP@hiring.employee_id@SEP@evaluation.employee_id"
    },
    {
        "nl_queries": "Find meter_600 and ID , and visualize them by a bar chart .",
        "VQL": "Visualize BAR SELECT meter_600 , ID FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT meter_600 , ID FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT meter_600 , ID FROM swimmer'}",
        "record_name": "2922",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Find meter_600 and ID , and visualize them by a bar chart .",
        "question_toks": [
            "Find",
            "meter_600",
            "and",
            "ID",
            ",",
            "and",
            "visualize",
            "them",
            "by",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT meter_600 , ID FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "meter_600",
            ",",
            "ID",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]@SEP@Table stadium, columns = [*,ID, name, Capacity, City, Country, Opening_year]@SEP@Table event, columns = [*,ID, Name, Stadium_ID, Year]@SEP@Table record, columns = [*,ID, Result, Swimmer_ID, Event_ID]",
        "choose_schema_rat_link": "swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_400@SEP@swimmer.meter_500@SEP@swimmer.meter_600@SEP@swimmer.meter_700@SEP@swimmer.id@SEP@stadium.id@SEP@event.id@SEP@record.id"
    },
    {
        "nl_queries": "You can return a bar chart to show the employees' first name and the corresponding department's id .",
        "VQL": "Visualize BAR SELECT FIRST_NAME , DEPARTMENT_ID FROM employees",
        "db_id": "hr_1",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT FIRST_NAME , DEPARTMENT_ID FROM employees', 'binning': ''}, 'VQL': 'Visualize BAR SELECT FIRST_NAME , DEPARTMENT_ID FROM employees'}",
        "record_name": "1898",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                24,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "You can return a bar chart to show the employees' first name and the corresponding department's id .",
        "question_toks": [
            "You",
            "can",
            "return",
            "a",
            "bar",
            "chart",
            "to",
            "show",
            "the",
            "employees'",
            "first",
            "name",
            "and",
            "the",
            "corresponding",
            "department's",
            "id",
            "."
        ],
        "query": "Visualize BAR SELECT FIRST_NAME , DEPARTMENT_ID FROM employees",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "FIRST_NAME",
            ",",
            "DEPARTMENT_ID",
            "FROM",
            "employees"
        ],
        "choose_schema": "Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]@SEP@Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]@SEP@Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]",
        "choose_schema_rat_link": "employees.first_name@SEP@employees.employee_id@SEP@job_history.employee_id@SEP@departments.department_id@SEP@departments.department_name@SEP@employees.department_id@SEP@job_history.department_id"
    },
    {
        "nl_queries": "Visualize a bar chart for what are the ids and names of all start stations that were the beginning of at least 200 trips ?",
        "VQL": "Visualize BAR SELECT start_station_name , start_station_id FROM trip",
        "db_id": "bike_1",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT start_station_name , start_station_id FROM trip', 'binning': ''}, 'VQL': 'Visualize BAR SELECT start_station_name , start_station_id FROM trip'}",
        "record_name": "310",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Visualize a bar chart for what are the ids and names of all start stations that were the beginning of at least 200 trips ?",
        "question_toks": [
            "Visualize",
            "a",
            "bar",
            "chart",
            "for",
            "what",
            "are",
            "the",
            "ids",
            "and",
            "names",
            "of",
            "all",
            "start",
            "stations",
            "that",
            "were",
            "the",
            "beginning",
            "of",
            "at",
            "least",
            "200",
            "trips",
            "?"
        ],
        "query": "Visualize BAR SELECT start_station_name , start_station_id FROM trip",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "start_station_name",
            ",",
            "start_station_id",
            "FROM",
            "trip"
        ],
        "choose_schema": "Table trip, columns = [*,id, duration, start_date, start_station_name, start_station_id, end_date, end_station_name, end_station_id, bike_id, subscription_type, zip_code]",
        "choose_schema_rat_link": "trip.start_station_name@SEP@trip.start_station_id@SEP@station.id@SEP@trip.id@SEP@station.name@SEP@trip.start_date@SEP@status.station_id"
    },
    {
        "nl_queries": "Draw a pie chart about the proportion of All_Games and ACC_Percent .",
        "VQL": "Visualize PIE SELECT All_Games , ACC_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT All_Games , ACC_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT All_Games , ACC_Percent FROM basketball_match'}",
        "record_name": "3152",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Draw a pie chart about the proportion of All_Games and ACC_Percent .",
        "question_toks": [
            "Draw",
            "a",
            "pie",
            "chart",
            "about",
            "the",
            "proportion",
            "of",
            "All_Games",
            "and",
            "ACC_Percent",
            "."
        ],
        "query": "Visualize PIE SELECT All_Games , ACC_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "All_Games",
            ",",
            "ACC_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Give me the trend about Employee_ID over Start_from .",
        "VQL": "Visualize LINE SELECT Start_from , Employee_ID FROM hiring",
        "db_id": "employee_hire_evaluation",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize LINE', 'data_part': {'sql_part': 'SELECT Start_from , Employee_ID FROM hiring', 'binning': ''}, 'VQL': 'Visualize LINE SELECT Start_from , Employee_ID FROM hiring'}",
        "record_name": "1339",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 2
        },
        "question": "Give me the trend about Employee_ID over Start_from .",
        "question_toks": [
            "Give",
            "me",
            "the",
            "trend",
            "about",
            "Employee_ID",
            "over",
            "Start_from",
            "."
        ],
        "query": "Visualize LINE SELECT Start_from , Employee_ID FROM hiring",
        "query_toks": [
            "Visualize",
            "LINE",
            "SELECT",
            "Start_from",
            ",",
            "Employee_ID",
            "FROM",
            "hiring"
        ],
        "choose_schema": "Table employee, columns = [*,Employee_ID, Name, Age, City]@SEP@Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]@SEP@Table evaluation, columns = [*,Employee_ID, Year_awarded, Bonus]",
        "choose_schema_rat_link": "employee.employee_id@SEP@hiring.employee_id@SEP@evaluation.employee_id@SEP@hiring.start_from"
    },
    {
        "nl_queries": "Give me the comparison about Weight over the Date_of_Birth by a bar chart .",
        "VQL": "Visualize BAR SELECT Date_of_Birth , Weight FROM people",
        "db_id": "candidate_poll",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Date_of_Birth , Weight FROM people', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Date_of_Birth , Weight FROM people'}",
        "record_name": "398",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Give me the comparison about Weight over the Date_of_Birth by a bar chart .",
        "question_toks": [
            "Give",
            "me",
            "the",
            "comparison",
            "about",
            "Weight",
            "over",
            "the",
            "Date_of_Birth",
            "by",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT Date_of_Birth , Weight FROM people",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Date_of_Birth",
            ",",
            "Weight",
            "FROM",
            "people"
        ],
        "choose_schema": "Table people, columns = [*,People_ID, Sex, Name, Date_of_Birth, Height, Weight]",
        "choose_schema_rat_link": "people.weight@SEP@candidate.date@SEP@people.date_of_birth"
    },
    {
        "nl_queries": "Show me about the proportion of Team_ID and Team_ID in a pie chart .",
        "VQL": "Visualize PIE SELECT Team_Name , Team_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT Team_Name , Team_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT Team_Name , Team_ID FROM basketball_match'}",
        "record_name": "3126",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Show me about the proportion of Team_ID and Team_ID in a pie chart .",
        "question_toks": [
            "Show",
            "me",
            "about",
            "the",
            "proportion",
            "of",
            "Team_ID",
            "and",
            "Team_ID",
            "in",
            "a",
            "pie",
            "chart",
            "."
        ],
        "query": "Visualize PIE SELECT Team_Name , Team_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "Team_Name",
            ",",
            "Team_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name"
    },
    {
        "nl_queries": "Show me about the distribution of Team_Name and Team_ID in a bar chart .",
        "VQL": "Visualize BAR SELECT Team_Name , Team_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Team_Name , Team_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Team_Name , Team_ID FROM basketball_match'}",
        "record_name": "3110",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Show me about the distribution of Team_Name and Team_ID in a bar chart .",
        "question_toks": [
            "Show",
            "me",
            "about",
            "the",
            "distribution",
            "of",
            "Team_Name",
            "and",
            "Team_ID",
            "in",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT Team_Name , Team_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Team_Name",
            ",",
            "Team_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name"
    },
    {
        "nl_queries": "Show me about the correlation between Team_ID and School_ID in a scatter chart .",
        "VQL": "Visualize SCATTER SELECT Team_ID , School_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Team_ID , School_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Team_ID , School_ID FROM basketball_match'}",
        "record_name": "3108",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Show me about the correlation between Team_ID and School_ID in a scatter chart .",
        "question_toks": [
            "Show",
            "me",
            "about",
            "the",
            "correlation",
            "between",
            "Team_ID",
            "and",
            "School_ID",
            "in",
            "a",
            "scatter",
            "chart",
            "."
        ],
        "query": "Visualize SCATTER SELECT Team_ID , School_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Team_ID",
            ",",
            "School_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name@SEP@university.school@SEP@basketball_match.school_id@SEP@university.school_id"
    },
    {
        "nl_queries": "A scatter chart about what are the grade number and classroom number of each class in the list ?",
        "VQL": "Visualize SCATTER SELECT Classroom , Grade FROM list",
        "db_id": "student_1",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Classroom , Grade FROM list', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Classroom , Grade FROM list'}",
        "record_name": "2872",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "A scatter chart about what are the grade number and classroom number of each class in the list ?",
        "question_toks": [
            "A",
            "scatter",
            "chart",
            "about",
            "what",
            "are",
            "the",
            "grade",
            "number",
            "and",
            "classroom",
            "number",
            "of",
            "each",
            "class",
            "in",
            "the",
            "list",
            "?"
        ],
        "query": "Visualize SCATTER SELECT Classroom , Grade FROM list",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Classroom",
            ",",
            "Grade",
            "FROM",
            "list"
        ],
        "choose_schema": "Table list, columns = [*,LastName, FirstName, Grade, Classroom]@SEP@Table teachers, columns = [*,LastName, FirstName, Classroom]",
        "choose_schema_rat_link": "list.grade@SEP@list.classroom@SEP@teachers.classroom"
    },
    {
        "nl_queries": "Return a pie chart about the proportion of All_Games and School_ID .",
        "VQL": "Visualize PIE SELECT All_Games , School_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT All_Games , School_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT All_Games , School_ID FROM basketball_match'}",
        "record_name": "3151",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Return a pie chart about the proportion of All_Games and School_ID .",
        "question_toks": [
            "Return",
            "a",
            "pie",
            "chart",
            "about",
            "the",
            "proportion",
            "of",
            "All_Games",
            "and",
            "School_ID",
            "."
        ],
        "query": "Visualize PIE SELECT All_Games , School_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "All_Games",
            ",",
            "School_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "university.school@SEP@basketball_match.school_id@SEP@university.school_id"
    },
    {
        "nl_queries": "Bar chart x axis team name y axis school_id",
        "VQL": "Visualize BAR SELECT Team_Name , School_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Team_Name , School_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Team_Name , School_ID FROM basketball_match'}",
        "record_name": "3111",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Bar chart x axis team name y axis school_id",
        "question_toks": [
            "Bar",
            "chart",
            "x",
            "axis",
            "team",
            "name",
            "y",
            "axis",
            "school_id"
        ],
        "query": "Visualize BAR SELECT Team_Name , School_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Team_Name",
            ",",
            "School_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "basketball_match.team_name@SEP@basketball_match.team_id@SEP@university.school@SEP@basketball_match.school_id@SEP@university.school_id"
    },
    {
        "nl_queries": "Find Name and Height , and visualize them by a bar chart .",
        "VQL": "Visualize BAR SELECT Name , Height FROM people",
        "db_id": "candidate_poll",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Name , Height FROM people', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Name , Height FROM people'}",
        "record_name": "394",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Find Name and Height , and visualize them by a bar chart .",
        "question_toks": [
            "Find",
            "Name",
            "and",
            "Height",
            ",",
            "and",
            "visualize",
            "them",
            "by",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT Name , Height FROM people",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Name",
            ",",
            "Height",
            "FROM",
            "people"
        ],
        "choose_schema": "Table people, columns = [*,People_ID, Sex, Name, Date_of_Birth, Height, Weight]",
        "choose_schema_rat_link": "people.name@SEP@people.height"
    },
    {
        "nl_queries": "What is the relationship between consider and oppose rates of each candidate ?",
        "VQL": "Visualize SCATTER SELECT Consider_rate , Oppose_rate FROM candidate",
        "db_id": "candidate_poll",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Consider_rate , Oppose_rate FROM candidate', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Consider_rate , Oppose_rate FROM candidate'}",
        "record_name": "400",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "What is the relationship between consider and oppose rates of each candidate ?",
        "question_toks": [
            "What",
            "is",
            "the",
            "relationship",
            "between",
            "consider",
            "and",
            "oppose",
            "rates",
            "of",
            "each",
            "candidate",
            "?"
        ],
        "query": "Visualize SCATTER SELECT Consider_rate , Oppose_rate FROM candidate",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Consider_rate",
            ",",
            "Oppose_rate",
            "FROM",
            "candidate"
        ],
        "choose_schema": "Table candidate, columns = [*,Candidate_ID, People_ID, Poll_Source, Date, Support_rate, Consider_rate, Oppose_rate, Unsure_rate]",
        "choose_schema_rat_link": "candidate.oppose_rate@SEP@candidate.consider_rate@SEP@candidate.candidate_id"
    },
    {
        "nl_queries": "Return a scatter chart on what are the ids and details of all accounts ?",
        "VQL": "Visualize SCATTER SELECT Account_ID , Account_Details FROM Accounts",
        "db_id": "cre_Docs_and_Epenses",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Account_ID , Account_Details FROM Accounts', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Account_ID , Account_Details FROM Accounts'}",
        "record_name": "822",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Return a scatter chart on what are the ids and details of all accounts ?",
        "question_toks": [
            "Return",
            "a",
            "scatter",
            "chart",
            "on",
            "what",
            "are",
            "the",
            "ids",
            "and",
            "details",
            "of",
            "all",
            "accounts",
            "?"
        ],
        "query": "Visualize SCATTER SELECT Account_ID , Account_Details FROM Accounts",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Account_ID",
            ",",
            "Account_Details",
            "FROM",
            "Accounts"
        ],
        "choose_schema": "Table Accounts, columns = [*,Account_ID, Statement_ID, Account_Details]",
        "choose_schema_rat_link": "accounts.account_id@SEP@accounts.account_details"
    },
    {
        "nl_queries": "Show me about the distribution of meter_300 and meter_100 in a bar chart .",
        "VQL": "Visualize BAR SELECT meter_300 , meter_100 FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT meter_300 , meter_100 FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT meter_300 , meter_100 FROM swimmer'}",
        "record_name": "2917",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Show me about the distribution of meter_300 and meter_100 in a bar chart .",
        "question_toks": [
            "Show",
            "me",
            "about",
            "the",
            "distribution",
            "of",
            "meter_300",
            "and",
            "meter_100",
            "in",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT meter_300 , meter_100 FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "meter_300",
            ",",
            "meter_100",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]",
        "choose_schema_rat_link": "swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_400@SEP@swimmer.meter_500@SEP@swimmer.meter_600@SEP@swimmer.meter_700"
    },
    {
        "nl_queries": "Return a bar chart about the distribution of ACC_Regular_Season and ACC_Percent .",
        "VQL": "Visualize BAR SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match'}",
        "record_name": "3135",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Return a bar chart about the distribution of ACC_Regular_Season and ACC_Percent .",
        "question_toks": [
            "Return",
            "a",
            "bar",
            "chart",
            "about",
            "the",
            "distribution",
            "of",
            "ACC_Regular_Season",
            "and",
            "ACC_Percent",
            "."
        ],
        "query": "Visualize BAR SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "ACC_Regular_Season",
            ",",
            "ACC_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "A scatter chart shows the correlation between Team_ID and School_ID .",
        "VQL": "Visualize SCATTER SELECT Team_ID , School_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Team_ID , School_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Team_ID , School_ID FROM basketball_match'}",
        "record_name": "3108",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "A scatter chart shows the correlation between Team_ID and School_ID .",
        "question_toks": [
            "A",
            "scatter",
            "chart",
            "shows",
            "the",
            "correlation",
            "between",
            "Team_ID",
            "and",
            "School_ID",
            "."
        ],
        "query": "Visualize SCATTER SELECT Team_ID , School_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Team_ID",
            ",",
            "School_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name@SEP@university.school@SEP@basketball_match.school_id@SEP@university.school_id"
    },
    {
        "nl_queries": "Plot meter_100 by grouped by meter 300 as a bar graph",
        "VQL": "Visualize BAR SELECT meter_300 , meter_100 FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT meter_300 , meter_100 FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT meter_300 , meter_100 FROM swimmer'}",
        "record_name": "2917",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Plot meter_100 by grouped by meter 300 as a bar graph",
        "question_toks": [
            "Plot",
            "meter_100",
            "by",
            "grouped",
            "by",
            "meter",
            "300",
            "as",
            "a",
            "bar",
            "graph"
        ],
        "query": "Visualize BAR SELECT meter_300 , meter_100 FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "meter_300",
            ",",
            "meter_100",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]",
        "choose_schema_rat_link": "swimmer.meter_300@SEP@swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_400@SEP@swimmer.meter_500@SEP@swimmer.meter_600@SEP@swimmer.meter_700"
    },
    {
        "nl_queries": "Show me salary by last name in a histogram",
        "VQL": "Visualize BAR SELECT LAST_NAME , SALARY FROM employees",
        "db_id": "hr_1",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT LAST_NAME , SALARY FROM employees', 'binning': ''}, 'VQL': 'Visualize BAR SELECT LAST_NAME , SALARY FROM employees'}",
        "record_name": "1903",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Show me salary by last name in a histogram",
        "question_toks": [
            "Show",
            "me",
            "salary",
            "by",
            "last",
            "name",
            "in",
            "a",
            "histogram"
        ],
        "query": "Visualize BAR SELECT LAST_NAME , SALARY FROM employees",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "LAST_NAME",
            ",",
            "SALARY",
            "FROM",
            "employees"
        ],
        "choose_schema": "Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]",
        "choose_schema_rat_link": "employees.last_name@SEP@employees.salary"
    },
    {
        "nl_queries": "Return a scatter chart about the correlation between Shop_ID and Employee_ID .",
        "VQL": "Visualize SCATTER SELECT Shop_ID , Employee_ID FROM hiring",
        "db_id": "employee_hire_evaluation",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Shop_ID , Employee_ID FROM hiring', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Shop_ID , Employee_ID FROM hiring'}",
        "record_name": "1357",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Return a scatter chart about the correlation between Shop_ID and Employee_ID .",
        "question_toks": [
            "Return",
            "a",
            "scatter",
            "chart",
            "about",
            "the",
            "correlation",
            "between",
            "Shop_ID",
            "and",
            "Employee_ID",
            "."
        ],
        "query": "Visualize SCATTER SELECT Shop_ID , Employee_ID FROM hiring",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Shop_ID",
            ",",
            "Employee_ID",
            "FROM",
            "hiring"
        ],
        "choose_schema": "Table employee, columns = [*,Employee_ID, Name, Age, City]@SEP@Table shop, columns = [*,Shop_ID, Name, Location, District, Number_products, Manager_name]@SEP@Table hiring, columns = [*,Shop_ID, Employee_ID, Start_from, Is_full_time]@SEP@Table evaluation, columns = [*,Employee_ID, Year_awarded, Bonus]",
        "choose_schema_rat_link": "shop.shop_id@SEP@hiring.shop_id@SEP@employee.employee_id@SEP@hiring.employee_id@SEP@evaluation.employee_id"
    },
    {
        "nl_queries": "Visualize a scatter chart about the correlation between Clean_Jerk and Total .",
        "VQL": "Visualize SCATTER SELECT Clean_Jerk , Total FROM body_builder",
        "db_id": "body_builder",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Clean_Jerk , Total FROM body_builder', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Clean_Jerk , Total FROM body_builder'}",
        "record_name": "353",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Visualize a scatter chart about the correlation between Clean_Jerk and Total .",
        "question_toks": [
            "Visualize",
            "a",
            "scatter",
            "chart",
            "about",
            "the",
            "correlation",
            "between",
            "Clean_Jerk",
            "and",
            "Total",
            "."
        ],
        "query": "Visualize SCATTER SELECT Clean_Jerk , Total FROM body_builder",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Clean_Jerk",
            ",",
            "Total",
            "FROM",
            "body_builder"
        ],
        "choose_schema": "Table body_builder, columns = [*,Body_Builder_ID, People_ID, Snatch, Clean_Jerk, Total]",
        "choose_schema_rat_link": "body_builder.clean_jerk@SEP@body_builder.total"
    },
    {
        "nl_queries": "How many departments are in each school . Visualize by pie chart .",
        "VQL": "Visualize PIE SELECT SCHOOL_CODE , count(DISTINCT dept_name) FROM department",
        "db_id": "college_1",
        "hardness": "Medium",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT SCHOOL_CODE , count(DISTINCT dept_name) FROM department', 'binning': ''}, 'VQL': 'Visualize PIE SELECT SCHOOL_CODE , count(DISTINCT dept_name) FROM department'}",
        "record_name": "514",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                12,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "How many departments are in each school . Visualize by pie chart .",
        "question_toks": [
            "How",
            "many",
            "departments",
            "are",
            "in",
            "each",
            "school",
            ".",
            "Visualize",
            "by",
            "pie",
            "chart",
            "."
        ],
        "query": "Visualize PIE SELECT SCHOOL_CODE , count(DISTINCT dept_name) FROM department",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "SCHOOL_CODE",
            ",",
            "count",
            "(",
            "DISTINCT",
            "dept_name",
            ")",
            "FROM",
            "department"
        ],
        "choose_schema": "Table DEPARTMENT, columns = [*,DEPT_CODE, DEPT_NAME, SCHOOL_CODE, EMP_NUM, DEPT_ADDRESS, DEPT_EXTENSION]",
        "choose_schema_rat_link": "course.dept_code@SEP@department.dept_code@SEP@department.dept_name@SEP@department.dept_address@SEP@department.dept_extension@SEP@professor.dept_code@SEP@student.dept_code@SEP@department.school_code"
    },
    {
        "nl_queries": "A scatter chart shows the correlation between School_ID and All_Games_Percent .",
        "VQL": "Visualize SCATTER SELECT School_ID , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT School_ID , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT School_ID , All_Games_Percent FROM basketball_match'}",
        "record_name": "3109",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "A scatter chart shows the correlation between School_ID and All_Games_Percent .",
        "question_toks": [
            "A",
            "scatter",
            "chart",
            "shows",
            "the",
            "correlation",
            "between",
            "School_ID",
            "and",
            "All_Games_Percent",
            "."
        ],
        "query": "Visualize SCATTER SELECT School_ID , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "School_ID",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "university.school@SEP@basketball_match.school_id@SEP@university.school_id"
    },
    {
        "nl_queries": "A scatter chart shows the correlation between Snatch and Total .",
        "VQL": "Visualize SCATTER SELECT Snatch , Total FROM body_builder",
        "db_id": "body_builder",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Snatch , Total FROM body_builder', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Snatch , Total FROM body_builder'}",
        "record_name": "354",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "A scatter chart shows the correlation between Snatch and Total .",
        "question_toks": [
            "A",
            "scatter",
            "chart",
            "shows",
            "the",
            "correlation",
            "between",
            "Snatch",
            "and",
            "Total",
            "."
        ],
        "query": "Visualize SCATTER SELECT Snatch , Total FROM body_builder",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Snatch",
            ",",
            "Total",
            "FROM",
            "body_builder"
        ],
        "choose_schema": "Table body_builder, columns = [*,Body_Builder_ID, People_ID, Snatch, Clean_Jerk, Total]",
        "choose_schema_rat_link": "body_builder.snatch@SEP@body_builder.total"
    },
    {
        "nl_queries": "Show me about the distribution of Date_of_Birth and Height in a bar chart .",
        "VQL": "Visualize BAR SELECT Date_of_Birth , Height FROM people",
        "db_id": "candidate_poll",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Date_of_Birth , Height FROM people', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Date_of_Birth , Height FROM people'}",
        "record_name": "397",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Show me about the distribution of Date_of_Birth and Height in a bar chart .",
        "question_toks": [
            "Show",
            "me",
            "about",
            "the",
            "distribution",
            "of",
            "Date_of_Birth",
            "and",
            "Height",
            "in",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT Date_of_Birth , Height FROM people",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Date_of_Birth",
            ",",
            "Height",
            "FROM",
            "people"
        ],
        "choose_schema": "Table people, columns = [*,People_ID, Sex, Name, Date_of_Birth, Height, Weight]",
        "choose_schema_rat_link": "candidate.date@SEP@people.date_of_birth@SEP@people.height"
    },
    {
        "nl_queries": "Find All_Road and Team_ID , and visualize them by a bar chart .",
        "VQL": "Visualize BAR SELECT All_Road , Team_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT All_Road , Team_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT All_Road , Team_ID FROM basketball_match'}",
        "record_name": "3116",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Find All_Road and Team_ID , and visualize them by a bar chart .",
        "question_toks": [
            "Find",
            "All_Road",
            "and",
            "Team_ID",
            ",",
            "and",
            "visualize",
            "them",
            "by",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT All_Road , Team_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "All_Road",
            ",",
            "Team_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name"
    },
    {
        "nl_queries": "Just show the first name of the employee and list their department's id in the Y-axis of the bar chart .",
        "VQL": "Visualize BAR SELECT FIRST_NAME , DEPARTMENT_ID FROM employees",
        "db_id": "hr_1",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT FIRST_NAME , DEPARTMENT_ID FROM employees', 'binning': ''}, 'VQL': 'Visualize BAR SELECT FIRST_NAME , DEPARTMENT_ID FROM employees'}",
        "record_name": "1898",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                24,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Just show the first name of the employee and list their department's id in the Y-axis of the bar chart .",
        "question_toks": [
            "Just",
            "show",
            "the",
            "first",
            "name",
            "of",
            "the",
            "employee",
            "and",
            "list",
            "their",
            "department's",
            "id",
            "in",
            "the",
            "Y-axis",
            "of",
            "the",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT FIRST_NAME , DEPARTMENT_ID FROM employees",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "FIRST_NAME",
            ",",
            "DEPARTMENT_ID",
            "FROM",
            "employees"
        ],
        "choose_schema": "Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]@SEP@Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]@SEP@Table job_history, columns = [*,EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID]",
        "choose_schema_rat_link": "employees.first_name@SEP@employees.employee_id@SEP@job_history.employee_id@SEP@departments.department_id@SEP@departments.department_name@SEP@employees.department_id@SEP@job_history.department_id"
    },
    {
        "nl_queries": "Return a bar chart about the distribution of Team_Name and School_ID .",
        "VQL": "Visualize BAR SELECT Team_Name , School_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Team_Name , School_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Team_Name , School_ID FROM basketball_match'}",
        "record_name": "3111",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Return a bar chart about the distribution of Team_Name and School_ID .",
        "question_toks": [
            "Return",
            "a",
            "bar",
            "chart",
            "about",
            "the",
            "distribution",
            "of",
            "Team_Name",
            "and",
            "School_ID",
            "."
        ],
        "query": "Visualize BAR SELECT Team_Name , School_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Team_Name",
            ",",
            "School_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name@SEP@university.school@SEP@basketball_match.school_id@SEP@university.school_id"
    },
    {
        "nl_queries": "What is the relationship between Team_ID and ACC_Percent ?",
        "VQL": "Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Team_ID , ACC_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match'}",
        "record_name": "3120",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "What is the relationship between Team_ID and ACC_Percent ?",
        "question_toks": [
            "What",
            "is",
            "the",
            "relationship",
            "between",
            "Team_ID",
            "and",
            "ACC_Percent",
            "?"
        ],
        "query": "Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Team_ID",
            ",",
            "ACC_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name@SEP@basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Show me about the distribution of All_Neutral and Team_ID in a bar chart .",
        "VQL": "Visualize BAR SELECT All_Neutral , Team_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT All_Neutral , Team_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT All_Neutral , Team_ID FROM basketball_match'}",
        "record_name": "3118",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Show me about the distribution of All_Neutral and Team_ID in a bar chart .",
        "question_toks": [
            "Show",
            "me",
            "about",
            "the",
            "distribution",
            "of",
            "All_Neutral",
            "and",
            "Team_ID",
            "in",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT All_Neutral , Team_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "All_Neutral",
            ",",
            "Team_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name"
    },
    {
        "nl_queries": "A scatter chart shows the correlation between People_ID and Snatch .",
        "VQL": "Visualize SCATTER SELECT People_ID , Snatch FROM body_builder",
        "db_id": "body_builder",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT People_ID , Snatch FROM body_builder', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT People_ID , Snatch FROM body_builder'}",
        "record_name": "357",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "A scatter chart shows the correlation between People_ID and Snatch .",
        "question_toks": [
            "A",
            "scatter",
            "chart",
            "shows",
            "the",
            "correlation",
            "between",
            "People_ID",
            "and",
            "Snatch",
            "."
        ],
        "query": "Visualize SCATTER SELECT People_ID , Snatch FROM body_builder",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "People_ID",
            ",",
            "Snatch",
            "FROM",
            "body_builder"
        ],
        "choose_schema": "Table body_builder, columns = [*,Body_Builder_ID, People_ID, Snatch, Clean_Jerk, Total]@SEP@Table people, columns = [*,People_ID, Name, Height, Weight, Birth_Date, Birth_Place]",
        "choose_schema_rat_link": "body_builder.people_id@SEP@people.people_id@SEP@body_builder.snatch"
    },
    {
        "nl_queries": "Give me the comparison about ID over the meter_700 by a bar chart .",
        "VQL": "Visualize BAR SELECT meter_700 , ID FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT meter_700 , ID FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT meter_700 , ID FROM swimmer'}",
        "record_name": "2924",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Give me the comparison about ID over the meter_700 by a bar chart .",
        "question_toks": [
            "Give",
            "me",
            "the",
            "comparison",
            "about",
            "ID",
            "over",
            "the",
            "meter_700",
            "by",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT meter_700 , ID FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "meter_700",
            ",",
            "ID",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]@SEP@Table stadium, columns = [*,ID, name, Capacity, City, Country, Opening_year]@SEP@Table event, columns = [*,ID, Name, Stadium_ID, Year]@SEP@Table record, columns = [*,ID, Result, Swimmer_ID, Event_ID]",
        "choose_schema_rat_link": "swimmer.id@SEP@stadium.id@SEP@event.id@SEP@record.id@SEP@swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_400@SEP@swimmer.meter_500@SEP@swimmer.meter_600@SEP@swimmer.meter_700"
    },
    {
        "nl_queries": "Return a pie chart about the proportion of ACC_Regular_Season and School_ID .",
        "VQL": "Visualize PIE SELECT ACC_Regular_Season , School_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT ACC_Regular_Season , School_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT ACC_Regular_Season , School_ID FROM basketball_match'}",
        "record_name": "3149",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Return a pie chart about the proportion of ACC_Regular_Season and School_ID .",
        "question_toks": [
            "Return",
            "a",
            "pie",
            "chart",
            "about",
            "the",
            "proportion",
            "of",
            "ACC_Regular_Season",
            "and",
            "School_ID",
            "."
        ],
        "query": "Visualize PIE SELECT ACC_Regular_Season , School_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "ACC_Regular_Season",
            ",",
            "School_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road@SEP@university.school@SEP@basketball_match.school_id@SEP@university.school_id"
    },
    {
        "nl_queries": "Bar chart x axis other details y axis resident_id",
        "VQL": "Visualize BAR SELECT other_details , resident_id FROM Residents",
        "db_id": "local_govt_and_lot",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT other_details , resident_id FROM Residents', 'binning': ''}, 'VQL': 'Visualize BAR SELECT other_details , resident_id FROM Residents'}",
        "record_name": "2108",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Bar chart x axis other details y axis resident_id",
        "question_toks": [
            "Bar",
            "chart",
            "x",
            "axis",
            "other",
            "details",
            "y",
            "axis",
            "resident_id"
        ],
        "query": "Visualize BAR SELECT other_details , resident_id FROM Residents",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "other_details",
            ",",
            "resident_id",
            "FROM",
            "Residents"
        ],
        "choose_schema": "Table Properties, columns = [*,property_id, property_type_code, property_address, other_details]@SEP@Table Residents, columns = [*,resident_id, property_id, date_moved_in, date_moved_out, other_details]@SEP@Table Residents_Services, columns = [*,resident_id, service_id, date_moved_in, property_id, date_requested, date_provided, other_details]@SEP@Table Customer_Events, columns = [*,Customer_Event_ID, customer_id, date_moved_in, property_id, resident_id, thing_id]@SEP@Table Customer_Event_Notes, columns = [*,Customer_Event_Note_ID, Customer_Event_ID, service_type_code, resident_id, property_id, date_moved_in]",
        "choose_schema_rat_link": "properties.other_details@SEP@residents.other_details@SEP@residents_services.other_details@SEP@residents.resident_id@SEP@residents_services.resident_id@SEP@customer_events.resident_id@SEP@customer_event_notes.resident_id"
    },
    {
        "nl_queries": "Plot acc_percent by grouped by team name as a bar graph",
        "VQL": "Visualize BAR SELECT Team_Name , ACC_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Team_Name , ACC_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Team_Name , ACC_Percent FROM basketball_match'}",
        "record_name": "3132",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Plot acc_percent by grouped by team name as a bar graph",
        "question_toks": [
            "Plot",
            "acc_percent",
            "by",
            "grouped",
            "by",
            "team",
            "name",
            "as",
            "a",
            "bar",
            "graph"
        ],
        "query": "Visualize BAR SELECT Team_Name , ACC_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Team_Name",
            ",",
            "ACC_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_name@SEP@basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road@SEP@basketball_match.team_id"
    },
    {
        "nl_queries": "Please tell the salary of each hire date using a line chart .",
        "VQL": "Visualize LINE SELECT HIRE_DATE , SALARY FROM employees",
        "db_id": "hr_1",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize LINE', 'data_part': {'sql_part': 'SELECT HIRE_DATE , SALARY FROM employees', 'binning': ''}, 'VQL': 'Visualize LINE SELECT HIRE_DATE , SALARY FROM employees'}",
        "record_name": "1869",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                19,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 2
        },
        "question": "Please tell the salary of each hire date using a line chart .",
        "question_toks": [
            "Please",
            "tell",
            "the",
            "salary",
            "of",
            "each",
            "hire",
            "date",
            "using",
            "a",
            "line",
            "chart",
            "."
        ],
        "query": "Visualize LINE SELECT HIRE_DATE , SALARY FROM employees",
        "query_toks": [
            "Visualize",
            "LINE",
            "SELECT",
            "HIRE_DATE",
            ",",
            "SALARY",
            "FROM",
            "employees"
        ],
        "choose_schema": "Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]",
        "choose_schema_rat_link": "employees.hire_date@SEP@employees.salary"
    },
    {
        "nl_queries": "Bar chart x axis date of birth y axis height",
        "VQL": "Visualize BAR SELECT Date_of_Birth , Height FROM people",
        "db_id": "candidate_poll",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Date_of_Birth , Height FROM people', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Date_of_Birth , Height FROM people'}",
        "record_name": "397",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Bar chart x axis date of birth y axis height",
        "question_toks": [
            "Bar",
            "chart",
            "x",
            "axis",
            "date",
            "of",
            "birth",
            "y",
            "axis",
            "height"
        ],
        "query": "Visualize BAR SELECT Date_of_Birth , Height FROM people",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Date_of_Birth",
            ",",
            "Height",
            "FROM",
            "people"
        ],
        "choose_schema": "Table people, columns = [*,People_ID, Sex, Name, Date_of_Birth, Height, Weight]",
        "choose_schema_rat_link": "people.date_of_birth@SEP@candidate.date@SEP@people.height"
    },
    {
        "nl_queries": "List the dates and vote percents of elections by a pie chart .",
        "VQL": "Visualize PIE SELECT Date , Vote_Percent FROM election",
        "db_id": "election_representative",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT Date , Vote_Percent FROM election', 'binning': ''}, 'VQL': 'Visualize PIE SELECT Date , Vote_Percent FROM election'}",
        "record_name": "1325",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "List the dates and vote percents of elections by a pie chart .",
        "question_toks": [
            "List",
            "the",
            "dates",
            "and",
            "vote",
            "percents",
            "of",
            "elections",
            "by",
            "a",
            "pie",
            "chart",
            "."
        ],
        "query": "Visualize PIE SELECT Date , Vote_Percent FROM election",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "Date",
            ",",
            "Vote_Percent",
            "FROM",
            "election"
        ],
        "choose_schema": "Table election, columns = [*,Election_ID, Representative_ID, Date, Votes, Vote_Percent, Seats, Place]",
        "choose_schema_rat_link": "election.vote_percent@SEP@election.date@SEP@election.votes@SEP@election.election_id"
    },
    {
        "nl_queries": "Visualize a pie chart about the proportion of Team_Name and All_Games_Percent .",
        "VQL": "Visualize PIE SELECT Team_Name , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT Team_Name , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT Team_Name , All_Games_Percent FROM basketball_match'}",
        "record_name": "3133",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Visualize a pie chart about the proportion of Team_Name and All_Games_Percent .",
        "question_toks": [
            "Visualize",
            "a",
            "pie",
            "chart",
            "about",
            "the",
            "proportion",
            "of",
            "Team_Name",
            "and",
            "All_Games_Percent",
            "."
        ],
        "query": "Visualize PIE SELECT Team_Name , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "Team_Name",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name"
    },
    {
        "nl_queries": "A scatter chart shows the correlation between Body_Builder_ID and Total .",
        "VQL": "Visualize SCATTER SELECT Body_Builder_ID , Total FROM body_builder",
        "db_id": "body_builder",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Body_Builder_ID , Total FROM body_builder', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Body_Builder_ID , Total FROM body_builder'}",
        "record_name": "358",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "A scatter chart shows the correlation between Body_Builder_ID and Total .",
        "question_toks": [
            "A",
            "scatter",
            "chart",
            "shows",
            "the",
            "correlation",
            "between",
            "Body_Builder_ID",
            "and",
            "Total",
            "."
        ],
        "query": "Visualize SCATTER SELECT Body_Builder_ID , Total FROM body_builder",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Body_Builder_ID",
            ",",
            "Total",
            "FROM",
            "body_builder"
        ],
        "choose_schema": "Table body_builder, columns = [*,Body_Builder_ID, People_ID, Snatch, Clean_Jerk, Total]",
        "choose_schema_rat_link": "body_builder.body_builder_id@SEP@body_builder.total"
    },
    {
        "nl_queries": "Line chart , the X is the hire date of employees and the Y-axis is the corresponding salary .",
        "VQL": "Visualize LINE SELECT HIRE_DATE , SALARY FROM employees",
        "db_id": "hr_1",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize LINE', 'data_part': {'sql_part': 'SELECT HIRE_DATE , SALARY FROM employees', 'binning': ''}, 'VQL': 'Visualize LINE SELECT HIRE_DATE , SALARY FROM employees'}",
        "record_name": "1869",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                19,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 2
        },
        "question": "Line chart , the X is the hire date of employees and the Y-axis is the corresponding salary .",
        "question_toks": [
            "Line",
            "chart",
            ",",
            "the",
            "X",
            "is",
            "the",
            "hire",
            "date",
            "of",
            "employees",
            "and",
            "the",
            "Y-axis",
            "is",
            "the",
            "corresponding",
            "salary",
            "."
        ],
        "query": "Visualize LINE SELECT HIRE_DATE , SALARY FROM employees",
        "query_toks": [
            "Visualize",
            "LINE",
            "SELECT",
            "HIRE_DATE",
            ",",
            "SALARY",
            "FROM",
            "employees"
        ],
        "choose_schema": "Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]",
        "choose_schema_rat_link": "employees.hire_date@SEP@employees.employee_id@SEP@job_history.employee_id@SEP@employees.salary"
    },
    {
        "nl_queries": "A scatter chart shows the correlation between People_ID and Clean_Jerk .",
        "VQL": "Visualize SCATTER SELECT People_ID , Clean_Jerk FROM body_builder",
        "db_id": "body_builder",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT People_ID , Clean_Jerk FROM body_builder', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT People_ID , Clean_Jerk FROM body_builder'}",
        "record_name": "361",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "A scatter chart shows the correlation between People_ID and Clean_Jerk .",
        "question_toks": [
            "A",
            "scatter",
            "chart",
            "shows",
            "the",
            "correlation",
            "between",
            "People_ID",
            "and",
            "Clean_Jerk",
            "."
        ],
        "query": "Visualize SCATTER SELECT People_ID , Clean_Jerk FROM body_builder",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "People_ID",
            ",",
            "Clean_Jerk",
            "FROM",
            "body_builder"
        ],
        "choose_schema": "Table body_builder, columns = [*,Body_Builder_ID, People_ID, Snatch, Clean_Jerk, Total]@SEP@Table people, columns = [*,People_ID, Name, Height, Weight, Birth_Date, Birth_Place]",
        "choose_schema_rat_link": "body_builder.people_id@SEP@people.people_id@SEP@body_builder.clean_jerk"
    },
    {
        "nl_queries": "Show me about the proportion of Team_ID and Team_ID in a pie chart .",
        "VQL": "Visualize PIE SELECT All_Games , Team_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT All_Games , Team_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT All_Games , Team_ID FROM basketball_match'}",
        "record_name": "3128",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Show me about the proportion of Team_ID and Team_ID in a pie chart .",
        "question_toks": [
            "Show",
            "me",
            "about",
            "the",
            "proportion",
            "of",
            "Team_ID",
            "and",
            "Team_ID",
            "in",
            "a",
            "pie",
            "chart",
            "."
        ],
        "query": "Visualize PIE SELECT All_Games , Team_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "All_Games",
            ",",
            "Team_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name"
    },
    {
        "nl_queries": "Return a scatter chart about the correlation between Team_ID and School_ID .",
        "VQL": "Visualize SCATTER SELECT Team_ID , School_ID FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Team_ID , School_ID FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Team_ID , School_ID FROM basketball_match'}",
        "record_name": "3108",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Return a scatter chart about the correlation between Team_ID and School_ID .",
        "question_toks": [
            "Return",
            "a",
            "scatter",
            "chart",
            "about",
            "the",
            "correlation",
            "between",
            "Team_ID",
            "and",
            "School_ID",
            "."
        ],
        "query": "Visualize SCATTER SELECT Team_ID , School_ID FROM basketball_match",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Team_ID",
            ",",
            "School_ID",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]@SEP@Table university, columns = [*,School_ID, School, Location, Founded, Affiliation, Enrollment, Nickname, Primary_conference]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name@SEP@university.school@SEP@basketball_match.school_id@SEP@university.school_id"
    },
    {
        "nl_queries": "A scatter chart shows the correlation between Team_ID and ACC_Percent .",
        "VQL": "Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Team_ID , ACC_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match'}",
        "record_name": "3120",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "A scatter chart shows the correlation between Team_ID and ACC_Percent .",
        "question_toks": [
            "A",
            "scatter",
            "chart",
            "shows",
            "the",
            "correlation",
            "between",
            "Team_ID",
            "and",
            "ACC_Percent",
            "."
        ],
        "query": "Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Team_ID",
            ",",
            "ACC_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.team_id@SEP@basketball_match.team_name@SEP@basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Visualize the relationship between Height and Weight .",
        "VQL": "Visualize SCATTER SELECT Height , Weight FROM people",
        "db_id": "candidate_poll",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Height , Weight FROM people', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Height , Weight FROM people'}",
        "record_name": "390",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Visualize the relationship between Height and Weight .",
        "question_toks": [
            "Visualize",
            "the",
            "relationship",
            "between",
            "Height",
            "and",
            "Weight",
            "."
        ],
        "query": "Visualize SCATTER SELECT Height , Weight FROM people",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Height",
            ",",
            "Weight",
            "FROM",
            "people"
        ],
        "choose_schema": "Table people, columns = [*,People_ID, Sex, Name, Date_of_Birth, Height, Weight]",
        "choose_schema_rat_link": "people.height@SEP@people.weight"
    },
    {
        "nl_queries": "Show me about the distribution of meter_500 and ID in a bar chart .",
        "VQL": "Visualize BAR SELECT meter_500 , ID FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT meter_500 , ID FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT meter_500 , ID FROM swimmer'}",
        "record_name": "2920",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Show me about the distribution of meter_500 and ID in a bar chart .",
        "question_toks": [
            "Show",
            "me",
            "about",
            "the",
            "distribution",
            "of",
            "meter_500",
            "and",
            "ID",
            "in",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT meter_500 , ID FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "meter_500",
            ",",
            "ID",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]@SEP@Table stadium, columns = [*,ID, name, Capacity, City, Country, Opening_year]@SEP@Table event, columns = [*,ID, Name, Stadium_ID, Year]@SEP@Table record, columns = [*,ID, Result, Swimmer_ID, Event_ID]",
        "choose_schema_rat_link": "swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_400@SEP@swimmer.meter_500@SEP@swimmer.meter_600@SEP@swimmer.meter_700@SEP@swimmer.id@SEP@stadium.id@SEP@event.id@SEP@record.id"
    },
    {
        "nl_queries": "Show all calendar dates and day Numbers in a line chart .",
        "VQL": "Visualize LINE SELECT Calendar_Date , Day_Number FROM Ref_calendar",
        "db_id": "cre_Doc_Tracking_DB",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize LINE', 'data_part': {'sql_part': 'SELECT Calendar_Date , Day_Number FROM Ref_calendar', 'binning': ''}, 'VQL': 'Visualize LINE SELECT Calendar_Date , Day_Number FROM Ref_calendar'}",
        "record_name": "789",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 2
        },
        "question": "Show all calendar dates and day Numbers in a line chart .",
        "question_toks": [
            "Show",
            "all",
            "calendar",
            "dates",
            "and",
            "day",
            "Numbers",
            "in",
            "a",
            "line",
            "chart",
            "."
        ],
        "query": "Visualize LINE SELECT Calendar_Date , Day_Number FROM Ref_calendar",
        "query_toks": [
            "Visualize",
            "LINE",
            "SELECT",
            "Calendar_Date",
            ",",
            "Day_Number",
            "FROM",
            "Ref_calendar"
        ],
        "choose_schema": "Table Ref_Calendar, columns = [*,Calendar_Date, Day_Number]",
        "choose_schema_rat_link": "all_documents.date_stored@SEP@employees.date_of_birth@SEP@document_locations.date_in_location_from@SEP@document_locations.date_in_locaton_to"
    },
    {
        "nl_queries": "Draw a bar chart about the distribution of Time and ID .",
        "VQL": "Visualize BAR SELECT Time , ID FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Time , ID FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Time , ID FROM swimmer'}",
        "record_name": "2926",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Draw a bar chart about the distribution of Time and ID .",
        "question_toks": [
            "Draw",
            "a",
            "bar",
            "chart",
            "about",
            "the",
            "distribution",
            "of",
            "Time",
            "and",
            "ID",
            "."
        ],
        "query": "Visualize BAR SELECT Time , ID FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Time",
            ",",
            "ID",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]@SEP@Table stadium, columns = [*,ID, name, Capacity, City, Country, Opening_year]@SEP@Table event, columns = [*,ID, Name, Stadium_ID, Year]@SEP@Table record, columns = [*,ID, Result, Swimmer_ID, Event_ID]",
        "choose_schema_rat_link": "swimmer.time@SEP@swimmer.id@SEP@stadium.id@SEP@event.id@SEP@record.id"
    },
    {
        "nl_queries": "Scatter plot to show snatch on x axis and clean_jerk on y axis .",
        "VQL": "Visualize SCATTER SELECT Snatch , Clean_Jerk FROM body_builder",
        "db_id": "body_builder",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Snatch , Clean_Jerk FROM body_builder', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Snatch , Clean_Jerk FROM body_builder'}",
        "record_name": "356",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Scatter plot to show snatch on x axis and clean_jerk on y axis .",
        "question_toks": [
            "Scatter",
            "plot",
            "to",
            "show",
            "snatch",
            "on",
            "x",
            "axis",
            "and",
            "clean_jerk",
            "on",
            "y",
            "axis",
            "."
        ],
        "query": "Visualize SCATTER SELECT Snatch , Clean_Jerk FROM body_builder",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Snatch",
            ",",
            "Clean_Jerk",
            "FROM",
            "body_builder"
        ],
        "choose_schema": "Table body_builder, columns = [*,Body_Builder_ID, People_ID, Snatch, Clean_Jerk, Total]",
        "choose_schema_rat_link": "body_builder.snatch@SEP@body_builder.clean_jerk"
    },
    {
        "nl_queries": "Draw a bar chart about the distribution of name and meter_100 .",
        "VQL": "Visualize BAR SELECT name , meter_100 FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT name , meter_100 FROM swimmer', 'binning': ''}, 'VQL': 'Visualize BAR SELECT name , meter_100 FROM swimmer'}",
        "record_name": "2915",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Draw a bar chart about the distribution of name and meter_100 .",
        "question_toks": [
            "Draw",
            "a",
            "bar",
            "chart",
            "about",
            "the",
            "distribution",
            "of",
            "name",
            "and",
            "meter_100",
            "."
        ],
        "query": "Visualize BAR SELECT name , meter_100 FROM swimmer",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "name",
            ",",
            "meter_100",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]@SEP@Table stadium, columns = [*,ID, name, Capacity, City, Country, Opening_year]@SEP@Table event, columns = [*,ID, Name, Stadium_ID, Year]",
        "choose_schema_rat_link": "swimmer.name@SEP@stadium.name@SEP@event.name@SEP@swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_400@SEP@swimmer.meter_500@SEP@swimmer.meter_600@SEP@swimmer.meter_700"
    },
    {
        "nl_queries": "Compare each editors' ages using a bar chart .",
        "VQL": "Visualize BAR SELECT Name , Age FROM editor",
        "db_id": "journal_committee",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Name , Age FROM editor', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Name , Age FROM editor'}",
        "record_name": "2053",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Compare each editors' ages using a bar chart .",
        "question_toks": [
            "Compare",
            "each",
            "editors'",
            "ages",
            "using",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT Name , Age FROM editor",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Name",
            ",",
            "Age",
            "FROM",
            "editor"
        ],
        "choose_schema": "Table editor, columns = [*,Editor_ID, Name, Age]",
        "choose_schema_rat_link": "editor.editor_id@SEP@journal_committee.editor_id@SEP@editor.age"
    },
    {
        "nl_queries": "Bar chart x axis participant details y axis participant_id",
        "VQL": "Visualize BAR SELECT Participant_Details , Participant_ID FROM Participants",
        "db_id": "local_govt_in_alabama",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT Participant_Details , Participant_ID FROM Participants', 'binning': ''}, 'VQL': 'Visualize BAR SELECT Participant_Details , Participant_ID FROM Participants'}",
        "record_name": "2130",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Bar chart x axis participant details y axis participant_id",
        "question_toks": [
            "Bar",
            "chart",
            "x",
            "axis",
            "participant",
            "details",
            "y",
            "axis",
            "participant_id"
        ],
        "query": "Visualize BAR SELECT Participant_Details , Participant_ID FROM Participants",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "Participant_Details",
            ",",
            "Participant_ID",
            "FROM",
            "Participants"
        ],
        "choose_schema": "Table Participants, columns = [*,Participant_ID, Participant_Type_Code, Participant_Details]@SEP@Table Participants_in_Events, columns = [*,Event_ID, Participant_ID]",
        "choose_schema_rat_link": "participants.participant_details@SEP@participants.participant_id@SEP@participants.participant_type_code@SEP@participants_in_events.participant_id"
    },
    {
        "nl_queries": "Return a pie chart about the proportion of ACC_Regular_Season and ACC_Percent .",
        "VQL": "Visualize PIE SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match'}",
        "record_name": "3150",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Return a pie chart about the proportion of ACC_Regular_Season and ACC_Percent .",
        "question_toks": [
            "Return",
            "a",
            "pie",
            "chart",
            "about",
            "the",
            "proportion",
            "of",
            "ACC_Regular_Season",
            "and",
            "ACC_Percent",
            "."
        ],
        "query": "Visualize PIE SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "ACC_Regular_Season",
            ",",
            "ACC_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Show me about the correlation between Clean_Jerk and Total in a scatter chart .",
        "VQL": "Visualize SCATTER SELECT Clean_Jerk , Total FROM body_builder",
        "db_id": "body_builder",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT Clean_Jerk , Total FROM body_builder', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT Clean_Jerk , Total FROM body_builder'}",
        "record_name": "353",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Show me about the correlation between Clean_Jerk and Total in a scatter chart .",
        "question_toks": [
            "Show",
            "me",
            "about",
            "the",
            "correlation",
            "between",
            "Clean_Jerk",
            "and",
            "Total",
            "in",
            "a",
            "scatter",
            "chart",
            "."
        ],
        "query": "Visualize SCATTER SELECT Clean_Jerk , Total FROM body_builder",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "Clean_Jerk",
            ",",
            "Total",
            "FROM",
            "body_builder"
        ],
        "choose_schema": "Table body_builder, columns = [*,Body_Builder_ID, People_ID, Snatch, Clean_Jerk, Total]",
        "choose_schema_rat_link": "body_builder.clean_jerk@SEP@body_builder.total"
    },
    {
        "nl_queries": "Find ACC_Regular_Season and All_Games_Percent , and visualize them by a bar chart .",
        "VQL": "Visualize BAR SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize BAR SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match'}",
        "record_name": "3137",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Find ACC_Regular_Season and All_Games_Percent , and visualize them by a bar chart .",
        "question_toks": [
            "Find",
            "ACC_Regular_Season",
            "and",
            "All_Games_Percent",
            ",",
            "and",
            "visualize",
            "them",
            "by",
            "a",
            "bar",
            "chart",
            "."
        ],
        "query": "Visualize BAR SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "ACC_Regular_Season",
            ",",
            "All_Games_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Return a scatter chart about the correlation between ID and meter_100 .",
        "VQL": "Visualize SCATTER SELECT ID , meter_100 FROM swimmer",
        "db_id": "swimming",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT ID , meter_100 FROM swimmer', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT ID , meter_100 FROM swimmer'}",
        "record_name": "2905",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "Return a scatter chart about the correlation between ID and meter_100 .",
        "question_toks": [
            "Return",
            "a",
            "scatter",
            "chart",
            "about",
            "the",
            "correlation",
            "between",
            "ID",
            "and",
            "meter_100",
            "."
        ],
        "query": "Visualize SCATTER SELECT ID , meter_100 FROM swimmer",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "ID",
            ",",
            "meter_100",
            "FROM",
            "swimmer"
        ],
        "choose_schema": "Table swimmer, columns = [*,ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time]@SEP@Table stadium, columns = [*,ID, name, Capacity, City, Country, Opening_year]@SEP@Table event, columns = [*,ID, Name, Stadium_ID, Year]@SEP@Table record, columns = [*,ID, Result, Swimmer_ID, Event_ID]",
        "choose_schema_rat_link": "swimmer.id@SEP@stadium.id@SEP@event.id@SEP@record.id@SEP@swimmer.meter_100@SEP@swimmer.meter_200@SEP@swimmer.meter_300@SEP@swimmer.meter_400@SEP@swimmer.meter_500@SEP@swimmer.meter_600@SEP@swimmer.meter_700"
    },
    {
        "nl_queries": "Give me a bar chart for room_count of each apt number",
        "VQL": "Visualize BAR SELECT apt_number , room_count FROM Apartments",
        "db_id": "apartment_rentals",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT apt_number , room_count FROM Apartments', 'binning': ''}, 'VQL': 'Visualize BAR SELECT apt_number , room_count FROM Apartments'}",
        "record_name": "97",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Give me a bar chart for room_count of each apt number",
        "question_toks": [
            "Give",
            "me",
            "a",
            "bar",
            "chart",
            "for",
            "room_count",
            "of",
            "each",
            "apt",
            "number"
        ],
        "query": "Visualize BAR SELECT apt_number , room_count FROM Apartments",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "apt_number",
            ",",
            "room_count",
            "FROM",
            "Apartments"
        ],
        "choose_schema": "Table Apartments, columns = [*,apt_id, building_id, apt_type_code, apt_number, bathroom_count, bedroom_count, room_count]",
        "choose_schema_rat_link": "apartments.room_count"
    },
    {
        "nl_queries": "What is the relationship between People_ID and Total ?",
        "VQL": "Visualize SCATTER SELECT People_ID , Total FROM body_builder",
        "db_id": "body_builder",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize SCATTER', 'data_part': {'sql_part': 'SELECT People_ID , Total FROM body_builder', 'binning': ''}, 'VQL': 'Visualize SCATTER SELECT People_ID , Total FROM body_builder'}",
        "record_name": "359",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 3
        },
        "question": "What is the relationship between People_ID and Total ?",
        "question_toks": [
            "What",
            "is",
            "the",
            "relationship",
            "between",
            "People_ID",
            "and",
            "Total",
            "?"
        ],
        "query": "Visualize SCATTER SELECT People_ID , Total FROM body_builder",
        "query_toks": [
            "Visualize",
            "SCATTER",
            "SELECT",
            "People_ID",
            ",",
            "Total",
            "FROM",
            "body_builder"
        ],
        "choose_schema": "Table body_builder, columns = [*,Body_Builder_ID, People_ID, Snatch, Clean_Jerk, Total]@SEP@Table people, columns = [*,People_ID, Name, Height, Weight, Birth_Date, Birth_Place]",
        "choose_schema_rat_link": "body_builder.people_id@SEP@people.people_id@SEP@body_builder.total"
    },
    {
        "nl_queries": "Visualize a pie chart about the proportion of All_Road and ACC_Percent .",
        "VQL": "Visualize PIE SELECT All_Road , ACC_Percent FROM basketball_match",
        "db_id": "university_basketball",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize PIE', 'data_part': {'sql_part': 'SELECT All_Road , ACC_Percent FROM basketball_match', 'binning': ''}, 'VQL': 'Visualize PIE SELECT All_Road , ACC_Percent FROM basketball_match'}",
        "record_name": "3154",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 1
        },
        "question": "Visualize a pie chart about the proportion of All_Road and ACC_Percent .",
        "question_toks": [
            "Visualize",
            "a",
            "pie",
            "chart",
            "about",
            "the",
            "proportion",
            "of",
            "All_Road",
            "and",
            "ACC_Percent",
            "."
        ],
        "query": "Visualize PIE SELECT All_Road , ACC_Percent FROM basketball_match",
        "query_toks": [
            "Visualize",
            "PIE",
            "SELECT",
            "All_Road",
            ",",
            "ACC_Percent",
            "FROM",
            "basketball_match"
        ],
        "choose_schema": "Table basketball_match, columns = [*,Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral]",
        "choose_schema_rat_link": "basketball_match.acc_regular_season@SEP@basketball_match.acc_percent@SEP@basketball_match.acc_home@SEP@basketball_match.acc_road"
    },
    {
        "nl_queries": "Give me a histogram , that simply displays the last name of the employee and the corresponding manager id .",
        "VQL": "Visualize BAR SELECT LAST_NAME , MANAGER_ID FROM employees",
        "db_id": "hr_1",
        "hardness": "Easy",
        "vis_query": "{'vis_part': 'Visualize BAR', 'data_part': {'sql_part': 'SELECT LAST_NAME , MANAGER_ID FROM employees', 'binning': ''}, 'VQL': 'Visualize BAR SELECT LAST_NAME , MANAGER_ID FROM employees'}",
        "record_name": "1907",
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                23,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null,
            "binning": null,
            "vis": 0
        },
        "question": "Give me a histogram , that simply displays the last name of the employee and the corresponding manager id .",
        "question_toks": [
            "Give",
            "me",
            "a",
            "histogram",
            ",",
            "that",
            "simply",
            "displays",
            "the",
            "last",
            "name",
            "of",
            "the",
            "employee",
            "and",
            "the",
            "corresponding",
            "manager",
            "id",
            "."
        ],
        "query": "Visualize BAR SELECT LAST_NAME , MANAGER_ID FROM employees",
        "query_toks": [
            "Visualize",
            "BAR",
            "SELECT",
            "LAST_NAME",
            ",",
            "MANAGER_ID",
            "FROM",
            "employees"
        ],
        "choose_schema": "Table departments, columns = [*,DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID]@SEP@Table employees, columns = [*,EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID]",
        "choose_schema_rat_link": "employees.last_name@SEP@departments.manager_id@SEP@employees.manager_id@SEP@employees.employee_id@SEP@job_history.employee_id"
    }
]